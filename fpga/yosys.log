
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.12 (git sha1 2156e20)


-- Parsing `src/meta_mem.v' using frontend `verilog' --

1. Executing Verilog-2005 frontend: src/meta_mem.v
Parsing Verilog input from `src/meta_mem.v' to AST representation.
Generating RTLIL representation for module `\memory'.
Successfully finished Verilog frontend.

-- Parsing `src/tetron_Sa.v' using frontend `verilog' --

2. Executing Verilog-2005 frontend: src/tetron_Sa.v
Parsing Verilog input from `src/tetron_Sa.v' to AST representation.
Generating RTLIL representation for module `\tetron_Sa_shaper'.
Warning: wire '\blk1_voffset' is assigned in a block at src/tetron_Sa.v:21.13-21.30.
Warning: wire '\blk1_hoffset' is assigned in a block at src/tetron_Sa.v:22.13-22.30.
Warning: wire '\blk2_voffset' is assigned in a block at src/tetron_Sa.v:23.13-23.30.
Warning: wire '\blk2_hoffset' is assigned in a block at src/tetron_Sa.v:24.13-24.30.
Warning: wire '\blk3_voffset' is assigned in a block at src/tetron_Sa.v:25.13-25.30.
Warning: wire '\blk3_hoffset' is assigned in a block at src/tetron_Sa.v:26.13-26.30.
Warning: wire '\blk4_voffset' is assigned in a block at src/tetron_Sa.v:27.13-27.30.
Warning: wire '\blk4_hoffset' is assigned in a block at src/tetron_Sa.v:28.13-28.30.
Warning: wire '\blk1_voffset' is assigned in a block at src/tetron_Sa.v:31.17-31.34.
Warning: wire '\blk1_hoffset' is assigned in a block at src/tetron_Sa.v:32.17-32.34.
Warning: wire '\blk2_voffset' is assigned in a block at src/tetron_Sa.v:34.17-34.35.
Warning: wire '\blk2_hoffset' is assigned in a block at src/tetron_Sa.v:35.17-35.34.
Warning: wire '\blk3_voffset' is assigned in a block at src/tetron_Sa.v:37.17-37.34.
Warning: wire '\blk3_hoffset' is assigned in a block at src/tetron_Sa.v:38.17-38.35.
Warning: wire '\blk4_voffset' is assigned in a block at src/tetron_Sa.v:40.17-40.34.
Warning: wire '\blk4_hoffset' is assigned in a block at src/tetron_Sa.v:41.17-41.35.
Warning: wire '\blk1_voffset' is assigned in a block at src/tetron_Sa.v:45.17-45.34.
Warning: wire '\blk1_hoffset' is assigned in a block at src/tetron_Sa.v:46.17-46.34.
Warning: wire '\blk2_voffset' is assigned in a block at src/tetron_Sa.v:48.17-48.35.
Warning: wire '\blk2_hoffset' is assigned in a block at src/tetron_Sa.v:49.17-49.35.
Warning: wire '\blk3_voffset' is assigned in a block at src/tetron_Sa.v:51.17-51.35.
Warning: wire '\blk3_hoffset' is assigned in a block at src/tetron_Sa.v:52.17-52.34.
Warning: wire '\blk4_voffset' is assigned in a block at src/tetron_Sa.v:54.17-54.34.
Warning: wire '\blk4_hoffset' is assigned in a block at src/tetron_Sa.v:55.17-55.34.
Warning: wire '\blk1_voffset' is assigned in a block at src/tetron_Sa.v:60.17-60.34.
Warning: wire '\blk1_hoffset' is assigned in a block at src/tetron_Sa.v:61.17-61.34.
Warning: wire '\blk2_voffset' is assigned in a block at src/tetron_Sa.v:63.17-63.35.
Warning: wire '\blk2_hoffset' is assigned in a block at src/tetron_Sa.v:64.17-64.34.
Warning: wire '\blk3_voffset' is assigned in a block at src/tetron_Sa.v:66.17-66.34.
Warning: wire '\blk3_hoffset' is assigned in a block at src/tetron_Sa.v:67.17-67.34.
Warning: wire '\blk4_voffset' is assigned in a block at src/tetron_Sa.v:69.17-69.34.
Warning: wire '\blk4_hoffset' is assigned in a block at src/tetron_Sa.v:70.17-70.34.
Warning: wire '\blk1_voffset' is assigned in a block at src/tetron_Sa.v:74.17-74.34.
Warning: wire '\blk1_hoffset' is assigned in a block at src/tetron_Sa.v:75.17-75.34.
Warning: wire '\blk2_voffset' is assigned in a block at src/tetron_Sa.v:77.17-77.34.
Warning: wire '\blk2_hoffset' is assigned in a block at src/tetron_Sa.v:78.17-78.35.
Warning: wire '\blk3_voffset' is assigned in a block at src/tetron_Sa.v:80.17-80.34.
Warning: wire '\blk3_hoffset' is assigned in a block at src/tetron_Sa.v:81.17-81.34.
Warning: wire '\blk4_voffset' is assigned in a block at src/tetron_Sa.v:83.17-83.34.
Warning: wire '\blk4_hoffset' is assigned in a block at src/tetron_Sa.v:84.17-84.34.
Successfully finished Verilog frontend.

-- Parsing `src/tetron_Sb.v' using frontend `verilog' --

3. Executing Verilog-2005 frontend: src/tetron_Sb.v
Parsing Verilog input from `src/tetron_Sb.v' to AST representation.
Generating RTLIL representation for module `\tetron_Sb_shaper'.
Warning: wire '\blk1_voffset' is assigned in a block at src/tetron_Sb.v:21.13-21.30.
Warning: wire '\blk1_hoffset' is assigned in a block at src/tetron_Sb.v:22.13-22.30.
Warning: wire '\blk2_voffset' is assigned in a block at src/tetron_Sb.v:23.13-23.30.
Warning: wire '\blk2_hoffset' is assigned in a block at src/tetron_Sb.v:24.13-24.30.
Warning: wire '\blk3_voffset' is assigned in a block at src/tetron_Sb.v:25.13-25.30.
Warning: wire '\blk3_hoffset' is assigned in a block at src/tetron_Sb.v:26.13-26.30.
Warning: wire '\blk4_voffset' is assigned in a block at src/tetron_Sb.v:27.13-27.30.
Warning: wire '\blk4_hoffset' is assigned in a block at src/tetron_Sb.v:28.13-28.30.
Warning: wire '\blk1_voffset' is assigned in a block at src/tetron_Sb.v:31.17-31.34.
Warning: wire '\blk1_hoffset' is assigned in a block at src/tetron_Sb.v:32.17-32.34.
Warning: wire '\blk2_voffset' is assigned in a block at src/tetron_Sb.v:34.17-34.35.
Warning: wire '\blk2_hoffset' is assigned in a block at src/tetron_Sb.v:35.17-35.35.
Warning: wire '\blk3_voffset' is assigned in a block at src/tetron_Sb.v:37.17-37.34.
Warning: wire '\blk3_hoffset' is assigned in a block at src/tetron_Sb.v:38.17-38.35.
Warning: wire '\blk4_voffset' is assigned in a block at src/tetron_Sb.v:40.17-40.34.
Warning: wire '\blk4_hoffset' is assigned in a block at src/tetron_Sb.v:41.17-41.34.
Warning: wire '\blk1_voffset' is assigned in a block at src/tetron_Sb.v:45.17-45.34.
Warning: wire '\blk1_hoffset' is assigned in a block at src/tetron_Sb.v:46.17-46.34.
Warning: wire '\blk2_voffset' is assigned in a block at src/tetron_Sb.v:48.17-48.34.
Warning: wire '\blk2_hoffset' is assigned in a block at src/tetron_Sb.v:49.17-49.35.
Warning: wire '\blk3_voffset' is assigned in a block at src/tetron_Sb.v:51.17-51.35.
Warning: wire '\blk3_hoffset' is assigned in a block at src/tetron_Sb.v:52.17-52.34.
Warning: wire '\blk4_voffset' is assigned in a block at src/tetron_Sb.v:54.17-54.35.
Warning: wire '\blk4_hoffset' is assigned in a block at src/tetron_Sb.v:55.17-55.34.
Warning: wire '\blk1_voffset' is assigned in a block at src/tetron_Sb.v:60.17-60.34.
Warning: wire '\blk1_hoffset' is assigned in a block at src/tetron_Sb.v:61.17-61.34.
Warning: wire '\blk2_voffset' is assigned in a block at src/tetron_Sb.v:63.17-63.35.
Warning: wire '\blk2_hoffset' is assigned in a block at src/tetron_Sb.v:64.17-64.34.
Warning: wire '\blk3_voffset' is assigned in a block at src/tetron_Sb.v:66.17-66.34.
Warning: wire '\blk3_hoffset' is assigned in a block at src/tetron_Sb.v:67.17-67.34.
Warning: wire '\blk4_voffset' is assigned in a block at src/tetron_Sb.v:69.17-69.34.
Warning: wire '\blk4_hoffset' is assigned in a block at src/tetron_Sb.v:70.17-70.34.
Warning: wire '\blk1_voffset' is assigned in a block at src/tetron_Sb.v:74.17-74.34.
Warning: wire '\blk1_hoffset' is assigned in a block at src/tetron_Sb.v:75.17-75.34.
Warning: wire '\blk2_voffset' is assigned in a block at src/tetron_Sb.v:77.17-77.34.
Warning: wire '\blk2_hoffset' is assigned in a block at src/tetron_Sb.v:78.17-78.35.
Warning: wire '\blk3_voffset' is assigned in a block at src/tetron_Sb.v:80.17-80.34.
Warning: wire '\blk3_hoffset' is assigned in a block at src/tetron_Sb.v:81.17-81.34.
Warning: wire '\blk4_voffset' is assigned in a block at src/tetron_Sb.v:83.17-83.34.
Warning: wire '\blk4_hoffset' is assigned in a block at src/tetron_Sb.v:84.17-84.34.
Successfully finished Verilog frontend.

-- Parsing `src/digitdisplay.v' using frontend `verilog' --

4. Executing Verilog-2005 frontend: src/digitdisplay.v
Parsing Verilog input from `src/digitdisplay.v' to AST representation.
Generating RTLIL representation for module `\score_digit'.
Successfully finished Verilog frontend.

-- Parsing `src/scoredisplay.v' using frontend `verilog' --

5. Executing Verilog-2005 frontend: src/scoredisplay.v
Parsing Verilog input from `src/scoredisplay.v' to AST representation.
Generating RTLIL representation for module `\scoredisplay'.
Warning: Replacing memory \values with list of registers. See src/scoredisplay.v:24
Successfully finished Verilog frontend.

-- Parsing `src/screen_manager.v' using frontend `verilog' --

6. Executing Verilog-2005 frontend: src/screen_manager.v
Parsing Verilog input from `src/screen_manager.v' to AST representation.
Generating RTLIL representation for module `\screen_manager'.
Successfully finished Verilog frontend.

-- Parsing `src/tetron_T.v' using frontend `verilog' --

7. Executing Verilog-2005 frontend: src/tetron_T.v
Parsing Verilog input from `src/tetron_T.v' to AST representation.
Generating RTLIL representation for module `\tetron_T_shaper'.
Warning: wire '\blk1_voffset' is assigned in a block at src/tetron_T.v:21.13-21.30.
Warning: wire '\blk1_hoffset' is assigned in a block at src/tetron_T.v:22.13-22.30.
Warning: wire '\blk2_voffset' is assigned in a block at src/tetron_T.v:23.13-23.30.
Warning: wire '\blk2_hoffset' is assigned in a block at src/tetron_T.v:24.13-24.30.
Warning: wire '\blk3_voffset' is assigned in a block at src/tetron_T.v:25.13-25.30.
Warning: wire '\blk3_hoffset' is assigned in a block at src/tetron_T.v:26.13-26.30.
Warning: wire '\blk4_voffset' is assigned in a block at src/tetron_T.v:27.13-27.30.
Warning: wire '\blk4_hoffset' is assigned in a block at src/tetron_T.v:28.13-28.30.
Warning: wire '\blk1_voffset' is assigned in a block at src/tetron_T.v:31.17-31.34.
Warning: wire '\blk1_hoffset' is assigned in a block at src/tetron_T.v:32.17-32.34.
Warning: wire '\blk2_voffset' is assigned in a block at src/tetron_T.v:34.17-34.34.
Warning: wire '\blk2_hoffset' is assigned in a block at src/tetron_T.v:35.17-35.34.
Warning: wire '\blk3_voffset' is assigned in a block at src/tetron_T.v:36.17-36.34.
Warning: wire '\blk3_hoffset' is assigned in a block at src/tetron_T.v:37.17-37.35.
Warning: wire '\blk4_voffset' is assigned in a block at src/tetron_T.v:39.17-39.34.
Warning: wire '\blk4_hoffset' is assigned in a block at src/tetron_T.v:40.17-40.34.
Warning: wire '\blk1_voffset' is assigned in a block at src/tetron_T.v:44.17-44.34.
Warning: wire '\blk1_hoffset' is assigned in a block at src/tetron_T.v:45.17-45.34.
Warning: wire '\blk2_voffset' is assigned in a block at src/tetron_T.v:47.17-47.34.
Warning: wire '\blk2_hoffset' is assigned in a block at src/tetron_T.v:48.17-48.34.
Warning: wire '\blk3_voffset' is assigned in a block at src/tetron_T.v:49.17-49.35.
Warning: wire '\blk3_hoffset' is assigned in a block at src/tetron_T.v:50.17-50.34.
Warning: wire '\blk4_voffset' is assigned in a block at src/tetron_T.v:52.17-52.34.
Warning: wire '\blk4_hoffset' is assigned in a block at src/tetron_T.v:53.17-53.34.
Warning: wire '\blk1_voffset' is assigned in a block at src/tetron_T.v:58.17-58.34.
Warning: wire '\blk1_hoffset' is assigned in a block at src/tetron_T.v:59.17-59.34.
Warning: wire '\blk2_voffset' is assigned in a block at src/tetron_T.v:61.17-61.34.
Warning: wire '\blk2_hoffset' is assigned in a block at src/tetron_T.v:62.17-62.34.
Warning: wire '\blk3_voffset' is assigned in a block at src/tetron_T.v:63.17-63.34.
Warning: wire '\blk3_hoffset' is assigned in a block at src/tetron_T.v:64.17-64.35.
Warning: wire '\blk4_voffset' is assigned in a block at src/tetron_T.v:66.17-66.35.
Warning: wire '\blk4_hoffset' is assigned in a block at src/tetron_T.v:67.17-67.34.
Warning: wire '\blk1_voffset' is assigned in a block at src/tetron_T.v:71.17-71.34.
Warning: wire '\blk1_hoffset' is assigned in a block at src/tetron_T.v:72.17-72.34.
Warning: wire '\blk2_voffset' is assigned in a block at src/tetron_T.v:74.17-74.34.
Warning: wire '\blk2_hoffset' is assigned in a block at src/tetron_T.v:75.17-75.34.
Warning: wire '\blk3_voffset' is assigned in a block at src/tetron_T.v:76.17-76.35.
Warning: wire '\blk3_hoffset' is assigned in a block at src/tetron_T.v:77.17-77.34.
Warning: wire '\blk4_voffset' is assigned in a block at src/tetron_T.v:79.17-79.34.
Warning: wire '\blk4_hoffset' is assigned in a block at src/tetron_T.v:80.17-80.35.
Successfully finished Verilog frontend.

-- Parsing `src/gamespeed_display.v' using frontend `verilog' --

8. Executing Verilog-2005 frontend: src/gamespeed_display.v
Parsing Verilog input from `src/gamespeed_display.v' to AST representation.
Generating RTLIL representation for module `\topbar_display'.
Successfully finished Verilog frontend.

-- Parsing `src/tetron_O.v' using frontend `verilog' --

9. Executing Verilog-2005 frontend: src/tetron_O.v
Parsing Verilog input from `src/tetron_O.v' to AST representation.
Generating RTLIL representation for module `\tetron_O_shaper'.
Warning: wire '\blk1_voffset' is assigned in a block at src/tetron_O.v:21.13-21.30.
Warning: wire '\blk1_hoffset' is assigned in a block at src/tetron_O.v:22.13-22.30.
Warning: wire '\blk2_voffset' is assigned in a block at src/tetron_O.v:23.13-23.30.
Warning: wire '\blk2_hoffset' is assigned in a block at src/tetron_O.v:24.13-24.30.
Warning: wire '\blk3_voffset' is assigned in a block at src/tetron_O.v:25.13-25.30.
Warning: wire '\blk3_hoffset' is assigned in a block at src/tetron_O.v:26.13-26.30.
Warning: wire '\blk4_voffset' is assigned in a block at src/tetron_O.v:27.13-27.30.
Warning: wire '\blk4_hoffset' is assigned in a block at src/tetron_O.v:28.13-28.30.
Warning: wire '\blk1_voffset' is assigned in a block at src/tetron_O.v:30.13-30.30.
Warning: wire '\blk1_hoffset' is assigned in a block at src/tetron_O.v:31.13-31.30.
Warning: wire '\blk2_voffset' is assigned in a block at src/tetron_O.v:33.13-33.30.
Warning: wire '\blk2_hoffset' is assigned in a block at src/tetron_O.v:34.13-34.30.
Warning: wire '\blk3_voffset' is assigned in a block at src/tetron_O.v:35.13-35.30.
Warning: wire '\blk3_hoffset' is assigned in a block at src/tetron_O.v:36.13-36.30.
Warning: wire '\blk4_voffset' is assigned in a block at src/tetron_O.v:37.13-37.30.
Warning: wire '\blk4_hoffset' is assigned in a block at src/tetron_O.v:38.13-38.30.
Successfully finished Verilog frontend.

-- Parsing `src/tetron_Lb.v' using frontend `verilog' --

10. Executing Verilog-2005 frontend: src/tetron_Lb.v
Parsing Verilog input from `src/tetron_Lb.v' to AST representation.
Generating RTLIL representation for module `\tetron_Lb_shaper'.
Warning: wire '\blk1_voffset' is assigned in a block at src/tetron_Lb.v:21.13-21.30.
Warning: wire '\blk1_hoffset' is assigned in a block at src/tetron_Lb.v:22.13-22.30.
Warning: wire '\blk2_voffset' is assigned in a block at src/tetron_Lb.v:23.13-23.30.
Warning: wire '\blk2_hoffset' is assigned in a block at src/tetron_Lb.v:24.13-24.30.
Warning: wire '\blk3_voffset' is assigned in a block at src/tetron_Lb.v:25.13-25.30.
Warning: wire '\blk3_hoffset' is assigned in a block at src/tetron_Lb.v:26.13-26.30.
Warning: wire '\blk4_voffset' is assigned in a block at src/tetron_Lb.v:27.13-27.30.
Warning: wire '\blk4_hoffset' is assigned in a block at src/tetron_Lb.v:28.13-28.30.
Warning: wire '\blk1_voffset' is assigned in a block at src/tetron_Lb.v:31.17-31.34.
Warning: wire '\blk1_hoffset' is assigned in a block at src/tetron_Lb.v:32.17-32.34.
Warning: wire '\blk2_voffset' is assigned in a block at src/tetron_Lb.v:34.17-34.34.
Warning: wire '\blk2_hoffset' is assigned in a block at src/tetron_Lb.v:35.17-35.34.
Warning: wire '\blk3_voffset' is assigned in a block at src/tetron_Lb.v:36.17-36.34.
Warning: wire '\blk3_hoffset' is assigned in a block at src/tetron_Lb.v:37.17-37.35.
Warning: wire '\blk4_voffset' is assigned in a block at src/tetron_Lb.v:39.17-39.34.
Warning: wire '\blk4_hoffset' is assigned in a block at src/tetron_Lb.v:40.17-40.35.
Warning: wire '\blk1_voffset' is assigned in a block at src/tetron_Lb.v:44.17-44.34.
Warning: wire '\blk1_hoffset' is assigned in a block at src/tetron_Lb.v:45.17-45.34.
Warning: wire '\blk2_voffset' is assigned in a block at src/tetron_Lb.v:47.17-47.34.
Warning: wire '\blk2_hoffset' is assigned in a block at src/tetron_Lb.v:48.17-48.34.
Warning: wire '\blk3_voffset' is assigned in a block at src/tetron_Lb.v:49.17-49.35.
Warning: wire '\blk3_hoffset' is assigned in a block at src/tetron_Lb.v:50.17-50.34.
Warning: wire '\blk4_voffset' is assigned in a block at src/tetron_Lb.v:52.17-52.35.
Warning: wire '\blk4_hoffset' is assigned in a block at src/tetron_Lb.v:53.17-53.35.
Warning: wire '\blk1_voffset' is assigned in a block at src/tetron_Lb.v:58.17-58.34.
Warning: wire '\blk1_hoffset' is assigned in a block at src/tetron_Lb.v:59.17-59.34.
Warning: wire '\blk2_voffset' is assigned in a block at src/tetron_Lb.v:61.17-61.34.
Warning: wire '\blk2_hoffset' is assigned in a block at src/tetron_Lb.v:62.17-62.34.
Warning: wire '\blk3_voffset' is assigned in a block at src/tetron_Lb.v:63.17-63.34.
Warning: wire '\blk3_hoffset' is assigned in a block at src/tetron_Lb.v:64.17-64.35.
Warning: wire '\blk4_voffset' is assigned in a block at src/tetron_Lb.v:66.17-66.35.
Warning: wire '\blk4_hoffset' is assigned in a block at src/tetron_Lb.v:67.17-67.34.
Warning: wire '\blk1_voffset' is assigned in a block at src/tetron_Lb.v:71.17-71.34.
Warning: wire '\blk1_hoffset' is assigned in a block at src/tetron_Lb.v:72.17-72.34.
Warning: wire '\blk2_voffset' is assigned in a block at src/tetron_Lb.v:74.17-74.34.
Warning: wire '\blk2_hoffset' is assigned in a block at src/tetron_Lb.v:75.17-75.34.
Warning: wire '\blk3_voffset' is assigned in a block at src/tetron_Lb.v:76.17-76.35.
Warning: wire '\blk3_hoffset' is assigned in a block at src/tetron_Lb.v:77.17-77.34.
Warning: wire '\blk4_voffset' is assigned in a block at src/tetron_Lb.v:79.17-79.34.
Warning: wire '\blk4_hoffset' is assigned in a block at src/tetron_Lb.v:80.17-80.34.
Successfully finished Verilog frontend.

-- Parsing `src/tetron_La.v' using frontend `verilog' --

11. Executing Verilog-2005 frontend: src/tetron_La.v
Parsing Verilog input from `src/tetron_La.v' to AST representation.
Generating RTLIL representation for module `\tetron_La_shaper'.
Warning: wire '\blk1_voffset' is assigned in a block at src/tetron_La.v:21.13-21.30.
Warning: wire '\blk1_hoffset' is assigned in a block at src/tetron_La.v:22.13-22.30.
Warning: wire '\blk2_voffset' is assigned in a block at src/tetron_La.v:23.13-23.30.
Warning: wire '\blk2_hoffset' is assigned in a block at src/tetron_La.v:24.13-24.30.
Warning: wire '\blk3_voffset' is assigned in a block at src/tetron_La.v:25.13-25.30.
Warning: wire '\blk3_hoffset' is assigned in a block at src/tetron_La.v:26.13-26.30.
Warning: wire '\blk4_voffset' is assigned in a block at src/tetron_La.v:27.13-27.30.
Warning: wire '\blk4_hoffset' is assigned in a block at src/tetron_La.v:28.13-28.30.
Warning: wire '\blk1_voffset' is assigned in a block at src/tetron_La.v:31.17-31.34.
Warning: wire '\blk1_hoffset' is assigned in a block at src/tetron_La.v:32.17-32.34.
Warning: wire '\blk2_voffset' is assigned in a block at src/tetron_La.v:34.17-34.34.
Warning: wire '\blk2_hoffset' is assigned in a block at src/tetron_La.v:35.17-35.34.
Warning: wire '\blk3_voffset' is assigned in a block at src/tetron_La.v:36.17-36.34.
Warning: wire '\blk3_hoffset' is assigned in a block at src/tetron_La.v:37.17-37.35.
Warning: wire '\blk4_voffset' is assigned in a block at src/tetron_La.v:39.17-39.35.
Warning: wire '\blk4_hoffset' is assigned in a block at src/tetron_La.v:40.17-40.35.
Warning: wire '\blk1_voffset' is assigned in a block at src/tetron_La.v:44.17-44.34.
Warning: wire '\blk1_hoffset' is assigned in a block at src/tetron_La.v:45.17-45.34.
Warning: wire '\blk2_voffset' is assigned in a block at src/tetron_La.v:47.17-47.34.
Warning: wire '\blk2_hoffset' is assigned in a block at src/tetron_La.v:48.17-48.34.
Warning: wire '\blk3_voffset' is assigned in a block at src/tetron_La.v:49.17-49.35.
Warning: wire '\blk3_hoffset' is assigned in a block at src/tetron_La.v:50.17-50.34.
Warning: wire '\blk4_voffset' is assigned in a block at src/tetron_La.v:52.17-52.35.
Warning: wire '\blk4_hoffset' is assigned in a block at src/tetron_La.v:53.17-53.34.
Warning: wire '\blk1_voffset' is assigned in a block at src/tetron_La.v:58.17-58.34.
Warning: wire '\blk1_hoffset' is assigned in a block at src/tetron_La.v:59.17-59.34.
Warning: wire '\blk2_voffset' is assigned in a block at src/tetron_La.v:61.17-61.34.
Warning: wire '\blk2_hoffset' is assigned in a block at src/tetron_La.v:62.17-62.34.
Warning: wire '\blk3_voffset' is assigned in a block at src/tetron_La.v:63.17-63.34.
Warning: wire '\blk3_hoffset' is assigned in a block at src/tetron_La.v:64.17-64.35.
Warning: wire '\blk4_voffset' is assigned in a block at src/tetron_La.v:66.17-66.34.
Warning: wire '\blk4_hoffset' is assigned in a block at src/tetron_La.v:67.17-67.34.
Warning: wire '\blk1_voffset' is assigned in a block at src/tetron_La.v:71.17-71.34.
Warning: wire '\blk1_hoffset' is assigned in a block at src/tetron_La.v:72.17-72.34.
Warning: wire '\blk2_voffset' is assigned in a block at src/tetron_La.v:74.17-74.34.
Warning: wire '\blk2_hoffset' is assigned in a block at src/tetron_La.v:75.17-75.34.
Warning: wire '\blk3_voffset' is assigned in a block at src/tetron_La.v:76.17-76.35.
Warning: wire '\blk3_hoffset' is assigned in a block at src/tetron_La.v:77.17-77.34.
Warning: wire '\blk4_voffset' is assigned in a block at src/tetron_La.v:79.17-79.34.
Warning: wire '\blk4_hoffset' is assigned in a block at src/tetron_La.v:80.17-80.35.
Successfully finished Verilog frontend.

-- Parsing `src/shifter.v' using frontend `verilog' --

12. Executing Verilog-2005 frontend: src/shifter.v
Parsing Verilog input from `src/shifter.v' to AST representation.
Generating RTLIL representation for module `\shifter'.
Successfully finished Verilog frontend.

-- Parsing `src/meta_memrow.v' using frontend `verilog' --

13. Executing Verilog-2005 frontend: src/meta_memrow.v
Parsing Verilog input from `src/meta_memrow.v' to AST representation.
Generating RTLIL representation for module `\memcell_row'.
Successfully finished Verilog frontend.

-- Parsing `src/meta_memcell.v' using frontend `verilog' --

14. Executing Verilog-2005 frontend: src/meta_memcell.v
Parsing Verilog input from `src/meta_memcell.v' to AST representation.
Generating RTLIL representation for module `\memcell'.
Successfully finished Verilog frontend.

-- Parsing `src/vga_core.v' using frontend `verilog' --

15. Executing Verilog-2005 frontend: src/vga_core.v
Parsing Verilog input from `src/vga_core.v' to AST representation.
Generating RTLIL representation for module `\VGAcore'.
Warning: reg '\r' is assigned in a continuous assignment at src/vga_core.v:60.12-60.50.
Warning: reg '\b' is assigned in a continuous assignment at src/vga_core.v:61.12-61.50.
Warning: reg '\g' is assigned in a continuous assignment at src/vga_core.v:62.12-62.50.
Successfully finished Verilog frontend.

-- Parsing `src/timer.v' using frontend `verilog' --

16. Executing Verilog-2005 frontend: src/timer.v
Parsing Verilog input from `src/timer.v' to AST representation.
Generating RTLIL representation for module `\timer'.
Successfully finished Verilog frontend.

-- Parsing `src/volatile_cell_storage.v' using frontend `verilog' --

17. Executing Verilog-2005 frontend: src/volatile_cell_storage.v
Parsing Verilog input from `src/volatile_cell_storage.v' to AST representation.
Generating RTLIL representation for module `\cellstorage'.
Warning: reg '\P1blk_v' is assigned in a continuous assignment at src/volatile_cell_storage.v:58.12-58.167.
Warning: reg '\P2blk_v' is assigned in a continuous assignment at src/volatile_cell_storage.v:59.12-59.167.
Warning: reg '\P3blk_v' is assigned in a continuous assignment at src/volatile_cell_storage.v:60.12-60.167.
Warning: reg '\P4blk_v' is assigned in a continuous assignment at src/volatile_cell_storage.v:61.12-61.167.
Warning: reg '\P1blk_h' is assigned in a continuous assignment at src/volatile_cell_storage.v:62.12-62.167.
Warning: reg '\P2blk_h' is assigned in a continuous assignment at src/volatile_cell_storage.v:63.12-63.167.
Warning: reg '\P3blk_h' is assigned in a continuous assignment at src/volatile_cell_storage.v:64.12-64.167.
Warning: reg '\P4blk_h' is assigned in a continuous assignment at src/volatile_cell_storage.v:65.12-65.167.
Successfully finished Verilog frontend.

-- Parsing `src/vga_pll.v' using frontend `verilog' --

18. Executing Verilog-2005 frontend: src/vga_pll.v
Parsing Verilog input from `src/vga_pll.v' to AST representation.
Generating RTLIL representation for module `\vga_pll'.
Successfully finished Verilog frontend.

-- Parsing `src/tetron_I.v' using frontend `verilog' --

19. Executing Verilog-2005 frontend: src/tetron_I.v
Parsing Verilog input from `src/tetron_I.v' to AST representation.
Generating RTLIL representation for module `\tetron_I_shaper'.
Warning: wire '\blk1_voffset' is assigned in a block at src/tetron_I.v:21.13-21.30.
Warning: wire '\blk1_hoffset' is assigned in a block at src/tetron_I.v:22.13-22.30.
Warning: wire '\blk2_voffset' is assigned in a block at src/tetron_I.v:23.13-23.30.
Warning: wire '\blk2_hoffset' is assigned in a block at src/tetron_I.v:24.13-24.30.
Warning: wire '\blk3_voffset' is assigned in a block at src/tetron_I.v:25.13-25.30.
Warning: wire '\blk3_hoffset' is assigned in a block at src/tetron_I.v:26.13-26.30.
Warning: wire '\blk4_voffset' is assigned in a block at src/tetron_I.v:27.13-27.30.
Warning: wire '\blk4_hoffset' is assigned in a block at src/tetron_I.v:28.13-28.30.
Warning: wire '\blk1_voffset' is assigned in a block at src/tetron_I.v:31.17-31.34.
Warning: wire '\blk1_hoffset' is assigned in a block at src/tetron_I.v:32.17-32.34.
Warning: wire '\blk2_voffset' is assigned in a block at src/tetron_I.v:33.17-33.34.
Warning: wire '\blk2_hoffset' is assigned in a block at src/tetron_I.v:34.17-34.35.
Warning: wire '\blk3_voffset' is assigned in a block at src/tetron_I.v:35.17-35.34.
Warning: wire '\blk3_hoffset' is assigned in a block at src/tetron_I.v:36.17-36.34.
Warning: wire '\blk4_voffset' is assigned in a block at src/tetron_I.v:37.17-37.34.
Warning: wire '\blk4_hoffset' is assigned in a block at src/tetron_I.v:38.17-38.34.
Warning: wire '\blk1_voffset' is assigned in a block at src/tetron_I.v:42.17-42.34.
Warning: wire '\blk1_hoffset' is assigned in a block at src/tetron_I.v:43.17-43.34.
Warning: wire '\blk2_voffset' is assigned in a block at src/tetron_I.v:44.17-44.35.
Warning: wire '\blk2_hoffset' is assigned in a block at src/tetron_I.v:45.17-45.34.
Warning: wire '\blk3_voffset' is assigned in a block at src/tetron_I.v:46.17-46.34.
Warning: wire '\blk3_hoffset' is assigned in a block at src/tetron_I.v:47.17-47.34.
Warning: wire '\blk4_voffset' is assigned in a block at src/tetron_I.v:48.17-48.34.
Warning: wire '\blk4_hoffset' is assigned in a block at src/tetron_I.v:49.17-49.34.
Warning: wire '\blk1_voffset' is assigned in a block at src/tetron_I.v:53.17-53.34.
Warning: wire '\blk1_hoffset' is assigned in a block at src/tetron_I.v:54.17-54.34.
Warning: wire '\blk2_voffset' is assigned in a block at src/tetron_I.v:55.17-55.34.
Warning: wire '\blk2_hoffset' is assigned in a block at src/tetron_I.v:56.17-56.35.
Warning: wire '\blk3_voffset' is assigned in a block at src/tetron_I.v:57.17-57.34.
Warning: wire '\blk3_hoffset' is assigned in a block at src/tetron_I.v:58.17-58.34.
Warning: wire '\blk4_voffset' is assigned in a block at src/tetron_I.v:59.17-59.34.
Warning: wire '\blk4_hoffset' is assigned in a block at src/tetron_I.v:60.17-60.34.
Warning: wire '\blk1_voffset' is assigned in a block at src/tetron_I.v:64.17-64.34.
Warning: wire '\blk1_hoffset' is assigned in a block at src/tetron_I.v:65.17-65.34.
Warning: wire '\blk2_voffset' is assigned in a block at src/tetron_I.v:66.17-66.35.
Warning: wire '\blk2_hoffset' is assigned in a block at src/tetron_I.v:67.17-67.34.
Warning: wire '\blk3_voffset' is assigned in a block at src/tetron_I.v:68.17-68.34.
Warning: wire '\blk3_hoffset' is assigned in a block at src/tetron_I.v:69.17-69.34.
Warning: wire '\blk4_voffset' is assigned in a block at src/tetron_I.v:70.17-70.34.
Warning: wire '\blk4_hoffset' is assigned in a block at src/tetron_I.v:71.17-71.34.
Successfully finished Verilog frontend.

-- Parsing `src/top.v' using frontend `verilog' --

20. Executing Verilog-2005 frontend: src/top.v
Parsing Verilog input from `src/top.v' to AST representation.
Generating RTLIL representation for module `\top'.
Successfully finished Verilog frontend.

-- Parsing `src/gmanager.v' using frontend `verilog' --

21. Executing Verilog-2005 frontend: src/gmanager.v
Parsing Verilog input from `src/gmanager.v' to AST representation.
Generating RTLIL representation for module `\gmanager'.
Successfully finished Verilog frontend.

-- Parsing `src/shader.v' using frontend `verilog' --

22. Executing Verilog-2005 frontend: src/shader.v
Parsing Verilog input from `src/shader.v' to AST representation.
Generating RTLIL representation for module `\shader'.
Successfully finished Verilog frontend.

-- Parsing `src/mod24.v' using frontend `verilog' --

23. Executing Verilog-2005 frontend: src/mod24.v
Parsing Verilog input from `src/mod24.v' to AST representation.
Generating RTLIL representation for module `\blknum_horizontal'.
Generating RTLIL representation for module `\offsetmap'.
Generating RTLIL representation for module `\blkoffset_horizontal'.
Successfully finished Verilog frontend.

-- Parsing `src/color_lut.v' using frontend `verilog' --

24. Executing Verilog-2005 frontend: src/color_lut.v
Parsing Verilog input from `src/color_lut.v' to AST representation.
Generating RTLIL representation for module `\color_lut'.
Successfully finished Verilog frontend.

-- Parsing `src/blockmemory.v' using frontend `verilog' --

25. Executing Verilog-2005 frontend: src/blockmemory.v
Parsing Verilog input from `src/blockmemory.v' to AST representation.
Generating RTLIL representation for module `\blkmemory'.
Successfully finished Verilog frontend.

-- Running command `synth_ice40 -top top -json fpga/vga_tetris.json' --

26. Executing SYNTH_ICE40 pass.

26.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Generating RTLIL representation for module `\ICESTORM_RAM'.
Successfully finished Verilog frontend.

26.2. Executing HIERARCHY pass (managing design hierarchy).

26.2.1. Analyzing design hierarchy..
Top module:  \top
Used module:     \VGAcore
Used module:     \gmanager
Used module:         \color_lut
Used module:         \shader
Used module:         \blkoffset_horizontal
Used module:             \offsetmap
Used module:         \blknum_horizontal
Used module:     \scoredisplay
Used module:         \score_digit
Used module:     \topbar_display
Used module:     \screen_manager
Used module:     \cellstorage
Used module:         \tetron_Sb_shaper
Used module:         \tetron_Sa_shaper
Used module:         \tetron_T_shaper
Used module:         \tetron_Lb_shaper
Used module:         \tetron_La_shaper
Used module:         \tetron_O_shaper
Used module:         \tetron_I_shaper
Used module:     \blkmemory
Used module:         \memory
Used module:             \memcell_row
Used module:                 \memcell
Used module:         \shifter
Used module:     \vga_pll
Used module:     \timer
Reprocessing module cellstorage because instantiated module tetron_I_shaper has become available.
Generating RTLIL representation for module `\cellstorage'.
Warning: reg '\P1blk_v' is assigned in a continuous assignment at src/volatile_cell_storage.v:58.12-58.167.
Warning: reg '\P2blk_v' is assigned in a continuous assignment at src/volatile_cell_storage.v:59.12-59.167.
Warning: reg '\P3blk_v' is assigned in a continuous assignment at src/volatile_cell_storage.v:60.12-60.167.
Warning: reg '\P4blk_v' is assigned in a continuous assignment at src/volatile_cell_storage.v:61.12-61.167.
Warning: reg '\P1blk_h' is assigned in a continuous assignment at src/volatile_cell_storage.v:62.12-62.167.
Warning: reg '\P2blk_h' is assigned in a continuous assignment at src/volatile_cell_storage.v:63.12-63.167.
Warning: reg '\P3blk_h' is assigned in a continuous assignment at src/volatile_cell_storage.v:64.12-64.167.
Warning: reg '\P4blk_h' is assigned in a continuous assignment at src/volatile_cell_storage.v:65.12-65.167.

26.2.2. Analyzing design hierarchy..
Top module:  \top
Used module:     \VGAcore
Used module:     \gmanager
Used module:         \color_lut
Used module:         \shader
Used module:         \blkoffset_horizontal
Used module:             \offsetmap
Used module:         \blknum_horizontal
Used module:     \scoredisplay
Used module:         \score_digit
Used module:     \topbar_display
Used module:     \screen_manager
Used module:     \cellstorage
Used module:         \tetron_Sb_shaper
Used module:         \tetron_Sa_shaper
Used module:         \tetron_T_shaper
Used module:         \tetron_Lb_shaper
Used module:         \tetron_La_shaper
Used module:         \tetron_O_shaper
Used module:         \tetron_I_shaper
Used module:     \blkmemory
Used module:         \memory
Used module:             \memcell_row
Used module:                 \memcell
Used module:         \shifter
Used module:     \vga_pll
Used module:     \timer

26.2.3. Analyzing design hierarchy..
Top module:  \top
Used module:     \VGAcore
Used module:     \gmanager
Used module:         \color_lut
Used module:         \shader
Used module:         \blkoffset_horizontal
Used module:             \offsetmap
Used module:         \blknum_horizontal
Used module:     \scoredisplay
Used module:         \score_digit
Used module:     \topbar_display
Used module:     \screen_manager
Used module:     \cellstorage
Used module:         \tetron_Sb_shaper
Used module:         \tetron_Sa_shaper
Used module:         \tetron_T_shaper
Used module:         \tetron_Lb_shaper
Used module:         \tetron_La_shaper
Used module:         \tetron_O_shaper
Used module:         \tetron_I_shaper
Used module:     \blkmemory
Used module:         \memory
Used module:             \memcell_row
Used module:                 \memcell
Used module:         \shifter
Used module:     \vga_pll
Used module:     \timer
Removed 0 unused modules.
Warning: Resizing cell port blkmemory.mem.hitbox_checker_3_y from 5 bits to 6 bits.
Warning: Resizing cell port blkmemory.mem.hitbox_checker_3_x from 5 bits to 6 bits.
Warning: Resizing cell port blkmemory.mem.hitbox_checker_2_y from 5 bits to 6 bits.
Warning: Resizing cell port blkmemory.mem.hitbox_checker_2_x from 5 bits to 6 bits.
Warning: Resizing cell port blkmemory.mem.hitbox_checker_1_y from 5 bits to 6 bits.
Warning: Resizing cell port blkmemory.mem.hitbox_checker_1_x from 5 bits to 6 bits.
Warning: Resizing cell port blkmemory.mem.hitbox_checker_0_y from 5 bits to 6 bits.
Warning: Resizing cell port blkmemory.mem.hitbox_checker_0_x from 5 bits to 6 bits.
Warning: Resizing cell port blkmemory.mem.color_requestor_y from 5 bits to 6 bits.
Warning: Resizing cell port blkmemory.mem.color_requestor_x from 5 bits to 6 bits.
Warning: Resizing cell port gmanager.hh.blkid from 5 bits to 6 bits.
Warning: Resizing cell port top.t.top from 24 bits to 25 bits.
Warning: Resizing cell port scoredisplay.s8.value from 5 bits to 4 bits.
Warning: Resizing cell port scoredisplay.s8.mut_vreadwire from 32 bits to 7 bits.
Warning: Resizing cell port scoredisplay.s8.mut_hreadwire from 32 bits to 7 bits.
Warning: Resizing cell port scoredisplay.s7.value from 5 bits to 4 bits.
Warning: Resizing cell port scoredisplay.s7.mut_vreadwire from 32 bits to 7 bits.
Warning: Resizing cell port scoredisplay.s7.mut_hreadwire from 32 bits to 7 bits.
Warning: Resizing cell port scoredisplay.s6.value from 5 bits to 4 bits.
Warning: Resizing cell port scoredisplay.s6.mut_vreadwire from 32 bits to 7 bits.
Warning: Resizing cell port scoredisplay.s6.mut_hreadwire from 32 bits to 7 bits.
Warning: Resizing cell port scoredisplay.s5.value from 5 bits to 4 bits.
Warning: Resizing cell port scoredisplay.s5.mut_vreadwire from 32 bits to 7 bits.
Warning: Resizing cell port scoredisplay.s5.mut_hreadwire from 32 bits to 7 bits.
Warning: Resizing cell port scoredisplay.s4.value from 5 bits to 4 bits.
Warning: Resizing cell port scoredisplay.s4.mut_vreadwire from 32 bits to 7 bits.
Warning: Resizing cell port scoredisplay.s4.mut_hreadwire from 32 bits to 7 bits.
Warning: Resizing cell port scoredisplay.s3.value from 5 bits to 4 bits.
Warning: Resizing cell port scoredisplay.s3.mut_vreadwire from 32 bits to 7 bits.
Warning: Resizing cell port scoredisplay.s3.mut_hreadwire from 32 bits to 7 bits.
Warning: Resizing cell port scoredisplay.s2.value from 5 bits to 4 bits.
Warning: Resizing cell port scoredisplay.s2.mut_vreadwire from 32 bits to 7 bits.
Warning: Resizing cell port scoredisplay.s2.mut_hreadwire from 32 bits to 7 bits.
Warning: Resizing cell port scoredisplay.s1.value from 5 bits to 4 bits.
Warning: Resizing cell port scoredisplay.s1.mut_vreadwire from 32 bits to 7 bits.
Warning: Resizing cell port scoredisplay.s1.mut_hreadwire from 32 bits to 7 bits.

26.3. Executing PROC pass (convert processes to netlists).

26.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

26.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 9 switch rules as full_case in process $proc$src/volatile_cell_storage.v:152$1953 in module cellstorage.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1386$1694 in module SB_DFFNES.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1328$1687 in module SB_DFFNESS.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1251$1683 in module SB_DFFNER.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1193$1676 in module SB_DFFNESR.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1122$1673 in module SB_DFFNS.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1072$1670 in module SB_DFFNSS.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1001$1667 in module SB_DFFNR.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:951$1664 in module SB_DFFNSR.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:789$1656 in module SB_DFFES.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:731$1649 in module SB_DFFESS.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:654$1645 in module SB_DFFER.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:596$1638 in module SB_DFFESR.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:525$1635 in module SB_DFFS.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:475$1632 in module SB_DFFSS.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:404$1629 in module SB_DFFR.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:354$1626 in module SB_DFFSR.
Marked 9 switch rules as full_case in process $proc$src/blockmemory.v:105$1412 in module blkmemory.
Marked 1 switch rules as full_case in process $proc$src/color_lut.v:8$1391 in module color_lut.
Marked 2 switch rules as full_case in process $proc$src/gmanager.v:69$1159 in module gmanager.
Marked 1 switch rules as full_case in process $proc$src/tetron_I.v:19$1134 in module tetron_I_shaper.
Marked 2 switch rules as full_case in process $proc$src/timer.v:10$943 in module timer.
Marked 1 switch rules as full_case in process $proc$src/vga_core.v:64$927 in module VGAcore.
Marked 2 switch rules as full_case in process $proc$src/meta_memcell.v:22$921 in module memcell.
Marked 1 switch rules as full_case in process $proc$src/tetron_La.v:19$756 in module tetron_La_shaper.
Marked 1 switch rules as full_case in process $proc$src/tetron_Lb.v:19$750 in module tetron_Lb_shaper.
Marked 1 switch rules as full_case in process $proc$src/tetron_O.v:19$748 in module tetron_O_shaper.
Marked 2 switch rules as full_case in process $proc$src/gamespeed_display.v:21$742 in module topbar_display.
Marked 1 switch rules as full_case in process $proc$src/tetron_T.v:19$716 in module tetron_T_shaper.
Marked 10 switch rules as full_case in process $proc$src/scoredisplay.v:22$569 in module scoredisplay.
Marked 1 switch rules as full_case in process $proc$src/tetron_Sb.v:19$401 in module tetron_Sb_shaper.
Marked 1 switch rules as full_case in process $proc$src/tetron_Sa.v:19$395 in module tetron_Sa_shaper.
Removed a total of 0 dead cases.

26.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 27 redundant assignments.
Promoted 130 assignments to connections.

26.3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\SB_DFFNES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1697'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1693'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1686'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1682'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1675'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1672'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1669'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1666'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1663'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFN.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1661'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1659'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1655'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1648'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1644'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1637'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1634'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1631'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1628'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1625'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFF.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1623'.
  Set init value: \Q = 1'0
Found init rule in `\top.$proc$src/top.v:29$1145'.
  Set init value: \resetn_gen = 4'0000

26.3.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \S in `\SB_DFFNES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1386$1694'.
Found async reset \R in `\SB_DFFNER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1251$1683'.
Found async reset \S in `\SB_DFFNS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1122$1673'.
Found async reset \R in `\SB_DFFNR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1001$1667'.
Found async reset \S in `\SB_DFFES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:789$1656'.
Found async reset \R in `\SB_DFFER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:654$1645'.
Found async reset \S in `\SB_DFFS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:525$1635'.
Found async reset \R in `\SB_DFFR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:404$1629'.

26.3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\cellstorage.$proc$src/volatile_cell_storage.v:0$2029'.
Creating decoders for process `\cellstorage.$proc$src/volatile_cell_storage.v:152$1953'.
     1/22: $0\buttdebounceR[25:0]
     2/22: $0\buttdebounceD[25:0]
     3/22: $0\buttdebounceT[25:0]
     4/22: $0\buttdebounceL[25:0]
     5/22: $0\state[7:0]
     6/22: $0\dropcool[5:0]
     7/22: $0\dropit[0:0]
     8/22: $0\process_decline[0:0]
     9/22: $0\process_steal[0:0]
    10/22: $0\postdecline_cool[0:0]
    11/22: $0\cooldown[5:0]
    12/22: $0\movement_available[0:0]
    13/22: $0\tetron_type[3:0]
    14/22: $0\keep_tetron_rotation[2:0]
    15/22: $0\keep_tetron_h[4:0]
    16/22: $0\keep_tetron_v[4:0]
    17/22: $0\tetron_h[4:0]
    18/22: $0\tetron_v[4:0]
    19/22: $0\volatile_blk_color[2:0]
    20/22: $0\movement_intent[0:0]
    21/22: $0\movement_request[0:0]
    22/22: $0\tetron_rotation[2:0]
Creating decoders for process `\SB_DFFNES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1697'.
Creating decoders for process `\SB_DFFNES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1386$1694'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1693'.
Creating decoders for process `\SB_DFFNESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1328$1687'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1686'.
Creating decoders for process `\SB_DFFNER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1251$1683'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1682'.
Creating decoders for process `\SB_DFFNESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1193$1676'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1675'.
Creating decoders for process `\SB_DFFNS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1122$1673'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1672'.
Creating decoders for process `\SB_DFFNSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1072$1670'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1669'.
Creating decoders for process `\SB_DFFNR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1001$1667'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1666'.
Creating decoders for process `\SB_DFFNSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:951$1664'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1663'.
Creating decoders for process `\SB_DFFNE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:906$1662'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFN.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1661'.
Creating decoders for process `\SB_DFFN.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:868$1660'.
Creating decoders for process `\SB_DFFES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1659'.
Creating decoders for process `\SB_DFFES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:789$1656'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1655'.
Creating decoders for process `\SB_DFFESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:731$1649'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1648'.
Creating decoders for process `\SB_DFFER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:654$1645'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1644'.
Creating decoders for process `\SB_DFFESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:596$1638'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1637'.
Creating decoders for process `\SB_DFFS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:525$1635'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1634'.
Creating decoders for process `\SB_DFFSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:475$1632'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1631'.
Creating decoders for process `\SB_DFFR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:404$1629'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1628'.
Creating decoders for process `\SB_DFFSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:354$1626'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1625'.
Creating decoders for process `\SB_DFFE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:309$1624'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFF.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1623'.
Creating decoders for process `\SB_DFF.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:271$1622'.
Creating decoders for process `\blkmemory.$proc$src/blockmemory.v:105$1412'.
     1/17: $0\keep_concurrent_blks[4:0]
     2/17: $0\perq[3:0]
     3/17: $0\resetperiod_state[20:0]
     4/17: $0\resetperiod[0:0]
     5/17: $0\streak_iterator[2:0]
     6/17: $0\streak_cooldown[16:0]
     7/17: $0\stealstatus[3:0]
     8/17: $0\mm_colorsetter_value[2:0]
     9/17: $0\mm_colorsetter_commit[0:0]
    10/17: $0\mm_colosetter_y[5:0]
    11/17: $0\mm_colosetter_x[5:0]
    12/17: $0\proposed_memval[2:0]
    13/17: $0\cooldown[3:0]
    14/17: $0\movement_steal[0:0]
    15/17: $0\movement_commit[0:0]
    16/17: $0\movement_declined[0:0]
    17/17: $0\scorewire[15:0]
Creating decoders for process `\color_lut.$proc$src/color_lut.v:8$1391'.
     1/1: $0\color[11:0]
Creating decoders for process `\blknum_horizontal.$proc$src/mod24.v:0$1241'.
Creating decoders for process `\gmanager.$proc$src/gmanager.v:69$1159'.
     1/4: $2\pixstream[11:0]
     2/4: $2\ipixstream[11:0]
     3/4: $1\ipixstream[11:0]
     4/4: $1\pixstream[11:0]
Creating decoders for process `\top.$proc$src/top.v:29$1145'.
Creating decoders for process `\top.$proc$src/top.v:33$1140'.
Creating decoders for process `\tetron_I_shaper.$proc$src/tetron_I.v:19$1134'.
     1/8: $0\blk4_hoffset[4:0]
     2/8: $0\blk4_voffset[4:0]
     3/8: $0\blk3_hoffset[4:0]
     4/8: $0\blk3_voffset[4:0]
     5/8: $0\blk2_hoffset[4:0]
     6/8: $0\blk2_voffset[4:0]
     7/8: $0\blk1_hoffset[4:0]
     8/8: $0\blk1_voffset[4:0]
Creating decoders for process `\timer.$proc$src/timer.v:10$943'.
     1/2: $0\counter[24:0]
     2/2: $0\trigger[0:0]
Creating decoders for process `\VGAcore.$proc$src/vga_core.v:64$927'.
     1/11: $0\proposed_b[3:0]
     2/11: $0\proposed_g[3:0]
     3/11: $0\proposed_r[3:0]
     4/11: $0\hscan_pos[9:0]
     5/11: $0\v_drawing_pixels[0:0]
     6/11: $0\h_drawing_pixels[0:0]
     7/11: $0\vscan_pos[9:0]
     8/11: $0\v_sync[0:0]
     9/11: $0\h_sync[0:0]
    10/11: $0\vreadwire[9:0]
    11/11: $0\hreadwire[9:0]
Creating decoders for process `\memcell.$proc$src/meta_memcell.v:22$921'.
     1/1: $0\priv_mem[2:0]
Creating decoders for process `\shifter.$proc$src/shifter.v:25$820'.
Creating decoders for process `\tetron_La_shaper.$proc$src/tetron_La.v:19$756'.
     1/8: $0\blk4_hoffset[4:0]
     2/8: $0\blk4_voffset[4:0]
     3/8: $0\blk3_hoffset[4:0]
     4/8: $0\blk3_voffset[4:0]
     5/8: $0\blk2_hoffset[4:0]
     6/8: $0\blk2_voffset[4:0]
     7/8: $0\blk1_hoffset[4:0]
     8/8: $0\blk1_voffset[4:0]
Creating decoders for process `\tetron_Lb_shaper.$proc$src/tetron_Lb.v:19$750'.
     1/8: $0\blk4_hoffset[4:0]
     2/8: $0\blk4_voffset[4:0]
     3/8: $0\blk3_hoffset[4:0]
     4/8: $0\blk3_voffset[4:0]
     5/8: $0\blk2_hoffset[4:0]
     6/8: $0\blk2_voffset[4:0]
     7/8: $0\blk1_hoffset[4:0]
     8/8: $0\blk1_voffset[4:0]
Creating decoders for process `\tetron_O_shaper.$proc$src/tetron_O.v:19$748'.
     1/8: $0\blk4_hoffset[4:0]
     2/8: $0\blk4_voffset[4:0]
     3/8: $0\blk3_hoffset[4:0]
     4/8: $0\blk3_voffset[4:0]
     5/8: $0\blk2_hoffset[4:0]
     6/8: $0\blk2_voffset[4:0]
     7/8: $0\blk1_hoffset[4:0]
     8/8: $0\blk1_voffset[4:0]
Creating decoders for process `\topbar_display.$proc$src/gamespeed_display.v:21$742'.
     1/2: $0\state[3:0]
     2/2: $0\gamespeed[23:0]
Creating decoders for process `\tetron_T_shaper.$proc$src/tetron_T.v:19$716'.
     1/8: $0\blk4_hoffset[4:0]
     2/8: $0\blk4_voffset[4:0]
     3/8: $0\blk3_hoffset[4:0]
     4/8: $0\blk3_voffset[4:0]
     5/8: $0\blk2_hoffset[4:0]
     6/8: $0\blk2_voffset[4:0]
     7/8: $0\blk1_hoffset[4:0]
     8/8: $0\blk1_voffset[4:0]
Creating decoders for process `\scoredisplay.$proc$src/scoredisplay.v:22$569'.
     1/17: $0\valused[7:0] [1]
     2/17: $0\valused[7:0] [0]
     3/17: $0\valused[7:0] [2]
     4/17: $0\valused[7:0] [3]
     5/17: $0\valused[7:0] [4]
     6/17: $0\valused[7:0] [5]
     7/17: $0\valused[7:0] [6]
     8/17: $0\valused[7:0] [7]
     9/17: $0\values[6][4:0]
    10/17: $0\values[5][4:0]
    11/17: $0\values[4][4:0]
    12/17: $0\values[3][4:0]
    13/17: $0\values[2][4:0]
    14/17: $0\values[1][4:0]
    15/17: $0\values[0][4:0]
    16/17: $0\dumpvar[20:0]
    17/17: $0\values[7][4:0]
Creating decoders for process `\tetron_Sb_shaper.$proc$src/tetron_Sb.v:19$401'.
     1/8: $0\blk4_hoffset[4:0]
     2/8: $0\blk4_voffset[4:0]
     3/8: $0\blk3_hoffset[4:0]
     4/8: $0\blk3_voffset[4:0]
     5/8: $0\blk2_hoffset[4:0]
     6/8: $0\blk2_voffset[4:0]
     7/8: $0\blk1_hoffset[4:0]
     8/8: $0\blk1_voffset[4:0]
Creating decoders for process `\tetron_Sa_shaper.$proc$src/tetron_Sa.v:19$395'.
     1/8: $0\blk4_hoffset[4:0]
     2/8: $0\blk4_voffset[4:0]
     3/8: $0\blk3_hoffset[4:0]
     4/8: $0\blk3_voffset[4:0]
     5/8: $0\blk2_hoffset[4:0]
     6/8: $0\blk2_voffset[4:0]
     7/8: $0\blk1_hoffset[4:0]
     8/8: $0\blk1_voffset[4:0]

26.3.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\cellstorage.\itetron_blk_h[0]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$2029'.
No latch inferred for signal `\cellstorage.\itetron_blk_h[1]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$2029'.
No latch inferred for signal `\cellstorage.\itetron_blk_h[2]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$2029'.
No latch inferred for signal `\cellstorage.\itetron_blk_h[3]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$2029'.
No latch inferred for signal `\cellstorage.\itetron_blk_v[0]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$2029'.
No latch inferred for signal `\cellstorage.\itetron_blk_v[1]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$2029'.
No latch inferred for signal `\cellstorage.\itetron_blk_v[2]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$2029'.
No latch inferred for signal `\cellstorage.\itetron_blk_v[3]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$2029'.
No latch inferred for signal `\cellstorage.\otetron_blk_h[0]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$2029'.
No latch inferred for signal `\cellstorage.\otetron_blk_h[1]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$2029'.
No latch inferred for signal `\cellstorage.\otetron_blk_h[2]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$2029'.
No latch inferred for signal `\cellstorage.\otetron_blk_h[3]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$2029'.
No latch inferred for signal `\cellstorage.\otetron_blk_v[0]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$2029'.
No latch inferred for signal `\cellstorage.\otetron_blk_v[1]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$2029'.
No latch inferred for signal `\cellstorage.\otetron_blk_v[2]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$2029'.
No latch inferred for signal `\cellstorage.\otetron_blk_v[3]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$2029'.
No latch inferred for signal `\cellstorage.\latetron_blk_h[0]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$2029'.
No latch inferred for signal `\cellstorage.\latetron_blk_h[1]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$2029'.
No latch inferred for signal `\cellstorage.\latetron_blk_h[2]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$2029'.
No latch inferred for signal `\cellstorage.\latetron_blk_h[3]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$2029'.
No latch inferred for signal `\cellstorage.\latetron_blk_v[0]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$2029'.
No latch inferred for signal `\cellstorage.\latetron_blk_v[1]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$2029'.
No latch inferred for signal `\cellstorage.\latetron_blk_v[2]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$2029'.
No latch inferred for signal `\cellstorage.\latetron_blk_v[3]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$2029'.
No latch inferred for signal `\cellstorage.\lbtetron_blk_h[0]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$2029'.
No latch inferred for signal `\cellstorage.\lbtetron_blk_h[1]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$2029'.
No latch inferred for signal `\cellstorage.\lbtetron_blk_h[2]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$2029'.
No latch inferred for signal `\cellstorage.\lbtetron_blk_h[3]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$2029'.
No latch inferred for signal `\cellstorage.\lbtetron_blk_v[0]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$2029'.
No latch inferred for signal `\cellstorage.\lbtetron_blk_v[1]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$2029'.
No latch inferred for signal `\cellstorage.\lbtetron_blk_v[2]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$2029'.
No latch inferred for signal `\cellstorage.\lbtetron_blk_v[3]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$2029'.
No latch inferred for signal `\cellstorage.\ttetron_blk_h[0]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$2029'.
No latch inferred for signal `\cellstorage.\ttetron_blk_h[1]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$2029'.
No latch inferred for signal `\cellstorage.\ttetron_blk_h[2]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$2029'.
No latch inferred for signal `\cellstorage.\ttetron_blk_h[3]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$2029'.
No latch inferred for signal `\cellstorage.\ttetron_blk_v[0]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$2029'.
No latch inferred for signal `\cellstorage.\ttetron_blk_v[1]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$2029'.
No latch inferred for signal `\cellstorage.\ttetron_blk_v[2]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$2029'.
No latch inferred for signal `\cellstorage.\ttetron_blk_v[3]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$2029'.
No latch inferred for signal `\cellstorage.\satetron_blk_h[0]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$2029'.
No latch inferred for signal `\cellstorage.\satetron_blk_h[1]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$2029'.
No latch inferred for signal `\cellstorage.\satetron_blk_h[2]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$2029'.
No latch inferred for signal `\cellstorage.\satetron_blk_h[3]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$2029'.
No latch inferred for signal `\cellstorage.\satetron_blk_v[0]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$2029'.
No latch inferred for signal `\cellstorage.\satetron_blk_v[1]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$2029'.
No latch inferred for signal `\cellstorage.\satetron_blk_v[2]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$2029'.
No latch inferred for signal `\cellstorage.\satetron_blk_v[3]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$2029'.
No latch inferred for signal `\cellstorage.\sbtetron_blk_h[0]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$2029'.
No latch inferred for signal `\cellstorage.\sbtetron_blk_h[1]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$2029'.
No latch inferred for signal `\cellstorage.\sbtetron_blk_h[2]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$2029'.
No latch inferred for signal `\cellstorage.\sbtetron_blk_h[3]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$2029'.
No latch inferred for signal `\cellstorage.\sbtetron_blk_v[0]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$2029'.
No latch inferred for signal `\cellstorage.\sbtetron_blk_v[1]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$2029'.
No latch inferred for signal `\cellstorage.\sbtetron_blk_v[2]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$2029'.
No latch inferred for signal `\cellstorage.\sbtetron_blk_v[3]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$2029'.
No latch inferred for signal `\color_lut.\color' from process `\color_lut.$proc$src/color_lut.v:8$1391'.
No latch inferred for signal `\blknum_horizontal.\locators[0]' from process `\blknum_horizontal.$proc$src/mod24.v:0$1241'.
No latch inferred for signal `\blknum_horizontal.\locators[1]' from process `\blknum_horizontal.$proc$src/mod24.v:0$1241'.
No latch inferred for signal `\blknum_horizontal.\locators[2]' from process `\blknum_horizontal.$proc$src/mod24.v:0$1241'.
No latch inferred for signal `\blknum_horizontal.\locators[3]' from process `\blknum_horizontal.$proc$src/mod24.v:0$1241'.
No latch inferred for signal `\blknum_horizontal.\locators[4]' from process `\blknum_horizontal.$proc$src/mod24.v:0$1241'.
No latch inferred for signal `\blknum_horizontal.\locators[5]' from process `\blknum_horizontal.$proc$src/mod24.v:0$1241'.
No latch inferred for signal `\blknum_horizontal.\locators[6]' from process `\blknum_horizontal.$proc$src/mod24.v:0$1241'.
No latch inferred for signal `\blknum_horizontal.\locators[7]' from process `\blknum_horizontal.$proc$src/mod24.v:0$1241'.
No latch inferred for signal `\blknum_horizontal.\locators[8]' from process `\blknum_horizontal.$proc$src/mod24.v:0$1241'.
No latch inferred for signal `\blknum_horizontal.\locators[9]' from process `\blknum_horizontal.$proc$src/mod24.v:0$1241'.
No latch inferred for signal `\blknum_horizontal.\locators[10]' from process `\blknum_horizontal.$proc$src/mod24.v:0$1241'.
No latch inferred for signal `\blknum_horizontal.\locators[11]' from process `\blknum_horizontal.$proc$src/mod24.v:0$1241'.
No latch inferred for signal `\blknum_horizontal.\locators[12]' from process `\blknum_horizontal.$proc$src/mod24.v:0$1241'.
No latch inferred for signal `\blknum_horizontal.\locators[13]' from process `\blknum_horizontal.$proc$src/mod24.v:0$1241'.
No latch inferred for signal `\blknum_horizontal.\locators[14]' from process `\blknum_horizontal.$proc$src/mod24.v:0$1241'.
No latch inferred for signal `\blknum_horizontal.\locators[15]' from process `\blknum_horizontal.$proc$src/mod24.v:0$1241'.
No latch inferred for signal `\blknum_horizontal.\locators[16]' from process `\blknum_horizontal.$proc$src/mod24.v:0$1241'.
No latch inferred for signal `\blknum_horizontal.\locators[17]' from process `\blknum_horizontal.$proc$src/mod24.v:0$1241'.
No latch inferred for signal `\blknum_horizontal.\locators[18]' from process `\blknum_horizontal.$proc$src/mod24.v:0$1241'.
No latch inferred for signal `\blknum_horizontal.\locators[19]' from process `\blknum_horizontal.$proc$src/mod24.v:0$1241'.
No latch inferred for signal `\blknum_horizontal.\locators[20]' from process `\blknum_horizontal.$proc$src/mod24.v:0$1241'.
No latch inferred for signal `\blknum_horizontal.\locators[21]' from process `\blknum_horizontal.$proc$src/mod24.v:0$1241'.
No latch inferred for signal `\blknum_horizontal.\locators[22]' from process `\blknum_horizontal.$proc$src/mod24.v:0$1241'.
No latch inferred for signal `\blknum_horizontal.\locators[23]' from process `\blknum_horizontal.$proc$src/mod24.v:0$1241'.

26.3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\cellstorage.\tetron_rotation' using process `\cellstorage.$proc$src/volatile_cell_storage.v:152$1953'.
  created $dff cell `$procdff$3749' with positive edge clock.
Creating register for signal `\cellstorage.\state' using process `\cellstorage.$proc$src/volatile_cell_storage.v:152$1953'.
  created $dff cell `$procdff$3750' with positive edge clock.
Creating register for signal `\cellstorage.\movement_request' using process `\cellstorage.$proc$src/volatile_cell_storage.v:152$1953'.
  created $dff cell `$procdff$3751' with positive edge clock.
Creating register for signal `\cellstorage.\movement_intent' using process `\cellstorage.$proc$src/volatile_cell_storage.v:152$1953'.
  created $dff cell `$procdff$3752' with positive edge clock.
Creating register for signal `\cellstorage.\volatile_blk_color' using process `\cellstorage.$proc$src/volatile_cell_storage.v:152$1953'.
  created $dff cell `$procdff$3753' with positive edge clock.
Creating register for signal `\cellstorage.\tetron_v' using process `\cellstorage.$proc$src/volatile_cell_storage.v:152$1953'.
  created $dff cell `$procdff$3754' with positive edge clock.
Creating register for signal `\cellstorage.\tetron_h' using process `\cellstorage.$proc$src/volatile_cell_storage.v:152$1953'.
  created $dff cell `$procdff$3755' with positive edge clock.
Creating register for signal `\cellstorage.\keep_tetron_v' using process `\cellstorage.$proc$src/volatile_cell_storage.v:152$1953'.
  created $dff cell `$procdff$3756' with positive edge clock.
Creating register for signal `\cellstorage.\keep_tetron_h' using process `\cellstorage.$proc$src/volatile_cell_storage.v:152$1953'.
  created $dff cell `$procdff$3757' with positive edge clock.
Creating register for signal `\cellstorage.\keep_tetron_rotation' using process `\cellstorage.$proc$src/volatile_cell_storage.v:152$1953'.
  created $dff cell `$procdff$3758' with positive edge clock.
Creating register for signal `\cellstorage.\tetron_type' using process `\cellstorage.$proc$src/volatile_cell_storage.v:152$1953'.
  created $dff cell `$procdff$3759' with positive edge clock.
Creating register for signal `\cellstorage.\movement_available' using process `\cellstorage.$proc$src/volatile_cell_storage.v:152$1953'.
  created $dff cell `$procdff$3760' with positive edge clock.
Creating register for signal `\cellstorage.\cooldown' using process `\cellstorage.$proc$src/volatile_cell_storage.v:152$1953'.
  created $dff cell `$procdff$3761' with positive edge clock.
Creating register for signal `\cellstorage.\postdecline_cool' using process `\cellstorage.$proc$src/volatile_cell_storage.v:152$1953'.
  created $dff cell `$procdff$3762' with positive edge clock.
Creating register for signal `\cellstorage.\process_steal' using process `\cellstorage.$proc$src/volatile_cell_storage.v:152$1953'.
  created $dff cell `$procdff$3763' with positive edge clock.
Creating register for signal `\cellstorage.\buttdebounceL' using process `\cellstorage.$proc$src/volatile_cell_storage.v:152$1953'.
  created $dff cell `$procdff$3764' with positive edge clock.
Creating register for signal `\cellstorage.\buttdebounceR' using process `\cellstorage.$proc$src/volatile_cell_storage.v:152$1953'.
  created $dff cell `$procdff$3765' with positive edge clock.
Creating register for signal `\cellstorage.\buttdebounceT' using process `\cellstorage.$proc$src/volatile_cell_storage.v:152$1953'.
  created $dff cell `$procdff$3766' with positive edge clock.
Creating register for signal `\cellstorage.\buttdebounceD' using process `\cellstorage.$proc$src/volatile_cell_storage.v:152$1953'.
  created $dff cell `$procdff$3767' with positive edge clock.
Creating register for signal `\cellstorage.\process_decline' using process `\cellstorage.$proc$src/volatile_cell_storage.v:152$1953'.
  created $dff cell `$procdff$3768' with positive edge clock.
Creating register for signal `\cellstorage.\dropit' using process `\cellstorage.$proc$src/volatile_cell_storage.v:152$1953'.
  created $dff cell `$procdff$3769' with positive edge clock.
Creating register for signal `\cellstorage.\dropcool' using process `\cellstorage.$proc$src/volatile_cell_storage.v:152$1953'.
  created $dff cell `$procdff$3770' with positive edge clock.
Creating register for signal `\SB_DFFNES.\Q' using process `\SB_DFFNES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1386$1694'.
  created $adff cell `$procdff$3771' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESS.\Q' using process `\SB_DFFNESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1328$1687'.
  created $dff cell `$procdff$3772' with negative edge clock.
Creating register for signal `\SB_DFFNER.\Q' using process `\SB_DFFNER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1251$1683'.
  created $adff cell `$procdff$3773' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESR.\Q' using process `\SB_DFFNESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1193$1676'.
  created $dff cell `$procdff$3774' with negative edge clock.
Creating register for signal `\SB_DFFNS.\Q' using process `\SB_DFFNS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1122$1673'.
  created $adff cell `$procdff$3775' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSS.\Q' using process `\SB_DFFNSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1072$1670'.
  created $dff cell `$procdff$3776' with negative edge clock.
Creating register for signal `\SB_DFFNR.\Q' using process `\SB_DFFNR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1001$1667'.
  created $adff cell `$procdff$3777' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSR.\Q' using process `\SB_DFFNSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:951$1664'.
  created $dff cell `$procdff$3778' with negative edge clock.
Creating register for signal `\SB_DFFNE.\Q' using process `\SB_DFFNE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:906$1662'.
  created $dff cell `$procdff$3779' with negative edge clock.
Creating register for signal `\SB_DFFN.\Q' using process `\SB_DFFN.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:868$1660'.
  created $dff cell `$procdff$3780' with negative edge clock.
Creating register for signal `\SB_DFFES.\Q' using process `\SB_DFFES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:789$1656'.
  created $adff cell `$procdff$3781' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESS.\Q' using process `\SB_DFFESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:731$1649'.
  created $dff cell `$procdff$3782' with positive edge clock.
Creating register for signal `\SB_DFFER.\Q' using process `\SB_DFFER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:654$1645'.
  created $adff cell `$procdff$3783' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESR.\Q' using process `\SB_DFFESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:596$1638'.
  created $dff cell `$procdff$3784' with positive edge clock.
Creating register for signal `\SB_DFFS.\Q' using process `\SB_DFFS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:525$1635'.
  created $adff cell `$procdff$3785' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSS.\Q' using process `\SB_DFFSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:475$1632'.
  created $dff cell `$procdff$3786' with positive edge clock.
Creating register for signal `\SB_DFFR.\Q' using process `\SB_DFFR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:404$1629'.
  created $adff cell `$procdff$3787' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSR.\Q' using process `\SB_DFFSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:354$1626'.
  created $dff cell `$procdff$3788' with positive edge clock.
Creating register for signal `\SB_DFFE.\Q' using process `\SB_DFFE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:309$1624'.
  created $dff cell `$procdff$3789' with positive edge clock.
Creating register for signal `\SB_DFF.\Q' using process `\SB_DFF.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:271$1622'.
  created $dff cell `$procdff$3790' with positive edge clock.
Creating register for signal `\blkmemory.\scorewire' using process `\blkmemory.$proc$src/blockmemory.v:105$1412'.
  created $dff cell `$procdff$3791' with positive edge clock.
Creating register for signal `\blkmemory.\movement_declined' using process `\blkmemory.$proc$src/blockmemory.v:105$1412'.
  created $dff cell `$procdff$3792' with positive edge clock.
Creating register for signal `\blkmemory.\movement_commit' using process `\blkmemory.$proc$src/blockmemory.v:105$1412'.
  created $dff cell `$procdff$3793' with positive edge clock.
Creating register for signal `\blkmemory.\movement_steal' using process `\blkmemory.$proc$src/blockmemory.v:105$1412'.
  created $dff cell `$procdff$3794' with positive edge clock.
Creating register for signal `\blkmemory.\cooldown' using process `\blkmemory.$proc$src/blockmemory.v:105$1412'.
  created $dff cell `$procdff$3795' with positive edge clock.
Creating register for signal `\blkmemory.\proposed_memval' using process `\blkmemory.$proc$src/blockmemory.v:105$1412'.
  created $dff cell `$procdff$3796' with positive edge clock.
Creating register for signal `\blkmemory.\mm_colosetter_x' using process `\blkmemory.$proc$src/blockmemory.v:105$1412'.
  created $dff cell `$procdff$3797' with positive edge clock.
Creating register for signal `\blkmemory.\mm_colosetter_y' using process `\blkmemory.$proc$src/blockmemory.v:105$1412'.
  created $dff cell `$procdff$3798' with positive edge clock.
Creating register for signal `\blkmemory.\mm_colorsetter_commit' using process `\blkmemory.$proc$src/blockmemory.v:105$1412'.
  created $dff cell `$procdff$3799' with positive edge clock.
Creating register for signal `\blkmemory.\mm_colorsetter_value' using process `\blkmemory.$proc$src/blockmemory.v:105$1412'.
  created $dff cell `$procdff$3800' with positive edge clock.
Creating register for signal `\blkmemory.\stealstatus' using process `\blkmemory.$proc$src/blockmemory.v:105$1412'.
  created $dff cell `$procdff$3801' with positive edge clock.
Creating register for signal `\blkmemory.\streak_cooldown' using process `\blkmemory.$proc$src/blockmemory.v:105$1412'.
  created $dff cell `$procdff$3802' with positive edge clock.
Creating register for signal `\blkmemory.\streak_iterator' using process `\blkmemory.$proc$src/blockmemory.v:105$1412'.
  created $dff cell `$procdff$3803' with positive edge clock.
Creating register for signal `\blkmemory.\resetperiod' using process `\blkmemory.$proc$src/blockmemory.v:105$1412'.
  created $dff cell `$procdff$3804' with positive edge clock.
Creating register for signal `\blkmemory.\resetperiod_state' using process `\blkmemory.$proc$src/blockmemory.v:105$1412'.
  created $dff cell `$procdff$3805' with positive edge clock.
Creating register for signal `\blkmemory.\perq' using process `\blkmemory.$proc$src/blockmemory.v:105$1412'.
  created $dff cell `$procdff$3806' with positive edge clock.
Creating register for signal `\blkmemory.\keep_concurrent_blks' using process `\blkmemory.$proc$src/blockmemory.v:105$1412'.
  created $dff cell `$procdff$3807' with positive edge clock.
Creating register for signal `\gmanager.\pixstream' using process `\gmanager.$proc$src/gmanager.v:69$1159'.
  created $dff cell `$procdff$3808' with positive edge clock.
Creating register for signal `\gmanager.\ipixstream' using process `\gmanager.$proc$src/gmanager.v:69$1159'.
  created $dff cell `$procdff$3809' with positive edge clock.
Creating register for signal `\top.\reset' using process `\top.$proc$src/top.v:33$1140'.
  created $dff cell `$procdff$3810' with positive edge clock.
Creating register for signal `\top.\resetn_gen' using process `\top.$proc$src/top.v:33$1140'.
  created $dff cell `$procdff$3811' with positive edge clock.
Creating register for signal `\tetron_I_shaper.\blk1_voffset' using process `\tetron_I_shaper.$proc$src/tetron_I.v:19$1134'.
  created $dff cell `$procdff$3812' with positive edge clock.
Creating register for signal `\tetron_I_shaper.\blk1_hoffset' using process `\tetron_I_shaper.$proc$src/tetron_I.v:19$1134'.
  created $dff cell `$procdff$3813' with positive edge clock.
Creating register for signal `\tetron_I_shaper.\blk2_voffset' using process `\tetron_I_shaper.$proc$src/tetron_I.v:19$1134'.
  created $dff cell `$procdff$3814' with positive edge clock.
Creating register for signal `\tetron_I_shaper.\blk2_hoffset' using process `\tetron_I_shaper.$proc$src/tetron_I.v:19$1134'.
  created $dff cell `$procdff$3815' with positive edge clock.
Creating register for signal `\tetron_I_shaper.\blk3_voffset' using process `\tetron_I_shaper.$proc$src/tetron_I.v:19$1134'.
  created $dff cell `$procdff$3816' with positive edge clock.
Creating register for signal `\tetron_I_shaper.\blk3_hoffset' using process `\tetron_I_shaper.$proc$src/tetron_I.v:19$1134'.
  created $dff cell `$procdff$3817' with positive edge clock.
Creating register for signal `\tetron_I_shaper.\blk4_voffset' using process `\tetron_I_shaper.$proc$src/tetron_I.v:19$1134'.
  created $dff cell `$procdff$3818' with positive edge clock.
Creating register for signal `\tetron_I_shaper.\blk4_hoffset' using process `\tetron_I_shaper.$proc$src/tetron_I.v:19$1134'.
  created $dff cell `$procdff$3819' with positive edge clock.
Creating register for signal `\timer.\trigger' using process `\timer.$proc$src/timer.v:10$943'.
  created $dff cell `$procdff$3820' with positive edge clock.
Creating register for signal `\timer.\counter' using process `\timer.$proc$src/timer.v:10$943'.
  created $dff cell `$procdff$3821' with positive edge clock.
Creating register for signal `\VGAcore.\hreadwire' using process `\VGAcore.$proc$src/vga_core.v:64$927'.
  created $dff cell `$procdff$3822' with positive edge clock.
Creating register for signal `\VGAcore.\vreadwire' using process `\VGAcore.$proc$src/vga_core.v:64$927'.
  created $dff cell `$procdff$3823' with positive edge clock.
Creating register for signal `\VGAcore.\h_sync' using process `\VGAcore.$proc$src/vga_core.v:64$927'.
  created $dff cell `$procdff$3824' with positive edge clock.
Creating register for signal `\VGAcore.\v_sync' using process `\VGAcore.$proc$src/vga_core.v:64$927'.
  created $dff cell `$procdff$3825' with positive edge clock.
Creating register for signal `\VGAcore.\hscan_pos' using process `\VGAcore.$proc$src/vga_core.v:64$927'.
  created $dff cell `$procdff$3826' with positive edge clock.
Creating register for signal `\VGAcore.\vscan_pos' using process `\VGAcore.$proc$src/vga_core.v:64$927'.
  created $dff cell `$procdff$3827' with positive edge clock.
Creating register for signal `\VGAcore.\proposed_r' using process `\VGAcore.$proc$src/vga_core.v:64$927'.
  created $dff cell `$procdff$3828' with positive edge clock.
Creating register for signal `\VGAcore.\proposed_b' using process `\VGAcore.$proc$src/vga_core.v:64$927'.
  created $dff cell `$procdff$3829' with positive edge clock.
Creating register for signal `\VGAcore.\proposed_g' using process `\VGAcore.$proc$src/vga_core.v:64$927'.
  created $dff cell `$procdff$3830' with positive edge clock.
Creating register for signal `\VGAcore.\h_drawing_pixels' using process `\VGAcore.$proc$src/vga_core.v:64$927'.
  created $dff cell `$procdff$3831' with positive edge clock.
Creating register for signal `\VGAcore.\v_drawing_pixels' using process `\VGAcore.$proc$src/vga_core.v:64$927'.
  created $dff cell `$procdff$3832' with positive edge clock.
Creating register for signal `\memcell.\priv_mem' using process `\memcell.$proc$src/meta_memcell.v:22$921'.
  created $dff cell `$procdff$3833' with positive edge clock.
Creating register for signal `\shifter.\rowshift' using process `\shifter.$proc$src/shifter.v:25$820'.
  created $dff cell `$procdff$3834' with positive edge clock.
Creating register for signal `\tetron_La_shaper.\blk1_voffset' using process `\tetron_La_shaper.$proc$src/tetron_La.v:19$756'.
  created $dff cell `$procdff$3835' with positive edge clock.
Creating register for signal `\tetron_La_shaper.\blk1_hoffset' using process `\tetron_La_shaper.$proc$src/tetron_La.v:19$756'.
  created $dff cell `$procdff$3836' with positive edge clock.
Creating register for signal `\tetron_La_shaper.\blk2_voffset' using process `\tetron_La_shaper.$proc$src/tetron_La.v:19$756'.
  created $dff cell `$procdff$3837' with positive edge clock.
Creating register for signal `\tetron_La_shaper.\blk2_hoffset' using process `\tetron_La_shaper.$proc$src/tetron_La.v:19$756'.
  created $dff cell `$procdff$3838' with positive edge clock.
Creating register for signal `\tetron_La_shaper.\blk3_voffset' using process `\tetron_La_shaper.$proc$src/tetron_La.v:19$756'.
  created $dff cell `$procdff$3839' with positive edge clock.
Creating register for signal `\tetron_La_shaper.\blk3_hoffset' using process `\tetron_La_shaper.$proc$src/tetron_La.v:19$756'.
  created $dff cell `$procdff$3840' with positive edge clock.
Creating register for signal `\tetron_La_shaper.\blk4_voffset' using process `\tetron_La_shaper.$proc$src/tetron_La.v:19$756'.
  created $dff cell `$procdff$3841' with positive edge clock.
Creating register for signal `\tetron_La_shaper.\blk4_hoffset' using process `\tetron_La_shaper.$proc$src/tetron_La.v:19$756'.
  created $dff cell `$procdff$3842' with positive edge clock.
Creating register for signal `\tetron_Lb_shaper.\blk1_voffset' using process `\tetron_Lb_shaper.$proc$src/tetron_Lb.v:19$750'.
  created $dff cell `$procdff$3843' with positive edge clock.
Creating register for signal `\tetron_Lb_shaper.\blk1_hoffset' using process `\tetron_Lb_shaper.$proc$src/tetron_Lb.v:19$750'.
  created $dff cell `$procdff$3844' with positive edge clock.
Creating register for signal `\tetron_Lb_shaper.\blk2_voffset' using process `\tetron_Lb_shaper.$proc$src/tetron_Lb.v:19$750'.
  created $dff cell `$procdff$3845' with positive edge clock.
Creating register for signal `\tetron_Lb_shaper.\blk2_hoffset' using process `\tetron_Lb_shaper.$proc$src/tetron_Lb.v:19$750'.
  created $dff cell `$procdff$3846' with positive edge clock.
Creating register for signal `\tetron_Lb_shaper.\blk3_voffset' using process `\tetron_Lb_shaper.$proc$src/tetron_Lb.v:19$750'.
  created $dff cell `$procdff$3847' with positive edge clock.
Creating register for signal `\tetron_Lb_shaper.\blk3_hoffset' using process `\tetron_Lb_shaper.$proc$src/tetron_Lb.v:19$750'.
  created $dff cell `$procdff$3848' with positive edge clock.
Creating register for signal `\tetron_Lb_shaper.\blk4_voffset' using process `\tetron_Lb_shaper.$proc$src/tetron_Lb.v:19$750'.
  created $dff cell `$procdff$3849' with positive edge clock.
Creating register for signal `\tetron_Lb_shaper.\blk4_hoffset' using process `\tetron_Lb_shaper.$proc$src/tetron_Lb.v:19$750'.
  created $dff cell `$procdff$3850' with positive edge clock.
Creating register for signal `\tetron_O_shaper.\blk1_voffset' using process `\tetron_O_shaper.$proc$src/tetron_O.v:19$748'.
  created $dff cell `$procdff$3851' with positive edge clock.
Creating register for signal `\tetron_O_shaper.\blk1_hoffset' using process `\tetron_O_shaper.$proc$src/tetron_O.v:19$748'.
  created $dff cell `$procdff$3852' with positive edge clock.
Creating register for signal `\tetron_O_shaper.\blk2_voffset' using process `\tetron_O_shaper.$proc$src/tetron_O.v:19$748'.
  created $dff cell `$procdff$3853' with positive edge clock.
Creating register for signal `\tetron_O_shaper.\blk2_hoffset' using process `\tetron_O_shaper.$proc$src/tetron_O.v:19$748'.
  created $dff cell `$procdff$3854' with positive edge clock.
Creating register for signal `\tetron_O_shaper.\blk3_voffset' using process `\tetron_O_shaper.$proc$src/tetron_O.v:19$748'.
  created $dff cell `$procdff$3855' with positive edge clock.
Creating register for signal `\tetron_O_shaper.\blk3_hoffset' using process `\tetron_O_shaper.$proc$src/tetron_O.v:19$748'.
  created $dff cell `$procdff$3856' with positive edge clock.
Creating register for signal `\tetron_O_shaper.\blk4_voffset' using process `\tetron_O_shaper.$proc$src/tetron_O.v:19$748'.
  created $dff cell `$procdff$3857' with positive edge clock.
Creating register for signal `\tetron_O_shaper.\blk4_hoffset' using process `\tetron_O_shaper.$proc$src/tetron_O.v:19$748'.
  created $dff cell `$procdff$3858' with positive edge clock.
Creating register for signal `\topbar_display.\gamespeed' using process `\topbar_display.$proc$src/gamespeed_display.v:21$742'.
  created $dff cell `$procdff$3859' with positive edge clock.
Creating register for signal `\topbar_display.\state' using process `\topbar_display.$proc$src/gamespeed_display.v:21$742'.
  created $dff cell `$procdff$3860' with positive edge clock.
Creating register for signal `\tetron_T_shaper.\blk1_voffset' using process `\tetron_T_shaper.$proc$src/tetron_T.v:19$716'.
  created $dff cell `$procdff$3861' with positive edge clock.
Creating register for signal `\tetron_T_shaper.\blk1_hoffset' using process `\tetron_T_shaper.$proc$src/tetron_T.v:19$716'.
  created $dff cell `$procdff$3862' with positive edge clock.
Creating register for signal `\tetron_T_shaper.\blk2_voffset' using process `\tetron_T_shaper.$proc$src/tetron_T.v:19$716'.
  created $dff cell `$procdff$3863' with positive edge clock.
Creating register for signal `\tetron_T_shaper.\blk2_hoffset' using process `\tetron_T_shaper.$proc$src/tetron_T.v:19$716'.
  created $dff cell `$procdff$3864' with positive edge clock.
Creating register for signal `\tetron_T_shaper.\blk3_voffset' using process `\tetron_T_shaper.$proc$src/tetron_T.v:19$716'.
  created $dff cell `$procdff$3865' with positive edge clock.
Creating register for signal `\tetron_T_shaper.\blk3_hoffset' using process `\tetron_T_shaper.$proc$src/tetron_T.v:19$716'.
  created $dff cell `$procdff$3866' with positive edge clock.
Creating register for signal `\tetron_T_shaper.\blk4_voffset' using process `\tetron_T_shaper.$proc$src/tetron_T.v:19$716'.
  created $dff cell `$procdff$3867' with positive edge clock.
Creating register for signal `\tetron_T_shaper.\blk4_hoffset' using process `\tetron_T_shaper.$proc$src/tetron_T.v:19$716'.
  created $dff cell `$procdff$3868' with positive edge clock.
Creating register for signal `\scoredisplay.\valused' using process `\scoredisplay.$proc$src/scoredisplay.v:22$569'.
  created $dff cell `$procdff$3869' with positive edge clock.
Creating register for signal `\scoredisplay.\dumpvar' using process `\scoredisplay.$proc$src/scoredisplay.v:22$569'.
  created $dff cell `$procdff$3870' with positive edge clock.
Creating register for signal `\scoredisplay.\values[0]' using process `\scoredisplay.$proc$src/scoredisplay.v:22$569'.
  created $dff cell `$procdff$3871' with positive edge clock.
Creating register for signal `\scoredisplay.\values[1]' using process `\scoredisplay.$proc$src/scoredisplay.v:22$569'.
  created $dff cell `$procdff$3872' with positive edge clock.
Creating register for signal `\scoredisplay.\values[2]' using process `\scoredisplay.$proc$src/scoredisplay.v:22$569'.
  created $dff cell `$procdff$3873' with positive edge clock.
Creating register for signal `\scoredisplay.\values[3]' using process `\scoredisplay.$proc$src/scoredisplay.v:22$569'.
  created $dff cell `$procdff$3874' with positive edge clock.
Creating register for signal `\scoredisplay.\values[4]' using process `\scoredisplay.$proc$src/scoredisplay.v:22$569'.
  created $dff cell `$procdff$3875' with positive edge clock.
Creating register for signal `\scoredisplay.\values[5]' using process `\scoredisplay.$proc$src/scoredisplay.v:22$569'.
  created $dff cell `$procdff$3876' with positive edge clock.
Creating register for signal `\scoredisplay.\values[6]' using process `\scoredisplay.$proc$src/scoredisplay.v:22$569'.
  created $dff cell `$procdff$3877' with positive edge clock.
Creating register for signal `\scoredisplay.\values[7]' using process `\scoredisplay.$proc$src/scoredisplay.v:22$569'.
  created $dff cell `$procdff$3878' with positive edge clock.
Creating register for signal `\tetron_Sb_shaper.\blk1_voffset' using process `\tetron_Sb_shaper.$proc$src/tetron_Sb.v:19$401'.
  created $dff cell `$procdff$3879' with positive edge clock.
Creating register for signal `\tetron_Sb_shaper.\blk1_hoffset' using process `\tetron_Sb_shaper.$proc$src/tetron_Sb.v:19$401'.
  created $dff cell `$procdff$3880' with positive edge clock.
Creating register for signal `\tetron_Sb_shaper.\blk2_voffset' using process `\tetron_Sb_shaper.$proc$src/tetron_Sb.v:19$401'.
  created $dff cell `$procdff$3881' with positive edge clock.
Creating register for signal `\tetron_Sb_shaper.\blk2_hoffset' using process `\tetron_Sb_shaper.$proc$src/tetron_Sb.v:19$401'.
  created $dff cell `$procdff$3882' with positive edge clock.
Creating register for signal `\tetron_Sb_shaper.\blk3_voffset' using process `\tetron_Sb_shaper.$proc$src/tetron_Sb.v:19$401'.
  created $dff cell `$procdff$3883' with positive edge clock.
Creating register for signal `\tetron_Sb_shaper.\blk3_hoffset' using process `\tetron_Sb_shaper.$proc$src/tetron_Sb.v:19$401'.
  created $dff cell `$procdff$3884' with positive edge clock.
Creating register for signal `\tetron_Sb_shaper.\blk4_voffset' using process `\tetron_Sb_shaper.$proc$src/tetron_Sb.v:19$401'.
  created $dff cell `$procdff$3885' with positive edge clock.
Creating register for signal `\tetron_Sb_shaper.\blk4_hoffset' using process `\tetron_Sb_shaper.$proc$src/tetron_Sb.v:19$401'.
  created $dff cell `$procdff$3886' with positive edge clock.
Creating register for signal `\tetron_Sa_shaper.\blk1_voffset' using process `\tetron_Sa_shaper.$proc$src/tetron_Sa.v:19$395'.
  created $dff cell `$procdff$3887' with positive edge clock.
Creating register for signal `\tetron_Sa_shaper.\blk1_hoffset' using process `\tetron_Sa_shaper.$proc$src/tetron_Sa.v:19$395'.
  created $dff cell `$procdff$3888' with positive edge clock.
Creating register for signal `\tetron_Sa_shaper.\blk2_voffset' using process `\tetron_Sa_shaper.$proc$src/tetron_Sa.v:19$395'.
  created $dff cell `$procdff$3889' with positive edge clock.
Creating register for signal `\tetron_Sa_shaper.\blk2_hoffset' using process `\tetron_Sa_shaper.$proc$src/tetron_Sa.v:19$395'.
  created $dff cell `$procdff$3890' with positive edge clock.
Creating register for signal `\tetron_Sa_shaper.\blk3_voffset' using process `\tetron_Sa_shaper.$proc$src/tetron_Sa.v:19$395'.
  created $dff cell `$procdff$3891' with positive edge clock.
Creating register for signal `\tetron_Sa_shaper.\blk3_hoffset' using process `\tetron_Sa_shaper.$proc$src/tetron_Sa.v:19$395'.
  created $dff cell `$procdff$3892' with positive edge clock.
Creating register for signal `\tetron_Sa_shaper.\blk4_voffset' using process `\tetron_Sa_shaper.$proc$src/tetron_Sa.v:19$395'.
  created $dff cell `$procdff$3893' with positive edge clock.
Creating register for signal `\tetron_Sa_shaper.\blk4_hoffset' using process `\tetron_Sa_shaper.$proc$src/tetron_Sa.v:19$395'.
  created $dff cell `$procdff$3894' with positive edge clock.

26.3.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

26.3.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `cellstorage.$proc$src/volatile_cell_storage.v:0$2029'.
Found and cleaned up 16 empty switches in `\cellstorage.$proc$src/volatile_cell_storage.v:152$1953'.
Removing empty process `cellstorage.$proc$src/volatile_cell_storage.v:152$1953'.
Removing empty process `SB_DFFNES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1697'.
Found and cleaned up 1 empty switch in `\SB_DFFNES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1386$1694'.
Removing empty process `SB_DFFNES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1386$1694'.
Removing empty process `SB_DFFNESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1693'.
Found and cleaned up 2 empty switches in `\SB_DFFNESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1328$1687'.
Removing empty process `SB_DFFNESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1328$1687'.
Removing empty process `SB_DFFNER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1686'.
Found and cleaned up 1 empty switch in `\SB_DFFNER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1251$1683'.
Removing empty process `SB_DFFNER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1251$1683'.
Removing empty process `SB_DFFNESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1682'.
Found and cleaned up 2 empty switches in `\SB_DFFNESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1193$1676'.
Removing empty process `SB_DFFNESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1193$1676'.
Removing empty process `SB_DFFNS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1675'.
Removing empty process `SB_DFFNS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1122$1673'.
Removing empty process `SB_DFFNSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1672'.
Found and cleaned up 1 empty switch in `\SB_DFFNSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1072$1670'.
Removing empty process `SB_DFFNSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1072$1670'.
Removing empty process `SB_DFFNR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1669'.
Removing empty process `SB_DFFNR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1001$1667'.
Removing empty process `SB_DFFNSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1666'.
Found and cleaned up 1 empty switch in `\SB_DFFNSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:951$1664'.
Removing empty process `SB_DFFNSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:951$1664'.
Removing empty process `SB_DFFNE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1663'.
Found and cleaned up 1 empty switch in `\SB_DFFNE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:906$1662'.
Removing empty process `SB_DFFNE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:906$1662'.
Removing empty process `SB_DFFN.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1661'.
Removing empty process `SB_DFFN.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:868$1660'.
Removing empty process `SB_DFFES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1659'.
Found and cleaned up 1 empty switch in `\SB_DFFES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:789$1656'.
Removing empty process `SB_DFFES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:789$1656'.
Removing empty process `SB_DFFESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1655'.
Found and cleaned up 2 empty switches in `\SB_DFFESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:731$1649'.
Removing empty process `SB_DFFESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:731$1649'.
Removing empty process `SB_DFFER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1648'.
Found and cleaned up 1 empty switch in `\SB_DFFER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:654$1645'.
Removing empty process `SB_DFFER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:654$1645'.
Removing empty process `SB_DFFESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1644'.
Found and cleaned up 2 empty switches in `\SB_DFFESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:596$1638'.
Removing empty process `SB_DFFESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:596$1638'.
Removing empty process `SB_DFFS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1637'.
Removing empty process `SB_DFFS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:525$1635'.
Removing empty process `SB_DFFSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1634'.
Found and cleaned up 1 empty switch in `\SB_DFFSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:475$1632'.
Removing empty process `SB_DFFSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:475$1632'.
Removing empty process `SB_DFFR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1631'.
Removing empty process `SB_DFFR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:404$1629'.
Removing empty process `SB_DFFSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1628'.
Found and cleaned up 1 empty switch in `\SB_DFFSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:354$1626'.
Removing empty process `SB_DFFSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:354$1626'.
Removing empty process `SB_DFFE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1625'.
Found and cleaned up 1 empty switch in `\SB_DFFE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:309$1624'.
Removing empty process `SB_DFFE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:309$1624'.
Removing empty process `SB_DFF.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1623'.
Removing empty process `SB_DFF.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:271$1622'.
Found and cleaned up 25 empty switches in `\blkmemory.$proc$src/blockmemory.v:105$1412'.
Removing empty process `blkmemory.$proc$src/blockmemory.v:105$1412'.
Found and cleaned up 1 empty switch in `\color_lut.$proc$src/color_lut.v:8$1391'.
Removing empty process `color_lut.$proc$src/color_lut.v:8$1391'.
Removing empty process `blknum_horizontal.$proc$src/mod24.v:0$1241'.
Found and cleaned up 3 empty switches in `\gmanager.$proc$src/gmanager.v:69$1159'.
Removing empty process `gmanager.$proc$src/gmanager.v:69$1159'.
Removing empty process `top.$proc$src/top.v:29$1145'.
Removing empty process `top.$proc$src/top.v:33$1140'.
Found and cleaned up 5 empty switches in `\tetron_I_shaper.$proc$src/tetron_I.v:19$1134'.
Removing empty process `tetron_I_shaper.$proc$src/tetron_I.v:19$1134'.
Found and cleaned up 2 empty switches in `\timer.$proc$src/timer.v:10$943'.
Removing empty process `timer.$proc$src/timer.v:10$943'.
Found and cleaned up 3 empty switches in `\VGAcore.$proc$src/vga_core.v:64$927'.
Removing empty process `VGAcore.$proc$src/vga_core.v:64$927'.
Found and cleaned up 3 empty switches in `\memcell.$proc$src/meta_memcell.v:22$921'.
Removing empty process `memcell.$proc$src/meta_memcell.v:22$921'.
Removing empty process `shifter.$proc$src/shifter.v:25$820'.
Found and cleaned up 5 empty switches in `\tetron_La_shaper.$proc$src/tetron_La.v:19$756'.
Removing empty process `tetron_La_shaper.$proc$src/tetron_La.v:19$756'.
Found and cleaned up 5 empty switches in `\tetron_Lb_shaper.$proc$src/tetron_Lb.v:19$750'.
Removing empty process `tetron_Lb_shaper.$proc$src/tetron_Lb.v:19$750'.
Found and cleaned up 1 empty switch in `\tetron_O_shaper.$proc$src/tetron_O.v:19$748'.
Removing empty process `tetron_O_shaper.$proc$src/tetron_O.v:19$748'.
Found and cleaned up 3 empty switches in `\topbar_display.$proc$src/gamespeed_display.v:21$742'.
Removing empty process `topbar_display.$proc$src/gamespeed_display.v:21$742'.
Found and cleaned up 5 empty switches in `\tetron_T_shaper.$proc$src/tetron_T.v:19$716'.
Removing empty process `tetron_T_shaper.$proc$src/tetron_T.v:19$716'.
Found and cleaned up 11 empty switches in `\scoredisplay.$proc$src/scoredisplay.v:22$569'.
Removing empty process `scoredisplay.$proc$src/scoredisplay.v:22$569'.
Found and cleaned up 5 empty switches in `\tetron_Sb_shaper.$proc$src/tetron_Sb.v:19$401'.
Removing empty process `tetron_Sb_shaper.$proc$src/tetron_Sb.v:19$401'.
Found and cleaned up 5 empty switches in `\tetron_Sa_shaper.$proc$src/tetron_Sa.v:19$395'.
Removing empty process `tetron_Sa_shaper.$proc$src/tetron_Sa.v:19$395'.
Cleaned up 116 empty switches.

26.3.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module cellstorage.
<suppressed ~31 debug messages>
Optimizing module blkmemory.
<suppressed ~25 debug messages>
Optimizing module color_lut.
<suppressed ~1 debug messages>
Optimizing module blkoffset_horizontal.
Optimizing module offsetmap.
<suppressed ~1 debug messages>
Optimizing module blknum_horizontal.
<suppressed ~1 debug messages>
Optimizing module shader.
<suppressed ~1 debug messages>
Optimizing module gmanager.
<suppressed ~5 debug messages>
Optimizing module top.
Optimizing module tetron_I_shaper.
<suppressed ~9 debug messages>
Optimizing module vga_pll.
Optimizing module timer.
<suppressed ~2 debug messages>
Optimizing module VGAcore.
<suppressed ~11 debug messages>
Optimizing module memcell.
<suppressed ~2 debug messages>
Optimizing module memcell_row.
<suppressed ~14 debug messages>
Optimizing module shifter.
<suppressed ~23 debug messages>
Optimizing module tetron_La_shaper.
<suppressed ~9 debug messages>
Optimizing module tetron_Lb_shaper.
<suppressed ~9 debug messages>
Optimizing module tetron_O_shaper.
<suppressed ~4 debug messages>
Optimizing module topbar_display.
<suppressed ~6 debug messages>
Optimizing module tetron_T_shaper.
<suppressed ~9 debug messages>
Optimizing module screen_manager.
Optimizing module scoredisplay.
<suppressed ~25 debug messages>
Optimizing module score_digit.
<suppressed ~6 debug messages>
Optimizing module tetron_Sb_shaper.
<suppressed ~9 debug messages>
Optimizing module tetron_Sa_shaper.
<suppressed ~9 debug messages>
Optimizing module memory.
<suppressed ~48 debug messages>

26.4. Executing FLATTEN pass (flatten design).
Deleting now unused module cellstorage.
Deleting now unused module blkmemory.
Deleting now unused module color_lut.
Deleting now unused module blkoffset_horizontal.
Deleting now unused module offsetmap.
Deleting now unused module blknum_horizontal.
Deleting now unused module shader.
Deleting now unused module gmanager.
Deleting now unused module tetron_I_shaper.
Deleting now unused module vga_pll.
Deleting now unused module timer.
Deleting now unused module VGAcore.
Deleting now unused module memcell.
Deleting now unused module memcell_row.
Deleting now unused module shifter.
Deleting now unused module tetron_La_shaper.
Deleting now unused module tetron_Lb_shaper.
Deleting now unused module tetron_O_shaper.
Deleting now unused module topbar_display.
Deleting now unused module tetron_T_shaper.
Deleting now unused module screen_manager.
Deleting now unused module scoredisplay.
Deleting now unused module score_digit.
Deleting now unused module tetron_Sb_shaper.
Deleting now unused module tetron_Sa_shaper.
Deleting now unused module memory.
<suppressed ~64 debug messages>

26.5. Executing TRIBUF pass.

26.6. Executing DEMINOUT pass (demote inout ports to input or output).

26.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~73 debug messages>

26.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 281 unused cells and 3528 unused wires.
<suppressed ~323 debug messages>

26.9. Executing CHECK pass (checking for obvious problems).
Checking module top...
Warning: Wire top.\led2 is used but has no driver.
Warning: Wire top.\memory.mem.rowfull_stat [21] is used but has no driver.
Warning: Wire top.\memory.mem.rowfull_stat [22] is used but has no driver.
Found and reported 3 problems.

26.10. Executing OPT pass (performing simple optimizations).

26.10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~1 debug messages>

26.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~3618 debug messages>
Removed a total of 1206 cells.

26.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $flatten\memory.$procmux$2423: \memory.resetperiod -> 1'0
      Replacing known input bits on port A of cell $flatten\memory.$procmux$2421: \memory.resetperiod -> 1'1
      Replacing known input bits on port B of cell $flatten\vcell.$procmux$2089: \vcell.dropit -> 1'1
      Replacing known input bits on port A of cell $flatten\vcell.$procmux$2086: \vcell.dropit -> 1'0
  Analyzing evaluation results.
    dead port 2/2 on $mux $flatten\game_manager.$procmux$2764.
    dead port 2/2 on $mux $flatten\game_manager.$procmux$2755.
    dead port 2/2 on $mux $flatten\game_manager.$procmux$2758.
Removed 3 multiplexer ports.
<suppressed ~883 debug messages>

26.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

26.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~18 debug messages>
Removed a total of 6 cells.

26.10.6. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $flatten\vcell.\oshaper.$procdff$3851 ($dff) from module top.
Setting constant 0-bit at position 1 on $flatten\vcell.\oshaper.$procdff$3851 ($dff) from module top.
Setting constant 0-bit at position 2 on $flatten\vcell.\oshaper.$procdff$3851 ($dff) from module top.
Setting constant 0-bit at position 3 on $flatten\vcell.\oshaper.$procdff$3851 ($dff) from module top.
Setting constant 0-bit at position 4 on $flatten\vcell.\oshaper.$procdff$3851 ($dff) from module top.

26.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 1212 unused wires.
<suppressed ~3 debug messages>

26.10.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~4 debug messages>

26.10.9. Rerunning OPT passes. (Maybe there is more to do..)

26.10.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~880 debug messages>

26.10.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

26.10.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

26.10.13. Executing OPT_DFF pass (perform DFF optimizations).

26.10.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 4 unused wires.
<suppressed ~5 debug messages>

26.10.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

26.10.16. Rerunning OPT passes. (Maybe there is more to do..)

26.10.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~880 debug messages>

26.10.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

26.10.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

26.10.20. Executing OPT_DFF pass (perform DFF optimizations).

26.10.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

26.10.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

26.10.23. Finished OPT passes. (There is nothing left to do.)

26.11. Executing FSM pass (extract and optimize FSM).

26.11.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking top.game_manager.ipixstream as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.memory.scorewire as FSM state register:
    Users of register don't seem to benefit from recoding.
Found FSM state register top.memory.stealstatus.
Found FSM state register top.memory.streak_iterator.
Not marking top.vcell.ishaper.blk1_hoffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.ishaper.blk1_voffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.ishaper.blk2_hoffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.ishaper.blk2_voffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.ishaper.blk3_hoffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.ishaper.blk3_voffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.ishaper.blk4_hoffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.ishaper.blk4_voffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.lashaper.blk1_hoffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.lashaper.blk1_voffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.lashaper.blk2_hoffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.lashaper.blk2_voffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.lashaper.blk3_hoffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.lashaper.blk3_voffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.lashaper.blk4_hoffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.lashaper.blk4_voffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.lbshaper.blk1_hoffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.lbshaper.blk1_voffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.lbshaper.blk2_hoffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.lbshaper.blk2_voffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.lbshaper.blk3_hoffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.lbshaper.blk3_voffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.lbshaper.blk4_hoffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.lbshaper.blk4_voffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.oshaper.blk2_voffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.sashaper.blk1_hoffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.sashaper.blk1_voffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.sashaper.blk2_hoffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.sashaper.blk2_voffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.sashaper.blk3_hoffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.sashaper.blk3_voffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.sashaper.blk4_hoffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.sashaper.blk4_voffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.sbshaper.blk1_hoffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.sbshaper.blk1_voffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.sbshaper.blk2_hoffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.sbshaper.blk2_voffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.sbshaper.blk3_hoffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.sbshaper.blk3_voffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.sbshaper.blk4_hoffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.sbshaper.blk4_voffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Found FSM state register top.vcell.tetron_type.
Not marking top.vcell.tshaper.blk1_hoffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.tshaper.blk1_voffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.tshaper.blk2_hoffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.tshaper.blk2_voffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.tshaper.blk3_hoffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.tshaper.blk3_voffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.tshaper.blk4_hoffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.tshaper.blk4_voffset as FSM state register:
    Users of register don't seem to benefit from recoding.

26.11.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\memory.stealstatus' from module `\top'.
  found $dff cell for state register: $flatten\memory.$procdff$3801
  root of input selection tree: $flatten\memory.$0\stealstatus[3:0]
  found reset state: 4'0000 (guessed from mux tree)
  found ctrl input: \reset
  found state code: 4'0000
  found ctrl input: \memory.resetperiod
  found ctrl input: $flatten\memory.$gt$src/blockmemory.v:188$1440_Y
  found ctrl input: $flatten\memory.$and$src/blockmemory.v:146$1428_Y
  found ctrl input: $flatten\memory.$and$src/blockmemory.v:170$1434_Y
  found ctrl input: $flatten\memory.$eq$src/blockmemory.v:170$1433_Y
  found ctrl input: $flatten\memory.$eq$src/blockmemory.v:189$1441_Y
  found ctrl input: $flatten\memory.$procmux$2499_CMP
  found ctrl input: \vcell.movement_intent
  found ctrl input: $flatten\memory.$eq$src/blockmemory.v:233$1452_Y
  found ctrl input: $flatten\memory.$eq$src/blockmemory.v:228$1451_Y
  found ctrl input: $flatten\memory.$eq$src/blockmemory.v:220$1449_Y
  found ctrl input: $flatten\memory.$eq$src/blockmemory.v:212$1447_Y
  found ctrl input: $flatten\memory.$eq$src/blockmemory.v:204$1445_Y
  found ctrl input: $flatten\memory.$eq$src/blockmemory.v:196$1443_Y
  found state code: 4'0001
  found state code: 4'0010
  found state code: 4'0011
  found state code: 4'0100
  found state code: 4'0101
  found state code: 4'0110
  found ctrl output: $flatten\memory.$eq$src/blockmemory.v:233$1452_Y
  found ctrl output: $flatten\memory.$eq$src/blockmemory.v:228$1451_Y
  found ctrl output: $flatten\memory.$eq$src/blockmemory.v:220$1449_Y
  found ctrl output: $flatten\memory.$eq$src/blockmemory.v:212$1447_Y
  found ctrl output: $flatten\memory.$eq$src/blockmemory.v:204$1445_Y
  found ctrl output: $flatten\memory.$eq$src/blockmemory.v:196$1443_Y
  ctrl inputs: { \vcell.movement_intent \memory.resetperiod $flatten\memory.$and$src/blockmemory.v:146$1428_Y $flatten\memory.$eq$src/blockmemory.v:170$1433_Y $flatten\memory.$and$src/blockmemory.v:170$1434_Y $flatten\memory.$gt$src/blockmemory.v:188$1440_Y $flatten\memory.$eq$src/blockmemory.v:189$1441_Y $flatten\memory.$procmux$2499_CMP \reset }
  ctrl outputs: { $flatten\memory.$0\stealstatus[3:0] $flatten\memory.$eq$src/blockmemory.v:196$1443_Y $flatten\memory.$eq$src/blockmemory.v:204$1445_Y $flatten\memory.$eq$src/blockmemory.v:212$1447_Y $flatten\memory.$eq$src/blockmemory.v:220$1449_Y $flatten\memory.$eq$src/blockmemory.v:228$1451_Y $flatten\memory.$eq$src/blockmemory.v:233$1452_Y }
  transition:     4'0000 9'--------0 ->     4'0000 10'0000100000
  transition:     4'0000 9'-00000--1 ->     4'0000 10'0000100000
  transition:     4'0000 9'-00100--1 ->     4'0000 10'0000100000
  transition:     4'0000 9'-00-10--1 ->     4'0000 10'0000100000
  transition:     4'0000 9'-01--0--1 ->     4'0000 10'0000100000
  transition:     4'0000 9'-000010-1 ->     4'0000 10'0000100000
  transition:     4'0000 9'-001010-1 ->     4'0000 10'0000100000
  transition:     4'0000 9'-00-110-1 ->     4'0000 10'0000100000
  transition:     4'0000 9'-01--10-1 ->     4'0000 10'0000100000
  transition:     4'0000 9'-00001101 ->     4'0000 10'0000100000
  transition:     4'0000 9'-00101101 ->     4'0000 10'0000100000
  transition:     4'0000 9'-00-11101 ->     4'0000 10'0000100000
  transition:     4'0000 9'-01--1101 ->     4'0000 10'0000100000
  transition:     4'0000 9'00---1111 ->     4'0001 10'0001100000
  transition:     4'0000 9'100001111 ->     4'0000 10'0000100000
  transition:     4'0000 9'100101111 ->     4'0000 10'0000100000
  transition:     4'0000 9'100-11111 ->     4'0000 10'0000100000
  transition:     4'0000 9'101--1111 ->     4'0000 10'0000100000
  transition:     4'0000 9'-1------1 ->     4'0000 10'0000100000
  transition:     4'0100 9'--------0 ->     4'0000 10'0000000010
  transition:     4'0100 9'-00000--1 ->     4'0100 10'0100000010
  transition:     4'0100 9'-00100--1 ->     4'0000 10'0000000010
  transition:     4'0100 9'-00-10--1 ->     4'0100 10'0100000010
  transition:     4'0100 9'-01--0--1 ->     4'0100 10'0100000010
  transition:     4'0100 9'-000010-1 ->     4'0100 10'0100000010
  transition:     4'0100 9'-001010-1 ->     4'0000 10'0000000010
  transition:     4'0100 9'-00-110-1 ->     4'0100 10'0100000010
  transition:     4'0100 9'-01--10-1 ->     4'0100 10'0100000010
  transition:     4'0100 9'-00001101 ->     4'0100 10'0100000010
  transition:     4'0100 9'-00101101 ->     4'0000 10'0000000010
  transition:     4'0100 9'-00-11101 ->     4'0100 10'0100000010
  transition:     4'0100 9'-01--1101 ->     4'0100 10'0100000010
  transition:     4'0100 9'00---1111 ->     4'0101 10'0101000010
  transition:     4'0100 9'100001111 ->     4'0100 10'0100000010
  transition:     4'0100 9'100101111 ->     4'0000 10'0000000010
  transition:     4'0100 9'100-11111 ->     4'0100 10'0100000010
  transition:     4'0100 9'101--1111 ->     4'0100 10'0100000010
  transition:     4'0100 9'-1------1 ->     4'0100 10'0100000010
  transition:     4'0010 9'--------0 ->     4'0000 10'0000001000
  transition:     4'0010 9'-00000--1 ->     4'0010 10'0010001000
  transition:     4'0010 9'-00100--1 ->     4'0000 10'0000001000
  transition:     4'0010 9'-00-10--1 ->     4'0010 10'0010001000
  transition:     4'0010 9'-01--0--1 ->     4'0010 10'0010001000
  transition:     4'0010 9'-000010-1 ->     4'0010 10'0010001000
  transition:     4'0010 9'-001010-1 ->     4'0000 10'0000001000
  transition:     4'0010 9'-00-110-1 ->     4'0010 10'0010001000
  transition:     4'0010 9'-01--10-1 ->     4'0010 10'0010001000
  transition:     4'0010 9'-00001101 ->     4'0010 10'0010001000
  transition:     4'0010 9'-00101101 ->     4'0000 10'0000001000
  transition:     4'0010 9'-00-11101 ->     4'0010 10'0010001000
  transition:     4'0010 9'-01--1101 ->     4'0010 10'0010001000
  transition:     4'0010 9'00---1111 ->     4'0011 10'0011001000
  transition:     4'0010 9'100001111 ->     4'0010 10'0010001000
  transition:     4'0010 9'100101111 ->     4'0000 10'0000001000
  transition:     4'0010 9'100-11111 ->     4'0010 10'0010001000
  transition:     4'0010 9'101--1111 ->     4'0010 10'0010001000
  transition:     4'0010 9'-1------1 ->     4'0010 10'0010001000
  transition:     4'0110 9'--------0 ->     4'0000 10'0000000000
  transition:     4'0110 9'-00000--1 ->     4'0110 10'0110000000
  transition:     4'0110 9'-00100--1 ->     4'0000 10'0000000000
  transition:     4'0110 9'-00-10--1 ->     4'0110 10'0110000000
  transition:     4'0110 9'-01--0--1 ->     4'0110 10'0110000000
  transition:     4'0110 9'-000010-1 ->     4'0110 10'0110000000
  transition:     4'0110 9'-001010-1 ->     4'0000 10'0000000000
  transition:     4'0110 9'-00-110-1 ->     4'0110 10'0110000000
  transition:     4'0110 9'-01--10-1 ->     4'0110 10'0110000000
  transition:     4'0110 9'-00001101 ->     4'0110 10'0110000000
  transition:     4'0110 9'-00101101 ->     4'0000 10'0000000000
  transition:     4'0110 9'-00-11101 ->     4'0110 10'0110000000
  transition:     4'0110 9'-01--1101 ->     4'0110 10'0110000000
  transition:     4'0110 9'000001111 ->     4'0110 10'0110000000
  transition:     4'0110 9'000101111 ->     4'0000 10'0000000000
  transition:     4'0110 9'000-11111 ->     4'0110 10'0110000000
  transition:     4'0110 9'001--1111 ->     4'0110 10'0110000000
  transition:     4'0110 9'100001111 ->     4'0110 10'0110000000
  transition:     4'0110 9'100101111 ->     4'0000 10'0000000000
  transition:     4'0110 9'100-11111 ->     4'0110 10'0110000000
  transition:     4'0110 9'101--1111 ->     4'0110 10'0110000000
  transition:     4'0110 9'-1------1 ->     4'0110 10'0110000000
  transition:     4'0001 9'--------0 ->     4'0000 10'0000010000
  transition:     4'0001 9'-00000--1 ->     4'0001 10'0001010000
  transition:     4'0001 9'-00100--1 ->     4'0000 10'0000010000
  transition:     4'0001 9'-00-10--1 ->     4'0001 10'0001010000
  transition:     4'0001 9'-01--0--1 ->     4'0001 10'0001010000
  transition:     4'0001 9'-000010-1 ->     4'0001 10'0001010000
  transition:     4'0001 9'-001010-1 ->     4'0000 10'0000010000
  transition:     4'0001 9'-00-110-1 ->     4'0001 10'0001010000
  transition:     4'0001 9'-01--10-1 ->     4'0001 10'0001010000
  transition:     4'0001 9'-00001101 ->     4'0001 10'0001010000
  transition:     4'0001 9'-00101101 ->     4'0000 10'0000010000
  transition:     4'0001 9'-00-11101 ->     4'0001 10'0001010000
  transition:     4'0001 9'-01--1101 ->     4'0001 10'0001010000
  transition:     4'0001 9'00---1111 ->     4'0010 10'0010010000
  transition:     4'0001 9'100001111 ->     4'0001 10'0001010000
  transition:     4'0001 9'100101111 ->     4'0000 10'0000010000
  transition:     4'0001 9'100-11111 ->     4'0001 10'0001010000
  transition:     4'0001 9'101--1111 ->     4'0001 10'0001010000
  transition:     4'0001 9'-1------1 ->     4'0001 10'0001010000
  transition:     4'0101 9'--------0 ->     4'0000 10'0000000001
  transition:     4'0101 9'-00000--1 ->     4'0101 10'0101000001
  transition:     4'0101 9'-00100--1 ->     4'0000 10'0000000001
  transition:     4'0101 9'-00-10--1 ->     4'0101 10'0101000001
  transition:     4'0101 9'-01--0--1 ->     4'0101 10'0101000001
  transition:     4'0101 9'-000010-1 ->     4'0101 10'0101000001
  transition:     4'0101 9'-001010-1 ->     4'0000 10'0000000001
  transition:     4'0101 9'-00-110-1 ->     4'0101 10'0101000001
  transition:     4'0101 9'-01--10-1 ->     4'0101 10'0101000001
  transition:     4'0101 9'-00001101 ->     4'0101 10'0101000001
  transition:     4'0101 9'-00101101 ->     4'0000 10'0000000001
  transition:     4'0101 9'-00-11101 ->     4'0101 10'0101000001
  transition:     4'0101 9'-01--1101 ->     4'0101 10'0101000001
  transition:     4'0101 9'00---1111 ->     4'0110 10'0110000001
  transition:     4'0101 9'100001111 ->     4'0101 10'0101000001
  transition:     4'0101 9'100101111 ->     4'0000 10'0000000001
  transition:     4'0101 9'100-11111 ->     4'0101 10'0101000001
  transition:     4'0101 9'101--1111 ->     4'0101 10'0101000001
  transition:     4'0101 9'-1------1 ->     4'0101 10'0101000001
  transition:     4'0011 9'--------0 ->     4'0000 10'0000000100
  transition:     4'0011 9'-00000--1 ->     4'0011 10'0011000100
  transition:     4'0011 9'-00100--1 ->     4'0000 10'0000000100
  transition:     4'0011 9'-00-10--1 ->     4'0011 10'0011000100
  transition:     4'0011 9'-01--0--1 ->     4'0011 10'0011000100
  transition:     4'0011 9'-000010-1 ->     4'0011 10'0011000100
  transition:     4'0011 9'-001010-1 ->     4'0000 10'0000000100
  transition:     4'0011 9'-00-110-1 ->     4'0011 10'0011000100
  transition:     4'0011 9'-01--10-1 ->     4'0011 10'0011000100
  transition:     4'0011 9'-00001101 ->     4'0011 10'0011000100
  transition:     4'0011 9'-00101101 ->     4'0000 10'0000000100
  transition:     4'0011 9'-00-11101 ->     4'0011 10'0011000100
  transition:     4'0011 9'-01--1101 ->     4'0011 10'0011000100
  transition:     4'0011 9'00---1111 ->     4'0100 10'0100000100
  transition:     4'0011 9'100001111 ->     4'0011 10'0011000100
  transition:     4'0011 9'100101111 ->     4'0000 10'0000000100
  transition:     4'0011 9'100-11111 ->     4'0011 10'0011000100
  transition:     4'0011 9'101--1111 ->     4'0011 10'0011000100
  transition:     4'0011 9'-1------1 ->     4'0011 10'0011000100
Extracting FSM `\memory.streak_iterator' from module `\top'.
  found $dff cell for state register: $flatten\memory.$procdff$3803
  root of input selection tree: $flatten\memory.$0\streak_iterator[2:0]
  found reset state: 3'000 (guessed from mux tree)
  found ctrl input: \reset
  found state code: 3'000
  found ctrl input: \memory.resetperiod
  found ctrl input: $flatten\memory.$and$src/blockmemory.v:146$1428_Y
  found ctrl input: $flatten\memory.$and$src/blockmemory.v:170$1434_Y
  found ctrl input: $flatten\memory.$eq$src/blockmemory.v:170$1433_Y
  found ctrl input: $flatten\memory.$gt$src/blockmemory.v:182$1438_Y
  found ctrl input: $flatten\memory.$eq$src/blockmemory.v:148$1429_Y
  found ctrl input: $flatten\memory.$eq$src/blockmemory.v:164$1432_Y
  found ctrl input: $flatten\memory.$eq$src/blockmemory.v:159$1431_Y
  found ctrl input: $flatten\memory.$eq$src/blockmemory.v:154$1430_Y
  found state code: 3'001
  found state code: 3'010
  found state code: 3'011
  found ctrl output: $flatten\memory.$eq$src/blockmemory.v:164$1432_Y
  found ctrl output: $flatten\memory.$eq$src/blockmemory.v:159$1431_Y
  found ctrl output: $flatten\memory.$eq$src/blockmemory.v:154$1430_Y
  ctrl inputs: { \memory.resetperiod $flatten\memory.$and$src/blockmemory.v:146$1428_Y $flatten\memory.$eq$src/blockmemory.v:148$1429_Y $flatten\memory.$eq$src/blockmemory.v:170$1433_Y $flatten\memory.$and$src/blockmemory.v:170$1434_Y $flatten\memory.$gt$src/blockmemory.v:182$1438_Y \reset }
  ctrl outputs: { $flatten\memory.$0\streak_iterator[2:0] $flatten\memory.$eq$src/blockmemory.v:154$1430_Y $flatten\memory.$eq$src/blockmemory.v:159$1431_Y $flatten\memory.$eq$src/blockmemory.v:164$1432_Y }
  transition:      3'000 7'------0 ->      3'000 6'000100
  transition:      3'000 7'00-00-1 ->      3'000 6'000100
  transition:      3'000 7'00-1001 ->      3'000 6'000100
  transition:      3'000 7'00-1011 ->      3'000 6'000100
  transition:      3'000 7'00--1-1 ->      3'000 6'000100
  transition:      3'000 7'010---1 ->      3'001 6'001100
  transition:      3'000 7'011---1 ->      3'000 6'000100
  transition:      3'000 7'1-----1 ->      3'000 6'000100
  transition:      3'010 7'------0 ->      3'000 6'000001
  transition:      3'010 7'00-00-1 ->      3'010 6'010001
  transition:      3'010 7'00-1001 ->      3'000 6'000001
  transition:      3'010 7'00-1011 ->      3'010 6'010001
  transition:      3'010 7'00--1-1 ->      3'010 6'010001
  transition:      3'010 7'010---1 ->      3'011 6'011001
  transition:      3'010 7'011---1 ->      3'010 6'010001
  transition:      3'010 7'1-----1 ->      3'010 6'010001
  transition:      3'001 7'------0 ->      3'000 6'000010
  transition:      3'001 7'00-00-1 ->      3'001 6'001010
  transition:      3'001 7'00-1001 ->      3'000 6'000010
  transition:      3'001 7'00-1011 ->      3'001 6'001010
  transition:      3'001 7'00--1-1 ->      3'001 6'001010
  transition:      3'001 7'010---1 ->      3'010 6'010010
  transition:      3'001 7'011---1 ->      3'001 6'001010
  transition:      3'001 7'1-----1 ->      3'001 6'001010
  transition:      3'011 7'------0 ->      3'000 6'000000
  transition:      3'011 7'00-00-1 ->      3'011 6'011000
  transition:      3'011 7'00-1001 ->      3'000 6'000000
  transition:      3'011 7'00-1011 ->      3'011 6'011000
  transition:      3'011 7'00--1-1 ->      3'011 6'011000
  transition:      3'011 7'010---1 ->      3'011 6'011000
  transition:      3'011 7'011---1 ->      3'011 6'011000
  transition:      3'011 7'1-----1 ->      3'011 6'011000
Extracting FSM `\vcell.tetron_type' from module `\top'.
  found $dff cell for state register: $flatten\vcell.$procdff$3759
  root of input selection tree: $flatten\vcell.$0\tetron_type[3:0]
  found reset state: 4'0110 (guessed from mux tree)
  found ctrl input: \reset
  found state code: 4'0110
  found ctrl input: $flatten\vcell.$and$src/volatile_cell_storage.v:184$1963_Y
  found ctrl input: $flatten\vcell.$and$src/volatile_cell_storage.v:258$2019_Y
  fsm extraction failed: at least two states are required.

26.11.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\memory.streak_iterator$3903' from module `\top'.
  Merging pattern 7'00-1001 and 7'00-1011 from group (0 0 6'000100).
  Merging pattern 7'00-1011 and 7'00-1001 from group (0 0 6'000100).
  Merging pattern 7'00-00-1 and 7'00-10-1 from group (0 0 6'000100).
  Merging pattern 7'00-10-1 and 7'00-00-1 from group (0 0 6'000100).
  Merging pattern 7'00--0-1 and 7'00--1-1 from group (0 0 6'000100).
  Merging pattern 7'00--1-1 and 7'00--0-1 from group (0 0 6'000100).
  Merging pattern 7'010---1 and 7'011---1 from group (3 3 6'011000).
  Merging pattern 7'011---1 and 7'010---1 from group (3 3 6'011000).
Optimizing FSM `$fsm$\memory.stealstatus$3895' from module `\top'.
  Merging pattern 9'-00001101 and 9'-00101101 from group (0 0 10'0000100000).
  Merging pattern 9'-00101101 and 9'-00001101 from group (0 0 10'0000100000).
  Merging pattern 9'100001111 and 9'100101111 from group (0 0 10'0000100000).
  Merging pattern 9'100101111 and 9'100001111 from group (0 0 10'0000100000).
  Merging pattern 9'-000010-1 and 9'-001010-1 from group (0 0 10'0000100000).
  Merging pattern 9'-001010-1 and 9'-000010-1 from group (0 0 10'0000100000).
  Merging pattern 9'-00000--1 and 9'-00100--1 from group (0 0 10'0000100000).
  Merging pattern 9'-00100--1 and 9'-00000--1 from group (0 0 10'0000100000).
  Merging pattern 9'-00-01101 and 9'-00-11101 from group (0 0 10'0000100000).
  Merging pattern 9'-00-11101 and 9'-00-01101 from group (0 0 10'0000100000).
  Merging pattern 9'100-01111 and 9'100-11111 from group (0 0 10'0000100000).
  Merging pattern 9'100-11111 and 9'100-01111 from group (0 0 10'0000100000).
  Merging pattern 9'-00-010-1 and 9'-00-110-1 from group (0 0 10'0000100000).
  Merging pattern 9'-00-110-1 and 9'-00-010-1 from group (0 0 10'0000100000).
  Merging pattern 9'-00-00--1 and 9'-00-10--1 from group (0 0 10'0000100000).
  Merging pattern 9'-00-10--1 and 9'-00-00--1 from group (0 0 10'0000100000).
  Merging pattern 9'-00--1101 and 9'-01--1101 from group (0 0 10'0000100000).
  Merging pattern 9'-01--1101 and 9'-00--1101 from group (0 0 10'0000100000).
  Merging pattern 9'100--1111 and 9'101--1111 from group (0 0 10'0000100000).
  Merging pattern 9'101--1111 and 9'100--1111 from group (0 0 10'0000100000).
  Merging pattern 9'-00--10-1 and 9'-01--10-1 from group (0 0 10'0000100000).
  Merging pattern 9'-01--10-1 and 9'-00--10-1 from group (0 0 10'0000100000).
  Merging pattern 9'-00--0--1 and 9'-01--0--1 from group (0 0 10'0000100000).
  Merging pattern 9'-01--0--1 and 9'-00--0--1 from group (0 0 10'0000100000).
  Merging pattern 9'000101111 and 9'100101111 from group (3 0 10'0000000000).
  Merging pattern 9'100101111 and 9'000101111 from group (3 0 10'0000000000).
  Merging pattern 9'-00101101 and 9'-00101111 from group (3 0 10'0000000000).
  Merging pattern 9'-00101111 and 9'-00101101 from group (3 0 10'0000000000).
  Merging pattern 9'-001010-1 and 9'-001011-1 from group (3 0 10'0000000000).
  Merging pattern 9'-001011-1 and 9'-001010-1 from group (3 0 10'0000000000).
  Merging pattern 9'-00100--1 and 9'-00101--1 from group (3 0 10'0000000000).
  Merging pattern 9'-00101--1 and 9'-00100--1 from group (3 0 10'0000000000).
  Merging pattern 9'000001111 and 9'100001111 from group (3 3 10'0110000000).
  Merging pattern 9'100001111 and 9'000001111 from group (3 3 10'0110000000).
  Merging pattern 9'000-11111 and 9'100-11111 from group (3 3 10'0110000000).
  Merging pattern 9'100-11111 and 9'000-11111 from group (3 3 10'0110000000).
  Merging pattern 9'001--1111 and 9'101--1111 from group (3 3 10'0110000000).
  Merging pattern 9'101--1111 and 9'001--1111 from group (3 3 10'0110000000).
  Merging pattern 9'-00001101 and 9'-00001111 from group (3 3 10'0110000000).
  Merging pattern 9'-00-11101 and 9'-00-11111 from group (3 3 10'0110000000).
  Merging pattern 9'-01--1101 and 9'-01--1111 from group (3 3 10'0110000000).
  Merging pattern 9'-00001111 and 9'-00001101 from group (3 3 10'0110000000).
  Merging pattern 9'-00-11111 and 9'-00-11101 from group (3 3 10'0110000000).
  Merging pattern 9'-01--1111 and 9'-01--1101 from group (3 3 10'0110000000).
  Merging pattern 9'-000010-1 and 9'-000011-1 from group (3 3 10'0110000000).
  Merging pattern 9'-00-110-1 and 9'-00-111-1 from group (3 3 10'0110000000).
  Merging pattern 9'-01--10-1 and 9'-01--11-1 from group (3 3 10'0110000000).
  Merging pattern 9'-000011-1 and 9'-000010-1 from group (3 3 10'0110000000).
  Merging pattern 9'-00-111-1 and 9'-00-110-1 from group (3 3 10'0110000000).
  Merging pattern 9'-01--11-1 and 9'-01--10-1 from group (3 3 10'0110000000).
  Merging pattern 9'-00000--1 and 9'-00001--1 from group (3 3 10'0110000000).
  Merging pattern 9'-00-10--1 and 9'-00-11--1 from group (3 3 10'0110000000).
  Merging pattern 9'-01--0--1 and 9'-01--1--1 from group (3 3 10'0110000000).
  Merging pattern 9'-00001--1 and 9'-00000--1 from group (3 3 10'0110000000).
  Merging pattern 9'-00-11--1 and 9'-00-10--1 from group (3 3 10'0110000000).
  Merging pattern 9'-01--1--1 and 9'-01--0--1 from group (3 3 10'0110000000).

26.11.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 36 unused cells and 36 unused wires.
<suppressed ~37 debug messages>

26.11.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\memory.stealstatus$3895' from module `\top'.
  Removing unused output signal $flatten\memory.$0\stealstatus[3:0] [0].
  Removing unused output signal $flatten\memory.$0\stealstatus[3:0] [1].
  Removing unused output signal $flatten\memory.$0\stealstatus[3:0] [2].
  Removing unused output signal $flatten\memory.$0\stealstatus[3:0] [3].
Optimizing FSM `$fsm$\memory.streak_iterator$3903' from module `\top'.
  Removing unused output signal $flatten\memory.$0\streak_iterator[2:0] [0].
  Removing unused output signal $flatten\memory.$0\streak_iterator[2:0] [1].
  Removing unused output signal $flatten\memory.$0\streak_iterator[2:0] [2].

26.11.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\memory.stealstatus$3895' from module `\top' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  0000 -> ------1
  0100 -> -----1-
  0010 -> ----1--
  0110 -> ---1---
  0001 -> --1----
  0101 -> -1-----
  0011 -> 1------
Recoding FSM `$fsm$\memory.streak_iterator$3903' from module `\top' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  000 -> ---1
  010 -> --1-
  001 -> -1--
  011 -> 1---

26.11.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\memory.stealstatus$3895' from module `top':
-------------------------------------

  Information on FSM $fsm$\memory.stealstatus$3895 (\memory.stealstatus):

  Number of input signals:    9
  Number of output signals:   6
  Number of state bits:       7

  Input signals:
    0: \reset
    1: $flatten\memory.$procmux$2499_CMP
    2: $flatten\memory.$eq$src/blockmemory.v:189$1441_Y
    3: $flatten\memory.$gt$src/blockmemory.v:188$1440_Y
    4: $flatten\memory.$and$src/blockmemory.v:170$1434_Y
    5: $flatten\memory.$eq$src/blockmemory.v:170$1433_Y
    6: $flatten\memory.$and$src/blockmemory.v:146$1428_Y
    7: \memory.resetperiod
    8: \vcell.movement_intent

  Output signals:
    0: $flatten\memory.$eq$src/blockmemory.v:233$1452_Y
    1: $flatten\memory.$eq$src/blockmemory.v:228$1451_Y
    2: $flatten\memory.$eq$src/blockmemory.v:220$1449_Y
    3: $flatten\memory.$eq$src/blockmemory.v:212$1447_Y
    4: $flatten\memory.$eq$src/blockmemory.v:204$1445_Y
    5: $flatten\memory.$eq$src/blockmemory.v:196$1443_Y

  State encoding:
    0:  7'------1  <RESET STATE>
    1:  7'-----1-
    2:  7'----1--
    3:  7'---1---
    4:  7'--1----
    5:  7'-1-----
    6:  7'1------

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 9'--------0   ->     0 6'100000
      1:     0 9'-0---1101   ->     0 6'100000
      2:     0 9'10---1111   ->     0 6'100000
      3:     0 9'-0---10-1   ->     0 6'100000
      4:     0 9'-0---0--1   ->     0 6'100000
      5:     0 9'-1------1   ->     0 6'100000
      6:     0 9'00---1111   ->     4 6'100000
      7:     1 9'--------0   ->     0 6'000010
      8:     1 9'-00101101   ->     0 6'000010
      9:     1 9'100101111   ->     0 6'000010
     10:     1 9'-001010-1   ->     0 6'000010
     11:     1 9'-00100--1   ->     0 6'000010
     12:     1 9'-00001101   ->     1 6'000010
     13:     1 9'-00-11101   ->     1 6'000010
     14:     1 9'-01--1101   ->     1 6'000010
     15:     1 9'100001111   ->     1 6'000010
     16:     1 9'100-11111   ->     1 6'000010
     17:     1 9'101--1111   ->     1 6'000010
     18:     1 9'-000010-1   ->     1 6'000010
     19:     1 9'-00-110-1   ->     1 6'000010
     20:     1 9'-01--10-1   ->     1 6'000010
     21:     1 9'-00000--1   ->     1 6'000010
     22:     1 9'-00-10--1   ->     1 6'000010
     23:     1 9'-01--0--1   ->     1 6'000010
     24:     1 9'-1------1   ->     1 6'000010
     25:     1 9'00---1111   ->     5 6'000010
     26:     2 9'--------0   ->     0 6'001000
     27:     2 9'-00101101   ->     0 6'001000
     28:     2 9'100101111   ->     0 6'001000
     29:     2 9'-001010-1   ->     0 6'001000
     30:     2 9'-00100--1   ->     0 6'001000
     31:     2 9'-00001101   ->     2 6'001000
     32:     2 9'-00-11101   ->     2 6'001000
     33:     2 9'-01--1101   ->     2 6'001000
     34:     2 9'100001111   ->     2 6'001000
     35:     2 9'100-11111   ->     2 6'001000
     36:     2 9'101--1111   ->     2 6'001000
     37:     2 9'-000010-1   ->     2 6'001000
     38:     2 9'-00-110-1   ->     2 6'001000
     39:     2 9'-01--10-1   ->     2 6'001000
     40:     2 9'-00000--1   ->     2 6'001000
     41:     2 9'-00-10--1   ->     2 6'001000
     42:     2 9'-01--0--1   ->     2 6'001000
     43:     2 9'-1------1   ->     2 6'001000
     44:     2 9'00---1111   ->     6 6'001000
     45:     3 9'--------0   ->     0 6'000000
     46:     3 9'-0010---1   ->     0 6'000000
     47:     3 9'-0000---1   ->     3 6'000000
     48:     3 9'-00-1---1   ->     3 6'000000
     49:     3 9'-01-----1   ->     3 6'000000
     50:     3 9'-1------1   ->     3 6'000000
     51:     4 9'--------0   ->     0 6'010000
     52:     4 9'-00101101   ->     0 6'010000
     53:     4 9'100101111   ->     0 6'010000
     54:     4 9'-001010-1   ->     0 6'010000
     55:     4 9'-00100--1   ->     0 6'010000
     56:     4 9'00---1111   ->     2 6'010000
     57:     4 9'-00001101   ->     4 6'010000
     58:     4 9'-00-11101   ->     4 6'010000
     59:     4 9'-01--1101   ->     4 6'010000
     60:     4 9'100001111   ->     4 6'010000
     61:     4 9'100-11111   ->     4 6'010000
     62:     4 9'101--1111   ->     4 6'010000
     63:     4 9'-000010-1   ->     4 6'010000
     64:     4 9'-00-110-1   ->     4 6'010000
     65:     4 9'-01--10-1   ->     4 6'010000
     66:     4 9'-00000--1   ->     4 6'010000
     67:     4 9'-00-10--1   ->     4 6'010000
     68:     4 9'-01--0--1   ->     4 6'010000
     69:     4 9'-1------1   ->     4 6'010000
     70:     5 9'--------0   ->     0 6'000001
     71:     5 9'-00101101   ->     0 6'000001
     72:     5 9'100101111   ->     0 6'000001
     73:     5 9'-001010-1   ->     0 6'000001
     74:     5 9'-00100--1   ->     0 6'000001
     75:     5 9'00---1111   ->     3 6'000001
     76:     5 9'-00001101   ->     5 6'000001
     77:     5 9'-00-11101   ->     5 6'000001
     78:     5 9'-01--1101   ->     5 6'000001
     79:     5 9'100001111   ->     5 6'000001
     80:     5 9'100-11111   ->     5 6'000001
     81:     5 9'101--1111   ->     5 6'000001
     82:     5 9'-000010-1   ->     5 6'000001
     83:     5 9'-00-110-1   ->     5 6'000001
     84:     5 9'-01--10-1   ->     5 6'000001
     85:     5 9'-00000--1   ->     5 6'000001
     86:     5 9'-00-10--1   ->     5 6'000001
     87:     5 9'-01--0--1   ->     5 6'000001
     88:     5 9'-1------1   ->     5 6'000001
     89:     6 9'--------0   ->     0 6'000100
     90:     6 9'-00101101   ->     0 6'000100
     91:     6 9'100101111   ->     0 6'000100
     92:     6 9'-001010-1   ->     0 6'000100
     93:     6 9'-00100--1   ->     0 6'000100
     94:     6 9'00---1111   ->     1 6'000100
     95:     6 9'-00001101   ->     6 6'000100
     96:     6 9'-00-11101   ->     6 6'000100
     97:     6 9'-01--1101   ->     6 6'000100
     98:     6 9'100001111   ->     6 6'000100
     99:     6 9'100-11111   ->     6 6'000100
    100:     6 9'101--1111   ->     6 6'000100
    101:     6 9'-000010-1   ->     6 6'000100
    102:     6 9'-00-110-1   ->     6 6'000100
    103:     6 9'-01--10-1   ->     6 6'000100
    104:     6 9'-00000--1   ->     6 6'000100
    105:     6 9'-00-10--1   ->     6 6'000100
    106:     6 9'-01--0--1   ->     6 6'000100
    107:     6 9'-1------1   ->     6 6'000100

-------------------------------------

FSM `$fsm$\memory.streak_iterator$3903' from module `top':
-------------------------------------

  Information on FSM $fsm$\memory.streak_iterator$3903 (\memory.streak_iterator):

  Number of input signals:    7
  Number of output signals:   3
  Number of state bits:       4

  Input signals:
    0: \reset
    1: $flatten\memory.$gt$src/blockmemory.v:182$1438_Y
    2: $flatten\memory.$and$src/blockmemory.v:170$1434_Y
    3: $flatten\memory.$eq$src/blockmemory.v:170$1433_Y
    4: $flatten\memory.$eq$src/blockmemory.v:148$1429_Y
    5: $flatten\memory.$and$src/blockmemory.v:146$1428_Y
    6: \memory.resetperiod

  Output signals:
    0: $flatten\memory.$eq$src/blockmemory.v:164$1432_Y
    1: $flatten\memory.$eq$src/blockmemory.v:159$1431_Y
    2: $flatten\memory.$eq$src/blockmemory.v:154$1430_Y

  State encoding:
    0:     4'---1  <RESET STATE>
    1:     4'--1-
    2:     4'-1--
    3:     4'1---

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 7'------0   ->     0 3'100
      1:     0 7'011---1   ->     0 3'100
      2:     0 7'00----1   ->     0 3'100
      3:     0 7'1-----1   ->     0 3'100
      4:     0 7'010---1   ->     2 3'100
      5:     1 7'------0   ->     0 3'001
      6:     1 7'00-1001   ->     0 3'001
      7:     1 7'00-1011   ->     1 3'001
      8:     1 7'00-00-1   ->     1 3'001
      9:     1 7'00--1-1   ->     1 3'001
     10:     1 7'011---1   ->     1 3'001
     11:     1 7'1-----1   ->     1 3'001
     12:     1 7'010---1   ->     3 3'001
     13:     2 7'------0   ->     0 3'010
     14:     2 7'00-1001   ->     0 3'010
     15:     2 7'010---1   ->     1 3'010
     16:     2 7'00-1011   ->     2 3'010
     17:     2 7'00-00-1   ->     2 3'010
     18:     2 7'00--1-1   ->     2 3'010
     19:     2 7'011---1   ->     2 3'010
     20:     2 7'1-----1   ->     2 3'010
     21:     3 7'------0   ->     0 3'000
     22:     3 7'00-1001   ->     0 3'000
     23:     3 7'00-1011   ->     3 3'000
     24:     3 7'00-00-1   ->     3 3'000
     25:     3 7'00--1-1   ->     3 3'000
     26:     3 7'01----1   ->     3 3'000
     27:     3 7'1-----1   ->     3 3'000

-------------------------------------

26.11.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\memory.stealstatus$3895' from module `\top'.
Mapping FSM `$fsm$\memory.streak_iterator$3903' from module `\top'.

26.12. Executing OPT pass (performing simple optimizations).

26.12.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~2 debug messages>

26.12.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~231 debug messages>
Removed a total of 77 cells.

26.12.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~877 debug messages>

26.12.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

26.12.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

26.12.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $flatten\vcell.\tshaper.$procdff$3868 ($dff) from module top (D = $flatten\vcell.\tshaper.$procmux$3139_Y, Q = \vcell.tshaper.blk4_hoffset, rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$4349 ($sdff) from module top (D = $flatten\vcell.\tshaper.$procmux$3139_Y, Q = \vcell.tshaper.blk4_hoffset).
Adding SRST signal on $flatten\vcell.\tshaper.$procdff$3867 ($dff) from module top (D = $flatten\vcell.\tshaper.$procmux$3148_Y, Q = \vcell.tshaper.blk4_voffset, rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$4353 ($sdff) from module top (D = $flatten\vcell.\tshaper.$procmux$3148_Y, Q = \vcell.tshaper.blk4_voffset).
Adding SRST signal on $flatten\vcell.\tshaper.$procdff$3866 ($dff) from module top (D = $flatten\vcell.\tshaper.$procmux$3159_Y, Q = \vcell.tshaper.blk3_hoffset, rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$4361 ($sdff) from module top (D = $flatten\vcell.\tshaper.$procmux$3159_Y, Q = \vcell.tshaper.blk3_hoffset).
Adding SRST signal on $flatten\vcell.\tshaper.$procdff$3865 ($dff) from module top (D = $flatten\vcell.\tshaper.$procmux$3172_Y, Q = \vcell.tshaper.blk3_voffset, rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$4369 ($sdff) from module top (D = $flatten\vcell.\tshaper.$procmux$3172_Y, Q = \vcell.tshaper.blk3_voffset).
Adding SRST signal on $flatten\vcell.\tshaper.$procdff$3864 ($dff) from module top (D = $flatten\vcell.\tshaper.$procmux$3177_Y [4:1], Q = \vcell.tshaper.blk2_hoffset [4:1], rval = 4'0000).
Adding SRST signal on $flatten\vcell.\tshaper.$procdff$3864 ($dff) from module top (D = $flatten\vcell.\tshaper.$procmux$3181_Y [0], Q = \vcell.tshaper.blk2_hoffset [0], rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$4378 ($sdff) from module top (D = $flatten\vcell.\tshaper.$procmux$3181_Y [0], Q = \vcell.tshaper.blk2_hoffset [0]).
Adding EN signal on $auto$ff.cc:262:slice$4373 ($sdff) from module top (D = 4'0000, Q = \vcell.tshaper.blk2_hoffset [4:1]).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4386 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4386 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$4386 ($sdffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$4386 ($sdffe) from module top.
Adding SRST signal on $flatten\vcell.\tshaper.$procdff$3863 ($dff) from module top (D = $flatten\vcell.\tshaper.$procmux$3194_Y [0], Q = \vcell.tshaper.blk2_voffset [0], rval = 1'0).
Adding SRST signal on $flatten\vcell.\tshaper.$procdff$3863 ($dff) from module top (D = $flatten\vcell.\tshaper.$procmux$3188_Y [4:1], Q = \vcell.tshaper.blk2_voffset [4:1], rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$4388 ($sdff) from module top (D = 4'0000, Q = \vcell.tshaper.blk2_voffset [4:1]).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4393 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4393 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$4393 ($sdffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$4393 ($sdffe) from module top.
Adding EN signal on $auto$ff.cc:262:slice$4387 ($sdff) from module top (D = $flatten\vcell.\tshaper.$procmux$3194_Y [0], Q = \vcell.tshaper.blk2_voffset [0]).
Adding SRST signal on $flatten\vcell.\tshaper.$procdff$3862 ($dff) from module top (D = $flatten\vcell.\tshaper.$procmux$3199_Y, Q = \vcell.tshaper.blk1_hoffset, rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$4397 ($sdff) from module top (D = 5'00000, Q = \vcell.tshaper.blk1_hoffset).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4402 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4402 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$4402 ($sdffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$4402 ($sdffe) from module top.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$4402 ($sdffe) from module top.
Adding SRST signal on $flatten\vcell.\tshaper.$procdff$3861 ($dff) from module top (D = $flatten\vcell.\tshaper.$procmux$3210_Y, Q = \vcell.tshaper.blk1_voffset, rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$4403 ($sdff) from module top (D = 5'00000, Q = \vcell.tshaper.blk1_voffset).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4408 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4408 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$4408 ($sdffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$4408 ($sdffe) from module top.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$4408 ($sdffe) from module top.
Adding SRST signal on $flatten\vcell.\sbshaper.$procdff$3886 ($dff) from module top (D = $flatten\vcell.\sbshaper.$procmux$3579_Y [0], Q = \vcell.sbshaper.blk4_hoffset [0], rval = 1'0).
Adding SRST signal on $flatten\vcell.\sbshaper.$procdff$3886 ($dff) from module top (D = $flatten\vcell.\sbshaper.$procmux$3573_Y [4:1], Q = \vcell.sbshaper.blk4_hoffset [4:1], rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$4410 ($sdff) from module top (D = 4'0000, Q = \vcell.sbshaper.blk4_hoffset [4:1]).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4415 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4415 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$4415 ($sdffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$4415 ($sdffe) from module top.
Adding EN signal on $auto$ff.cc:262:slice$4409 ($sdff) from module top (D = $flatten\vcell.\sbshaper.$procmux$3579_Y [0], Q = \vcell.sbshaper.blk4_hoffset [0]).
Adding SRST signal on $flatten\vcell.\sbshaper.$procdff$3885 ($dff) from module top (D = $flatten\vcell.\sbshaper.$procmux$3590_Y [0], Q = \vcell.sbshaper.blk4_voffset [0], rval = 1'0).
Adding SRST signal on $flatten\vcell.\sbshaper.$procdff$3885 ($dff) from module top (D = $flatten\vcell.\sbshaper.$procmux$3586_Y [4:1], Q = \vcell.sbshaper.blk4_voffset [4:1], rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$4420 ($sdff) from module top (D = $flatten\vcell.\sbshaper.$procmux$3586_Y [4:1], Q = \vcell.sbshaper.blk4_voffset [4:1]).
Adding EN signal on $auto$ff.cc:262:slice$4419 ($sdff) from module top (D = $flatten\vcell.\sbshaper.$procmux$3590_Y [0], Q = \vcell.sbshaper.blk4_voffset [0]).
Adding SRST signal on $flatten\vcell.\sbshaper.$procdff$3884 ($dff) from module top (D = $flatten\vcell.\sbshaper.$procmux$3595_Y, Q = \vcell.sbshaper.blk3_hoffset, rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$4431 ($sdff) from module top (D = 5'11111, Q = \vcell.sbshaper.blk3_hoffset).
Adding SRST signal on $flatten\vcell.\sbshaper.$procdff$3883 ($dff) from module top (D = $flatten\vcell.\sbshaper.$procmux$3608_Y, Q = \vcell.sbshaper.blk3_voffset, rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$4437 ($sdff) from module top (D = $flatten\vcell.\sbshaper.$procmux$3608_Y, Q = \vcell.sbshaper.blk3_voffset).
Adding SRST signal on $flatten\vcell.\sbshaper.$procdff$3882 ($dff) from module top (D = $flatten\vcell.\sbshaper.$procmux$3623_Y, Q = \vcell.sbshaper.blk2_hoffset, rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$4445 ($sdff) from module top (D = $flatten\vcell.\sbshaper.$procmux$3623_Y, Q = \vcell.sbshaper.blk2_hoffset).
Adding SRST signal on $flatten\vcell.\sbshaper.$procdff$3881 ($dff) from module top (D = $flatten\vcell.\sbshaper.$procmux$3632_Y, Q = \vcell.sbshaper.blk2_voffset, rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$4449 ($sdff) from module top (D = $flatten\vcell.\sbshaper.$procmux$3632_Y, Q = \vcell.sbshaper.blk2_voffset).
Adding SRST signal on $flatten\vcell.\sbshaper.$procdff$3880 ($dff) from module top (D = $flatten\vcell.\sbshaper.$procmux$3639_Y [4:1], Q = \vcell.sbshaper.blk1_hoffset [4:1], rval = 4'0000).
Adding SRST signal on $flatten\vcell.\sbshaper.$procdff$3880 ($dff) from module top (D = $flatten\vcell.\sbshaper.$procmux$3643_Y [0], Q = \vcell.sbshaper.blk1_hoffset [0], rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$4462 ($sdff) from module top (D = $flatten\vcell.\sbshaper.$procmux$3643_Y [0], Q = \vcell.sbshaper.blk1_hoffset [0]).
Adding EN signal on $auto$ff.cc:262:slice$4457 ($sdff) from module top (D = 4'0000, Q = \vcell.sbshaper.blk1_hoffset [4:1]).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4470 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4470 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$4470 ($sdffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$4470 ($sdffe) from module top.
Adding SRST signal on $flatten\vcell.\sbshaper.$procdff$3879 ($dff) from module top (D = $flatten\vcell.\sbshaper.$procmux$3656_Y [0], Q = \vcell.sbshaper.blk1_voffset [0], rval = 1'0).
Adding SRST signal on $flatten\vcell.\sbshaper.$procdff$3879 ($dff) from module top (D = $flatten\vcell.\sbshaper.$procmux$3650_Y [4:1], Q = \vcell.sbshaper.blk1_voffset [4:1], rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$4472 ($sdff) from module top (D = 4'0000, Q = \vcell.sbshaper.blk1_voffset [4:1]).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4477 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4477 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$4477 ($sdffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$4477 ($sdffe) from module top.
Adding EN signal on $auto$ff.cc:262:slice$4471 ($sdff) from module top (D = $flatten\vcell.\sbshaper.$procmux$3656_Y [0], Q = \vcell.sbshaper.blk1_voffset [0]).
Adding SRST signal on $flatten\vcell.\sashaper.$procdff$3894 ($dff) from module top (D = $flatten\vcell.\sashaper.$procmux$3667_Y [0], Q = \vcell.sashaper.blk4_hoffset [0], rval = 1'0).
Adding SRST signal on $flatten\vcell.\sashaper.$procdff$3894 ($dff) from module top (D = $flatten\vcell.\sashaper.$procmux$3661_Y [4:1], Q = \vcell.sashaper.blk4_hoffset [4:1], rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$4482 ($sdff) from module top (D = 4'1111, Q = \vcell.sashaper.blk4_hoffset [4:1]).
Adding EN signal on $auto$ff.cc:262:slice$4481 ($sdff) from module top (D = $flatten\vcell.\sashaper.$procmux$3667_Y [0], Q = \vcell.sashaper.blk4_hoffset [0]).
Adding SRST signal on $flatten\vcell.\sashaper.$procdff$3893 ($dff) from module top (D = $flatten\vcell.\sashaper.$procmux$3678_Y [0], Q = \vcell.sashaper.blk4_voffset [0], rval = 1'0).
Adding SRST signal on $flatten\vcell.\sashaper.$procdff$3893 ($dff) from module top (D = $flatten\vcell.\sashaper.$procmux$3672_Y [4:1], Q = \vcell.sashaper.blk4_voffset [4:1], rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$4492 ($sdff) from module top (D = 4'0000, Q = \vcell.sashaper.blk4_voffset [4:1]).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4497 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4497 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$4497 ($sdffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$4497 ($sdffe) from module top.
Adding EN signal on $auto$ff.cc:262:slice$4491 ($sdff) from module top (D = $flatten\vcell.\sashaper.$procmux$3678_Y [0], Q = \vcell.sashaper.blk4_voffset [0]).
Adding SRST signal on $flatten\vcell.\sashaper.$procdff$3892 ($dff) from module top (D = $flatten\vcell.\sashaper.$procmux$3683_Y, Q = \vcell.sashaper.blk3_hoffset, rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$4501 ($sdff) from module top (D = 5'11111, Q = \vcell.sashaper.blk3_hoffset).
Adding SRST signal on $flatten\vcell.\sashaper.$procdff$3891 ($dff) from module top (D = $flatten\vcell.\sashaper.$procmux$3696_Y, Q = \vcell.sashaper.blk3_voffset, rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$4507 ($sdff) from module top (D = $flatten\vcell.\sashaper.$procmux$3696_Y, Q = \vcell.sashaper.blk3_voffset).
Adding SRST signal on $flatten\vcell.\sashaper.$procdff$3890 ($dff) from module top (D = $flatten\vcell.\sashaper.$procmux$3711_Y, Q = \vcell.sashaper.blk2_hoffset, rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$4515 ($sdff) from module top (D = $flatten\vcell.\sashaper.$procmux$3711_Y, Q = \vcell.sashaper.blk2_hoffset).
Adding SRST signal on $flatten\vcell.\sashaper.$procdff$3889 ($dff) from module top (D = $flatten\vcell.\sashaper.$procmux$3720_Y, Q = \vcell.sashaper.blk2_voffset, rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$4519 ($sdff) from module top (D = $flatten\vcell.\sashaper.$procmux$3720_Y, Q = \vcell.sashaper.blk2_voffset).
Adding SRST signal on $flatten\vcell.\sashaper.$procdff$3888 ($dff) from module top (D = $flatten\vcell.\sashaper.$procmux$3727_Y [4:1], Q = \vcell.sashaper.blk1_hoffset [4:1], rval = 4'0000).
Adding SRST signal on $flatten\vcell.\sashaper.$procdff$3888 ($dff) from module top (D = $flatten\vcell.\sashaper.$procmux$3731_Y [0], Q = \vcell.sashaper.blk1_hoffset [0], rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$4532 ($sdff) from module top (D = $flatten\vcell.\sashaper.$procmux$3731_Y [0], Q = \vcell.sashaper.blk1_hoffset [0]).
Adding EN signal on $auto$ff.cc:262:slice$4527 ($sdff) from module top (D = 4'0000, Q = \vcell.sashaper.blk1_hoffset [4:1]).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4540 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4540 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$4540 ($sdffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$4540 ($sdffe) from module top.
Adding SRST signal on $flatten\vcell.\sashaper.$procdff$3887 ($dff) from module top (D = $flatten\vcell.\sashaper.$procmux$3744_Y [0], Q = \vcell.sashaper.blk1_voffset [0], rval = 1'0).
Adding SRST signal on $flatten\vcell.\sashaper.$procdff$3887 ($dff) from module top (D = $flatten\vcell.\sashaper.$procmux$3738_Y [4:1], Q = \vcell.sashaper.blk1_voffset [4:1], rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$4542 ($sdff) from module top (D = 4'0000, Q = \vcell.sashaper.blk1_voffset [4:1]).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4547 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4547 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$4547 ($sdffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$4547 ($sdffe) from module top.
Adding EN signal on $auto$ff.cc:262:slice$4541 ($sdff) from module top (D = $flatten\vcell.\sashaper.$procmux$3744_Y [0], Q = \vcell.sashaper.blk1_voffset [0]).
Adding SRST signal on $flatten\vcell.\lbshaper.$procdff$3850 ($dff) from module top (D = $flatten\vcell.\lbshaper.$procmux$3015_Y [0], Q = \vcell.lbshaper.blk4_hoffset [0], rval = 1'0).
Adding SRST signal on $flatten\vcell.\lbshaper.$procdff$3850 ($dff) from module top (D = $flatten\vcell.\lbshaper.$procmux$3011_Y [4:1], Q = \vcell.lbshaper.blk4_hoffset [4:1], rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$4552 ($sdff) from module top (D = $flatten\vcell.\lbshaper.$procmux$3011_Y [4:1], Q = \vcell.lbshaper.blk4_hoffset [4:1]).
Adding EN signal on $auto$ff.cc:262:slice$4551 ($sdff) from module top (D = $flatten\vcell.\lbshaper.$procmux$3015_Y [0], Q = \vcell.lbshaper.blk4_hoffset [0]).
Adding SRST signal on $flatten\vcell.\lbshaper.$procdff$3849 ($dff) from module top (D = $flatten\vcell.\lbshaper.$procmux$3026_Y [0], Q = \vcell.lbshaper.blk4_voffset [0], rval = 1'0).
Adding SRST signal on $flatten\vcell.\lbshaper.$procdff$3849 ($dff) from module top (D = $flatten\vcell.\lbshaper.$procmux$3024_Y [4:1], Q = \vcell.lbshaper.blk4_voffset [4:1], rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$4564 ($sdff) from module top (D = $flatten\vcell.\lbshaper.$procmux$3024_Y [4:1], Q = \vcell.lbshaper.blk4_voffset [4:1]).
Adding EN signal on $auto$ff.cc:262:slice$4563 ($sdff) from module top (D = $flatten\vcell.\lbshaper.$procmux$3026_Y [0], Q = \vcell.lbshaper.blk4_voffset [0]).
Adding SRST signal on $flatten\vcell.\lbshaper.$procdff$3848 ($dff) from module top (D = $flatten\vcell.\lbshaper.$procmux$3035_Y, Q = \vcell.lbshaper.blk3_hoffset, rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$4575 ($sdff) from module top (D = $flatten\vcell.\lbshaper.$procmux$3035_Y, Q = \vcell.lbshaper.blk3_hoffset).
Adding SRST signal on $flatten\vcell.\lbshaper.$procdff$3847 ($dff) from module top (D = $flatten\vcell.\lbshaper.$procmux$3048_Y, Q = \vcell.lbshaper.blk3_voffset, rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$4583 ($sdff) from module top (D = $flatten\vcell.\lbshaper.$procmux$3048_Y, Q = \vcell.lbshaper.blk3_voffset).
Adding SRST signal on $flatten\vcell.\lbshaper.$procdff$3846 ($dff) from module top (D = $flatten\vcell.\lbshaper.$procmux$3053_Y [4:1], Q = \vcell.lbshaper.blk2_hoffset [4:1], rval = 4'0000).
Adding SRST signal on $flatten\vcell.\lbshaper.$procdff$3846 ($dff) from module top (D = $flatten\vcell.\lbshaper.$procmux$3057_Y [0], Q = \vcell.lbshaper.blk2_hoffset [0], rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$4592 ($sdff) from module top (D = $flatten\vcell.\lbshaper.$procmux$3057_Y [0], Q = \vcell.lbshaper.blk2_hoffset [0]).
Adding EN signal on $auto$ff.cc:262:slice$4587 ($sdff) from module top (D = 4'0000, Q = \vcell.lbshaper.blk2_hoffset [4:1]).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4600 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4600 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$4600 ($sdffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$4600 ($sdffe) from module top.
Adding SRST signal on $flatten\vcell.\lbshaper.$procdff$3845 ($dff) from module top (D = $flatten\vcell.\lbshaper.$procmux$3070_Y [0], Q = \vcell.lbshaper.blk2_voffset [0], rval = 1'0).
Adding SRST signal on $flatten\vcell.\lbshaper.$procdff$3845 ($dff) from module top (D = $flatten\vcell.\lbshaper.$procmux$3064_Y [4:1], Q = \vcell.lbshaper.blk2_voffset [4:1], rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$4602 ($sdff) from module top (D = 4'0000, Q = \vcell.lbshaper.blk2_voffset [4:1]).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4607 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4607 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$4607 ($sdffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$4607 ($sdffe) from module top.
Adding EN signal on $auto$ff.cc:262:slice$4601 ($sdff) from module top (D = $flatten\vcell.\lbshaper.$procmux$3070_Y [0], Q = \vcell.lbshaper.blk2_voffset [0]).
Adding SRST signal on $flatten\vcell.\lbshaper.$procdff$3844 ($dff) from module top (D = $flatten\vcell.\lbshaper.$procmux$3075_Y, Q = \vcell.lbshaper.blk1_hoffset, rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$4611 ($sdff) from module top (D = 5'00000, Q = \vcell.lbshaper.blk1_hoffset).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4616 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4616 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$4616 ($sdffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$4616 ($sdffe) from module top.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$4616 ($sdffe) from module top.
Adding SRST signal on $flatten\vcell.\lbshaper.$procdff$3843 ($dff) from module top (D = $flatten\vcell.\lbshaper.$procmux$3086_Y, Q = \vcell.lbshaper.blk1_voffset, rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$4617 ($sdff) from module top (D = 5'00000, Q = \vcell.lbshaper.blk1_voffset).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4622 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4622 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$4622 ($sdffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$4622 ($sdffe) from module top.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$4622 ($sdffe) from module top.
Adding SRST signal on $flatten\vcell.\lashaper.$procdff$3842 ($dff) from module top (D = $flatten\vcell.\lashaper.$procmux$2927_Y, Q = \vcell.lashaper.blk4_hoffset, rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$4623 ($sdff) from module top (D = $flatten\vcell.\lashaper.$procmux$2927_Y, Q = \vcell.lashaper.blk4_hoffset).
Adding SRST signal on $flatten\vcell.\lashaper.$procdff$3841 ($dff) from module top (D = $flatten\vcell.\lashaper.$procmux$2938_Y [0], Q = \vcell.lashaper.blk4_voffset [0], rval = 1'0).
Adding SRST signal on $flatten\vcell.\lashaper.$procdff$3841 ($dff) from module top (D = $flatten\vcell.\lashaper.$procmux$2934_Y [4:1], Q = \vcell.lashaper.blk4_voffset [4:1], rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$4628 ($sdff) from module top (D = $flatten\vcell.\lashaper.$procmux$2934_Y [4:1], Q = \vcell.lashaper.blk4_voffset [4:1]).
Adding EN signal on $auto$ff.cc:262:slice$4627 ($sdff) from module top (D = $flatten\vcell.\lashaper.$procmux$2938_Y [0], Q = \vcell.lashaper.blk4_voffset [0]).
Adding SRST signal on $flatten\vcell.\lashaper.$procdff$3840 ($dff) from module top (D = $flatten\vcell.\lashaper.$procmux$2947_Y, Q = \vcell.lashaper.blk3_hoffset, rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$4639 ($sdff) from module top (D = $flatten\vcell.\lashaper.$procmux$2947_Y, Q = \vcell.lashaper.blk3_hoffset).
Adding SRST signal on $flatten\vcell.\lashaper.$procdff$3839 ($dff) from module top (D = $flatten\vcell.\lashaper.$procmux$2960_Y, Q = \vcell.lashaper.blk3_voffset, rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$4647 ($sdff) from module top (D = $flatten\vcell.\lashaper.$procmux$2960_Y, Q = \vcell.lashaper.blk3_voffset).
Adding SRST signal on $flatten\vcell.\lashaper.$procdff$3838 ($dff) from module top (D = $flatten\vcell.\lashaper.$procmux$2965_Y [4:1], Q = \vcell.lashaper.blk2_hoffset [4:1], rval = 4'0000).
Adding SRST signal on $flatten\vcell.\lashaper.$procdff$3838 ($dff) from module top (D = $flatten\vcell.\lashaper.$procmux$2969_Y [0], Q = \vcell.lashaper.blk2_hoffset [0], rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$4656 ($sdff) from module top (D = $flatten\vcell.\lashaper.$procmux$2969_Y [0], Q = \vcell.lashaper.blk2_hoffset [0]).
Adding EN signal on $auto$ff.cc:262:slice$4651 ($sdff) from module top (D = 4'0000, Q = \vcell.lashaper.blk2_hoffset [4:1]).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4664 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4664 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$4664 ($sdffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$4664 ($sdffe) from module top.
Adding SRST signal on $flatten\vcell.\lashaper.$procdff$3837 ($dff) from module top (D = $flatten\vcell.\lashaper.$procmux$2982_Y [0], Q = \vcell.lashaper.blk2_voffset [0], rval = 1'0).
Adding SRST signal on $flatten\vcell.\lashaper.$procdff$3837 ($dff) from module top (D = $flatten\vcell.\lashaper.$procmux$2976_Y [4:1], Q = \vcell.lashaper.blk2_voffset [4:1], rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$4666 ($sdff) from module top (D = 4'0000, Q = \vcell.lashaper.blk2_voffset [4:1]).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4671 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4671 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$4671 ($sdffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$4671 ($sdffe) from module top.
Adding EN signal on $auto$ff.cc:262:slice$4665 ($sdff) from module top (D = $flatten\vcell.\lashaper.$procmux$2982_Y [0], Q = \vcell.lashaper.blk2_voffset [0]).
Adding SRST signal on $flatten\vcell.\lashaper.$procdff$3836 ($dff) from module top (D = $flatten\vcell.\lashaper.$procmux$2987_Y, Q = \vcell.lashaper.blk1_hoffset, rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$4675 ($sdff) from module top (D = 5'00000, Q = \vcell.lashaper.blk1_hoffset).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4680 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4680 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$4680 ($sdffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$4680 ($sdffe) from module top.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$4680 ($sdffe) from module top.
Adding SRST signal on $flatten\vcell.\lashaper.$procdff$3835 ($dff) from module top (D = $flatten\vcell.\lashaper.$procmux$2998_Y, Q = \vcell.lashaper.blk1_voffset, rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$4681 ($sdff) from module top (D = 5'00000, Q = \vcell.lashaper.blk1_voffset).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4686 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4686 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$4686 ($sdffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$4686 ($sdffe) from module top.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$4686 ($sdffe) from module top.
Adding SRST signal on $flatten\vcell.\ishaper.$procdff$3819 ($dff) from module top (D = $flatten\vcell.\ishaper.$procmux$2780_Y [0], Q = \vcell.ishaper.blk4_hoffset [0], rval = 1'0).
Adding SRST signal on $flatten\vcell.\ishaper.$procdff$3819 ($dff) from module top (D = $flatten\vcell.\ishaper.$procmux$2774_Y [4:2], Q = \vcell.ishaper.blk4_hoffset [4:2], rval = 3'000).
Adding SRST signal on $flatten\vcell.\ishaper.$procdff$3819 ($dff) from module top (D = $flatten\vcell.\ishaper.$procmux$2778_Y [1], Q = \vcell.ishaper.blk4_hoffset [1], rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$4693 ($sdff) from module top (D = $flatten\vcell.\ishaper.$procmux$2778_Y [1], Q = \vcell.ishaper.blk4_hoffset [1]).
Adding EN signal on $auto$ff.cc:262:slice$4688 ($sdff) from module top (D = 3'000, Q = \vcell.ishaper.blk4_hoffset [4:2]).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4701 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4701 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$4701 ($sdffe) from module top.
Adding EN signal on $auto$ff.cc:262:slice$4687 ($sdff) from module top (D = $flatten\vcell.\ishaper.$procmux$2780_Y [0], Q = \vcell.ishaper.blk4_hoffset [0]).
Adding SRST signal on $flatten\vcell.\ishaper.$procdff$3818 ($dff) from module top (D = $flatten\vcell.\ishaper.$procmux$2791_Y [1], Q = \vcell.ishaper.blk4_voffset [1], rval = 1'0).
Adding SRST signal on $flatten\vcell.\ishaper.$procdff$3818 ($dff) from module top (D = $flatten\vcell.\ishaper.$procmux$2785_Y [4:2], Q = \vcell.ishaper.blk4_voffset [4:2], rval = 3'000).
Adding SRST signal on $flatten\vcell.\ishaper.$procdff$3818 ($dff) from module top (D = $flatten\vcell.\ishaper.$procmux$2789_Y [0], Q = \vcell.ishaper.blk4_voffset [0], rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$4711 ($sdff) from module top (D = $flatten\vcell.\ishaper.$procmux$2789_Y [0], Q = \vcell.ishaper.blk4_voffset [0]).
Adding EN signal on $auto$ff.cc:262:slice$4706 ($sdff) from module top (D = 3'000, Q = \vcell.ishaper.blk4_voffset [4:2]).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4719 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4719 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$4719 ($sdffe) from module top.
Adding EN signal on $auto$ff.cc:262:slice$4705 ($sdff) from module top (D = $flatten\vcell.\ishaper.$procmux$2791_Y [1], Q = \vcell.ishaper.blk4_voffset [1]).
Adding SRST signal on $flatten\vcell.\ishaper.$procdff$3817 ($dff) from module top (D = $flatten\vcell.\ishaper.$procmux$2802_Y [0], Q = \vcell.ishaper.blk3_hoffset [0], rval = 1'0).
Adding SRST signal on $flatten\vcell.\ishaper.$procdff$3817 ($dff) from module top (D = $flatten\vcell.\ishaper.$procmux$2796_Y [4:1], Q = \vcell.ishaper.blk3_hoffset [4:1], rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$4724 ($sdff) from module top (D = 4'0000, Q = \vcell.ishaper.blk3_hoffset [4:1]).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4729 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4729 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$4729 ($sdffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$4729 ($sdffe) from module top.
Adding EN signal on $auto$ff.cc:262:slice$4723 ($sdff) from module top (D = $flatten\vcell.\ishaper.$procmux$2802_Y [0], Q = \vcell.ishaper.blk3_hoffset [0]).
Adding SRST signal on $flatten\vcell.\ishaper.$procdff$3816 ($dff) from module top (D = $flatten\vcell.\ishaper.$procmux$2813_Y [0], Q = \vcell.ishaper.blk3_voffset [0], rval = 1'0).
Adding SRST signal on $flatten\vcell.\ishaper.$procdff$3816 ($dff) from module top (D = $flatten\vcell.\ishaper.$procmux$2807_Y [4:1], Q = \vcell.ishaper.blk3_voffset [4:1], rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$4734 ($sdff) from module top (D = 4'0000, Q = \vcell.ishaper.blk3_voffset [4:1]).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4739 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4739 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$4739 ($sdffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$4739 ($sdffe) from module top.
Adding EN signal on $auto$ff.cc:262:slice$4733 ($sdff) from module top (D = $flatten\vcell.\ishaper.$procmux$2813_Y [0], Q = \vcell.ishaper.blk3_voffset [0]).
Adding SRST signal on $flatten\vcell.\ishaper.$procdff$3815 ($dff) from module top (D = $flatten\vcell.\ishaper.$procmux$2824_Y [0], Q = \vcell.ishaper.blk2_hoffset [0], rval = 1'0).
Adding SRST signal on $flatten\vcell.\ishaper.$procdff$3815 ($dff) from module top (D = $flatten\vcell.\ishaper.$procmux$2822_Y [4:1], Q = \vcell.ishaper.blk2_hoffset [4:1], rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$4744 ($sdff) from module top (D = $flatten\vcell.\ishaper.$procmux$2822_Y [4:1], Q = \vcell.ishaper.blk2_hoffset [4:1]).
Adding EN signal on $auto$ff.cc:262:slice$4743 ($sdff) from module top (D = $flatten\vcell.\ishaper.$procmux$2824_Y [0], Q = \vcell.ishaper.blk2_hoffset [0]).
Adding SRST signal on $flatten\vcell.\ishaper.$procdff$3814 ($dff) from module top (D = $flatten\vcell.\ishaper.$procmux$2835_Y, Q = \vcell.ishaper.blk2_voffset, rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$4755 ($sdff) from module top (D = $flatten\vcell.\ishaper.$procmux$2835_Y, Q = \vcell.ishaper.blk2_voffset).
Adding SRST signal on $flatten\vcell.\ishaper.$procdff$3813 ($dff) from module top (D = $flatten\vcell.\ishaper.$procmux$2846_Y [0], Q = \vcell.ishaper.blk1_hoffset [0], rval = 1'0).
Adding SRST signal on $flatten\vcell.\ishaper.$procdff$3813 ($dff) from module top (D = $flatten\vcell.\ishaper.$procmux$2840_Y [4:1], Q = \vcell.ishaper.blk1_hoffset [4:1], rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$4760 ($sdff) from module top (D = 4'0000, Q = \vcell.ishaper.blk1_hoffset [4:1]).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4765 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4765 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$4765 ($sdffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$4765 ($sdffe) from module top.
Adding EN signal on $auto$ff.cc:262:slice$4759 ($sdff) from module top (D = $flatten\vcell.\ishaper.$procmux$2846_Y [0], Q = \vcell.ishaper.blk1_hoffset [0]).
Adding SRST signal on $flatten\vcell.\ishaper.$procdff$3812 ($dff) from module top (D = $flatten\vcell.\ishaper.$procmux$2851_Y [4:1], Q = \vcell.ishaper.blk1_voffset [4:1], rval = 4'0000).
Adding SRST signal on $flatten\vcell.\ishaper.$procdff$3812 ($dff) from module top (D = $flatten\vcell.\ishaper.$procmux$2855_Y [0], Q = \vcell.ishaper.blk1_voffset [0], rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$4774 ($sdff) from module top (D = $flatten\vcell.\ishaper.$procmux$2855_Y [0], Q = \vcell.ishaper.blk1_voffset [0]).
Adding EN signal on $auto$ff.cc:262:slice$4769 ($sdff) from module top (D = 4'0000, Q = \vcell.ishaper.blk1_voffset [4:1]).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4782 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4782 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$4782 ($sdffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$4782 ($sdffe) from module top.
Adding SRST signal on $flatten\vcell.$procdff$3770 ($dff) from module top (D = $flatten\vcell.$procmux$2071_Y, Q = \vcell.dropcool, rval = 6'010000).
Adding EN signal on $auto$ff.cc:262:slice$4783 ($sdff) from module top (D = $flatten\vcell.$procmux$2066_Y, Q = \vcell.dropcool).
Adding SRST signal on $flatten\vcell.$procdff$3769 ($dff) from module top (D = $flatten\vcell.$procmux$2094_Y, Q = \vcell.dropit, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$4793 ($sdff) from module top (D = $flatten\vcell.$procmux$2094_Y, Q = \vcell.dropit).
Adding SRST signal on $flatten\vcell.$procdff$3768 ($dff) from module top (D = $flatten\vcell.$procmux$2104_Y, Q = \vcell.process_decline, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$4801 ($sdff) from module top (D = $flatten\vcell.$procmux$2101_Y, Q = \vcell.process_decline).
Adding SRST signal on $flatten\vcell.$procdff$3767 ($dff) from module top (D = { $flatten\vcell.$logic_not$src/volatile_cell_storage.v:181$1958_Y \vcell.buttdebounceD [25:1] }, Q = \vcell.buttdebounceD, rval = 26'00000000000000000000000000).
Adding SRST signal on $flatten\vcell.$procdff$3766 ($dff) from module top (D = { $flatten\vcell.$logic_not$src/volatile_cell_storage.v:179$1956_Y \vcell.buttdebounceT [25:1] }, Q = \vcell.buttdebounceT, rval = 26'00000000000000000000000000).
Adding SRST signal on $flatten\vcell.$procdff$3765 ($dff) from module top (D = { $flatten\vcell.$logic_not$src/volatile_cell_storage.v:180$1957_Y \vcell.buttdebounceR [25:1] }, Q = \vcell.buttdebounceR, rval = 26'00000000000000000000000000).
Adding SRST signal on $flatten\vcell.$procdff$3764 ($dff) from module top (D = { $flatten\vcell.$logic_not$src/volatile_cell_storage.v:178$1955_Y \vcell.buttdebounceL [25:1] }, Q = \vcell.buttdebounceL, rval = 26'00000000000000000000000000).
Adding SRST signal on $flatten\vcell.$procdff$3763 ($dff) from module top (D = $flatten\vcell.$procmux$2114_Y, Q = \vcell.process_steal, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$4813 ($sdff) from module top (D = $flatten\vcell.$procmux$2111_Y, Q = \vcell.process_steal).
Adding SRST signal on $flatten\vcell.$procdff$3760 ($dff) from module top (D = $flatten\vcell.$procmux$2165_Y, Q = \vcell.movement_available, rval = 1'1).
Adding EN signal on $auto$ff.cc:262:slice$4821 ($sdff) from module top (D = $flatten\vcell.$procmux$2165_Y, Q = \vcell.movement_available).
Adding SRST signal on $flatten\vcell.$procdff$3759 ($dff) from module top (D = $flatten\vcell.$procmux$2173_Y, Q = \vcell.tetron_type, rval = 4'0110).
Adding EN signal on $auto$ff.cc:262:slice$4833 ($sdff) from module top (D = 4'0110, Q = \vcell.tetron_type).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4834 ($sdffe) from module top.
Setting constant 1-bit at position 1 on $auto$ff.cc:262:slice$4834 ($sdffe) from module top.
Setting constant 1-bit at position 2 on $auto$ff.cc:262:slice$4834 ($sdffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$4834 ($sdffe) from module top.
Adding SRST signal on $flatten\vcell.$procdff$3758 ($dff) from module top (D = $flatten\vcell.$procmux$2183_Y, Q = \vcell.keep_tetron_rotation, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4839 ($sdff) from module top (D = $flatten\vcell.$procmux$2180_Y, Q = \vcell.keep_tetron_rotation).
Adding SRST signal on $flatten\vcell.$procdff$3757 ($dff) from module top (D = $flatten\vcell.$procmux$2191_Y, Q = \vcell.keep_tetron_h, rval = 5'00101).
Adding EN signal on $auto$ff.cc:262:slice$4847 ($sdff) from module top (D = \vcell.tetron_h, Q = \vcell.keep_tetron_h).
Adding SRST signal on $flatten\vcell.$procdff$3756 ($dff) from module top (D = $flatten\vcell.$procmux$2199_Y, Q = \vcell.keep_tetron_v, rval = 5'00101).
Adding EN signal on $auto$ff.cc:262:slice$4853 ($sdff) from module top (D = \vcell.tetron_v, Q = \vcell.keep_tetron_v).
Adding SRST signal on $flatten\vcell.$procdff$3755 ($dff) from module top (D = $flatten\vcell.$procmux$2218_Y, Q = \vcell.tetron_h, rval = 5'00101).
Adding EN signal on $auto$ff.cc:262:slice$4859 ($sdff) from module top (D = $flatten\vcell.$procmux$2218_Y, Q = \vcell.tetron_h).
Adding SRST signal on $flatten\vcell.$procdff$3754 ($dff) from module top (D = $flatten\vcell.$procmux$2243_Y, Q = \vcell.tetron_v, rval = 5'00101).
Adding EN signal on $auto$ff.cc:262:slice$4869 ($sdff) from module top (D = $flatten\vcell.$procmux$2243_Y, Q = \vcell.tetron_v).
Adding SRST signal on $flatten\vcell.$procdff$3753 ($dff) from module top (D = $flatten\vcell.$procmux$2251_Y, Q = \vcell.volatile_blk_color, rval = 3'100).
Adding EN signal on $auto$ff.cc:262:slice$4883 ($sdff) from module top (D = $flatten\vcell.$ternary$src/volatile_cell_storage.v:261$2021_Y, Q = \vcell.volatile_blk_color).
Adding SRST signal on $flatten\vcell.$procdff$3752 ($dff) from module top (D = $flatten\vcell.$procmux$2278_Y, Q = \vcell.movement_intent, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$4889 ($sdff) from module top (D = $flatten\vcell.$procmux$2276_Y, Q = \vcell.movement_intent).
Adding SRST signal on $flatten\vcell.$procdff$3751 ($dff) from module top (D = $flatten\vcell.$procmux$2311_Y, Q = \vcell.movement_request, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$4899 ($sdff) from module top (D = $flatten\vcell.$procmux$2311_Y, Q = \vcell.movement_request).
Adding SRST signal on $flatten\vcell.$procdff$3750 ($dff) from module top (D = { \vcell.state [6:0] $flatten\vcell.$xor$src/volatile_cell_storage.v:183$1961_Y }, Q = \vcell.state, rval = 8'11110000).
Adding SRST signal on $flatten\vcell.$procdff$3749 ($dff) from module top (D = $flatten\vcell.$procmux$2339_Y, Q = \vcell.tetron_rotation, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4912 ($sdff) from module top (D = $flatten\vcell.$procmux$2339_Y, Q = \vcell.tetron_rotation).
Adding SRST signal on $flatten\tdisplay.$procdff$3860 ($dff) from module top (D = $flatten\tdisplay.$procmux$3120_Y, Q = \tdisplay.state, rval = 4'0001).
Adding EN signal on $auto$ff.cc:262:slice$4930 ($sdff) from module top (D = $flatten\tdisplay.$procmux$3118_Y, Q = \tdisplay.state).
Adding SRST signal on $flatten\tdisplay.$procdff$3859 ($dff) from module top (D = $flatten\tdisplay.$procmux$3128_Y, Q = \tdisplay.gamespeed, rval = 24'111111111111111111111111).
Adding EN signal on $auto$ff.cc:262:slice$4932 ($sdff) from module top (D = $flatten\tdisplay.$sub$src/gamespeed_display.v:31$747_Y, Q = \tdisplay.gamespeed).
Adding SRST signal on $flatten\t.$procdff$3821 ($dff) from module top (D = $flatten\t.$add$src/timer.v:18$946_Y, Q = \t.counter, rval = 25'0000000000000000000000000).
Adding EN signal on $flatten\t.$procdff$3820 ($dff) from module top (D = $flatten\t.$procmux$2869_Y, Q = \t.trigger).
Adding SRST signal on $flatten\sdisplay.$procdff$3878 ($dff) from module top (D = $flatten\sdisplay.$procmux$3568_Y, Q = \sdisplay.values[7], rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$4944 ($sdff) from module top (D = $flatten\sdisplay.$procmux$3563_Y, Q = \sdisplay.values[7]).
Adding SRST signal on $flatten\sdisplay.$procdff$3877 ($dff) from module top (D = $flatten\sdisplay.$procmux$3402_Y, Q = \sdisplay.values[6], rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$4950 ($sdff) from module top (D = $flatten\sdisplay.$procmux$3394_Y, Q = \sdisplay.values[6]).
Adding SRST signal on $flatten\sdisplay.$procdff$3876 ($dff) from module top (D = $flatten\sdisplay.$procmux$3419_Y, Q = \sdisplay.values[5], rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$4958 ($sdff) from module top (D = $flatten\sdisplay.$procmux$3408_Y, Q = \sdisplay.values[5]).
Adding SRST signal on $flatten\sdisplay.$procdff$3875 ($dff) from module top (D = $flatten\sdisplay.$procmux$3439_Y, Q = \sdisplay.values[4], rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$4968 ($sdff) from module top (D = $flatten\sdisplay.$procmux$3425_Y, Q = \sdisplay.values[4]).
Adding SRST signal on $flatten\sdisplay.$procdff$3874 ($dff) from module top (D = $flatten\sdisplay.$procmux$3462_Y, Q = \sdisplay.values[3], rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$4980 ($sdff) from module top (D = $flatten\sdisplay.$procmux$3445_Y, Q = \sdisplay.values[3]).
Adding SRST signal on $flatten\sdisplay.$procdff$3873 ($dff) from module top (D = $flatten\sdisplay.$procmux$3488_Y, Q = \sdisplay.values[2], rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$4994 ($sdff) from module top (D = $flatten\sdisplay.$procmux$3468_Y, Q = \sdisplay.values[2]).
Adding SRST signal on $flatten\sdisplay.$procdff$3872 ($dff) from module top (D = $flatten\sdisplay.$procmux$3517_Y, Q = \sdisplay.values[1], rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$5010 ($sdff) from module top (D = $flatten\sdisplay.$procmux$3494_Y, Q = \sdisplay.values[1]).
Adding SRST signal on $flatten\sdisplay.$procdff$3871 ($dff) from module top (D = $flatten\sdisplay.$procmux$3549_Y, Q = \sdisplay.values[0], rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$5028 ($sdff) from module top (D = $flatten\sdisplay.$procmux$3523_Y, Q = \sdisplay.values[0]).
Adding SRST signal on $flatten\sdisplay.$procdff$3870 ($dff) from module top (D = $flatten\sdisplay.$procmux$3557_Y, Q = \sdisplay.dumpvar, rval = 21'000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$5048 ($sdff) from module top (D = $flatten\sdisplay.$procmux$3557_Y, Q = \sdisplay.dumpvar).
Adding SRST signal on $flatten\sdisplay.$procdff$3869 ($dff) from module top (D = { $flatten\sdisplay.$procmux$3388_Y $flatten\sdisplay.$procmux$3377_Y $flatten\sdisplay.$procmux$3363_Y $flatten\sdisplay.$procmux$3346_Y $flatten\sdisplay.$procmux$3326_Y $flatten\sdisplay.$procmux$3303_Y $flatten\sdisplay.$procmux$3245_Y $flatten\sdisplay.$procmux$3277_Y }, Q = \sdisplay.valused, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:262:slice$5052 ($sdff) from module top (D = 1'1, Q = \sdisplay.valused [0]).
Adding EN signal on $auto$ff.cc:262:slice$5052 ($sdff) from module top (D = 1'1, Q = \sdisplay.valused [1]).
Adding EN signal on $auto$ff.cc:262:slice$5052 ($sdff) from module top (D = 1'1, Q = \sdisplay.valused [2]).
Adding EN signal on $auto$ff.cc:262:slice$5052 ($sdff) from module top (D = 1'1, Q = \sdisplay.valused [3]).
Adding EN signal on $auto$ff.cc:262:slice$5052 ($sdff) from module top (D = 1'1, Q = \sdisplay.valused [4]).
Adding EN signal on $auto$ff.cc:262:slice$5052 ($sdff) from module top (D = 1'1, Q = \sdisplay.valused [5]).
Adding EN signal on $auto$ff.cc:262:slice$5052 ($sdff) from module top (D = 1'1, Q = \sdisplay.valused [6]).
Adding EN signal on $auto$ff.cc:262:slice$5052 ($sdff) from module top (D = 1'1, Q = \sdisplay.valused [7]).
Adding SRST signal on $flatten\memory.\mem.\row_9.\cell_9.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_9.\cell_9.$procmux$2916_Y, Q = \memory.mem.row_9.cell_9.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5149 ($sdff) from module top (D = $flatten\memory.\mem.\row_9.\cell_9.$procmux$2916_Y, Q = \memory.mem.row_9.cell_9.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_9.\cell_8.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_9.\cell_8.$procmux$2916_Y, Q = \memory.mem.row_9.cell_8.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5153 ($sdff) from module top (D = $flatten\memory.\mem.\row_9.\cell_8.$procmux$2916_Y, Q = \memory.mem.row_9.cell_8.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_9.\cell_7.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_9.\cell_7.$procmux$2916_Y, Q = \memory.mem.row_9.cell_7.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5157 ($sdff) from module top (D = $flatten\memory.\mem.\row_9.\cell_7.$procmux$2916_Y, Q = \memory.mem.row_9.cell_7.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_9.\cell_6.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_9.\cell_6.$procmux$2916_Y, Q = \memory.mem.row_9.cell_6.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5161 ($sdff) from module top (D = $flatten\memory.\mem.\row_9.\cell_6.$procmux$2916_Y, Q = \memory.mem.row_9.cell_6.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_9.\cell_5.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_9.\cell_5.$procmux$2916_Y, Q = \memory.mem.row_9.cell_5.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5165 ($sdff) from module top (D = $flatten\memory.\mem.\row_9.\cell_5.$procmux$2916_Y, Q = \memory.mem.row_9.cell_5.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_9.\cell_4.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_9.\cell_4.$procmux$2916_Y, Q = \memory.mem.row_9.cell_4.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5169 ($sdff) from module top (D = $flatten\memory.\mem.\row_9.\cell_4.$procmux$2916_Y, Q = \memory.mem.row_9.cell_4.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_9.\cell_3.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_9.\cell_3.$procmux$2916_Y, Q = \memory.mem.row_9.cell_3.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5173 ($sdff) from module top (D = $flatten\memory.\mem.\row_9.\cell_3.$procmux$2916_Y, Q = \memory.mem.row_9.cell_3.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_9.\cell_2.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_9.\cell_2.$procmux$2916_Y, Q = \memory.mem.row_9.cell_2.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5177 ($sdff) from module top (D = $flatten\memory.\mem.\row_9.\cell_2.$procmux$2916_Y, Q = \memory.mem.row_9.cell_2.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_9.\cell_11.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_9.\cell_11.$procmux$2916_Y, Q = \memory.mem.row_9.cell_11.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5181 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_9.cell_11.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_9.\cell_10.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_9.\cell_10.$procmux$2916_Y, Q = \memory.mem.row_9.cell_10.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5183 ($sdff) from module top (D = $flatten\memory.\mem.\row_9.\cell_10.$procmux$2916_Y, Q = \memory.mem.row_9.cell_10.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_9.\cell_1.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_9.\cell_1.$procmux$2916_Y, Q = \memory.mem.row_9.cell_1.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5187 ($sdff) from module top (D = $flatten\memory.\mem.\row_9.\cell_1.$procmux$2916_Y, Q = \memory.mem.row_9.cell_1.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_9.\cell_0.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_9.\cell_0.$procmux$2916_Y, Q = \memory.mem.row_9.cell_0.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5191 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_9.cell_0.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_8.\cell_9.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_8.\cell_9.$procmux$2916_Y, Q = \memory.mem.row_8.cell_9.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5193 ($sdff) from module top (D = $flatten\memory.\mem.\row_8.\cell_9.$procmux$2916_Y, Q = \memory.mem.row_8.cell_9.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_8.\cell_8.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_8.\cell_8.$procmux$2916_Y, Q = \memory.mem.row_8.cell_8.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5197 ($sdff) from module top (D = $flatten\memory.\mem.\row_8.\cell_8.$procmux$2916_Y, Q = \memory.mem.row_8.cell_8.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_8.\cell_7.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_8.\cell_7.$procmux$2916_Y, Q = \memory.mem.row_8.cell_7.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5201 ($sdff) from module top (D = $flatten\memory.\mem.\row_8.\cell_7.$procmux$2916_Y, Q = \memory.mem.row_8.cell_7.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_8.\cell_6.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_8.\cell_6.$procmux$2916_Y, Q = \memory.mem.row_8.cell_6.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5205 ($sdff) from module top (D = $flatten\memory.\mem.\row_8.\cell_6.$procmux$2916_Y, Q = \memory.mem.row_8.cell_6.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_8.\cell_5.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_8.\cell_5.$procmux$2916_Y, Q = \memory.mem.row_8.cell_5.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5209 ($sdff) from module top (D = $flatten\memory.\mem.\row_8.\cell_5.$procmux$2916_Y, Q = \memory.mem.row_8.cell_5.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_8.\cell_4.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_8.\cell_4.$procmux$2916_Y, Q = \memory.mem.row_8.cell_4.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5213 ($sdff) from module top (D = $flatten\memory.\mem.\row_8.\cell_4.$procmux$2916_Y, Q = \memory.mem.row_8.cell_4.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_8.\cell_3.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_8.\cell_3.$procmux$2916_Y, Q = \memory.mem.row_8.cell_3.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5217 ($sdff) from module top (D = $flatten\memory.\mem.\row_8.\cell_3.$procmux$2916_Y, Q = \memory.mem.row_8.cell_3.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_8.\cell_2.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_8.\cell_2.$procmux$2916_Y, Q = \memory.mem.row_8.cell_2.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5221 ($sdff) from module top (D = $flatten\memory.\mem.\row_8.\cell_2.$procmux$2916_Y, Q = \memory.mem.row_8.cell_2.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_8.\cell_11.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_8.\cell_11.$procmux$2916_Y, Q = \memory.mem.row_8.cell_11.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5225 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_8.cell_11.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_8.\cell_10.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_8.\cell_10.$procmux$2916_Y, Q = \memory.mem.row_8.cell_10.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5227 ($sdff) from module top (D = $flatten\memory.\mem.\row_8.\cell_10.$procmux$2916_Y, Q = \memory.mem.row_8.cell_10.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_8.\cell_1.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_8.\cell_1.$procmux$2916_Y, Q = \memory.mem.row_8.cell_1.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5231 ($sdff) from module top (D = $flatten\memory.\mem.\row_8.\cell_1.$procmux$2916_Y, Q = \memory.mem.row_8.cell_1.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_8.\cell_0.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_8.\cell_0.$procmux$2916_Y, Q = \memory.mem.row_8.cell_0.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5235 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_8.cell_0.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_7.\cell_9.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_7.\cell_9.$procmux$2916_Y, Q = \memory.mem.row_7.cell_9.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5237 ($sdff) from module top (D = $flatten\memory.\mem.\row_7.\cell_9.$procmux$2916_Y, Q = \memory.mem.row_7.cell_9.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_7.\cell_8.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_7.\cell_8.$procmux$2916_Y, Q = \memory.mem.row_7.cell_8.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5241 ($sdff) from module top (D = $flatten\memory.\mem.\row_7.\cell_8.$procmux$2916_Y, Q = \memory.mem.row_7.cell_8.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_7.\cell_7.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_7.\cell_7.$procmux$2916_Y, Q = \memory.mem.row_7.cell_7.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5245 ($sdff) from module top (D = $flatten\memory.\mem.\row_7.\cell_7.$procmux$2916_Y, Q = \memory.mem.row_7.cell_7.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_7.\cell_6.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_7.\cell_6.$procmux$2916_Y, Q = \memory.mem.row_7.cell_6.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5249 ($sdff) from module top (D = $flatten\memory.\mem.\row_7.\cell_6.$procmux$2916_Y, Q = \memory.mem.row_7.cell_6.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_7.\cell_5.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_7.\cell_5.$procmux$2916_Y, Q = \memory.mem.row_7.cell_5.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5253 ($sdff) from module top (D = $flatten\memory.\mem.\row_7.\cell_5.$procmux$2916_Y, Q = \memory.mem.row_7.cell_5.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_7.\cell_4.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_7.\cell_4.$procmux$2916_Y, Q = \memory.mem.row_7.cell_4.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5257 ($sdff) from module top (D = $flatten\memory.\mem.\row_7.\cell_4.$procmux$2916_Y, Q = \memory.mem.row_7.cell_4.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_7.\cell_3.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_7.\cell_3.$procmux$2916_Y, Q = \memory.mem.row_7.cell_3.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5261 ($sdff) from module top (D = $flatten\memory.\mem.\row_7.\cell_3.$procmux$2916_Y, Q = \memory.mem.row_7.cell_3.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_7.\cell_2.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_7.\cell_2.$procmux$2916_Y, Q = \memory.mem.row_7.cell_2.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5265 ($sdff) from module top (D = $flatten\memory.\mem.\row_7.\cell_2.$procmux$2916_Y, Q = \memory.mem.row_7.cell_2.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_7.\cell_11.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_7.\cell_11.$procmux$2916_Y, Q = \memory.mem.row_7.cell_11.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5269 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_7.cell_11.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_7.\cell_10.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_7.\cell_10.$procmux$2916_Y, Q = \memory.mem.row_7.cell_10.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5271 ($sdff) from module top (D = $flatten\memory.\mem.\row_7.\cell_10.$procmux$2916_Y, Q = \memory.mem.row_7.cell_10.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_7.\cell_1.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_7.\cell_1.$procmux$2916_Y, Q = \memory.mem.row_7.cell_1.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5275 ($sdff) from module top (D = $flatten\memory.\mem.\row_7.\cell_1.$procmux$2916_Y, Q = \memory.mem.row_7.cell_1.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_7.\cell_0.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_7.\cell_0.$procmux$2916_Y, Q = \memory.mem.row_7.cell_0.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5279 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_7.cell_0.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_6.\cell_9.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_6.\cell_9.$procmux$2916_Y, Q = \memory.mem.row_6.cell_9.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5281 ($sdff) from module top (D = $flatten\memory.\mem.\row_6.\cell_9.$procmux$2916_Y, Q = \memory.mem.row_6.cell_9.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_6.\cell_8.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_6.\cell_8.$procmux$2916_Y, Q = \memory.mem.row_6.cell_8.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5285 ($sdff) from module top (D = $flatten\memory.\mem.\row_6.\cell_8.$procmux$2916_Y, Q = \memory.mem.row_6.cell_8.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_6.\cell_7.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_6.\cell_7.$procmux$2916_Y, Q = \memory.mem.row_6.cell_7.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5289 ($sdff) from module top (D = $flatten\memory.\mem.\row_6.\cell_7.$procmux$2916_Y, Q = \memory.mem.row_6.cell_7.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_6.\cell_6.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_6.\cell_6.$procmux$2916_Y, Q = \memory.mem.row_6.cell_6.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5293 ($sdff) from module top (D = $flatten\memory.\mem.\row_6.\cell_6.$procmux$2916_Y, Q = \memory.mem.row_6.cell_6.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_6.\cell_5.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_6.\cell_5.$procmux$2916_Y, Q = \memory.mem.row_6.cell_5.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5297 ($sdff) from module top (D = $flatten\memory.\mem.\row_6.\cell_5.$procmux$2916_Y, Q = \memory.mem.row_6.cell_5.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_6.\cell_4.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_6.\cell_4.$procmux$2916_Y, Q = \memory.mem.row_6.cell_4.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5301 ($sdff) from module top (D = $flatten\memory.\mem.\row_6.\cell_4.$procmux$2916_Y, Q = \memory.mem.row_6.cell_4.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_6.\cell_3.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_6.\cell_3.$procmux$2916_Y, Q = \memory.mem.row_6.cell_3.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5305 ($sdff) from module top (D = $flatten\memory.\mem.\row_6.\cell_3.$procmux$2916_Y, Q = \memory.mem.row_6.cell_3.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_6.\cell_2.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_6.\cell_2.$procmux$2916_Y, Q = \memory.mem.row_6.cell_2.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5309 ($sdff) from module top (D = $flatten\memory.\mem.\row_6.\cell_2.$procmux$2916_Y, Q = \memory.mem.row_6.cell_2.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_6.\cell_11.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_6.\cell_11.$procmux$2916_Y, Q = \memory.mem.row_6.cell_11.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5313 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_6.cell_11.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_6.\cell_10.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_6.\cell_10.$procmux$2916_Y, Q = \memory.mem.row_6.cell_10.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5315 ($sdff) from module top (D = $flatten\memory.\mem.\row_6.\cell_10.$procmux$2916_Y, Q = \memory.mem.row_6.cell_10.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_6.\cell_1.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_6.\cell_1.$procmux$2916_Y, Q = \memory.mem.row_6.cell_1.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5319 ($sdff) from module top (D = $flatten\memory.\mem.\row_6.\cell_1.$procmux$2916_Y, Q = \memory.mem.row_6.cell_1.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_6.\cell_0.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_6.\cell_0.$procmux$2916_Y, Q = \memory.mem.row_6.cell_0.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5323 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_6.cell_0.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_5.\cell_9.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_5.\cell_9.$procmux$2916_Y, Q = \memory.mem.row_5.cell_9.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5325 ($sdff) from module top (D = $flatten\memory.\mem.\row_5.\cell_9.$procmux$2916_Y, Q = \memory.mem.row_5.cell_9.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_5.\cell_8.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_5.\cell_8.$procmux$2916_Y, Q = \memory.mem.row_5.cell_8.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5329 ($sdff) from module top (D = $flatten\memory.\mem.\row_5.\cell_8.$procmux$2916_Y, Q = \memory.mem.row_5.cell_8.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_5.\cell_7.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_5.\cell_7.$procmux$2916_Y, Q = \memory.mem.row_5.cell_7.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5333 ($sdff) from module top (D = $flatten\memory.\mem.\row_5.\cell_7.$procmux$2916_Y, Q = \memory.mem.row_5.cell_7.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_5.\cell_6.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_5.\cell_6.$procmux$2916_Y, Q = \memory.mem.row_5.cell_6.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5337 ($sdff) from module top (D = $flatten\memory.\mem.\row_5.\cell_6.$procmux$2916_Y, Q = \memory.mem.row_5.cell_6.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_5.\cell_5.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_5.\cell_5.$procmux$2916_Y, Q = \memory.mem.row_5.cell_5.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5341 ($sdff) from module top (D = $flatten\memory.\mem.\row_5.\cell_5.$procmux$2916_Y, Q = \memory.mem.row_5.cell_5.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_5.\cell_4.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_5.\cell_4.$procmux$2916_Y, Q = \memory.mem.row_5.cell_4.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5345 ($sdff) from module top (D = $flatten\memory.\mem.\row_5.\cell_4.$procmux$2916_Y, Q = \memory.mem.row_5.cell_4.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_5.\cell_3.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_5.\cell_3.$procmux$2916_Y, Q = \memory.mem.row_5.cell_3.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5349 ($sdff) from module top (D = $flatten\memory.\mem.\row_5.\cell_3.$procmux$2916_Y, Q = \memory.mem.row_5.cell_3.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_5.\cell_2.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_5.\cell_2.$procmux$2916_Y, Q = \memory.mem.row_5.cell_2.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5353 ($sdff) from module top (D = $flatten\memory.\mem.\row_5.\cell_2.$procmux$2916_Y, Q = \memory.mem.row_5.cell_2.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_5.\cell_11.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_5.\cell_11.$procmux$2916_Y, Q = \memory.mem.row_5.cell_11.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5357 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_5.cell_11.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_5.\cell_10.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_5.\cell_10.$procmux$2916_Y, Q = \memory.mem.row_5.cell_10.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5359 ($sdff) from module top (D = $flatten\memory.\mem.\row_5.\cell_10.$procmux$2916_Y, Q = \memory.mem.row_5.cell_10.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_5.\cell_1.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_5.\cell_1.$procmux$2916_Y, Q = \memory.mem.row_5.cell_1.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5363 ($sdff) from module top (D = $flatten\memory.\mem.\row_5.\cell_1.$procmux$2916_Y, Q = \memory.mem.row_5.cell_1.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_5.\cell_0.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_5.\cell_0.$procmux$2916_Y, Q = \memory.mem.row_5.cell_0.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5367 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_5.cell_0.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_4.\cell_9.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_4.\cell_9.$procmux$2916_Y, Q = \memory.mem.row_4.cell_9.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5369 ($sdff) from module top (D = $flatten\memory.\mem.\row_4.\cell_9.$procmux$2916_Y, Q = \memory.mem.row_4.cell_9.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_4.\cell_8.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_4.\cell_8.$procmux$2916_Y, Q = \memory.mem.row_4.cell_8.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5373 ($sdff) from module top (D = $flatten\memory.\mem.\row_4.\cell_8.$procmux$2916_Y, Q = \memory.mem.row_4.cell_8.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_4.\cell_7.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_4.\cell_7.$procmux$2916_Y, Q = \memory.mem.row_4.cell_7.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5377 ($sdff) from module top (D = $flatten\memory.\mem.\row_4.\cell_7.$procmux$2916_Y, Q = \memory.mem.row_4.cell_7.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_4.\cell_6.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_4.\cell_6.$procmux$2916_Y, Q = \memory.mem.row_4.cell_6.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5381 ($sdff) from module top (D = $flatten\memory.\mem.\row_4.\cell_6.$procmux$2916_Y, Q = \memory.mem.row_4.cell_6.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_4.\cell_5.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_4.\cell_5.$procmux$2916_Y, Q = \memory.mem.row_4.cell_5.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5385 ($sdff) from module top (D = $flatten\memory.\mem.\row_4.\cell_5.$procmux$2916_Y, Q = \memory.mem.row_4.cell_5.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_4.\cell_4.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_4.\cell_4.$procmux$2916_Y, Q = \memory.mem.row_4.cell_4.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5389 ($sdff) from module top (D = $flatten\memory.\mem.\row_4.\cell_4.$procmux$2916_Y, Q = \memory.mem.row_4.cell_4.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_4.\cell_3.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_4.\cell_3.$procmux$2916_Y, Q = \memory.mem.row_4.cell_3.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5393 ($sdff) from module top (D = $flatten\memory.\mem.\row_4.\cell_3.$procmux$2916_Y, Q = \memory.mem.row_4.cell_3.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_4.\cell_2.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_4.\cell_2.$procmux$2916_Y, Q = \memory.mem.row_4.cell_2.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5397 ($sdff) from module top (D = $flatten\memory.\mem.\row_4.\cell_2.$procmux$2916_Y, Q = \memory.mem.row_4.cell_2.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_4.\cell_11.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_4.\cell_11.$procmux$2916_Y, Q = \memory.mem.row_4.cell_11.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5401 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_4.cell_11.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_4.\cell_10.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_4.\cell_10.$procmux$2916_Y, Q = \memory.mem.row_4.cell_10.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5403 ($sdff) from module top (D = $flatten\memory.\mem.\row_4.\cell_10.$procmux$2916_Y, Q = \memory.mem.row_4.cell_10.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_4.\cell_1.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_4.\cell_1.$procmux$2916_Y, Q = \memory.mem.row_4.cell_1.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5407 ($sdff) from module top (D = $flatten\memory.\mem.\row_4.\cell_1.$procmux$2916_Y, Q = \memory.mem.row_4.cell_1.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_4.\cell_0.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_4.\cell_0.$procmux$2916_Y, Q = \memory.mem.row_4.cell_0.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5411 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_4.cell_0.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_3.\cell_9.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_3.\cell_9.$procmux$2916_Y, Q = \memory.mem.row_3.cell_9.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5413 ($sdff) from module top (D = $flatten\memory.\mem.\row_3.\cell_9.$procmux$2916_Y, Q = \memory.mem.row_3.cell_9.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_3.\cell_8.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_3.\cell_8.$procmux$2916_Y, Q = \memory.mem.row_3.cell_8.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5417 ($sdff) from module top (D = $flatten\memory.\mem.\row_3.\cell_8.$procmux$2916_Y, Q = \memory.mem.row_3.cell_8.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_3.\cell_7.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_3.\cell_7.$procmux$2916_Y, Q = \memory.mem.row_3.cell_7.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5421 ($sdff) from module top (D = $flatten\memory.\mem.\row_3.\cell_7.$procmux$2916_Y, Q = \memory.mem.row_3.cell_7.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_3.\cell_6.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_3.\cell_6.$procmux$2916_Y, Q = \memory.mem.row_3.cell_6.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5425 ($sdff) from module top (D = $flatten\memory.\mem.\row_3.\cell_6.$procmux$2916_Y, Q = \memory.mem.row_3.cell_6.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_3.\cell_5.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_3.\cell_5.$procmux$2916_Y, Q = \memory.mem.row_3.cell_5.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5429 ($sdff) from module top (D = $flatten\memory.\mem.\row_3.\cell_5.$procmux$2916_Y, Q = \memory.mem.row_3.cell_5.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_3.\cell_4.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_3.\cell_4.$procmux$2916_Y, Q = \memory.mem.row_3.cell_4.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5433 ($sdff) from module top (D = $flatten\memory.\mem.\row_3.\cell_4.$procmux$2916_Y, Q = \memory.mem.row_3.cell_4.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_3.\cell_3.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_3.\cell_3.$procmux$2916_Y, Q = \memory.mem.row_3.cell_3.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5437 ($sdff) from module top (D = $flatten\memory.\mem.\row_3.\cell_3.$procmux$2916_Y, Q = \memory.mem.row_3.cell_3.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_3.\cell_2.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_3.\cell_2.$procmux$2916_Y, Q = \memory.mem.row_3.cell_2.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5441 ($sdff) from module top (D = $flatten\memory.\mem.\row_3.\cell_2.$procmux$2916_Y, Q = \memory.mem.row_3.cell_2.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_3.\cell_11.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_3.\cell_11.$procmux$2916_Y, Q = \memory.mem.row_3.cell_11.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5445 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_3.cell_11.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_3.\cell_10.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_3.\cell_10.$procmux$2916_Y, Q = \memory.mem.row_3.cell_10.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5447 ($sdff) from module top (D = $flatten\memory.\mem.\row_3.\cell_10.$procmux$2916_Y, Q = \memory.mem.row_3.cell_10.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_3.\cell_1.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_3.\cell_1.$procmux$2916_Y, Q = \memory.mem.row_3.cell_1.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5451 ($sdff) from module top (D = $flatten\memory.\mem.\row_3.\cell_1.$procmux$2916_Y, Q = \memory.mem.row_3.cell_1.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_3.\cell_0.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_3.\cell_0.$procmux$2916_Y, Q = \memory.mem.row_3.cell_0.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5455 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_3.cell_0.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_20.\cell_9.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_20.\cell_9.$procmux$2916_Y, Q = \memory.mem.row_20.cell_9.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5457 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_20.cell_9.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_20.\cell_8.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_20.\cell_8.$procmux$2916_Y, Q = \memory.mem.row_20.cell_8.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5459 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_20.cell_8.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_20.\cell_7.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_20.\cell_7.$procmux$2916_Y, Q = \memory.mem.row_20.cell_7.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5461 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_20.cell_7.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_20.\cell_6.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_20.\cell_6.$procmux$2916_Y, Q = \memory.mem.row_20.cell_6.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5463 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_20.cell_6.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_20.\cell_5.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_20.\cell_5.$procmux$2916_Y, Q = \memory.mem.row_20.cell_5.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5465 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_20.cell_5.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_20.\cell_4.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_20.\cell_4.$procmux$2916_Y, Q = \memory.mem.row_20.cell_4.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5467 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_20.cell_4.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_20.\cell_3.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_20.\cell_3.$procmux$2916_Y, Q = \memory.mem.row_20.cell_3.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5469 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_20.cell_3.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_20.\cell_2.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_20.\cell_2.$procmux$2916_Y, Q = \memory.mem.row_20.cell_2.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5471 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_20.cell_2.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_20.\cell_11.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_20.\cell_11.$procmux$2916_Y, Q = \memory.mem.row_20.cell_11.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5473 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_20.cell_11.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_20.\cell_10.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_20.\cell_10.$procmux$2916_Y, Q = \memory.mem.row_20.cell_10.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5475 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_20.cell_10.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_20.\cell_1.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_20.\cell_1.$procmux$2916_Y, Q = \memory.mem.row_20.cell_1.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5477 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_20.cell_1.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_20.\cell_0.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_20.\cell_0.$procmux$2916_Y, Q = \memory.mem.row_20.cell_0.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5479 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_20.cell_0.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_2.\cell_9.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_2.\cell_9.$procmux$2916_Y, Q = \memory.mem.row_2.cell_9.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5481 ($sdff) from module top (D = $flatten\memory.\mem.\row_2.\cell_9.$procmux$2916_Y, Q = \memory.mem.row_2.cell_9.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_2.\cell_8.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_2.\cell_8.$procmux$2916_Y, Q = \memory.mem.row_2.cell_8.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5485 ($sdff) from module top (D = $flatten\memory.\mem.\row_2.\cell_8.$procmux$2916_Y, Q = \memory.mem.row_2.cell_8.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_2.\cell_7.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_2.\cell_7.$procmux$2916_Y, Q = \memory.mem.row_2.cell_7.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5489 ($sdff) from module top (D = $flatten\memory.\mem.\row_2.\cell_7.$procmux$2916_Y, Q = \memory.mem.row_2.cell_7.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_2.\cell_6.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_2.\cell_6.$procmux$2916_Y, Q = \memory.mem.row_2.cell_6.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5493 ($sdff) from module top (D = $flatten\memory.\mem.\row_2.\cell_6.$procmux$2916_Y, Q = \memory.mem.row_2.cell_6.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_2.\cell_5.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_2.\cell_5.$procmux$2916_Y, Q = \memory.mem.row_2.cell_5.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5497 ($sdff) from module top (D = $flatten\memory.\mem.\row_2.\cell_5.$procmux$2916_Y, Q = \memory.mem.row_2.cell_5.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_2.\cell_4.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_2.\cell_4.$procmux$2916_Y, Q = \memory.mem.row_2.cell_4.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5501 ($sdff) from module top (D = $flatten\memory.\mem.\row_2.\cell_4.$procmux$2916_Y, Q = \memory.mem.row_2.cell_4.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_2.\cell_3.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_2.\cell_3.$procmux$2916_Y, Q = \memory.mem.row_2.cell_3.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5505 ($sdff) from module top (D = $flatten\memory.\mem.\row_2.\cell_3.$procmux$2916_Y, Q = \memory.mem.row_2.cell_3.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_2.\cell_2.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_2.\cell_2.$procmux$2916_Y, Q = \memory.mem.row_2.cell_2.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5509 ($sdff) from module top (D = $flatten\memory.\mem.\row_2.\cell_2.$procmux$2916_Y, Q = \memory.mem.row_2.cell_2.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_2.\cell_11.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_2.\cell_11.$procmux$2916_Y, Q = \memory.mem.row_2.cell_11.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5513 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_2.cell_11.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_2.\cell_10.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_2.\cell_10.$procmux$2916_Y, Q = \memory.mem.row_2.cell_10.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5515 ($sdff) from module top (D = $flatten\memory.\mem.\row_2.\cell_10.$procmux$2916_Y, Q = \memory.mem.row_2.cell_10.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_2.\cell_1.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_2.\cell_1.$procmux$2916_Y, Q = \memory.mem.row_2.cell_1.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5519 ($sdff) from module top (D = $flatten\memory.\mem.\row_2.\cell_1.$procmux$2916_Y, Q = \memory.mem.row_2.cell_1.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_2.\cell_0.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_2.\cell_0.$procmux$2916_Y, Q = \memory.mem.row_2.cell_0.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5523 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_2.cell_0.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_19.\cell_9.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_19.\cell_9.$procmux$2916_Y, Q = \memory.mem.row_19.cell_9.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5525 ($sdff) from module top (D = $flatten\memory.\mem.\row_19.\cell_9.$procmux$2916_Y, Q = \memory.mem.row_19.cell_9.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_19.\cell_8.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_19.\cell_8.$procmux$2916_Y, Q = \memory.mem.row_19.cell_8.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5529 ($sdff) from module top (D = $flatten\memory.\mem.\row_19.\cell_8.$procmux$2916_Y, Q = \memory.mem.row_19.cell_8.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_19.\cell_7.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_19.\cell_7.$procmux$2916_Y, Q = \memory.mem.row_19.cell_7.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5533 ($sdff) from module top (D = $flatten\memory.\mem.\row_19.\cell_7.$procmux$2916_Y, Q = \memory.mem.row_19.cell_7.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_19.\cell_6.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_19.\cell_6.$procmux$2916_Y, Q = \memory.mem.row_19.cell_6.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5537 ($sdff) from module top (D = $flatten\memory.\mem.\row_19.\cell_6.$procmux$2916_Y, Q = \memory.mem.row_19.cell_6.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_19.\cell_5.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_19.\cell_5.$procmux$2916_Y, Q = \memory.mem.row_19.cell_5.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5541 ($sdff) from module top (D = $flatten\memory.\mem.\row_19.\cell_5.$procmux$2916_Y, Q = \memory.mem.row_19.cell_5.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_19.\cell_4.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_19.\cell_4.$procmux$2916_Y, Q = \memory.mem.row_19.cell_4.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5545 ($sdff) from module top (D = $flatten\memory.\mem.\row_19.\cell_4.$procmux$2916_Y, Q = \memory.mem.row_19.cell_4.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_19.\cell_3.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_19.\cell_3.$procmux$2916_Y, Q = \memory.mem.row_19.cell_3.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5549 ($sdff) from module top (D = $flatten\memory.\mem.\row_19.\cell_3.$procmux$2916_Y, Q = \memory.mem.row_19.cell_3.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_19.\cell_2.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_19.\cell_2.$procmux$2916_Y, Q = \memory.mem.row_19.cell_2.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5553 ($sdff) from module top (D = $flatten\memory.\mem.\row_19.\cell_2.$procmux$2916_Y, Q = \memory.mem.row_19.cell_2.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_19.\cell_11.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_19.\cell_11.$procmux$2916_Y, Q = \memory.mem.row_19.cell_11.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5557 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_19.cell_11.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_19.\cell_10.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_19.\cell_10.$procmux$2916_Y, Q = \memory.mem.row_19.cell_10.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5559 ($sdff) from module top (D = $flatten\memory.\mem.\row_19.\cell_10.$procmux$2916_Y, Q = \memory.mem.row_19.cell_10.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_19.\cell_1.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_19.\cell_1.$procmux$2916_Y, Q = \memory.mem.row_19.cell_1.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5563 ($sdff) from module top (D = $flatten\memory.\mem.\row_19.\cell_1.$procmux$2916_Y, Q = \memory.mem.row_19.cell_1.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_19.\cell_0.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_19.\cell_0.$procmux$2916_Y, Q = \memory.mem.row_19.cell_0.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5567 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_19.cell_0.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_18.\cell_9.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_18.\cell_9.$procmux$2916_Y, Q = \memory.mem.row_18.cell_9.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5569 ($sdff) from module top (D = $flatten\memory.\mem.\row_18.\cell_9.$procmux$2916_Y, Q = \memory.mem.row_18.cell_9.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_18.\cell_8.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_18.\cell_8.$procmux$2916_Y, Q = \memory.mem.row_18.cell_8.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5573 ($sdff) from module top (D = $flatten\memory.\mem.\row_18.\cell_8.$procmux$2916_Y, Q = \memory.mem.row_18.cell_8.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_18.\cell_7.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_18.\cell_7.$procmux$2916_Y, Q = \memory.mem.row_18.cell_7.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5577 ($sdff) from module top (D = $flatten\memory.\mem.\row_18.\cell_7.$procmux$2916_Y, Q = \memory.mem.row_18.cell_7.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_18.\cell_6.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_18.\cell_6.$procmux$2916_Y, Q = \memory.mem.row_18.cell_6.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5581 ($sdff) from module top (D = $flatten\memory.\mem.\row_18.\cell_6.$procmux$2916_Y, Q = \memory.mem.row_18.cell_6.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_18.\cell_5.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_18.\cell_5.$procmux$2916_Y, Q = \memory.mem.row_18.cell_5.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5585 ($sdff) from module top (D = $flatten\memory.\mem.\row_18.\cell_5.$procmux$2916_Y, Q = \memory.mem.row_18.cell_5.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_18.\cell_4.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_18.\cell_4.$procmux$2916_Y, Q = \memory.mem.row_18.cell_4.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5589 ($sdff) from module top (D = $flatten\memory.\mem.\row_18.\cell_4.$procmux$2916_Y, Q = \memory.mem.row_18.cell_4.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_18.\cell_3.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_18.\cell_3.$procmux$2916_Y, Q = \memory.mem.row_18.cell_3.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5593 ($sdff) from module top (D = $flatten\memory.\mem.\row_18.\cell_3.$procmux$2916_Y, Q = \memory.mem.row_18.cell_3.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_18.\cell_2.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_18.\cell_2.$procmux$2916_Y, Q = \memory.mem.row_18.cell_2.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5597 ($sdff) from module top (D = $flatten\memory.\mem.\row_18.\cell_2.$procmux$2916_Y, Q = \memory.mem.row_18.cell_2.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_18.\cell_11.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_18.\cell_11.$procmux$2916_Y, Q = \memory.mem.row_18.cell_11.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5601 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_18.cell_11.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_18.\cell_10.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_18.\cell_10.$procmux$2916_Y, Q = \memory.mem.row_18.cell_10.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5603 ($sdff) from module top (D = $flatten\memory.\mem.\row_18.\cell_10.$procmux$2916_Y, Q = \memory.mem.row_18.cell_10.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_18.\cell_1.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_18.\cell_1.$procmux$2916_Y, Q = \memory.mem.row_18.cell_1.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5607 ($sdff) from module top (D = $flatten\memory.\mem.\row_18.\cell_1.$procmux$2916_Y, Q = \memory.mem.row_18.cell_1.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_18.\cell_0.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_18.\cell_0.$procmux$2916_Y, Q = \memory.mem.row_18.cell_0.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5611 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_18.cell_0.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_17.\cell_9.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_17.\cell_9.$procmux$2916_Y, Q = \memory.mem.row_17.cell_9.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5613 ($sdff) from module top (D = $flatten\memory.\mem.\row_17.\cell_9.$procmux$2916_Y, Q = \memory.mem.row_17.cell_9.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_17.\cell_8.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_17.\cell_8.$procmux$2916_Y, Q = \memory.mem.row_17.cell_8.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5617 ($sdff) from module top (D = $flatten\memory.\mem.\row_17.\cell_8.$procmux$2916_Y, Q = \memory.mem.row_17.cell_8.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_17.\cell_7.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_17.\cell_7.$procmux$2916_Y, Q = \memory.mem.row_17.cell_7.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5621 ($sdff) from module top (D = $flatten\memory.\mem.\row_17.\cell_7.$procmux$2916_Y, Q = \memory.mem.row_17.cell_7.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_17.\cell_6.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_17.\cell_6.$procmux$2916_Y, Q = \memory.mem.row_17.cell_6.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5625 ($sdff) from module top (D = $flatten\memory.\mem.\row_17.\cell_6.$procmux$2916_Y, Q = \memory.mem.row_17.cell_6.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_17.\cell_5.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_17.\cell_5.$procmux$2916_Y, Q = \memory.mem.row_17.cell_5.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5629 ($sdff) from module top (D = $flatten\memory.\mem.\row_17.\cell_5.$procmux$2916_Y, Q = \memory.mem.row_17.cell_5.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_17.\cell_4.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_17.\cell_4.$procmux$2916_Y, Q = \memory.mem.row_17.cell_4.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5633 ($sdff) from module top (D = $flatten\memory.\mem.\row_17.\cell_4.$procmux$2916_Y, Q = \memory.mem.row_17.cell_4.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_17.\cell_3.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_17.\cell_3.$procmux$2916_Y, Q = \memory.mem.row_17.cell_3.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5637 ($sdff) from module top (D = $flatten\memory.\mem.\row_17.\cell_3.$procmux$2916_Y, Q = \memory.mem.row_17.cell_3.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_17.\cell_2.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_17.\cell_2.$procmux$2916_Y, Q = \memory.mem.row_17.cell_2.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5641 ($sdff) from module top (D = $flatten\memory.\mem.\row_17.\cell_2.$procmux$2916_Y, Q = \memory.mem.row_17.cell_2.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_17.\cell_11.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_17.\cell_11.$procmux$2916_Y, Q = \memory.mem.row_17.cell_11.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5645 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_17.cell_11.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_17.\cell_10.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_17.\cell_10.$procmux$2916_Y, Q = \memory.mem.row_17.cell_10.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5647 ($sdff) from module top (D = $flatten\memory.\mem.\row_17.\cell_10.$procmux$2916_Y, Q = \memory.mem.row_17.cell_10.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_17.\cell_1.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_17.\cell_1.$procmux$2916_Y, Q = \memory.mem.row_17.cell_1.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5651 ($sdff) from module top (D = $flatten\memory.\mem.\row_17.\cell_1.$procmux$2916_Y, Q = \memory.mem.row_17.cell_1.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_17.\cell_0.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_17.\cell_0.$procmux$2916_Y, Q = \memory.mem.row_17.cell_0.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5655 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_17.cell_0.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_16.\cell_9.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_16.\cell_9.$procmux$2916_Y, Q = \memory.mem.row_16.cell_9.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5657 ($sdff) from module top (D = $flatten\memory.\mem.\row_16.\cell_9.$procmux$2916_Y, Q = \memory.mem.row_16.cell_9.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_16.\cell_8.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_16.\cell_8.$procmux$2916_Y, Q = \memory.mem.row_16.cell_8.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5661 ($sdff) from module top (D = $flatten\memory.\mem.\row_16.\cell_8.$procmux$2916_Y, Q = \memory.mem.row_16.cell_8.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_16.\cell_7.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_16.\cell_7.$procmux$2916_Y, Q = \memory.mem.row_16.cell_7.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5665 ($sdff) from module top (D = $flatten\memory.\mem.\row_16.\cell_7.$procmux$2916_Y, Q = \memory.mem.row_16.cell_7.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_16.\cell_6.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_16.\cell_6.$procmux$2916_Y, Q = \memory.mem.row_16.cell_6.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5669 ($sdff) from module top (D = $flatten\memory.\mem.\row_16.\cell_6.$procmux$2916_Y, Q = \memory.mem.row_16.cell_6.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_16.\cell_5.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_16.\cell_5.$procmux$2916_Y, Q = \memory.mem.row_16.cell_5.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5673 ($sdff) from module top (D = $flatten\memory.\mem.\row_16.\cell_5.$procmux$2916_Y, Q = \memory.mem.row_16.cell_5.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_16.\cell_4.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_16.\cell_4.$procmux$2916_Y, Q = \memory.mem.row_16.cell_4.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5677 ($sdff) from module top (D = $flatten\memory.\mem.\row_16.\cell_4.$procmux$2916_Y, Q = \memory.mem.row_16.cell_4.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_16.\cell_3.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_16.\cell_3.$procmux$2916_Y, Q = \memory.mem.row_16.cell_3.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5681 ($sdff) from module top (D = $flatten\memory.\mem.\row_16.\cell_3.$procmux$2916_Y, Q = \memory.mem.row_16.cell_3.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_16.\cell_2.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_16.\cell_2.$procmux$2916_Y, Q = \memory.mem.row_16.cell_2.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5685 ($sdff) from module top (D = $flatten\memory.\mem.\row_16.\cell_2.$procmux$2916_Y, Q = \memory.mem.row_16.cell_2.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_16.\cell_11.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_16.\cell_11.$procmux$2916_Y, Q = \memory.mem.row_16.cell_11.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5689 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_16.cell_11.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_16.\cell_10.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_16.\cell_10.$procmux$2916_Y, Q = \memory.mem.row_16.cell_10.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5691 ($sdff) from module top (D = $flatten\memory.\mem.\row_16.\cell_10.$procmux$2916_Y, Q = \memory.mem.row_16.cell_10.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_16.\cell_1.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_16.\cell_1.$procmux$2916_Y, Q = \memory.mem.row_16.cell_1.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5695 ($sdff) from module top (D = $flatten\memory.\mem.\row_16.\cell_1.$procmux$2916_Y, Q = \memory.mem.row_16.cell_1.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_16.\cell_0.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_16.\cell_0.$procmux$2916_Y, Q = \memory.mem.row_16.cell_0.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5699 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_16.cell_0.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_15.\cell_9.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_15.\cell_9.$procmux$2916_Y, Q = \memory.mem.row_15.cell_9.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5701 ($sdff) from module top (D = $flatten\memory.\mem.\row_15.\cell_9.$procmux$2916_Y, Q = \memory.mem.row_15.cell_9.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_15.\cell_8.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_15.\cell_8.$procmux$2916_Y, Q = \memory.mem.row_15.cell_8.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5705 ($sdff) from module top (D = $flatten\memory.\mem.\row_15.\cell_8.$procmux$2916_Y, Q = \memory.mem.row_15.cell_8.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_15.\cell_7.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_15.\cell_7.$procmux$2916_Y, Q = \memory.mem.row_15.cell_7.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5709 ($sdff) from module top (D = $flatten\memory.\mem.\row_15.\cell_7.$procmux$2916_Y, Q = \memory.mem.row_15.cell_7.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_15.\cell_6.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_15.\cell_6.$procmux$2916_Y, Q = \memory.mem.row_15.cell_6.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5713 ($sdff) from module top (D = $flatten\memory.\mem.\row_15.\cell_6.$procmux$2916_Y, Q = \memory.mem.row_15.cell_6.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_15.\cell_5.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_15.\cell_5.$procmux$2916_Y, Q = \memory.mem.row_15.cell_5.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5717 ($sdff) from module top (D = $flatten\memory.\mem.\row_15.\cell_5.$procmux$2916_Y, Q = \memory.mem.row_15.cell_5.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_15.\cell_4.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_15.\cell_4.$procmux$2916_Y, Q = \memory.mem.row_15.cell_4.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5721 ($sdff) from module top (D = $flatten\memory.\mem.\row_15.\cell_4.$procmux$2916_Y, Q = \memory.mem.row_15.cell_4.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_15.\cell_3.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_15.\cell_3.$procmux$2916_Y, Q = \memory.mem.row_15.cell_3.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5725 ($sdff) from module top (D = $flatten\memory.\mem.\row_15.\cell_3.$procmux$2916_Y, Q = \memory.mem.row_15.cell_3.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_15.\cell_2.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_15.\cell_2.$procmux$2916_Y, Q = \memory.mem.row_15.cell_2.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5729 ($sdff) from module top (D = $flatten\memory.\mem.\row_15.\cell_2.$procmux$2916_Y, Q = \memory.mem.row_15.cell_2.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_15.\cell_11.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_15.\cell_11.$procmux$2916_Y, Q = \memory.mem.row_15.cell_11.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5733 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_15.cell_11.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_15.\cell_10.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_15.\cell_10.$procmux$2916_Y, Q = \memory.mem.row_15.cell_10.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5735 ($sdff) from module top (D = $flatten\memory.\mem.\row_15.\cell_10.$procmux$2916_Y, Q = \memory.mem.row_15.cell_10.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_15.\cell_1.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_15.\cell_1.$procmux$2916_Y, Q = \memory.mem.row_15.cell_1.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5739 ($sdff) from module top (D = $flatten\memory.\mem.\row_15.\cell_1.$procmux$2916_Y, Q = \memory.mem.row_15.cell_1.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_15.\cell_0.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_15.\cell_0.$procmux$2916_Y, Q = \memory.mem.row_15.cell_0.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5743 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_15.cell_0.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_14.\cell_9.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_14.\cell_9.$procmux$2916_Y, Q = \memory.mem.row_14.cell_9.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5745 ($sdff) from module top (D = $flatten\memory.\mem.\row_14.\cell_9.$procmux$2916_Y, Q = \memory.mem.row_14.cell_9.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_14.\cell_8.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_14.\cell_8.$procmux$2916_Y, Q = \memory.mem.row_14.cell_8.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5749 ($sdff) from module top (D = $flatten\memory.\mem.\row_14.\cell_8.$procmux$2916_Y, Q = \memory.mem.row_14.cell_8.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_14.\cell_7.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_14.\cell_7.$procmux$2916_Y, Q = \memory.mem.row_14.cell_7.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5753 ($sdff) from module top (D = $flatten\memory.\mem.\row_14.\cell_7.$procmux$2916_Y, Q = \memory.mem.row_14.cell_7.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_14.\cell_6.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_14.\cell_6.$procmux$2916_Y, Q = \memory.mem.row_14.cell_6.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5757 ($sdff) from module top (D = $flatten\memory.\mem.\row_14.\cell_6.$procmux$2916_Y, Q = \memory.mem.row_14.cell_6.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_14.\cell_5.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_14.\cell_5.$procmux$2916_Y, Q = \memory.mem.row_14.cell_5.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5761 ($sdff) from module top (D = $flatten\memory.\mem.\row_14.\cell_5.$procmux$2916_Y, Q = \memory.mem.row_14.cell_5.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_14.\cell_4.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_14.\cell_4.$procmux$2916_Y, Q = \memory.mem.row_14.cell_4.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5765 ($sdff) from module top (D = $flatten\memory.\mem.\row_14.\cell_4.$procmux$2916_Y, Q = \memory.mem.row_14.cell_4.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_14.\cell_3.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_14.\cell_3.$procmux$2916_Y, Q = \memory.mem.row_14.cell_3.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5769 ($sdff) from module top (D = $flatten\memory.\mem.\row_14.\cell_3.$procmux$2916_Y, Q = \memory.mem.row_14.cell_3.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_14.\cell_2.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_14.\cell_2.$procmux$2916_Y, Q = \memory.mem.row_14.cell_2.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5773 ($sdff) from module top (D = $flatten\memory.\mem.\row_14.\cell_2.$procmux$2916_Y, Q = \memory.mem.row_14.cell_2.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_14.\cell_11.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_14.\cell_11.$procmux$2916_Y, Q = \memory.mem.row_14.cell_11.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5777 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_14.cell_11.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_14.\cell_10.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_14.\cell_10.$procmux$2916_Y, Q = \memory.mem.row_14.cell_10.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5779 ($sdff) from module top (D = $flatten\memory.\mem.\row_14.\cell_10.$procmux$2916_Y, Q = \memory.mem.row_14.cell_10.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_14.\cell_1.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_14.\cell_1.$procmux$2916_Y, Q = \memory.mem.row_14.cell_1.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5783 ($sdff) from module top (D = $flatten\memory.\mem.\row_14.\cell_1.$procmux$2916_Y, Q = \memory.mem.row_14.cell_1.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_14.\cell_0.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_14.\cell_0.$procmux$2916_Y, Q = \memory.mem.row_14.cell_0.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5787 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_14.cell_0.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_13.\cell_9.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_13.\cell_9.$procmux$2916_Y, Q = \memory.mem.row_13.cell_9.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5789 ($sdff) from module top (D = $flatten\memory.\mem.\row_13.\cell_9.$procmux$2916_Y, Q = \memory.mem.row_13.cell_9.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_13.\cell_8.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_13.\cell_8.$procmux$2916_Y, Q = \memory.mem.row_13.cell_8.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5793 ($sdff) from module top (D = $flatten\memory.\mem.\row_13.\cell_8.$procmux$2916_Y, Q = \memory.mem.row_13.cell_8.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_13.\cell_7.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_13.\cell_7.$procmux$2916_Y, Q = \memory.mem.row_13.cell_7.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5797 ($sdff) from module top (D = $flatten\memory.\mem.\row_13.\cell_7.$procmux$2916_Y, Q = \memory.mem.row_13.cell_7.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_13.\cell_6.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_13.\cell_6.$procmux$2916_Y, Q = \memory.mem.row_13.cell_6.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5801 ($sdff) from module top (D = $flatten\memory.\mem.\row_13.\cell_6.$procmux$2916_Y, Q = \memory.mem.row_13.cell_6.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_13.\cell_5.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_13.\cell_5.$procmux$2916_Y, Q = \memory.mem.row_13.cell_5.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5805 ($sdff) from module top (D = $flatten\memory.\mem.\row_13.\cell_5.$procmux$2916_Y, Q = \memory.mem.row_13.cell_5.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_13.\cell_4.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_13.\cell_4.$procmux$2916_Y, Q = \memory.mem.row_13.cell_4.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5809 ($sdff) from module top (D = $flatten\memory.\mem.\row_13.\cell_4.$procmux$2916_Y, Q = \memory.mem.row_13.cell_4.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_13.\cell_3.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_13.\cell_3.$procmux$2916_Y, Q = \memory.mem.row_13.cell_3.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5813 ($sdff) from module top (D = $flatten\memory.\mem.\row_13.\cell_3.$procmux$2916_Y, Q = \memory.mem.row_13.cell_3.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_13.\cell_2.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_13.\cell_2.$procmux$2916_Y, Q = \memory.mem.row_13.cell_2.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5817 ($sdff) from module top (D = $flatten\memory.\mem.\row_13.\cell_2.$procmux$2916_Y, Q = \memory.mem.row_13.cell_2.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_13.\cell_11.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_13.\cell_11.$procmux$2916_Y, Q = \memory.mem.row_13.cell_11.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5821 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_13.cell_11.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_13.\cell_10.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_13.\cell_10.$procmux$2916_Y, Q = \memory.mem.row_13.cell_10.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5823 ($sdff) from module top (D = $flatten\memory.\mem.\row_13.\cell_10.$procmux$2916_Y, Q = \memory.mem.row_13.cell_10.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_13.\cell_1.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_13.\cell_1.$procmux$2916_Y, Q = \memory.mem.row_13.cell_1.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5827 ($sdff) from module top (D = $flatten\memory.\mem.\row_13.\cell_1.$procmux$2916_Y, Q = \memory.mem.row_13.cell_1.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_13.\cell_0.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_13.\cell_0.$procmux$2916_Y, Q = \memory.mem.row_13.cell_0.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5831 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_13.cell_0.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_12.\cell_9.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_12.\cell_9.$procmux$2916_Y, Q = \memory.mem.row_12.cell_9.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5833 ($sdff) from module top (D = $flatten\memory.\mem.\row_12.\cell_9.$procmux$2916_Y, Q = \memory.mem.row_12.cell_9.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_12.\cell_8.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_12.\cell_8.$procmux$2916_Y, Q = \memory.mem.row_12.cell_8.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5837 ($sdff) from module top (D = $flatten\memory.\mem.\row_12.\cell_8.$procmux$2916_Y, Q = \memory.mem.row_12.cell_8.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_12.\cell_7.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_12.\cell_7.$procmux$2916_Y, Q = \memory.mem.row_12.cell_7.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5841 ($sdff) from module top (D = $flatten\memory.\mem.\row_12.\cell_7.$procmux$2916_Y, Q = \memory.mem.row_12.cell_7.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_12.\cell_6.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_12.\cell_6.$procmux$2916_Y, Q = \memory.mem.row_12.cell_6.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5845 ($sdff) from module top (D = $flatten\memory.\mem.\row_12.\cell_6.$procmux$2916_Y, Q = \memory.mem.row_12.cell_6.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_12.\cell_5.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_12.\cell_5.$procmux$2916_Y, Q = \memory.mem.row_12.cell_5.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5849 ($sdff) from module top (D = $flatten\memory.\mem.\row_12.\cell_5.$procmux$2916_Y, Q = \memory.mem.row_12.cell_5.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_12.\cell_4.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_12.\cell_4.$procmux$2916_Y, Q = \memory.mem.row_12.cell_4.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5853 ($sdff) from module top (D = $flatten\memory.\mem.\row_12.\cell_4.$procmux$2916_Y, Q = \memory.mem.row_12.cell_4.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_12.\cell_3.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_12.\cell_3.$procmux$2916_Y, Q = \memory.mem.row_12.cell_3.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5857 ($sdff) from module top (D = $flatten\memory.\mem.\row_12.\cell_3.$procmux$2916_Y, Q = \memory.mem.row_12.cell_3.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_12.\cell_2.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_12.\cell_2.$procmux$2916_Y, Q = \memory.mem.row_12.cell_2.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5861 ($sdff) from module top (D = $flatten\memory.\mem.\row_12.\cell_2.$procmux$2916_Y, Q = \memory.mem.row_12.cell_2.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_12.\cell_11.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_12.\cell_11.$procmux$2916_Y, Q = \memory.mem.row_12.cell_11.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5865 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_12.cell_11.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_12.\cell_10.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_12.\cell_10.$procmux$2916_Y, Q = \memory.mem.row_12.cell_10.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5867 ($sdff) from module top (D = $flatten\memory.\mem.\row_12.\cell_10.$procmux$2916_Y, Q = \memory.mem.row_12.cell_10.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_12.\cell_1.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_12.\cell_1.$procmux$2916_Y, Q = \memory.mem.row_12.cell_1.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5871 ($sdff) from module top (D = $flatten\memory.\mem.\row_12.\cell_1.$procmux$2916_Y, Q = \memory.mem.row_12.cell_1.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_12.\cell_0.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_12.\cell_0.$procmux$2916_Y, Q = \memory.mem.row_12.cell_0.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5875 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_12.cell_0.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_11.\cell_9.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_11.\cell_9.$procmux$2916_Y, Q = \memory.mem.row_11.cell_9.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5877 ($sdff) from module top (D = $flatten\memory.\mem.\row_11.\cell_9.$procmux$2916_Y, Q = \memory.mem.row_11.cell_9.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_11.\cell_8.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_11.\cell_8.$procmux$2916_Y, Q = \memory.mem.row_11.cell_8.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5881 ($sdff) from module top (D = $flatten\memory.\mem.\row_11.\cell_8.$procmux$2916_Y, Q = \memory.mem.row_11.cell_8.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_11.\cell_7.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_11.\cell_7.$procmux$2916_Y, Q = \memory.mem.row_11.cell_7.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5885 ($sdff) from module top (D = $flatten\memory.\mem.\row_11.\cell_7.$procmux$2916_Y, Q = \memory.mem.row_11.cell_7.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_11.\cell_6.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_11.\cell_6.$procmux$2916_Y, Q = \memory.mem.row_11.cell_6.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5889 ($sdff) from module top (D = $flatten\memory.\mem.\row_11.\cell_6.$procmux$2916_Y, Q = \memory.mem.row_11.cell_6.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_11.\cell_5.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_11.\cell_5.$procmux$2916_Y, Q = \memory.mem.row_11.cell_5.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5893 ($sdff) from module top (D = $flatten\memory.\mem.\row_11.\cell_5.$procmux$2916_Y, Q = \memory.mem.row_11.cell_5.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_11.\cell_4.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_11.\cell_4.$procmux$2916_Y, Q = \memory.mem.row_11.cell_4.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5897 ($sdff) from module top (D = $flatten\memory.\mem.\row_11.\cell_4.$procmux$2916_Y, Q = \memory.mem.row_11.cell_4.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_11.\cell_3.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_11.\cell_3.$procmux$2916_Y, Q = \memory.mem.row_11.cell_3.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5901 ($sdff) from module top (D = $flatten\memory.\mem.\row_11.\cell_3.$procmux$2916_Y, Q = \memory.mem.row_11.cell_3.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_11.\cell_2.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_11.\cell_2.$procmux$2916_Y, Q = \memory.mem.row_11.cell_2.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5905 ($sdff) from module top (D = $flatten\memory.\mem.\row_11.\cell_2.$procmux$2916_Y, Q = \memory.mem.row_11.cell_2.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_11.\cell_11.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_11.\cell_11.$procmux$2916_Y, Q = \memory.mem.row_11.cell_11.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5909 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_11.cell_11.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_11.\cell_10.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_11.\cell_10.$procmux$2916_Y, Q = \memory.mem.row_11.cell_10.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5911 ($sdff) from module top (D = $flatten\memory.\mem.\row_11.\cell_10.$procmux$2916_Y, Q = \memory.mem.row_11.cell_10.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_11.\cell_1.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_11.\cell_1.$procmux$2916_Y, Q = \memory.mem.row_11.cell_1.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5915 ($sdff) from module top (D = $flatten\memory.\mem.\row_11.\cell_1.$procmux$2916_Y, Q = \memory.mem.row_11.cell_1.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_11.\cell_0.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_11.\cell_0.$procmux$2916_Y, Q = \memory.mem.row_11.cell_0.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5919 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_11.cell_0.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_10.\cell_9.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_10.\cell_9.$procmux$2916_Y, Q = \memory.mem.row_10.cell_9.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5921 ($sdff) from module top (D = $flatten\memory.\mem.\row_10.\cell_9.$procmux$2916_Y, Q = \memory.mem.row_10.cell_9.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_10.\cell_8.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_10.\cell_8.$procmux$2916_Y, Q = \memory.mem.row_10.cell_8.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5925 ($sdff) from module top (D = $flatten\memory.\mem.\row_10.\cell_8.$procmux$2916_Y, Q = \memory.mem.row_10.cell_8.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_10.\cell_7.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_10.\cell_7.$procmux$2916_Y, Q = \memory.mem.row_10.cell_7.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5929 ($sdff) from module top (D = $flatten\memory.\mem.\row_10.\cell_7.$procmux$2916_Y, Q = \memory.mem.row_10.cell_7.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_10.\cell_6.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_10.\cell_6.$procmux$2916_Y, Q = \memory.mem.row_10.cell_6.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5933 ($sdff) from module top (D = $flatten\memory.\mem.\row_10.\cell_6.$procmux$2916_Y, Q = \memory.mem.row_10.cell_6.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_10.\cell_5.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_10.\cell_5.$procmux$2916_Y, Q = \memory.mem.row_10.cell_5.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5937 ($sdff) from module top (D = $flatten\memory.\mem.\row_10.\cell_5.$procmux$2916_Y, Q = \memory.mem.row_10.cell_5.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_10.\cell_4.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_10.\cell_4.$procmux$2916_Y, Q = \memory.mem.row_10.cell_4.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5941 ($sdff) from module top (D = $flatten\memory.\mem.\row_10.\cell_4.$procmux$2916_Y, Q = \memory.mem.row_10.cell_4.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_10.\cell_3.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_10.\cell_3.$procmux$2916_Y, Q = \memory.mem.row_10.cell_3.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5945 ($sdff) from module top (D = $flatten\memory.\mem.\row_10.\cell_3.$procmux$2916_Y, Q = \memory.mem.row_10.cell_3.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_10.\cell_2.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_10.\cell_2.$procmux$2916_Y, Q = \memory.mem.row_10.cell_2.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5949 ($sdff) from module top (D = $flatten\memory.\mem.\row_10.\cell_2.$procmux$2916_Y, Q = \memory.mem.row_10.cell_2.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_10.\cell_11.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_10.\cell_11.$procmux$2916_Y, Q = \memory.mem.row_10.cell_11.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5953 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_10.cell_11.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_10.\cell_10.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_10.\cell_10.$procmux$2916_Y, Q = \memory.mem.row_10.cell_10.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5955 ($sdff) from module top (D = $flatten\memory.\mem.\row_10.\cell_10.$procmux$2916_Y, Q = \memory.mem.row_10.cell_10.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_10.\cell_1.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_10.\cell_1.$procmux$2916_Y, Q = \memory.mem.row_10.cell_1.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5959 ($sdff) from module top (D = $flatten\memory.\mem.\row_10.\cell_1.$procmux$2916_Y, Q = \memory.mem.row_10.cell_1.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_10.\cell_0.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_10.\cell_0.$procmux$2916_Y, Q = \memory.mem.row_10.cell_0.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5963 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_10.cell_0.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_1.\cell_9.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_1.\cell_9.$procmux$2916_Y, Q = \memory.mem.row_1.cell_9.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5965 ($sdff) from module top (D = $flatten\memory.\mem.\row_1.\cell_9.$procmux$2916_Y, Q = \memory.mem.row_1.cell_9.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_1.\cell_8.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_1.\cell_8.$procmux$2916_Y, Q = \memory.mem.row_1.cell_8.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5969 ($sdff) from module top (D = $flatten\memory.\mem.\row_1.\cell_8.$procmux$2916_Y, Q = \memory.mem.row_1.cell_8.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_1.\cell_7.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_1.\cell_7.$procmux$2916_Y, Q = \memory.mem.row_1.cell_7.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5973 ($sdff) from module top (D = $flatten\memory.\mem.\row_1.\cell_7.$procmux$2916_Y, Q = \memory.mem.row_1.cell_7.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_1.\cell_6.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_1.\cell_6.$procmux$2916_Y, Q = \memory.mem.row_1.cell_6.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5977 ($sdff) from module top (D = $flatten\memory.\mem.\row_1.\cell_6.$procmux$2916_Y, Q = \memory.mem.row_1.cell_6.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_1.\cell_5.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_1.\cell_5.$procmux$2916_Y, Q = \memory.mem.row_1.cell_5.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5981 ($sdff) from module top (D = $flatten\memory.\mem.\row_1.\cell_5.$procmux$2916_Y, Q = \memory.mem.row_1.cell_5.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_1.\cell_4.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_1.\cell_4.$procmux$2916_Y, Q = \memory.mem.row_1.cell_4.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5985 ($sdff) from module top (D = $flatten\memory.\mem.\row_1.\cell_4.$procmux$2916_Y, Q = \memory.mem.row_1.cell_4.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_1.\cell_3.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_1.\cell_3.$procmux$2916_Y, Q = \memory.mem.row_1.cell_3.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5989 ($sdff) from module top (D = $flatten\memory.\mem.\row_1.\cell_3.$procmux$2916_Y, Q = \memory.mem.row_1.cell_3.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_1.\cell_2.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_1.\cell_2.$procmux$2916_Y, Q = \memory.mem.row_1.cell_2.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5993 ($sdff) from module top (D = $flatten\memory.\mem.\row_1.\cell_2.$procmux$2916_Y, Q = \memory.mem.row_1.cell_2.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_1.\cell_11.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_1.\cell_11.$procmux$2916_Y, Q = \memory.mem.row_1.cell_11.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5997 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_1.cell_11.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_1.\cell_10.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_1.\cell_10.$procmux$2916_Y, Q = \memory.mem.row_1.cell_10.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5999 ($sdff) from module top (D = $flatten\memory.\mem.\row_1.\cell_10.$procmux$2916_Y, Q = \memory.mem.row_1.cell_10.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_1.\cell_1.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_1.\cell_1.$procmux$2916_Y, Q = \memory.mem.row_1.cell_1.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$6003 ($sdff) from module top (D = $flatten\memory.\mem.\row_1.\cell_1.$procmux$2916_Y, Q = \memory.mem.row_1.cell_1.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_1.\cell_0.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_1.\cell_0.$procmux$2916_Y, Q = \memory.mem.row_1.cell_0.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$6007 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_1.cell_0.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_0.\cell_9.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_0.\cell_9.$procmux$2916_Y, Q = \memory.mem.row_0.cell_9.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$6009 ($sdff) from module top (D = $flatten\memory.\mem.\row_0.\cell_9.$procmux$2916_Y, Q = \memory.mem.row_0.cell_9.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_0.\cell_8.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_0.\cell_8.$procmux$2916_Y, Q = \memory.mem.row_0.cell_8.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$6013 ($sdff) from module top (D = $flatten\memory.\mem.\row_0.\cell_8.$procmux$2916_Y, Q = \memory.mem.row_0.cell_8.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_0.\cell_7.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_0.\cell_7.$procmux$2916_Y, Q = \memory.mem.row_0.cell_7.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$6017 ($sdff) from module top (D = $flatten\memory.\mem.\row_0.\cell_7.$procmux$2916_Y, Q = \memory.mem.row_0.cell_7.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_0.\cell_6.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_0.\cell_6.$procmux$2916_Y, Q = \memory.mem.row_0.cell_6.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$6021 ($sdff) from module top (D = $flatten\memory.\mem.\row_0.\cell_6.$procmux$2916_Y, Q = \memory.mem.row_0.cell_6.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_0.\cell_5.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_0.\cell_5.$procmux$2916_Y, Q = \memory.mem.row_0.cell_5.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$6025 ($sdff) from module top (D = $flatten\memory.\mem.\row_0.\cell_5.$procmux$2916_Y, Q = \memory.mem.row_0.cell_5.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_0.\cell_4.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_0.\cell_4.$procmux$2916_Y, Q = \memory.mem.row_0.cell_4.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$6029 ($sdff) from module top (D = $flatten\memory.\mem.\row_0.\cell_4.$procmux$2916_Y, Q = \memory.mem.row_0.cell_4.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_0.\cell_3.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_0.\cell_3.$procmux$2916_Y, Q = \memory.mem.row_0.cell_3.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$6033 ($sdff) from module top (D = $flatten\memory.\mem.\row_0.\cell_3.$procmux$2916_Y, Q = \memory.mem.row_0.cell_3.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_0.\cell_2.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_0.\cell_2.$procmux$2916_Y, Q = \memory.mem.row_0.cell_2.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$6037 ($sdff) from module top (D = $flatten\memory.\mem.\row_0.\cell_2.$procmux$2916_Y, Q = \memory.mem.row_0.cell_2.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_0.\cell_11.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_0.\cell_11.$procmux$2916_Y, Q = \memory.mem.row_0.cell_11.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$6041 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_0.cell_11.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_0.\cell_10.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_0.\cell_10.$procmux$2916_Y, Q = \memory.mem.row_0.cell_10.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$6043 ($sdff) from module top (D = $flatten\memory.\mem.\row_0.\cell_10.$procmux$2916_Y, Q = \memory.mem.row_0.cell_10.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_0.\cell_1.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_0.\cell_1.$procmux$2916_Y, Q = \memory.mem.row_0.cell_1.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$6047 ($sdff) from module top (D = $flatten\memory.\mem.\row_0.\cell_1.$procmux$2916_Y, Q = \memory.mem.row_0.cell_1.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_0.\cell_0.$procdff$3833 ($dff) from module top (D = $flatten\memory.\mem.\row_0.\cell_0.$procmux$2916_Y, Q = \memory.mem.row_0.cell_0.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$6051 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_0.cell_0.priv_mem).
Adding SRST signal on $flatten\memory.$procdff$3806 ($dff) from module top (D = $flatten\memory.$procmux$2403_Y, Q = \memory.perq, rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$6053 ($sdff) from module top (D = $flatten\memory.$procmux$2400_Y, Q = \memory.perq).
Adding SRST signal on $flatten\memory.$procdff$3805 ($dff) from module top (D = $flatten\memory.$procmux$2415_Y, Q = \memory.resetperiod_state, rval = 21'000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$6063 ($sdff) from module top (D = $flatten\memory.$procmux$2413_Y, Q = \memory.resetperiod_state).
Adding SRST signal on $flatten\memory.$procdff$3804 ($dff) from module top (D = $flatten\memory.$procmux$2423_Y, Q = \memory.resetperiod, rval = 1'1).
Adding SRST signal on $flatten\memory.$procdff$3802 ($dff) from module top (D = $flatten\memory.$procmux$2468_Y, Q = \memory.streak_cooldown, rval = 17'00000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$6070 ($sdff) from module top (D = $flatten\memory.$procmux$2465_Y, Q = \memory.streak_cooldown).
Adding SRST signal on $flatten\memory.$procdff$3800 ($dff) from module top (D = $flatten\memory.$procmux$2530_Y, Q = \memory.mm_colorsetter_value, rval = 3'110).
Adding EN signal on $auto$ff.cc:262:slice$6082 ($sdff) from module top (D = $flatten\memory.$procmux$2518_Y, Q = \memory.mm_colorsetter_value).
Adding SRST signal on $flatten\memory.$procdff$3799 ($dff) from module top (D = $flatten\memory.$procmux$2559_Y, Q = \memory.mm_colorsetter_commit, rval = 1'1).
Adding EN signal on $auto$ff.cc:262:slice$6092 ($sdff) from module top (D = $flatten\memory.$procmux$2559_Y, Q = \memory.mm_colorsetter_commit).
Adding SRST signal on $flatten\memory.$procdff$3798 ($dff) from module top (D = $flatten\memory.$procmux$2590_Y, Q = \memory.mm_colosetter_y, rval = 6'000000).
Adding EN signal on $auto$ff.cc:262:slice$6108 ($sdff) from module top (D = $flatten\memory.$procmux$2590_Y, Q = \memory.mm_colosetter_y).
Adding SRST signal on $flatten\memory.$procdff$3797 ($dff) from module top (D = $flatten\memory.$procmux$2621_Y, Q = \memory.mm_colosetter_x, rval = 6'000000).
Adding EN signal on $auto$ff.cc:262:slice$6124 ($sdff) from module top (D = $flatten\memory.$procmux$2621_Y, Q = \memory.mm_colosetter_x).
Adding SRST signal on $flatten\memory.$procdff$3796 ($dff) from module top (D = $flatten\memory.$procmux$2627_Y, Q = \memory.proposed_memval, rval = 3'111).
Adding EN signal on $auto$ff.cc:262:slice$6140 ($sdff) from module top (D = \memory.memvalwire, Q = \memory.proposed_memval).
Adding SRST signal on $flatten\memory.$procdff$3795 ($dff) from module top (D = $flatten\memory.$procmux$2643_Y, Q = \memory.cooldown, rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$6142 ($sdff) from module top (D = $flatten\memory.$procmux$2640_Y, Q = \memory.cooldown).
Adding SRST signal on $flatten\memory.$procdff$3794 ($dff) from module top (D = $flatten\memory.$procmux$2670_Y, Q = \memory.movement_steal, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$6152 ($sdff) from module top (D = $flatten\memory.$procmux$2667_Y, Q = \memory.movement_steal).
Adding SRST signal on $flatten\memory.$procdff$3793 ($dff) from module top (D = $flatten\memory.$procmux$2692_Y, Q = \memory.movement_commit, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$6154 ($sdff) from module top (D = $flatten\memory.$procmux$2689_Y, Q = \memory.movement_commit).
Adding SRST signal on $flatten\memory.$procdff$3792 ($dff) from module top (D = $flatten\memory.$procmux$2717_Y, Q = \memory.movement_declined, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$6156 ($sdff) from module top (D = $flatten\memory.$procmux$2714_Y, Q = \memory.movement_declined).
Adding EN signal on $flatten\memory.$procdff$3791 ($dff) from module top (D = $flatten\memory.$procmux$2737_Y, Q = \memory.scorewire).
Adding SRST signal on $flatten\game_manager.$procdff$3809 ($dff) from module top (D = $flatten\game_manager.$2\ipixstream[11:0], Q = \game_manager.ipixstream, rval = 12'000000000000).
Adding EN signal on $auto$ff.cc:262:slice$6169 ($sdff) from module top (D = \game_manager.texture_lookup, Q = \game_manager.ipixstream).
Adding SRST signal on $flatten\game_manager.$procdff$3808 ($dff) from module top (D = $flatten\game_manager.$procmux$2769_Y, Q = \game_manager.pixstream, rval = 12'000000000000).
Adding EN signal on $flatten\core.$procdff$3832 ($dff) from module top (D = $flatten\core.$lt$src/vga_core.v:82$931_Y, Q = \core.v_drawing_pixels).
Adding EN signal on $flatten\core.$procdff$3831 ($dff) from module top (D = $flatten\core.$lt$src/vga_core.v:81$930_Y, Q = \core.h_drawing_pixels).
Adding SRST signal on $flatten\core.$procdff$3830 ($dff) from module top (D = \core.pixstream [7:4], Q = \core.proposed_g, rval = 4'0000).
Adding SRST signal on $flatten\core.$procdff$3829 ($dff) from module top (D = \core.pixstream [11:8], Q = \core.proposed_b, rval = 4'0000).
Adding SRST signal on $flatten\core.$procdff$3828 ($dff) from module top (D = \core.pixstream [3:0], Q = \core.proposed_r, rval = 4'0000).
Adding SRST signal on $flatten\core.$procdff$3827 ($dff) from module top (D = $flatten\core.$procmux$2894_Y, Q = \core.vscan_pos, rval = 10'0000000000).
Adding EN signal on $auto$ff.cc:262:slice$6177 ($sdff) from module top (D = $flatten\core.$add$src/vga_core.v:89$941_Y, Q = \core.vscan_pos).
Adding SRST signal on $flatten\core.$procdff$3826 ($dff) from module top (D = $flatten\core.$add$src/vga_core.v:79$929_Y, Q = \core.hscan_pos, rval = 10'0000000000).
Adding EN signal on $flatten\core.$procdff$3825 ($dff) from module top (D = $flatten\core.$logic_not$src/vga_core.v:85$939_Y, Q = \core.v_sync).
Adding EN signal on $flatten\core.$procdff$3824 ($dff) from module top (D = $flatten\core.$logic_not$src/vga_core.v:84$935_Y, Q = \core.h_sync).
Adding EN signal on $flatten\core.$procdff$3823 ($dff) from module top (D = \core.vscan_pos, Q = \core.vreadwire).
Adding EN signal on $flatten\core.$procdff$3822 ($dff) from module top (D = \core.hscan_pos, Q = \core.hreadwire).

26.12.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 650 unused cells and 735 unused wires.
<suppressed ~651 debug messages>

26.12.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~327 debug messages>

26.12.9. Rerunning OPT passes. (Maybe there is more to do..)

26.12.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~793 debug messages>

26.12.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New input vector for $reduce_or cell $auto$opt_dff.cc:257:combine_resets$4441: { $flatten\vcell.$eq$src/volatile_cell_storage.v:219$1996_Y $flatten\vcell.\ishaper.$eq$src/tetron_I.v:52$1138_Y }
    New input vector for $reduce_or cell $auto$opt_dff.cc:257:combine_resets$4435: { $flatten\vcell.$eq$src/volatile_cell_storage.v:219$1996_Y $flatten\vcell.\ishaper.$eq$src/tetron_I.v:52$1138_Y $flatten\vcell.\ishaper.$eq$src/tetron_I.v:41$1137_Y }
    New input vector for $reduce_or cell $auto$opt_dff.cc:257:combine_resets$4424: { $flatten\vcell.$eq$src/volatile_cell_storage.v:219$1996_Y $flatten\vcell.\ishaper.$eq$src/tetron_I.v:52$1138_Y }
  Optimizing cells in module \top.
Performed a total of 3 changes.

26.12.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~792 debug messages>
Removed a total of 264 cells.

26.12.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $flatten\vcell.\oshaper.$procdff$3853 ($dff) from module top.
Setting constant 0-bit at position 1 on $flatten\vcell.\oshaper.$procdff$3853 ($dff) from module top.
Setting constant 0-bit at position 2 on $flatten\vcell.\oshaper.$procdff$3853 ($dff) from module top.
Setting constant 0-bit at position 3 on $flatten\vcell.\oshaper.$procdff$3853 ($dff) from module top.
Setting constant 0-bit at position 4 on $flatten\vcell.\oshaper.$procdff$3853 ($dff) from module top.
Handling always-active SRST on $auto$ff.cc:262:slice$4506 ($sdffe) from module top (changing to const D).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4506 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4506 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$4506 ($sdffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$4506 ($sdffe) from module top.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$4506 ($sdffe) from module top.
Handling always-active SRST on $auto$ff.cc:262:slice$4572 ($sdffe) from module top (changing to const D).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4572 ($sdffe) from module top.
Handling always-active SRST on $auto$ff.cc:262:slice$4720 ($sdffe) from module top (changing to const D).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4720 ($sdffe) from module top.
Handling always-active SRST on $auto$ff.cc:262:slice$4740 ($sdffe) from module top (changing to const D).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4740 ($sdffe) from module top.
Handling always-active SRST on $auto$ff.cc:262:slice$4350 ($sdffe) from module top (changing to const D).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4350 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4350 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$4350 ($sdffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$4350 ($sdffe) from module top.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$4350 ($sdffe) from module top.
Handling always-active SRST on $auto$ff.cc:262:slice$4752 ($sdffe) from module top (changing to const D).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4752 ($sdffe) from module top.
Handling always-active SRST on $auto$ff.cc:262:slice$4716 ($sdffe) from module top (changing to const D).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4716 ($sdffe) from module top.
Handling always-active SRST on $auto$ff.cc:262:slice$4569 ($sdffe) from module top (changing to const D).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4569 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4569 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$4569 ($sdffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$4569 ($sdffe) from module top.
Handling always-active SRST on $auto$ff.cc:262:slice$4498 ($sdffe) from module top (changing to const D).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4498 ($sdffe) from module top.
Handling always-active SRST on $auto$ff.cc:262:slice$4487 ($sdffe) from module top (changing to const D).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4487 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4487 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$4487 ($sdffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$4487 ($sdffe) from module top.
Removing never-active SRST on $auto$ff.cc:262:slice$4446 ($sdffe) from module top.
Adding SRST signal on $auto$ff.cc:262:slice$4446 ($sdffe) from module top (D = $flatten\vcell.\sbshaper.$procmux$3621_Y, Q = \vcell.sbshaper.blk2_hoffset, rval = 5'11111).
Removing never-active SRST on $auto$ff.cc:262:slice$4416 ($sdffe) from module top.
Handling always-active SRST on $auto$ff.cc:262:slice$4633 ($sdffe) from module top (changing to const D).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4633 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4633 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$4633 ($sdffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$4633 ($sdffe) from module top.
Handling always-active SRST on $auto$ff.cc:262:slice$4698 ($sdffe) from module top (changing to const D).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4698 ($sdffe) from module top.
Handling always-active SRST on $auto$ff.cc:262:slice$4749 ($sdffe) from module top (changing to const D).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4749 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4749 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$4749 ($sdffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$4749 ($sdffe) from module top.
Handling always-active SRST on $auto$ff.cc:262:slice$4756 ($sdffe) from module top (changing to const D).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4756 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4756 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$4756 ($sdffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$4756 ($sdffe) from module top.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$4756 ($sdffe) from module top.
Handling always-active SRST on $auto$ff.cc:262:slice$4779 ($sdffe) from module top (changing to const D).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4779 ($sdffe) from module top.
Handling always-active SRST on $auto$ff.cc:262:slice$4702 ($sdffe) from module top (changing to const D).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4702 ($sdffe) from module top.
Handling always-active SRST on $auto$ff.cc:262:slice$4524 ($sdffe) from module top (changing to const D).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4524 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4524 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$4524 ($sdffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$4524 ($sdffe) from module top.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$4524 ($sdffe) from module top.
Handling always-active SRST on $auto$ff.cc:262:slice$4548 ($sdffe) from module top (changing to const D).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4548 ($sdffe) from module top.
Handling always-active SRST on $auto$ff.cc:262:slice$4512 ($sdffe) from module top (changing to const D).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4512 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4512 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$4512 ($sdffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$4512 ($sdffe) from module top.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$4512 ($sdffe) from module top.
Handling always-active SRST on $auto$ff.cc:262:slice$4488 ($sdffe) from module top (changing to const D).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4488 ($sdffe) from module top.
Removing never-active SRST on $auto$ff.cc:262:slice$4478 ($sdffe) from module top.
Removing never-active SRST on $auto$ff.cc:262:slice$4428 ($sdffe) from module top.
Adding SRST signal on $auto$ff.cc:262:slice$4428 ($sdffe) from module top (D = $flatten\vcell.\sbshaper.$procmux$3586_Y [0], Q = \vcell.sbshaper.blk4_voffset [0], rval = 1'1).
Handling always-active SRST on $auto$ff.cc:262:slice$4383 ($sdffe) from module top (changing to const D).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4383 ($sdffe) from module top.
Handling always-active SRST on $auto$ff.cc:262:slice$4648 ($sdffe) from module top (changing to const D).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4648 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4648 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$4648 ($sdffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$4648 ($sdffe) from module top.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$4648 ($sdffe) from module top.
Handling always-active SRST on $auto$ff.cc:262:slice$4644 ($sdffe) from module top (changing to const D).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4644 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4644 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$4644 ($sdffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$4644 ($sdffe) from module top.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$4644 ($sdffe) from module top.
Handling always-active SRST on $auto$ff.cc:262:slice$4636 ($sdffe) from module top (changing to const D).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4636 ($sdffe) from module top.
Handling always-active SRST on $auto$ff.cc:262:slice$4624 ($sdffe) from module top (changing to const D).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4624 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4624 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$4624 ($sdffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$4624 ($sdffe) from module top.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$4624 ($sdffe) from module top.
Handling always-active SRST on $auto$ff.cc:262:slice$4358 ($sdffe) from module top (changing to const D).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4358 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4358 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$4358 ($sdffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$4358 ($sdffe) from module top.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$4358 ($sdffe) from module top.
Handling always-active SRST on $auto$ff.cc:262:slice$4672 ($sdffe) from module top (changing to const D).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4672 ($sdffe) from module top.

26.12.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 39 unused cells and 341 unused wires.
<suppressed ~46 debug messages>

26.12.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~38 debug messages>

26.12.16. Rerunning OPT passes. (Maybe there is more to do..)

26.12.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~759 debug messages>

26.12.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

26.12.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~81 debug messages>
Removed a total of 27 cells.

26.12.20. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:262:slice$4478 ($dffe) from module top (D = $flatten\vcell.\ishaper.$procmux$2844_Y [0], Q = \vcell.sbshaper.blk1_voffset [0], rval = 1'1).
Adding SRST signal on $auto$ff.cc:262:slice$4416 ($dffe) from module top (D = $flatten\vcell.\ishaper.$procmux$2807_Y [0], Q = \vcell.sbshaper.blk4_hoffset [0], rval = 1'1).
Adding SRST signal on $auto$ff.cc:262:slice$6193 ($sdffce) from module top (D = 1'x, Q = \vcell.sbshaper.blk4_voffset [0], rval = 1'1).
Setting constant 1-bit at position 0 on $auto$ff.cc:262:slice$6200 ($sdffce) from module top.

26.12.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 5 unused cells and 44 unused wires.
<suppressed ~18 debug messages>

26.12.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

26.12.23. Rerunning OPT passes. (Maybe there is more to do..)

26.12.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~758 debug messages>

26.12.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

26.12.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

26.12.27. Executing OPT_DFF pass (perform DFF optimizations).

26.12.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

26.12.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

26.12.30. Rerunning OPT passes. (Maybe there is more to do..)

26.12.31. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~758 debug messages>

26.12.32. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

26.12.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

26.12.34. Executing OPT_DFF pass (perform DFF optimizations).

26.12.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

26.12.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

26.12.37. Finished OPT passes. (There is nothing left to do.)

26.13. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 25) from port B of cell top.$flatten\t.$eq$src/timer.v:14$945 ($eq).
Removed top 2 bits (of 3) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$4266 ($eq).
Removed top 2 bits (of 6) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$4260 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$4316 ($eq).
Removed top 4 bits (of 5) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$4329 ($eq).
Removed top 2 bits (of 6) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$4325 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$4337 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$4333 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$4341 ($eq).
Removed top 1 bits (of 6) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$4205 ($eq).
Removed top 2 bits (of 7) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$4201 ($eq).
Removed top 4 bits (of 8) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$4197 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$4233 ($eq).
Removed top 2 bits (of 6) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$4229 ($eq).
Removed top 4 bits (of 7) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$4225 ($eq).
Removed top 2 bits (of 6) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$4221 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$4241 ($eq).
Removed top 5 bits (of 6) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$4237 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$4245 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$3939 ($eq).
Removed top 2 bits (of 3) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$3935 ($eq).
Removed top 2 bits (of 6) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$3933 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$3929 ($eq).
Removed top 2 bits (of 7) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$3927 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$3917 ($eq).
Removed top 5 bits (of 6) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:350$7 ($eq).
Removed top 4 bits (of 6) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:395$11 ($eq).
Removed top 4 bits (of 6) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:440$15 ($eq).
Removed top 3 bits (of 6) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:485$19 ($eq).
Removed top 3 bits (of 6) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:530$23 ($eq).
Removed top 3 bits (of 6) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:575$27 ($eq).
Removed top 3 bits (of 6) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:620$31 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1247$377 ($eq).
Removed top 2 bits (of 6) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:665$35 ($eq).
Removed top 2 bits (of 6) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:710$39 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1247$374 ($eq).
Removed top 2 bits (of 6) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:755$43 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1247$371 ($eq).
Removed top 2 bits (of 6) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:800$47 ($eq).
Removed top 2 bits (of 6) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:845$51 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1247$368 ($eq).
Removed top 2 bits (of 6) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:890$55 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1247$365 ($eq).
Removed top 2 bits (of 6) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:935$59 ($eq).
Removed top 2 bits (of 6) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:980$63 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1247$362 ($eq).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1025$67 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1247$359 ($eq).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1070$71 ($eq).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1115$75 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1247$356 ($eq).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1160$79 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1247$353 ($eq).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1205$83 ($eq).
Removed top 4 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1240$87 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1240$93 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1240$99 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1240$105 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1240$111 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1240$117 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1240$123 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1240$129 ($eq).
Removed top 4 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1244$149 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1244$152 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1244$155 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1244$158 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1244$161 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1244$164 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1244$167 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1244$170 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1244$173 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1244$176 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1244$179 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1244$182 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1244$185 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1244$188 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1244$191 ($eq).
Removed top 4 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1245$211 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1245$214 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1245$217 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1245$220 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1245$223 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1245$226 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1245$229 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1245$232 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1245$235 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1245$238 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1245$241 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1245$244 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1245$247 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1245$250 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1245$253 ($eq).
Removed top 4 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1246$273 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1246$276 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1246$279 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1246$282 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1246$285 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1246$288 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1246$291 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1246$294 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1246$297 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1246$300 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1246$303 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1246$306 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1246$309 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1246$312 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1246$315 ($eq).
Removed top 4 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1247$335 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1247$338 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1247$341 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1247$344 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1247$347 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1247$350 ($eq).
Removed cell top.$flatten\memory.\mem.\row_0.\cell_1.$procmux$2913 ($mux).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:173$909 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:160$906 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:147$903 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:186$912 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:134$900 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:199$915 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:121$897 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:108$894 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:95$891 ($eq).
Removed top 4 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:82$888 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:212$918 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:59$881 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:59$878 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:59$875 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:59$872 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:59$869 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:59$866 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:59$863 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:59$860 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:59$857 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:59$854 ($eq).
Removed top 4 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:59$851 ($eq).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_0.$shiftx$src/meta_memrow.v:0$848 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_0.$shiftx$src/meta_memrow.v:0$847 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_0.$shiftx$src/meta_memrow.v:0$846 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_0.$shiftx$src/meta_memrow.v:0$845 ($shiftx).
Removed cell top.$flatten\memory.\mem.\row_1.\cell_8.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_1.\cell_10.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_1.\cell_7.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_1.\cell_6.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_1.\cell_5.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_1.\cell_4.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_1.\cell_3.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_1.\cell_9.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_1.\cell_2.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_1.\cell_1.$procmux$2913 ($mux).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_1.$shiftx$src/meta_memrow.v:0$848 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_1.$shiftx$src/meta_memrow.v:0$847 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_1.$shiftx$src/meta_memrow.v:0$846 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_1.$shiftx$src/meta_memrow.v:0$845 ($shiftx).
Removed cell top.$flatten\memory.\mem.\row_2.\cell_8.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_2.\cell_10.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_2.\cell_7.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_2.\cell_6.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_2.\cell_5.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_2.\cell_4.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_2.\cell_3.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_2.\cell_9.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_2.\cell_2.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_2.\cell_1.$procmux$2913 ($mux).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_2.$shiftx$src/meta_memrow.v:0$848 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_2.$shiftx$src/meta_memrow.v:0$847 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_2.$shiftx$src/meta_memrow.v:0$846 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_2.$shiftx$src/meta_memrow.v:0$845 ($shiftx).
Removed cell top.$flatten\memory.\mem.\row_3.\cell_8.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_3.\cell_10.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_3.\cell_7.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_3.\cell_6.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_3.\cell_5.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_3.\cell_4.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_3.\cell_3.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_3.\cell_9.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_3.\cell_2.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_3.\cell_1.$procmux$2913 ($mux).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_3.$shiftx$src/meta_memrow.v:0$848 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_3.$shiftx$src/meta_memrow.v:0$847 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_3.$shiftx$src/meta_memrow.v:0$846 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_3.$shiftx$src/meta_memrow.v:0$845 ($shiftx).
Removed cell top.$flatten\memory.\mem.\row_4.\cell_8.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_4.\cell_10.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_4.\cell_7.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_4.\cell_6.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_4.\cell_5.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_4.\cell_4.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_4.\cell_3.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_4.\cell_9.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_4.\cell_2.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_4.\cell_1.$procmux$2913 ($mux).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_4.$shiftx$src/meta_memrow.v:0$848 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_4.$shiftx$src/meta_memrow.v:0$847 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_4.$shiftx$src/meta_memrow.v:0$846 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_4.$shiftx$src/meta_memrow.v:0$845 ($shiftx).
Removed cell top.$flatten\memory.\mem.\row_5.\cell_8.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_5.\cell_10.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_5.\cell_7.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_5.\cell_6.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_5.\cell_5.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_5.\cell_4.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_5.\cell_3.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_5.\cell_9.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_5.\cell_2.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_5.\cell_1.$procmux$2913 ($mux).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_5.$shiftx$src/meta_memrow.v:0$848 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_5.$shiftx$src/meta_memrow.v:0$847 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_5.$shiftx$src/meta_memrow.v:0$846 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_5.$shiftx$src/meta_memrow.v:0$845 ($shiftx).
Removed cell top.$flatten\memory.\mem.\row_6.\cell_8.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_6.\cell_10.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_6.\cell_7.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_6.\cell_6.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_6.\cell_5.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_6.\cell_4.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_6.\cell_3.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_6.\cell_9.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_6.\cell_2.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_6.\cell_1.$procmux$2913 ($mux).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_6.$shiftx$src/meta_memrow.v:0$848 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_6.$shiftx$src/meta_memrow.v:0$847 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_6.$shiftx$src/meta_memrow.v:0$846 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_6.$shiftx$src/meta_memrow.v:0$845 ($shiftx).
Removed cell top.$flatten\memory.\mem.\row_7.\cell_8.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_7.\cell_10.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_7.\cell_7.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_7.\cell_6.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_7.\cell_5.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_7.\cell_4.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_7.\cell_3.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_7.\cell_9.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_7.\cell_2.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_7.\cell_1.$procmux$2913 ($mux).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_7.$shiftx$src/meta_memrow.v:0$848 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_7.$shiftx$src/meta_memrow.v:0$847 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_7.$shiftx$src/meta_memrow.v:0$846 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_7.$shiftx$src/meta_memrow.v:0$845 ($shiftx).
Removed cell top.$flatten\memory.\mem.\row_8.\cell_8.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_8.\cell_10.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_8.\cell_7.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_8.\cell_6.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_8.\cell_5.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_8.\cell_4.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_8.\cell_3.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_8.\cell_9.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_8.\cell_2.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_8.\cell_1.$procmux$2913 ($mux).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_8.$shiftx$src/meta_memrow.v:0$848 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_8.$shiftx$src/meta_memrow.v:0$847 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_8.$shiftx$src/meta_memrow.v:0$846 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_8.$shiftx$src/meta_memrow.v:0$845 ($shiftx).
Removed cell top.$flatten\memory.\mem.\row_9.\cell_8.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_9.\cell_10.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_9.\cell_7.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_9.\cell_6.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_9.\cell_5.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_9.\cell_4.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_9.\cell_3.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_9.\cell_9.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_9.\cell_2.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_9.\cell_1.$procmux$2913 ($mux).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_9.$shiftx$src/meta_memrow.v:0$848 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_9.$shiftx$src/meta_memrow.v:0$847 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_9.$shiftx$src/meta_memrow.v:0$846 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_9.$shiftx$src/meta_memrow.v:0$845 ($shiftx).
Removed cell top.$flatten\memory.\mem.\row_10.\cell_8.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_10.\cell_10.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_10.\cell_7.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_10.\cell_6.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_10.\cell_5.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_10.\cell_4.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_10.\cell_3.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_10.\cell_9.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_10.\cell_2.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_10.\cell_1.$procmux$2913 ($mux).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_10.$shiftx$src/meta_memrow.v:0$848 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_10.$shiftx$src/meta_memrow.v:0$847 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_10.$shiftx$src/meta_memrow.v:0$846 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_10.$shiftx$src/meta_memrow.v:0$845 ($shiftx).
Removed cell top.$flatten\memory.\mem.\row_11.\cell_8.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_11.\cell_10.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_11.\cell_7.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_11.\cell_6.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_11.\cell_5.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_11.\cell_4.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_11.\cell_3.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_11.\cell_9.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_11.\cell_2.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_11.\cell_1.$procmux$2913 ($mux).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_11.$shiftx$src/meta_memrow.v:0$848 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_11.$shiftx$src/meta_memrow.v:0$847 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_11.$shiftx$src/meta_memrow.v:0$846 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_11.$shiftx$src/meta_memrow.v:0$845 ($shiftx).
Removed cell top.$flatten\memory.\mem.\row_12.\cell_8.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_12.\cell_10.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_12.\cell_7.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_12.\cell_6.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_12.\cell_5.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_12.\cell_4.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_12.\cell_3.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_12.\cell_9.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_12.\cell_2.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_12.\cell_1.$procmux$2913 ($mux).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_12.$shiftx$src/meta_memrow.v:0$848 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_12.$shiftx$src/meta_memrow.v:0$847 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_12.$shiftx$src/meta_memrow.v:0$846 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_12.$shiftx$src/meta_memrow.v:0$845 ($shiftx).
Removed cell top.$flatten\memory.\mem.\row_13.\cell_8.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_13.\cell_10.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_13.\cell_7.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_13.\cell_6.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_13.\cell_5.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_13.\cell_4.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_13.\cell_3.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_13.\cell_9.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_13.\cell_2.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_13.\cell_1.$procmux$2913 ($mux).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_13.$shiftx$src/meta_memrow.v:0$848 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_13.$shiftx$src/meta_memrow.v:0$847 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_13.$shiftx$src/meta_memrow.v:0$846 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_13.$shiftx$src/meta_memrow.v:0$845 ($shiftx).
Removed cell top.$flatten\memory.\mem.\row_14.\cell_8.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_14.\cell_10.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_14.\cell_7.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_14.\cell_6.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_14.\cell_5.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_14.\cell_4.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_14.\cell_3.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_14.\cell_9.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_14.\cell_2.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_14.\cell_1.$procmux$2913 ($mux).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_14.$shiftx$src/meta_memrow.v:0$848 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_14.$shiftx$src/meta_memrow.v:0$847 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_14.$shiftx$src/meta_memrow.v:0$846 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_14.$shiftx$src/meta_memrow.v:0$845 ($shiftx).
Removed cell top.$flatten\memory.\mem.\row_15.\cell_8.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_15.\cell_10.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_15.\cell_7.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_15.\cell_6.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_15.\cell_5.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_15.\cell_4.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_15.\cell_3.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_15.\cell_9.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_15.\cell_2.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_15.\cell_1.$procmux$2913 ($mux).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_15.$shiftx$src/meta_memrow.v:0$848 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_15.$shiftx$src/meta_memrow.v:0$847 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_15.$shiftx$src/meta_memrow.v:0$846 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_15.$shiftx$src/meta_memrow.v:0$845 ($shiftx).
Removed cell top.$flatten\memory.\mem.\row_16.\cell_8.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_16.\cell_10.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_16.\cell_7.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_16.\cell_6.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_16.\cell_5.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_16.\cell_4.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_16.\cell_3.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_16.\cell_9.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_16.\cell_2.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_16.\cell_1.$procmux$2913 ($mux).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_16.$shiftx$src/meta_memrow.v:0$848 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_16.$shiftx$src/meta_memrow.v:0$847 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_16.$shiftx$src/meta_memrow.v:0$846 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_16.$shiftx$src/meta_memrow.v:0$845 ($shiftx).
Removed cell top.$flatten\memory.\mem.\row_17.\cell_8.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_17.\cell_10.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_17.\cell_7.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_17.\cell_6.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_17.\cell_5.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_17.\cell_4.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_17.\cell_3.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_17.\cell_9.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_17.\cell_2.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_17.\cell_1.$procmux$2913 ($mux).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_17.$shiftx$src/meta_memrow.v:0$848 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_17.$shiftx$src/meta_memrow.v:0$847 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_17.$shiftx$src/meta_memrow.v:0$846 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_17.$shiftx$src/meta_memrow.v:0$845 ($shiftx).
Removed cell top.$flatten\memory.\mem.\row_18.\cell_8.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_18.\cell_10.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_18.\cell_7.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_18.\cell_6.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_18.\cell_5.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_18.\cell_4.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_18.\cell_3.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_18.\cell_9.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_18.\cell_2.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_18.\cell_1.$procmux$2913 ($mux).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_18.$shiftx$src/meta_memrow.v:0$848 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_18.$shiftx$src/meta_memrow.v:0$847 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_18.$shiftx$src/meta_memrow.v:0$846 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_18.$shiftx$src/meta_memrow.v:0$845 ($shiftx).
Removed cell top.$flatten\memory.\mem.\row_19.\cell_8.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_19.\cell_10.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_19.\cell_7.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_19.\cell_6.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_19.\cell_5.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_19.\cell_4.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_19.\cell_3.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_19.\cell_9.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_19.\cell_2.$procmux$2913 ($mux).
Removed cell top.$flatten\memory.\mem.\row_19.\cell_1.$procmux$2913 ($mux).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_19.$shiftx$src/meta_memrow.v:0$848 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_19.$shiftx$src/meta_memrow.v:0$847 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_19.$shiftx$src/meta_memrow.v:0$846 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_19.$shiftx$src/meta_memrow.v:0$845 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_20.$shiftx$src/meta_memrow.v:0$848 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_20.$shiftx$src/meta_memrow.v:0$847 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_20.$shiftx$src/meta_memrow.v:0$846 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_20.$shiftx$src/meta_memrow.v:0$845 ($shiftx).
Removed top 1 bits (of 6) from port A of cell top.$flatten\memory.\sh.$lt$src/shifter.v:48$843 ($lt).
Removed top 1 bits (of 6) from port A of cell top.$flatten\memory.\sh.$lt$src/shifter.v:47$842 ($lt).
Removed top 1 bits (of 6) from port A of cell top.$flatten\memory.\sh.$lt$src/shifter.v:46$841 ($lt).
Removed top 3 bits (of 6) from mux cell top.$flatten\memory.\sh.$ternary$src/shifter.v:10$766 ($mux).
Removed top 3 bits (of 6) from mux cell top.$flatten\memory.\sh.$ternary$src/shifter.v:10$767 ($mux).
Removed top 3 bits (of 6) from mux cell top.$flatten\memory.\sh.$ternary$src/shifter.v:10$768 ($mux).
Removed top 3 bits (of 6) from mux cell top.$flatten\memory.\sh.$ternary$src/shifter.v:10$769 ($mux).
Removed top 1 bits (of 6) from port A of cell top.$flatten\memory.\sh.$lt$src/shifter.v:45$840 ($lt).
Removed top 1 bits (of 6) from port A of cell top.$flatten\memory.\sh.$lt$src/shifter.v:44$839 ($lt).
Removed top 1 bits (of 6) from port A of cell top.$flatten\memory.\sh.$lt$src/shifter.v:43$838 ($lt).
Removed top 1 bits (of 6) from port A of cell top.$flatten\memory.\sh.$lt$src/shifter.v:42$837 ($lt).
Removed top 2 bits (of 6) from mux cell top.$flatten\memory.\sh.$ternary$src/shifter.v:12$774 ($mux).
Removed top 2 bits (of 6) from mux cell top.$flatten\memory.\sh.$ternary$src/shifter.v:12$775 ($mux).
Removed top 2 bits (of 6) from mux cell top.$flatten\memory.\sh.$ternary$src/shifter.v:12$776 ($mux).
Removed top 2 bits (of 6) from mux cell top.$flatten\memory.\sh.$ternary$src/shifter.v:12$777 ($mux).
Removed top 2 bits (of 6) from port A of cell top.$flatten\memory.\sh.$lt$src/shifter.v:41$836 ($lt).
Removed top 2 bits (of 6) from port A of cell top.$flatten\memory.\sh.$lt$src/shifter.v:40$835 ($lt).
Removed top 2 bits (of 6) from port A of cell top.$flatten\memory.\sh.$lt$src/shifter.v:39$834 ($lt).
Removed top 2 bits (of 6) from port A of cell top.$flatten\memory.\sh.$lt$src/shifter.v:38$833 ($lt).
Removed top 2 bits (of 6) from mux cell top.$flatten\memory.\sh.$ternary$src/shifter.v:14$782 ($mux).
Removed top 2 bits (of 6) from mux cell top.$flatten\memory.\sh.$ternary$src/shifter.v:14$783 ($mux).
Removed top 2 bits (of 6) from mux cell top.$flatten\memory.\sh.$ternary$src/shifter.v:14$784 ($mux).
Removed top 2 bits (of 6) from mux cell top.$flatten\memory.\sh.$ternary$src/shifter.v:14$785 ($mux).
Removed top 2 bits (of 6) from port A of cell top.$flatten\memory.\sh.$lt$src/shifter.v:37$832 ($lt).
Removed top 2 bits (of 6) from port A of cell top.$flatten\memory.\sh.$lt$src/shifter.v:36$831 ($lt).
Removed top 2 bits (of 6) from port A of cell top.$flatten\memory.\sh.$lt$src/shifter.v:35$830 ($lt).
Removed top 2 bits (of 6) from port A of cell top.$flatten\memory.\sh.$lt$src/shifter.v:34$829 ($lt).
Removed top 1 bits (of 6) from mux cell top.$flatten\memory.\sh.$ternary$src/shifter.v:16$790 ($mux).
Removed top 1 bits (of 6) from mux cell top.$flatten\memory.\sh.$ternary$src/shifter.v:16$791 ($mux).
Removed top 1 bits (of 6) from mux cell top.$flatten\memory.\sh.$ternary$src/shifter.v:16$792 ($mux).
Removed top 1 bits (of 6) from mux cell top.$flatten\memory.\sh.$ternary$src/shifter.v:16$793 ($mux).
Removed top 3 bits (of 6) from port A of cell top.$flatten\memory.\sh.$lt$src/shifter.v:33$828 ($lt).
Removed top 3 bits (of 6) from port A of cell top.$flatten\memory.\sh.$lt$src/shifter.v:32$827 ($lt).
Removed top 3 bits (of 6) from port A of cell top.$flatten\memory.\sh.$lt$src/shifter.v:31$826 ($lt).
Removed top 3 bits (of 6) from port A of cell top.$flatten\memory.\sh.$lt$src/shifter.v:30$825 ($lt).
Removed top 1 bits (of 6) from mux cell top.$flatten\memory.\sh.$ternary$src/shifter.v:18$798 ($mux).
Removed top 1 bits (of 6) from mux cell top.$flatten\memory.\sh.$ternary$src/shifter.v:18$799 ($mux).
Removed top 1 bits (of 6) from mux cell top.$flatten\memory.\sh.$ternary$src/shifter.v:18$800 ($mux).
Removed top 1 bits (of 6) from mux cell top.$flatten\memory.\sh.$ternary$src/shifter.v:18$801 ($mux).
Removed top 4 bits (of 6) from port A of cell top.$flatten\memory.\sh.$lt$src/shifter.v:29$824 ($lt).
Removed top 4 bits (of 6) from port A of cell top.$flatten\memory.\sh.$lt$src/shifter.v:28$823 ($lt).
Removed top 5 bits (of 6) from port A of cell top.$flatten\memory.\sh.$lt$src/shifter.v:27$822 ($lt).
Removed top 1 bits (of 6) from mux cell top.$flatten\memory.\sh.$ternary$src/shifter.v:20$805 ($mux).
Removed top 1 bits (of 6) from mux cell top.$flatten\memory.\sh.$ternary$src/shifter.v:20$806 ($mux).
Removed top 3 bits (of 6) from port A of cell top.$flatten\memory.\sh.$gt$src/shifter.v:23$808 ($gt).
Removed top 5 bits (of 6) from port B of cell top.$flatten\memory.\sh.$gt$src/shifter.v:23$808 ($gt).
Removed top 2 bits (of 6) from port A of cell top.$flatten\memory.\sh.$gt$src/shifter.v:23$809 ($gt).
Removed top 5 bits (of 6) from port B of cell top.$flatten\memory.\sh.$gt$src/shifter.v:23$809 ($gt).
Removed top 2 bits (of 6) from port A of cell top.$flatten\memory.\sh.$gt$src/shifter.v:23$810 ($gt).
Removed top 5 bits (of 6) from port B of cell top.$flatten\memory.\sh.$gt$src/shifter.v:23$810 ($gt).
Removed top 1 bits (of 6) from port A of cell top.$flatten\memory.\sh.$gt$src/shifter.v:23$811 ($gt).
Removed top 5 bits (of 6) from port B of cell top.$flatten\memory.\sh.$gt$src/shifter.v:23$811 ($gt).
Removed top 1 bits (of 6) from port A of cell top.$flatten\memory.\sh.$gt$src/shifter.v:23$812 ($gt).
Removed top 5 bits (of 6) from port B of cell top.$flatten\memory.\sh.$gt$src/shifter.v:23$812 ($gt).
Removed top 1 bits (of 6) from port A of cell top.$flatten\memory.\sh.$gt$src/shifter.v:23$813 ($gt).
Removed top 5 bits (of 6) from port B of cell top.$flatten\memory.\sh.$gt$src/shifter.v:23$813 ($gt).
Removed top 1 bits (of 6) from mux cell top.$flatten\memory.\sh.$ternary$src/shifter.v:23$814 ($mux).
Removed top 1 bits (of 6) from mux cell top.$flatten\memory.\sh.$ternary$src/shifter.v:23$815 ($mux).
Removed top 1 bits (of 6) from mux cell top.$flatten\memory.\sh.$ternary$src/shifter.v:23$816 ($mux).
Removed top 1 bits (of 6) from mux cell top.$flatten\memory.\sh.$ternary$src/shifter.v:23$817 ($mux).
Removed top 1 bits (of 6) from mux cell top.$flatten\memory.\sh.$ternary$src/shifter.v:23$818 ($mux).
Removed top 1 bits (of 6) from mux cell top.$flatten\memory.\sh.$ternary$src/shifter.v:23$819 ($mux).
Removed top 5 bits (of 6) from port A of cell top.$flatten\memory.\sh.$lt$src/shifter.v:26$821 ($lt).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\sh.$lt$src/shifter.v:26$821 ($lt).
Removed cell top.$flatten\memory.$procmux$2728 ($mux).
Removed cell top.$flatten\memory.$procmux$2725 ($mux).
Removed cell top.$flatten\memory.$procmux$2722 ($mux).
Removed cell top.$flatten\memory.$procmux$2634 ($mux).
Removed cell top.$flatten\memory.$procmux$2632 ($mux).
Removed cell top.$flatten\memory.$procmux$2615 ($mux).
Removed cell top.$flatten\memory.$procmux$2612 ($mux).
Removed cell top.$flatten\memory.$procmux$2610 ($mux).
Removed cell top.$flatten\memory.$procmux$2608 ($mux).
Removed cell top.$flatten\memory.$procmux$2606 ($mux).
Removed cell top.$flatten\memory.$procmux$2597 ($mux).
Removed cell top.$flatten\memory.$procmux$2584 ($mux).
Removed cell top.$flatten\memory.$procmux$2581 ($mux).
Removed cell top.$flatten\memory.$procmux$2579 ($mux).
Removed cell top.$flatten\memory.$procmux$2577 ($mux).
Removed cell top.$flatten\memory.$procmux$2575 ($mux).
Removed cell top.$flatten\memory.$procmux$2566 ($mux).
Removed cell top.$flatten\memory.$procmux$2557 ($mux).
Removed cell top.$flatten\memory.$procmux$2554 ($mux).
Removed cell top.$flatten\memory.$procmux$2552 ($mux).
Removed cell top.$flatten\memory.$procmux$2550 ($mux).
Removed cell top.$flatten\memory.$procmux$2548 ($mux).
Removed cell top.$flatten\memory.$procmux$2537 ($mux).
Removed cell top.$flatten\memory.$procmux$2512 ($mux).
Removed cell top.$flatten\memory.$procmux$2460 ($mux).
Removed cell top.$flatten\memory.$procmux$2457 ($mux).
Removed cell top.$flatten\memory.$procmux$2455 ($mux).
Removed cell top.$flatten\memory.$procmux$2409 ($mux).
Removed cell top.$flatten\memory.$procmux$2395 ($mux).
Removed cell top.$flatten\memory.$procmux$2392 ($mux).
Removed top 31 bits (of 32) from port B of cell top.$flatten\memory.$sub$src/blockmemory.v:223$1450 ($sub).
Removed top 26 bits (of 32) from port Y of cell top.$flatten\memory.$sub$src/blockmemory.v:223$1450 ($sub).
Removed top 31 bits (of 32) from port B of cell top.$flatten\memory.$sub$src/blockmemory.v:215$1448 ($sub).
Removed top 26 bits (of 32) from port Y of cell top.$flatten\memory.$sub$src/blockmemory.v:215$1448 ($sub).
Removed top 31 bits (of 32) from port B of cell top.$flatten\memory.$sub$src/blockmemory.v:207$1446 ($sub).
Removed top 26 bits (of 32) from port Y of cell top.$flatten\memory.$sub$src/blockmemory.v:207$1446 ($sub).
Removed top 31 bits (of 32) from port B of cell top.$flatten\memory.$sub$src/blockmemory.v:199$1444 ($sub).
Removed top 26 bits (of 32) from port Y of cell top.$flatten\memory.$sub$src/blockmemory.v:199$1444 ($sub).
Removed top 3 bits (of 4) from port B of cell top.$flatten\memory.$eq$src/blockmemory.v:189$1441 ($eq).
Removed top 31 bits (of 32) from port B of cell top.$flatten\memory.$gt$src/blockmemory.v:188$1440 ($gt).
Removed top 31 bits (of 32) from port B of cell top.$flatten\memory.$gt$src/blockmemory.v:182$1438 ($gt).
Removed top 31 bits (of 32) from port B of cell top.$flatten\memory.$gt$src/blockmemory.v:179$1436 ($gt).
Removed top 26 bits (of 32) from port B of cell top.$flatten\memory.$ge$src/blockmemory.v:140$1426 ($ge).
Removed top 26 bits (of 32) from port B of cell top.$flatten\memory.$sub$src/blockmemory.v:136$1424 ($sub).
Removed top 26 bits (of 32) from port Y of cell top.$flatten\memory.$sub$src/blockmemory.v:136$1424 ($sub).
Removed top 26 bits (of 32) from port B of cell top.$flatten\memory.$lt$src/blockmemory.v:135$1422 ($lt).
Removed top 26 bits (of 32) from port B of cell top.$flatten\memory.$ge$src/blockmemory.v:135$1421 ($ge).
Removed top 27 bits (of 32) from port B of cell top.$flatten\memory.$sub$src/blockmemory.v:132$1419 ($sub).
Removed top 26 bits (of 32) from port Y of cell top.$flatten\memory.$sub$src/blockmemory.v:132$1419 ($sub).
Removed top 26 bits (of 32) from port B of cell top.$flatten\memory.$lt$src/blockmemory.v:130$1417 ($lt).
Removed top 27 bits (of 32) from port B of cell top.$flatten\memory.$ge$src/blockmemory.v:130$1416 ($ge).
Removed top 27 bits (of 32) from port B of cell top.$flatten\memory.$lt$src/blockmemory.v:125$1414 ($lt).
Removed top 3 bits (of 23) from mux cell top.$flatten\memory.$ternary$src/blockmemory.v:66$1409 ($mux).
Removed top 2 bits (of 8) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$3915 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$auto$opt_dff.cc:198:make_patterns_logic$6095 ($ne).
Removed top 4 bits (of 5) from FF cell top.$auto$ff.cc:262:slice$4436 ($sdffe).
Removed top 7 bits (of 10) from port B of cell top.$auto$opt_dff.cc:198:make_patterns_logic$6097 ($ne).
Removed cell top.$flatten\vcell.\lbshaper.$procmux$3020 ($mux).
Removed top 6 bits (of 9) from port B of cell top.$auto$opt_dff.cc:198:make_patterns_logic$6113 ($ne).
Removed top 1 bits (of 3) from port B of cell top.$auto$opt_dff.cc:198:make_patterns_logic$6101 ($ne).
Removed top 2 bits (of 3) from port B of cell top.$flatten\vcell.\ishaper.$eq$src/tetron_I.v:41$1137 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$flatten\vcell.\ishaper.$eq$src/tetron_I.v:52$1138 ($eq).
Removed cell top.$flatten\vcell.\ishaper.$procmux$2807 ($mux).
Removed cell top.$flatten\vcell.\ishaper.$procmux$2818 ($mux).
Removed cell top.$flatten\vcell.\ishaper.$procmux$2829 ($mux).
Removed cell top.$flatten\vcell.\ishaper.$procmux$2842 ($mux).
Removed cell top.$flatten\vcell.\ishaper.$procmux$2844 ($mux).
Removed top 4 bits (of 5) from mux cell top.$flatten\vcell.\ishaper.$procmux$2855 ($mux).
Removed cell top.$flatten\vcell.$procmux$2337 ($mux).
Removed cell top.$flatten\vcell.$procmux$2334 ($mux).
Removed cell top.$flatten\vcell.$procmux$2331 ($mux).
Removed cell top.$flatten\vcell.$procmux$2328 ($mux).
Removed cell top.$flatten\vcell.$procmux$2325 ($mux).
Removed cell top.$flatten\vcell.$procmux$2322 ($mux).
Removed cell top.$flatten\vcell.$procmux$2316 ($mux).
Removed cell top.$flatten\vcell.$procmux$2304 ($mux).
Removed cell top.$flatten\vcell.$procmux$2283 ($mux).
Removed cell top.$flatten\vcell.$procmux$2267 ($mux).
Removed cell top.$flatten\vcell.$procmux$2258 ($mux).
Removed cell top.$flatten\vcell.$procmux$2241 ($mux).
Removed cell top.$flatten\vcell.$procmux$2238 ($mux).
Removed cell top.$flatten\vcell.$procmux$2235 ($mux).
Removed cell top.$flatten\vcell.$procmux$2229 ($mux).
Removed cell top.$flatten\vcell.$procmux$2223 ($mux).
Removed cell top.$flatten\vcell.$procmux$2213 ($mux).
Removed cell top.$flatten\vcell.$procmux$2211 ($mux).
Removed cell top.$flatten\vcell.$procmux$2204 ($mux).
Removed cell top.$flatten\vcell.$procmux$2178 ($mux).
Removed cell top.$flatten\vcell.$procmux$2158 ($mux).
Removed cell top.$flatten\vcell.$procmux$2154 ($mux).
Removed cell top.$flatten\vcell.$procmux$2145 ($mux).
Removed cell top.$flatten\vcell.$procmux$2137 ($mux).
Removed cell top.$flatten\vcell.$procmux$2109 ($mux).
Removed cell top.$flatten\vcell.$procmux$2099 ($mux).
Removed cell top.$flatten\vcell.$procmux$2092 ($mux).
Removed cell top.$flatten\vcell.$procmux$2076 ($mux).
Removed cell top.$flatten\vcell.$procmux$2048 ($mux).
Removed cell top.$flatten\vcell.$procmux$2046 ($mux).
Removed top 31 bits (of 32) from port B of cell top.$flatten\vcell.$gt$src/volatile_cell_storage.v:223$1999 ($gt).
Removed top 1 bits (of 3) from port B of cell top.$flatten\vcell.$eq$src/volatile_cell_storage.v:219$1996 ($eq).
Removed top 25 bits (of 26) from port B of cell top.$flatten\vcell.$and$src/volatile_cell_storage.v:217$1993 ($and).
Removed top 25 bits (of 26) from port A of cell top.$flatten\vcell.$and$src/volatile_cell_storage.v:217$1991 ($and).
Removed top 25 bits (of 26) from port B of cell top.$flatten\vcell.$and$src/volatile_cell_storage.v:211$1985 ($and).
Removed top 25 bits (of 26) from port A of cell top.$flatten\vcell.$and$src/volatile_cell_storage.v:211$1983 ($and).
Removed top 4 bits (of 5) from port B of cell top.$flatten\vcell.$add$src/volatile_cell_storage.v:65$1952 ($add).
Removed top 4 bits (of 5) from port B of cell top.$flatten\vcell.$add$src/volatile_cell_storage.v:62$1931 ($add).
Removed top 4 bits (of 5) from port B of cell top.$flatten\vcell.$add$src/volatile_cell_storage.v:58$1903 ($add).
Removed top 26 bits (of 32) from port B of cell top.$flatten\screen_mngr.$lt$src/screen_manager.v:12$706 ($lt).
Removed top 29 bits (of 32) from port B of cell top.$flatten\screen_mngr.$ge$src/screen_manager.v:12$705 ($ge).
Removed top 22 bits (of 32) from port B of cell top.$flatten\screen_mngr.$lt$src/screen_manager.v:11$699 ($lt).
Removed top 26 bits (of 32) from port B of cell top.$flatten\screen_mngr.$ge$src/screen_manager.v:11$698 ($ge).
Removed top 3 bits (of 24) from port B of cell top.$flatten\tdisplay.$sub$src/gamespeed_display.v:31$747 ($sub).
Removed top 4 bits (of 9) from port A of cell top.$flatten\tdisplay.$mul$src/gamespeed_display.v:18$741 ($mul).
Removed top 6 bits (of 18) from mux cell top.$flatten\tdisplay.$ternary$src/gamespeed_display.v:17$740 ($mux).
Removed top 9 bits (of 18) from mux cell top.$flatten\tdisplay.$ternary$src/gamespeed_display.v:17$738 ($mux).
Removed top 1 bits (of 10) from port A of cell top.$flatten\tdisplay.$sub$src/gamespeed_display.v:17$732 ($sub).
Removed top 1 bits (of 10) from port A of cell top.$flatten\tdisplay.$sub$src/gamespeed_display.v:17$730 ($sub).
Removed top 26 bits (of 32) from port B of cell top.$flatten\tdisplay.$lt$src/gamespeed_display.v:14$726 ($lt).
Removed top 29 bits (of 32) from port B of cell top.$flatten\tdisplay.$ge$src/gamespeed_display.v:14$725 ($ge).
Removed top 1 bits (of 6) from port B of cell top.$auto$opt_dff.cc:198:make_patterns_logic$4917 ($ne).
Removed top 1 bits (of 5) from port B of cell top.$auto$opt_dff.cc:198:make_patterns_logic$4919 ($ne).
Removed top 1 bits (of 7) from port B of cell top.$auto$opt_dff.cc:198:make_patterns_logic$4824 ($ne).
Removed top 1 bits (of 3) from port B of cell top.$auto$opt_dff.cc:198:make_patterns_logic$4894 ($ne).
Removed top 1 bits (of 3) from port B of cell top.$auto$opt_dff.cc:198:make_patterns_logic$4864 ($ne).
Removed top 1 bits (of 4) from port B of cell top.$auto$opt_dff.cc:198:make_patterns_logic$4826 ($ne).
Removed top 1 bits (of 6) from port B of cell top.$auto$opt_dff.cc:198:make_patterns_logic$4872 ($ne).
Removed top 3 bits (of 7) from port B of cell top.$auto$opt_dff.cc:198:make_patterns_logic$4786 ($ne).
Removed top 30 bits (of 32) from port B of cell top.$flatten\sdisplay.\s8.$gt$src/digitdisplay.v:17$410 ($gt).
Removed top 26 bits (of 32) from port B of cell top.$flatten\sdisplay.\s8.$lt$src/digitdisplay.v:17$411 ($lt).
Removed top 2 bits (of 4) from port B of cell top.$flatten\sdisplay.\s8.$eq$src/digitdisplay.v:18$415 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$flatten\sdisplay.\s8.$eq$src/digitdisplay.v:18$417 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\sdisplay.\s8.$eq$src/digitdisplay.v:18$419 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\sdisplay.\s8.$eq$src/digitdisplay.v:18$421 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\sdisplay.\s8.$eq$src/digitdisplay.v:18$423 ($eq).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s8.$ternary$src/digitdisplay.v:18$429 ($mux).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s8.$ternary$src/digitdisplay.v:18$430 ($mux).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s8.$ternary$src/digitdisplay.v:23$453 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s8.$or$src/digitdisplay.v:23$454 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s8.$or$src/digitdisplay.v:23$454 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s8.$or$src/digitdisplay.v:23$454 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s8.$ternary$src/digitdisplay.v:23$455 ($mux).
Removed top 3 bits (of 5) from port B of cell top.$auto$opt_dff.cc:198:make_patterns_logic$6164 ($ne).
Removed top 1 bits (of 4) from port B of cell top.$auto$opt_dff.cc:198:make_patterns_logic$6145 ($ne).
Removed top 1 bits (of 4) from port B of cell top.$flatten\sdisplay.\s8.$eq$src/digitdisplay.v:28$466 ($eq).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s8.$ternary$src/digitdisplay.v:28$476 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s8.$or$src/digitdisplay.v:28$477 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s8.$or$src/digitdisplay.v:28$477 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s8.$or$src/digitdisplay.v:28$477 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s8.$ternary$src/digitdisplay.v:28$478 ($mux).
Removed top 29 bits (of 32) from port B of cell top.$flatten\sdisplay.\s8.$lt$src/digitdisplay.v:32$483 ($lt).
Removed top 3 bits (of 4) from port B of cell top.$flatten\sdisplay.\s8.$eq$src/digitdisplay.v:33$487 ($eq).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s8.$ternary$src/digitdisplay.v:33$501 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s8.$or$src/digitdisplay.v:33$502 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s8.$or$src/digitdisplay.v:33$502 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s8.$or$src/digitdisplay.v:33$502 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s8.$ternary$src/digitdisplay.v:33$503 ($mux).
Removed top 26 bits (of 32) from port B of cell top.$flatten\sdisplay.\s8.$gt$src/digitdisplay.v:37$507 ($gt).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s8.$ternary$src/digitdisplay.v:38$522 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s8.$or$src/digitdisplay.v:38$523 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s8.$or$src/digitdisplay.v:38$523 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s8.$or$src/digitdisplay.v:38$523 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s8.$ternary$src/digitdisplay.v:38$524 ($mux).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s8.$ternary$src/digitdisplay.v:43$539 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s8.$or$src/digitdisplay.v:43$540 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s8.$or$src/digitdisplay.v:43$540 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s8.$or$src/digitdisplay.v:43$540 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s8.$ternary$src/digitdisplay.v:43$541 ($mux).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s8.$ternary$src/digitdisplay.v:47$566 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s8.$or$src/digitdisplay.v:47$567 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s8.$or$src/digitdisplay.v:47$567 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s8.$or$src/digitdisplay.v:47$567 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s8.$ternary$src/digitdisplay.v:47$568 ($mux).
Removed top 30 bits (of 32) from port B of cell top.$flatten\sdisplay.\s7.$gt$src/digitdisplay.v:17$410 ($gt).
Removed top 26 bits (of 32) from port B of cell top.$flatten\sdisplay.\s7.$lt$src/digitdisplay.v:17$411 ($lt).
Removed top 2 bits (of 4) from port B of cell top.$flatten\sdisplay.\s7.$eq$src/digitdisplay.v:18$415 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$flatten\sdisplay.\s7.$eq$src/digitdisplay.v:18$417 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\sdisplay.\s7.$eq$src/digitdisplay.v:18$419 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\sdisplay.\s7.$eq$src/digitdisplay.v:18$421 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\sdisplay.\s7.$eq$src/digitdisplay.v:18$423 ($eq).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s7.$ternary$src/digitdisplay.v:18$429 ($mux).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s7.$ternary$src/digitdisplay.v:18$430 ($mux).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s7.$ternary$src/digitdisplay.v:23$453 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s7.$or$src/digitdisplay.v:23$454 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s7.$or$src/digitdisplay.v:23$454 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s7.$or$src/digitdisplay.v:23$454 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s7.$ternary$src/digitdisplay.v:23$455 ($mux).
Removed top 1 bits (of 4) from port B of cell top.$flatten\sdisplay.\s7.$eq$src/digitdisplay.v:28$466 ($eq).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s7.$ternary$src/digitdisplay.v:28$476 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s7.$or$src/digitdisplay.v:28$477 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s7.$or$src/digitdisplay.v:28$477 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s7.$or$src/digitdisplay.v:28$477 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s7.$ternary$src/digitdisplay.v:28$478 ($mux).
Removed top 29 bits (of 32) from port B of cell top.$flatten\sdisplay.\s7.$lt$src/digitdisplay.v:32$483 ($lt).
Removed top 3 bits (of 4) from port B of cell top.$flatten\sdisplay.\s7.$eq$src/digitdisplay.v:33$487 ($eq).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s7.$ternary$src/digitdisplay.v:33$501 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s7.$or$src/digitdisplay.v:33$502 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s7.$or$src/digitdisplay.v:33$502 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s7.$or$src/digitdisplay.v:33$502 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s7.$ternary$src/digitdisplay.v:33$503 ($mux).
Removed top 26 bits (of 32) from port B of cell top.$flatten\sdisplay.\s7.$gt$src/digitdisplay.v:37$507 ($gt).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s7.$ternary$src/digitdisplay.v:38$522 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s7.$or$src/digitdisplay.v:38$523 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s7.$or$src/digitdisplay.v:38$523 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s7.$or$src/digitdisplay.v:38$523 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s7.$ternary$src/digitdisplay.v:38$524 ($mux).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s7.$ternary$src/digitdisplay.v:43$539 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s7.$or$src/digitdisplay.v:43$540 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s7.$or$src/digitdisplay.v:43$540 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s7.$or$src/digitdisplay.v:43$540 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s7.$ternary$src/digitdisplay.v:43$541 ($mux).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s7.$ternary$src/digitdisplay.v:47$566 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s7.$or$src/digitdisplay.v:47$567 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s7.$or$src/digitdisplay.v:47$567 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s7.$or$src/digitdisplay.v:47$567 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s7.$ternary$src/digitdisplay.v:47$568 ($mux).
Removed top 30 bits (of 32) from port B of cell top.$flatten\sdisplay.\s6.$gt$src/digitdisplay.v:17$410 ($gt).
Removed top 26 bits (of 32) from port B of cell top.$flatten\sdisplay.\s6.$lt$src/digitdisplay.v:17$411 ($lt).
Removed top 2 bits (of 4) from port B of cell top.$flatten\sdisplay.\s6.$eq$src/digitdisplay.v:18$415 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$flatten\sdisplay.\s6.$eq$src/digitdisplay.v:18$417 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\sdisplay.\s6.$eq$src/digitdisplay.v:18$419 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\sdisplay.\s6.$eq$src/digitdisplay.v:18$421 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\sdisplay.\s6.$eq$src/digitdisplay.v:18$423 ($eq).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s6.$ternary$src/digitdisplay.v:18$429 ($mux).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s6.$ternary$src/digitdisplay.v:18$430 ($mux).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s6.$ternary$src/digitdisplay.v:23$453 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s6.$or$src/digitdisplay.v:23$454 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s6.$or$src/digitdisplay.v:23$454 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s6.$or$src/digitdisplay.v:23$454 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s6.$ternary$src/digitdisplay.v:23$455 ($mux).
Removed top 1 bits (of 4) from port B of cell top.$flatten\sdisplay.\s6.$eq$src/digitdisplay.v:28$466 ($eq).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s6.$ternary$src/digitdisplay.v:28$476 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s6.$or$src/digitdisplay.v:28$477 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s6.$or$src/digitdisplay.v:28$477 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s6.$or$src/digitdisplay.v:28$477 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s6.$ternary$src/digitdisplay.v:28$478 ($mux).
Removed top 29 bits (of 32) from port B of cell top.$flatten\sdisplay.\s6.$lt$src/digitdisplay.v:32$483 ($lt).
Removed top 3 bits (of 4) from port B of cell top.$flatten\sdisplay.\s6.$eq$src/digitdisplay.v:33$487 ($eq).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s6.$ternary$src/digitdisplay.v:33$501 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s6.$or$src/digitdisplay.v:33$502 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s6.$or$src/digitdisplay.v:33$502 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s6.$or$src/digitdisplay.v:33$502 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s6.$ternary$src/digitdisplay.v:33$503 ($mux).
Removed top 26 bits (of 32) from port B of cell top.$flatten\sdisplay.\s6.$gt$src/digitdisplay.v:37$507 ($gt).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s6.$ternary$src/digitdisplay.v:38$522 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s6.$or$src/digitdisplay.v:38$523 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s6.$or$src/digitdisplay.v:38$523 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s6.$or$src/digitdisplay.v:38$523 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s6.$ternary$src/digitdisplay.v:38$524 ($mux).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s6.$ternary$src/digitdisplay.v:43$539 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s6.$or$src/digitdisplay.v:43$540 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s6.$or$src/digitdisplay.v:43$540 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s6.$or$src/digitdisplay.v:43$540 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s6.$ternary$src/digitdisplay.v:43$541 ($mux).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s6.$ternary$src/digitdisplay.v:47$566 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s6.$or$src/digitdisplay.v:47$567 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s6.$or$src/digitdisplay.v:47$567 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s6.$or$src/digitdisplay.v:47$567 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s6.$ternary$src/digitdisplay.v:47$568 ($mux).
Removed top 30 bits (of 32) from port B of cell top.$flatten\sdisplay.\s5.$gt$src/digitdisplay.v:17$410 ($gt).
Removed top 26 bits (of 32) from port B of cell top.$flatten\sdisplay.\s5.$lt$src/digitdisplay.v:17$411 ($lt).
Removed top 2 bits (of 4) from port B of cell top.$flatten\sdisplay.\s5.$eq$src/digitdisplay.v:18$415 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$flatten\sdisplay.\s5.$eq$src/digitdisplay.v:18$417 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\sdisplay.\s5.$eq$src/digitdisplay.v:18$419 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\sdisplay.\s5.$eq$src/digitdisplay.v:18$421 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\sdisplay.\s5.$eq$src/digitdisplay.v:18$423 ($eq).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s5.$ternary$src/digitdisplay.v:18$429 ($mux).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s5.$ternary$src/digitdisplay.v:18$430 ($mux).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s5.$ternary$src/digitdisplay.v:23$453 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s5.$or$src/digitdisplay.v:23$454 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s5.$or$src/digitdisplay.v:23$454 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s5.$or$src/digitdisplay.v:23$454 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s5.$ternary$src/digitdisplay.v:23$455 ($mux).
Removed top 1 bits (of 4) from port B of cell top.$flatten\sdisplay.\s5.$eq$src/digitdisplay.v:28$466 ($eq).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s5.$ternary$src/digitdisplay.v:28$476 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s5.$or$src/digitdisplay.v:28$477 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s5.$or$src/digitdisplay.v:28$477 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s5.$or$src/digitdisplay.v:28$477 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s5.$ternary$src/digitdisplay.v:28$478 ($mux).
Removed top 29 bits (of 32) from port B of cell top.$flatten\sdisplay.\s5.$lt$src/digitdisplay.v:32$483 ($lt).
Removed top 3 bits (of 4) from port B of cell top.$flatten\sdisplay.\s5.$eq$src/digitdisplay.v:33$487 ($eq).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s5.$ternary$src/digitdisplay.v:33$501 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s5.$or$src/digitdisplay.v:33$502 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s5.$or$src/digitdisplay.v:33$502 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s5.$or$src/digitdisplay.v:33$502 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s5.$ternary$src/digitdisplay.v:33$503 ($mux).
Removed top 26 bits (of 32) from port B of cell top.$flatten\sdisplay.\s5.$gt$src/digitdisplay.v:37$507 ($gt).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s5.$ternary$src/digitdisplay.v:38$522 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s5.$or$src/digitdisplay.v:38$523 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s5.$or$src/digitdisplay.v:38$523 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s5.$or$src/digitdisplay.v:38$523 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s5.$ternary$src/digitdisplay.v:38$524 ($mux).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s5.$ternary$src/digitdisplay.v:43$539 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s5.$or$src/digitdisplay.v:43$540 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s5.$or$src/digitdisplay.v:43$540 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s5.$or$src/digitdisplay.v:43$540 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s5.$ternary$src/digitdisplay.v:43$541 ($mux).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s5.$ternary$src/digitdisplay.v:47$566 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s5.$or$src/digitdisplay.v:47$567 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s5.$or$src/digitdisplay.v:47$567 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s5.$or$src/digitdisplay.v:47$567 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s5.$ternary$src/digitdisplay.v:47$568 ($mux).
Removed top 30 bits (of 32) from port B of cell top.$flatten\sdisplay.\s4.$gt$src/digitdisplay.v:17$410 ($gt).
Removed top 26 bits (of 32) from port B of cell top.$flatten\sdisplay.\s4.$lt$src/digitdisplay.v:17$411 ($lt).
Removed top 2 bits (of 4) from port B of cell top.$flatten\sdisplay.\s4.$eq$src/digitdisplay.v:18$415 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$flatten\sdisplay.\s4.$eq$src/digitdisplay.v:18$417 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\sdisplay.\s4.$eq$src/digitdisplay.v:18$419 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\sdisplay.\s4.$eq$src/digitdisplay.v:18$421 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\sdisplay.\s4.$eq$src/digitdisplay.v:18$423 ($eq).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s4.$ternary$src/digitdisplay.v:18$429 ($mux).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s4.$ternary$src/digitdisplay.v:18$430 ($mux).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s4.$ternary$src/digitdisplay.v:23$453 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s4.$or$src/digitdisplay.v:23$454 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s4.$or$src/digitdisplay.v:23$454 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s4.$or$src/digitdisplay.v:23$454 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s4.$ternary$src/digitdisplay.v:23$455 ($mux).
Removed top 1 bits (of 4) from port B of cell top.$flatten\sdisplay.\s4.$eq$src/digitdisplay.v:28$466 ($eq).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s4.$ternary$src/digitdisplay.v:28$476 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s4.$or$src/digitdisplay.v:28$477 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s4.$or$src/digitdisplay.v:28$477 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s4.$or$src/digitdisplay.v:28$477 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s4.$ternary$src/digitdisplay.v:28$478 ($mux).
Removed top 29 bits (of 32) from port B of cell top.$flatten\sdisplay.\s4.$lt$src/digitdisplay.v:32$483 ($lt).
Removed top 3 bits (of 4) from port B of cell top.$flatten\sdisplay.\s4.$eq$src/digitdisplay.v:33$487 ($eq).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s4.$ternary$src/digitdisplay.v:33$501 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s4.$or$src/digitdisplay.v:33$502 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s4.$or$src/digitdisplay.v:33$502 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s4.$or$src/digitdisplay.v:33$502 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s4.$ternary$src/digitdisplay.v:33$503 ($mux).
Removed top 26 bits (of 32) from port B of cell top.$flatten\sdisplay.\s4.$gt$src/digitdisplay.v:37$507 ($gt).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s4.$ternary$src/digitdisplay.v:38$522 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s4.$or$src/digitdisplay.v:38$523 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s4.$or$src/digitdisplay.v:38$523 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s4.$or$src/digitdisplay.v:38$523 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s4.$ternary$src/digitdisplay.v:38$524 ($mux).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s4.$ternary$src/digitdisplay.v:43$539 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s4.$or$src/digitdisplay.v:43$540 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s4.$or$src/digitdisplay.v:43$540 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s4.$or$src/digitdisplay.v:43$540 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s4.$ternary$src/digitdisplay.v:43$541 ($mux).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s4.$ternary$src/digitdisplay.v:47$566 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s4.$or$src/digitdisplay.v:47$567 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s4.$or$src/digitdisplay.v:47$567 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s4.$or$src/digitdisplay.v:47$567 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s4.$ternary$src/digitdisplay.v:47$568 ($mux).
Removed top 30 bits (of 32) from port B of cell top.$flatten\sdisplay.\s3.$gt$src/digitdisplay.v:17$410 ($gt).
Removed top 26 bits (of 32) from port B of cell top.$flatten\sdisplay.\s3.$lt$src/digitdisplay.v:17$411 ($lt).
Removed top 2 bits (of 4) from port B of cell top.$flatten\sdisplay.\s3.$eq$src/digitdisplay.v:18$415 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$flatten\sdisplay.\s3.$eq$src/digitdisplay.v:18$417 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\sdisplay.\s3.$eq$src/digitdisplay.v:18$419 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\sdisplay.\s3.$eq$src/digitdisplay.v:18$421 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\sdisplay.\s3.$eq$src/digitdisplay.v:18$423 ($eq).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s3.$ternary$src/digitdisplay.v:18$429 ($mux).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s3.$ternary$src/digitdisplay.v:18$430 ($mux).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s3.$ternary$src/digitdisplay.v:23$453 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s3.$or$src/digitdisplay.v:23$454 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s3.$or$src/digitdisplay.v:23$454 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s3.$or$src/digitdisplay.v:23$454 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s3.$ternary$src/digitdisplay.v:23$455 ($mux).
Removed top 1 bits (of 4) from port B of cell top.$flatten\sdisplay.\s3.$eq$src/digitdisplay.v:28$466 ($eq).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s3.$ternary$src/digitdisplay.v:28$476 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s3.$or$src/digitdisplay.v:28$477 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s3.$or$src/digitdisplay.v:28$477 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s3.$or$src/digitdisplay.v:28$477 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s3.$ternary$src/digitdisplay.v:28$478 ($mux).
Removed top 29 bits (of 32) from port B of cell top.$flatten\sdisplay.\s3.$lt$src/digitdisplay.v:32$483 ($lt).
Removed top 3 bits (of 4) from port B of cell top.$flatten\sdisplay.\s3.$eq$src/digitdisplay.v:33$487 ($eq).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s3.$ternary$src/digitdisplay.v:33$501 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s3.$or$src/digitdisplay.v:33$502 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s3.$or$src/digitdisplay.v:33$502 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s3.$or$src/digitdisplay.v:33$502 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s3.$ternary$src/digitdisplay.v:33$503 ($mux).
Removed top 26 bits (of 32) from port B of cell top.$flatten\sdisplay.\s3.$gt$src/digitdisplay.v:37$507 ($gt).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s3.$ternary$src/digitdisplay.v:38$522 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s3.$or$src/digitdisplay.v:38$523 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s3.$or$src/digitdisplay.v:38$523 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s3.$or$src/digitdisplay.v:38$523 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s3.$ternary$src/digitdisplay.v:38$524 ($mux).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s3.$ternary$src/digitdisplay.v:43$539 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s3.$or$src/digitdisplay.v:43$540 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s3.$or$src/digitdisplay.v:43$540 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s3.$or$src/digitdisplay.v:43$540 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s3.$ternary$src/digitdisplay.v:43$541 ($mux).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s3.$ternary$src/digitdisplay.v:47$566 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s3.$or$src/digitdisplay.v:47$567 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s3.$or$src/digitdisplay.v:47$567 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s3.$or$src/digitdisplay.v:47$567 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s3.$ternary$src/digitdisplay.v:47$568 ($mux).
Removed top 30 bits (of 32) from port B of cell top.$flatten\sdisplay.\s2.$gt$src/digitdisplay.v:17$410 ($gt).
Removed top 26 bits (of 32) from port B of cell top.$flatten\sdisplay.\s2.$lt$src/digitdisplay.v:17$411 ($lt).
Removed top 2 bits (of 4) from port B of cell top.$flatten\sdisplay.\s2.$eq$src/digitdisplay.v:18$415 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$flatten\sdisplay.\s2.$eq$src/digitdisplay.v:18$417 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\sdisplay.\s2.$eq$src/digitdisplay.v:18$419 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\sdisplay.\s2.$eq$src/digitdisplay.v:18$421 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\sdisplay.\s2.$eq$src/digitdisplay.v:18$423 ($eq).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s2.$ternary$src/digitdisplay.v:18$429 ($mux).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s2.$ternary$src/digitdisplay.v:18$430 ($mux).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s2.$ternary$src/digitdisplay.v:23$453 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s2.$or$src/digitdisplay.v:23$454 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s2.$or$src/digitdisplay.v:23$454 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s2.$or$src/digitdisplay.v:23$454 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s2.$ternary$src/digitdisplay.v:23$455 ($mux).
Removed top 1 bits (of 4) from port B of cell top.$flatten\sdisplay.\s2.$eq$src/digitdisplay.v:28$466 ($eq).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s2.$ternary$src/digitdisplay.v:28$476 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s2.$or$src/digitdisplay.v:28$477 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s2.$or$src/digitdisplay.v:28$477 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s2.$or$src/digitdisplay.v:28$477 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s2.$ternary$src/digitdisplay.v:28$478 ($mux).
Removed top 29 bits (of 32) from port B of cell top.$flatten\sdisplay.\s2.$lt$src/digitdisplay.v:32$483 ($lt).
Removed top 3 bits (of 4) from port B of cell top.$flatten\sdisplay.\s2.$eq$src/digitdisplay.v:33$487 ($eq).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s2.$ternary$src/digitdisplay.v:33$501 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s2.$or$src/digitdisplay.v:33$502 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s2.$or$src/digitdisplay.v:33$502 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s2.$or$src/digitdisplay.v:33$502 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s2.$ternary$src/digitdisplay.v:33$503 ($mux).
Removed top 26 bits (of 32) from port B of cell top.$flatten\sdisplay.\s2.$gt$src/digitdisplay.v:37$507 ($gt).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s2.$ternary$src/digitdisplay.v:38$522 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s2.$or$src/digitdisplay.v:38$523 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s2.$or$src/digitdisplay.v:38$523 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s2.$or$src/digitdisplay.v:38$523 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s2.$ternary$src/digitdisplay.v:38$524 ($mux).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s2.$ternary$src/digitdisplay.v:43$539 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s2.$or$src/digitdisplay.v:43$540 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s2.$or$src/digitdisplay.v:43$540 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s2.$or$src/digitdisplay.v:43$540 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s2.$ternary$src/digitdisplay.v:43$541 ($mux).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s2.$ternary$src/digitdisplay.v:47$566 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s2.$or$src/digitdisplay.v:47$567 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s2.$or$src/digitdisplay.v:47$567 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s2.$or$src/digitdisplay.v:47$567 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s2.$ternary$src/digitdisplay.v:47$568 ($mux).
Removed top 29 bits (of 32) from port B of cell top.$flatten\sdisplay.\s1.$lt$src/digitdisplay.v:17$408 ($lt).
Removed top 30 bits (of 32) from port B of cell top.$flatten\sdisplay.\s1.$gt$src/digitdisplay.v:17$410 ($gt).
Removed top 26 bits (of 32) from port B of cell top.$flatten\sdisplay.\s1.$lt$src/digitdisplay.v:17$411 ($lt).
Removed top 2 bits (of 4) from port B of cell top.$flatten\sdisplay.\s1.$eq$src/digitdisplay.v:18$415 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$flatten\sdisplay.\s1.$eq$src/digitdisplay.v:18$417 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\sdisplay.\s1.$eq$src/digitdisplay.v:18$419 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\sdisplay.\s1.$eq$src/digitdisplay.v:18$421 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\sdisplay.\s1.$eq$src/digitdisplay.v:18$423 ($eq).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s1.$ternary$src/digitdisplay.v:18$429 ($mux).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s1.$ternary$src/digitdisplay.v:18$430 ($mux).
Removed top 26 bits (of 32) from port B of cell top.$flatten\sdisplay.\s1.$gt$src/digitdisplay.v:22$431 ($gt).
Removed top 26 bits (of 32) from port B of cell top.$flatten\sdisplay.\s1.$lt$src/digitdisplay.v:22$432 ($lt).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s1.$ternary$src/digitdisplay.v:23$453 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s1.$or$src/digitdisplay.v:23$454 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s1.$or$src/digitdisplay.v:23$454 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s1.$or$src/digitdisplay.v:23$454 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s1.$ternary$src/digitdisplay.v:23$455 ($mux).
Removed top 27 bits (of 32) from port B of cell top.$flatten\sdisplay.\s1.$gt$src/digitdisplay.v:27$456 ($gt).
Removed top 27 bits (of 32) from port B of cell top.$flatten\sdisplay.\s1.$lt$src/digitdisplay.v:27$457 ($lt).
Removed top 1 bits (of 4) from port B of cell top.$flatten\sdisplay.\s1.$eq$src/digitdisplay.v:28$466 ($eq).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s1.$ternary$src/digitdisplay.v:28$476 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s1.$or$src/digitdisplay.v:28$477 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s1.$or$src/digitdisplay.v:28$477 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s1.$or$src/digitdisplay.v:28$477 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s1.$ternary$src/digitdisplay.v:28$478 ($mux).
Removed top 29 bits (of 32) from port B of cell top.$flatten\sdisplay.\s1.$lt$src/digitdisplay.v:32$483 ($lt).
Removed top 3 bits (of 4) from port B of cell top.$flatten\sdisplay.\s1.$eq$src/digitdisplay.v:33$487 ($eq).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s1.$ternary$src/digitdisplay.v:33$501 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s1.$or$src/digitdisplay.v:33$502 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s1.$or$src/digitdisplay.v:33$502 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s1.$or$src/digitdisplay.v:33$502 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s1.$ternary$src/digitdisplay.v:33$503 ($mux).
Removed top 1 bits (of 4) from port B of cell top.$auto$opt_dff.cc:198:make_patterns_logic$6073 ($ne).
Removed top 26 bits (of 32) from port B of cell top.$flatten\sdisplay.\s1.$gt$src/digitdisplay.v:37$507 ($gt).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s1.$ternary$src/digitdisplay.v:38$522 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s1.$or$src/digitdisplay.v:38$523 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s1.$or$src/digitdisplay.v:38$523 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s1.$or$src/digitdisplay.v:38$523 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s1.$ternary$src/digitdisplay.v:38$524 ($mux).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s1.$ternary$src/digitdisplay.v:43$539 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s1.$or$src/digitdisplay.v:43$540 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s1.$or$src/digitdisplay.v:43$540 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s1.$or$src/digitdisplay.v:43$540 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s1.$ternary$src/digitdisplay.v:43$541 ($mux).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s1.$ternary$src/digitdisplay.v:47$566 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s1.$or$src/digitdisplay.v:47$567 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s1.$or$src/digitdisplay.v:47$567 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s1.$or$src/digitdisplay.v:47$567 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s1.$ternary$src/digitdisplay.v:47$568 ($mux).
Removed cell top.$flatten\sdisplay.$procmux$3554 ($mux).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:198:make_patterns_logic$6077 ($ne).
Removed top 25 bits (of 32) from port B of cell top.$flatten\sdisplay.$lt$src/scoredisplay.v:147$687 ($lt).
Removed top 26 bits (of 32) from port B of cell top.$flatten\sdisplay.$ge$src/scoredisplay.v:147$686 ($ge).
Removed top 1 bits (of 5) from mux cell top.$flatten\sdisplay.$ternary$src/scoredisplay.v:146$685 ($mux).
Removed top 26 bits (of 32) from port B of cell top.$flatten\sdisplay.$sub$src/scoredisplay.v:146$683 ($sub).
Removed top 25 bits (of 32) from port Y of cell top.$flatten\sdisplay.$sub$src/scoredisplay.v:146$683 ($sub).
Removed top 3 bits (of 10) from port A of cell top.$flatten\sdisplay.$sub$src/scoredisplay.v:146$683 ($sub).
Removed top 22 bits (of 32) from port B of cell top.$flatten\sdisplay.$lt$src/scoredisplay.v:143$679 ($lt).
Removed top 22 bits (of 32) from port B of cell top.$flatten\sdisplay.$ge$src/scoredisplay.v:143$678 ($ge).
Removed top 23 bits (of 32) from port B of cell top.$flatten\sdisplay.$lt$src/scoredisplay.v:143$676 ($lt).
Removed top 26 bits (of 32) from port B of cell top.$flatten\sdisplay.$ge$src/scoredisplay.v:143$675 ($ge).
Removed top 1 bits (of 5) from mux cell top.$flatten\sdisplay.$ternary$src/scoredisplay.v:139$673 ($mux).
Removed top 25 bits (of 32) from port B of cell top.$flatten\sdisplay.$sub$src/scoredisplay.v:139$671 ($sub).
Removed top 25 bits (of 32) from port Y of cell top.$flatten\sdisplay.$sub$src/scoredisplay.v:139$671 ($sub).
Removed top 3 bits (of 10) from port A of cell top.$flatten\sdisplay.$sub$src/scoredisplay.v:139$671 ($sub).
Removed top 24 bits (of 32) from port B of cell top.$flatten\sdisplay.$lt$src/scoredisplay.v:137$664 ($lt).
Removed top 25 bits (of 32) from port B of cell top.$flatten\sdisplay.$ge$src/scoredisplay.v:137$663 ($ge).
Removed top 1 bits (of 5) from mux cell top.$flatten\sdisplay.$ternary$src/scoredisplay.v:132$661 ($mux).
Removed top 24 bits (of 32) from port B of cell top.$flatten\sdisplay.$sub$src/scoredisplay.v:132$659 ($sub).
Removed top 25 bits (of 32) from port Y of cell top.$flatten\sdisplay.$sub$src/scoredisplay.v:132$659 ($sub).
Removed top 3 bits (of 10) from port A of cell top.$flatten\sdisplay.$sub$src/scoredisplay.v:132$659 ($sub).
Removed top 4 bits (of 8) from port B of cell top.$flatten\sdisplay.$sub$src/scoredisplay.v:132$659 ($sub).
Removed top 24 bits (of 32) from port B of cell top.$flatten\sdisplay.$lt$src/scoredisplay.v:130$652 ($lt).
Removed top 24 bits (of 32) from port B of cell top.$flatten\sdisplay.$ge$src/scoredisplay.v:130$651 ($ge).
Removed top 1 bits (of 5) from mux cell top.$flatten\sdisplay.$ternary$src/scoredisplay.v:125$649 ($mux).
Removed top 24 bits (of 32) from port B of cell top.$flatten\sdisplay.$sub$src/scoredisplay.v:125$647 ($sub).
Removed top 25 bits (of 32) from port Y of cell top.$flatten\sdisplay.$sub$src/scoredisplay.v:125$647 ($sub).
Removed top 3 bits (of 10) from port A of cell top.$flatten\sdisplay.$sub$src/scoredisplay.v:125$647 ($sub).
Removed top 2 bits (of 8) from port B of cell top.$flatten\sdisplay.$sub$src/scoredisplay.v:125$647 ($sub).
Removed top 24 bits (of 32) from port B of cell top.$flatten\sdisplay.$lt$src/scoredisplay.v:123$640 ($lt).
Removed top 24 bits (of 32) from port B of cell top.$flatten\sdisplay.$ge$src/scoredisplay.v:123$639 ($ge).
Removed top 1 bits (of 5) from mux cell top.$flatten\sdisplay.$ternary$src/scoredisplay.v:118$637 ($mux).
Removed top 24 bits (of 32) from port B of cell top.$flatten\sdisplay.$sub$src/scoredisplay.v:118$635 ($sub).
Removed top 25 bits (of 32) from port Y of cell top.$flatten\sdisplay.$sub$src/scoredisplay.v:118$635 ($sub).
Removed top 3 bits (of 10) from port A of cell top.$flatten\sdisplay.$sub$src/scoredisplay.v:118$635 ($sub).
Removed top 1 bits (of 8) from port B of cell top.$flatten\sdisplay.$sub$src/scoredisplay.v:118$635 ($sub).
Removed top 23 bits (of 32) from port B of cell top.$flatten\sdisplay.$lt$src/scoredisplay.v:116$628 ($lt).
Removed top 24 bits (of 32) from port B of cell top.$flatten\sdisplay.$ge$src/scoredisplay.v:116$627 ($ge).
Removed top 1 bits (of 5) from mux cell top.$flatten\sdisplay.$ternary$src/scoredisplay.v:111$625 ($mux).
Removed top 23 bits (of 32) from port B of cell top.$flatten\sdisplay.$sub$src/scoredisplay.v:111$623 ($sub).
Removed top 25 bits (of 32) from port Y of cell top.$flatten\sdisplay.$sub$src/scoredisplay.v:111$623 ($sub).
Removed top 3 bits (of 10) from port A of cell top.$flatten\sdisplay.$sub$src/scoredisplay.v:111$623 ($sub).
Removed top 4 bits (of 9) from port B of cell top.$flatten\sdisplay.$sub$src/scoredisplay.v:111$623 ($sub).
Removed top 23 bits (of 32) from port B of cell top.$flatten\sdisplay.$lt$src/scoredisplay.v:109$616 ($lt).
Removed top 23 bits (of 32) from port B of cell top.$flatten\sdisplay.$ge$src/scoredisplay.v:109$615 ($ge).
Removed top 1 bits (of 5) from mux cell top.$flatten\sdisplay.$ternary$src/scoredisplay.v:105$614 ($mux).
Removed top 23 bits (of 32) from port B of cell top.$flatten\sdisplay.$sub$src/scoredisplay.v:105$612 ($sub).
Removed top 25 bits (of 32) from port Y of cell top.$flatten\sdisplay.$sub$src/scoredisplay.v:105$612 ($sub).
Removed top 3 bits (of 10) from port A of cell top.$flatten\sdisplay.$sub$src/scoredisplay.v:105$612 ($sub).
Removed top 2 bits (of 9) from port B of cell top.$flatten\sdisplay.$sub$src/scoredisplay.v:105$612 ($sub).
Removed top 22 bits (of 32) from port B of cell top.$flatten\sdisplay.$sub$src/scoredisplay.v:105$611 ($sub).
Removed top 25 bits (of 32) from port Y of cell top.$flatten\sdisplay.$sub$src/scoredisplay.v:105$611 ($sub).
Removed top 3 bits (of 10) from port A of cell top.$flatten\sdisplay.$sub$src/scoredisplay.v:105$611 ($sub).
Removed top 4 bits (of 10) from port B of cell top.$flatten\sdisplay.$sub$src/scoredisplay.v:105$611 ($sub).
Removed top 22 bits (of 32) from port B of cell top.$flatten\sdisplay.$lt$src/scoredisplay.v:102$607 ($lt).
Removed top 22 bits (of 32) from port B of cell top.$flatten\sdisplay.$ge$src/scoredisplay.v:102$606 ($ge).
Removed top 23 bits (of 32) from port B of cell top.$flatten\sdisplay.$lt$src/scoredisplay.v:102$604 ($lt).
Removed top 23 bits (of 32) from port B of cell top.$flatten\sdisplay.$ge$src/scoredisplay.v:102$603 ($ge).
Removed top 1 bits (of 5) from mux cell top.$flatten\sdisplay.$ternary$src/scoredisplay.v:97$602 ($mux).
Removed top 23 bits (of 32) from port B of cell top.$flatten\sdisplay.$sub$src/scoredisplay.v:97$600 ($sub).
Removed top 25 bits (of 32) from port Y of cell top.$flatten\sdisplay.$sub$src/scoredisplay.v:97$600 ($sub).
Removed top 3 bits (of 10) from port A of cell top.$flatten\sdisplay.$sub$src/scoredisplay.v:97$600 ($sub).
Removed top 2 bits (of 9) from port B of cell top.$flatten\sdisplay.$sub$src/scoredisplay.v:97$600 ($sub).
Removed top 31 bits (of 32) from port B of cell top.$flatten\sdisplay.\s1.$gt$src/digitdisplay.v:17$407 ($gt).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.$ternary$src/scoredisplay.v:96$598 ($mux).
Removed top 23 bits (of 32) from port B of cell top.$flatten\sdisplay.$lt$src/scoredisplay.v:94$592 ($lt).
Removed top 23 bits (of 32) from port B of cell top.$flatten\sdisplay.$ge$src/scoredisplay.v:94$591 ($ge).
Removed top 31 bits (of 32) from port B of cell top.$flatten\sdisplay.$gt$src/scoredisplay.v:37$573 ($gt).
Removed top 31 bits (of 32) from port B of cell top.$flatten\sdisplay.$gt$src/scoredisplay.v:35$571 ($gt).
Removed top 1 bits (of 3) from port B of cell top.$flatten\game_manager.\c.$procmux$2750_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$flatten\game_manager.\c.$procmux$2751_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell top.$flatten\game_manager.\c.$procmux$2752_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell top.$flatten\game_manager.\sh.$eq$src/shader.v:9$1165 ($eq).
Removed top 27 bits (of 32) from port B of cell top.$flatten\game_manager.\sh.$ge$src/shader.v:9$1167 ($ge).
Removed top 30 bits (of 32) from port B of cell top.$flatten\game_manager.\sh.$gt$src/shader.v:10$1169 ($gt).
Removed top 27 bits (of 32) from port B of cell top.$flatten\game_manager.\sh.$lt$src/shader.v:10$1170 ($lt).
Removed top 30 bits (of 32) from port B of cell top.$flatten\game_manager.\sh.$gt$src/shader.v:10$1172 ($gt).
Removed top 27 bits (of 32) from port B of cell top.$flatten\game_manager.\sh.$lt$src/shader.v:10$1174 ($lt).
Removed top 11 bits (of 12) from port Y of cell top.$flatten\game_manager.\sh.$and$src/shader.v:20$1182 ($and).
Removed top 11 bits (of 12) from port B of cell top.$flatten\game_manager.\sh.$and$src/shader.v:21$1185 ($and).
Removed top 11 bits (of 12) from port Y of cell top.$flatten\game_manager.\sh.$and$src/shader.v:21$1185 ($and).
Removed top 4 bits (of 10) from port Y of cell top.$flatten\game_manager.\hh.$sub$src/mod24.v:58$1390 ($sub).
Removed top 4 bits (of 10) from port A of cell top.$flatten\game_manager.\hh.$sub$src/mod24.v:58$1390 ($sub).
Removed top 4 bits (of 10) from port B of cell top.$flatten\game_manager.\hh.$sub$src/mod24.v:58$1390 ($sub).
Removed top 4 bits (of 10) from port Y of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$1389 ($or).
Removed top 4 bits (of 10) from port A of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$1389 ($or).
Removed top 4 bits (of 10) from port B of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$1389 ($or).
Removed top 4 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:43$1388 ($mux).
Removed top 4 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:43$1387 ($mux).
Removed top 4 bits (of 10) from port Y of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$1382 ($or).
Removed top 4 bits (of 10) from port A of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$1382 ($or).
Removed top 4 bits (of 10) from port B of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$1382 ($or).
Removed top 4 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:42$1381 ($mux).
Removed top 6 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:42$1380 ($mux).
Removed top 4 bits (of 10) from port Y of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$1375 ($or).
Removed top 4 bits (of 10) from port A of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$1375 ($or).
Removed top 4 bits (of 10) from port B of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$1375 ($or).
Removed top 4 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:41$1374 ($mux).
Removed top 5 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:41$1373 ($mux).
Removed top 4 bits (of 10) from port Y of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$1368 ($or).
Removed top 4 bits (of 10) from port A of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$1368 ($or).
Removed top 4 bits (of 10) from port B of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$1368 ($or).
Removed top 4 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:40$1367 ($mux).
Removed top 4 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:40$1366 ($mux).
Removed top 1 bits (of 5) from port B of cell top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:40$1363 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:40$1362 ($eq).
Removed top 4 bits (of 10) from port Y of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$1361 ($or).
Removed top 4 bits (of 10) from port A of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$1361 ($or).
Removed top 4 bits (of 10) from port B of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$1361 ($or).
Removed top 4 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:39$1360 ($mux).
Removed top 4 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:39$1359 ($mux).
Removed top 1 bits (of 5) from port B of cell top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:39$1356 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:39$1355 ($eq).
Removed top 4 bits (of 10) from port Y of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$1354 ($or).
Removed top 4 bits (of 10) from port A of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$1354 ($or).
Removed top 4 bits (of 10) from port B of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$1354 ($or).
Removed top 4 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:38$1353 ($mux).
Removed top 6 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:38$1352 ($mux).
Removed top 1 bits (of 5) from port B of cell top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:38$1349 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:38$1348 ($eq).
Removed top 4 bits (of 10) from port Y of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$1347 ($or).
Removed top 4 bits (of 10) from port A of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$1347 ($or).
Removed top 4 bits (of 10) from port B of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$1347 ($or).
Removed top 4 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:37$1346 ($mux).
Removed top 5 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:37$1345 ($mux).
Removed top 1 bits (of 5) from port B of cell top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:37$1342 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:37$1341 ($eq).
Removed top 4 bits (of 10) from port Y of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$1340 ($or).
Removed top 4 bits (of 10) from port A of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$1340 ($or).
Removed top 4 bits (of 10) from port B of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$1340 ($or).
Removed top 4 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:36$1339 ($mux).
Removed top 4 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:36$1338 ($mux).
Removed top 2 bits (of 5) from port B of cell top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:36$1335 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:36$1334 ($eq).
Removed top 4 bits (of 10) from port Y of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$1333 ($or).
Removed top 4 bits (of 10) from port A of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$1333 ($or).
Removed top 4 bits (of 10) from port B of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$1333 ($or).
Removed top 4 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:35$1332 ($mux).
Removed top 4 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:35$1331 ($mux).
Removed top 2 bits (of 5) from port B of cell top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:35$1328 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:35$1327 ($eq).
Removed top 4 bits (of 10) from port Y of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$1326 ($or).
Removed top 4 bits (of 10) from port A of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$1326 ($or).
Removed top 4 bits (of 10) from port B of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$1326 ($or).
Removed top 4 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:34$1325 ($mux).
Removed top 6 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:34$1324 ($mux).
Removed top 3 bits (of 5) from port B of cell top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:34$1321 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:34$1320 ($eq).
Removed top 4 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:33$1319 ($mux).
Removed top 5 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:33$1318 ($mux).
Removed top 4 bits (of 5) from port B of cell top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:33$1315 ($eq).
Removed top 4 bits (of 5) from mux cell top.$flatten\game_manager.\h.$ternary$src/mod24.v:18$1195 ($mux).
Removed top 3 bits (of 5) from mux cell top.$flatten\game_manager.\h.$ternary$src/mod24.v:18$1197 ($mux).
Removed top 4 bits (of 5) from port A of cell top.$flatten\game_manager.\h.$or$src/mod24.v:18$1198 ($or).
Removed top 3 bits (of 5) from port B of cell top.$flatten\game_manager.\h.$or$src/mod24.v:18$1198 ($or).
Removed top 3 bits (of 5) from port Y of cell top.$flatten\game_manager.\h.$or$src/mod24.v:18$1198 ($or).
Removed top 3 bits (of 5) from mux cell top.$flatten\game_manager.\h.$ternary$src/mod24.v:18$1199 ($mux).
Removed top 3 bits (of 5) from port A of cell top.$flatten\game_manager.\h.$or$src/mod24.v:18$1200 ($or).
Removed top 3 bits (of 5) from port B of cell top.$flatten\game_manager.\h.$or$src/mod24.v:18$1200 ($or).
Removed top 3 bits (of 5) from port Y of cell top.$flatten\game_manager.\h.$or$src/mod24.v:18$1200 ($or).
Removed top 2 bits (of 5) from mux cell top.$flatten\game_manager.\h.$ternary$src/mod24.v:19$1201 ($mux).
Removed top 2 bits (of 5) from mux cell top.$flatten\game_manager.\h.$ternary$src/mod24.v:19$1202 ($mux).
Removed top 2 bits (of 5) from port A of cell top.$flatten\game_manager.\h.$or$src/mod24.v:19$1203 ($or).
Removed top 2 bits (of 5) from port B of cell top.$flatten\game_manager.\h.$or$src/mod24.v:19$1203 ($or).
Removed top 2 bits (of 5) from port Y of cell top.$flatten\game_manager.\h.$or$src/mod24.v:19$1203 ($or).
Removed top 2 bits (of 5) from mux cell top.$flatten\game_manager.\h.$ternary$src/mod24.v:19$1204 ($mux).
Removed top 2 bits (of 5) from port A of cell top.$flatten\game_manager.\h.$or$src/mod24.v:19$1205 ($or).
Removed top 2 bits (of 5) from port B of cell top.$flatten\game_manager.\h.$or$src/mod24.v:19$1205 ($or).
Removed top 2 bits (of 5) from port Y of cell top.$flatten\game_manager.\h.$or$src/mod24.v:19$1205 ($or).
Removed top 2 bits (of 5) from mux cell top.$flatten\game_manager.\h.$ternary$src/mod24.v:19$1206 ($mux).
Removed top 2 bits (of 5) from port A of cell top.$flatten\game_manager.\h.$or$src/mod24.v:19$1207 ($or).
Removed top 2 bits (of 5) from port B of cell top.$flatten\game_manager.\h.$or$src/mod24.v:19$1207 ($or).
Removed top 2 bits (of 5) from port Y of cell top.$flatten\game_manager.\h.$or$src/mod24.v:19$1207 ($or).
Removed top 1 bits (of 5) from mux cell top.$flatten\game_manager.\h.$ternary$src/mod24.v:20$1208 ($mux).
Removed top 1 bits (of 5) from mux cell top.$flatten\game_manager.\h.$ternary$src/mod24.v:20$1209 ($mux).
Removed top 1 bits (of 5) from port A of cell top.$flatten\game_manager.\h.$or$src/mod24.v:20$1210 ($or).
Removed top 1 bits (of 5) from port B of cell top.$flatten\game_manager.\h.$or$src/mod24.v:20$1210 ($or).
Removed top 1 bits (of 5) from port Y of cell top.$flatten\game_manager.\h.$or$src/mod24.v:20$1210 ($or).
Removed top 1 bits (of 5) from mux cell top.$flatten\game_manager.\h.$ternary$src/mod24.v:20$1211 ($mux).
Removed top 1 bits (of 5) from port A of cell top.$flatten\game_manager.\h.$or$src/mod24.v:20$1212 ($or).
Removed top 1 bits (of 5) from port B of cell top.$flatten\game_manager.\h.$or$src/mod24.v:20$1212 ($or).
Removed top 1 bits (of 5) from port Y of cell top.$flatten\game_manager.\h.$or$src/mod24.v:20$1212 ($or).
Removed top 1 bits (of 5) from mux cell top.$flatten\game_manager.\h.$ternary$src/mod24.v:20$1213 ($mux).
Removed top 1 bits (of 5) from port A of cell top.$flatten\game_manager.\h.$or$src/mod24.v:20$1214 ($or).
Removed top 1 bits (of 5) from port B of cell top.$flatten\game_manager.\h.$or$src/mod24.v:20$1214 ($or).
Removed top 1 bits (of 5) from port Y of cell top.$flatten\game_manager.\h.$or$src/mod24.v:20$1214 ($or).
Removed top 1 bits (of 5) from mux cell top.$flatten\game_manager.\h.$ternary$src/mod24.v:21$1215 ($mux).
Removed top 1 bits (of 5) from mux cell top.$flatten\game_manager.\h.$ternary$src/mod24.v:21$1216 ($mux).
Removed top 1 bits (of 5) from port A of cell top.$flatten\game_manager.\h.$or$src/mod24.v:21$1217 ($or).
Removed top 1 bits (of 5) from port B of cell top.$flatten\game_manager.\h.$or$src/mod24.v:21$1217 ($or).
Removed top 1 bits (of 5) from port Y of cell top.$flatten\game_manager.\h.$or$src/mod24.v:21$1217 ($or).
Removed top 1 bits (of 5) from mux cell top.$flatten\game_manager.\h.$ternary$src/mod24.v:21$1218 ($mux).
Removed top 1 bits (of 5) from port A of cell top.$flatten\game_manager.\h.$or$src/mod24.v:21$1219 ($or).
Removed top 1 bits (of 5) from port B of cell top.$flatten\game_manager.\h.$or$src/mod24.v:21$1219 ($or).
Removed top 1 bits (of 5) from port Y of cell top.$flatten\game_manager.\h.$or$src/mod24.v:21$1219 ($or).
Removed top 1 bits (of 5) from mux cell top.$flatten\game_manager.\h.$ternary$src/mod24.v:21$1220 ($mux).
Removed top 1 bits (of 5) from port A of cell top.$flatten\game_manager.\h.$or$src/mod24.v:21$1221 ($or).
Removed top 1 bits (of 5) from port B of cell top.$flatten\game_manager.\h.$or$src/mod24.v:21$1221 ($or).
Removed top 1 bits (of 5) from port Y of cell top.$flatten\game_manager.\h.$or$src/mod24.v:21$1221 ($or).
Removed top 3 bits (of 5) from port A of cell top.$flatten\game_manager.\h.$or$src/mod24.v:25$1236 ($or).
Removed top 2 bits (of 5) from port B of cell top.$flatten\game_manager.\h.$or$src/mod24.v:25$1236 ($or).
Removed top 2 bits (of 5) from port Y of cell top.$flatten\game_manager.\h.$or$src/mod24.v:25$1236 ($or).
Removed top 2 bits (of 5) from port A of cell top.$flatten\game_manager.\h.$or$src/mod24.v:25$1237 ($or).
Removed top 1 bits (of 5) from port B of cell top.$flatten\game_manager.\h.$or$src/mod24.v:25$1237 ($or).
Removed top 1 bits (of 5) from port Y of cell top.$flatten\game_manager.\h.$or$src/mod24.v:25$1237 ($or).
Removed top 1 bits (of 5) from port A of cell top.$flatten\game_manager.\h.$or$src/mod24.v:25$1238 ($or).
Removed top 1 bits (of 5) from port B of cell top.$flatten\game_manager.\h.$or$src/mod24.v:25$1238 ($or).
Removed top 1 bits (of 5) from port Y of cell top.$flatten\game_manager.\h.$or$src/mod24.v:25$1238 ($or).
Removed top 1 bits (of 5) from port A of cell top.$flatten\game_manager.\h.$or$src/mod24.v:25$1239 ($or).
Removed top 27 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$1245 ($ge).
Removed top 26 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$1246 ($lt).
Removed top 26 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$1248 ($ge).
Removed top 25 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$1249 ($lt).
Removed top 25 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$1251 ($ge).
Removed top 25 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$1252 ($lt).
Removed top 25 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$1254 ($ge).
Removed top 25 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$1255 ($lt).
Removed top 25 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$1257 ($ge).
Removed top 24 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$1258 ($lt).
Removed top 24 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$1260 ($ge).
Removed top 24 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$1261 ($lt).
Removed top 24 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$1263 ($ge).
Removed top 24 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$1264 ($lt).
Removed top 24 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$1266 ($ge).
Removed top 24 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$1267 ($lt).
Removed top 24 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$1269 ($ge).
Removed top 24 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$1270 ($lt).
Removed top 24 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$1272 ($ge).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$1273 ($lt).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$1275 ($ge).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$1276 ($lt).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$1278 ($ge).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$1279 ($lt).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$1281 ($ge).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$1282 ($lt).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$1284 ($ge).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$1285 ($lt).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$1287 ($ge).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$1288 ($lt).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$1290 ($ge).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$1291 ($lt).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$1293 ($ge).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$1294 ($lt).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$1296 ($ge).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$1297 ($lt).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$1299 ($ge).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$1300 ($lt).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$1302 ($ge).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$1303 ($lt).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$1305 ($ge).
Removed top 22 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$1306 ($lt).
Removed top 22 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$1308 ($ge).
Removed top 22 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$1309 ($lt).
Removed top 22 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$1311 ($ge).
Removed top 22 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$1312 ($lt).
Removed top 31 bits (of 32) from port B of cell top.$flatten\game_manager.\sh.$le$src/shader.v:9$1162 ($le).
Removed top 26 bits (of 32) from port B of cell top.$flatten\game_manager.$sub$src/gmanager.v:43$1158 ($sub).
Removed top 22 bits (of 32) from port Y of cell top.$flatten\game_manager.$sub$src/gmanager.v:43$1158 ($sub).
Removed top 22 bits (of 32) from port B of cell top.$flatten\game_manager.$sub$src/gmanager.v:35$1157 ($sub).
Removed top 26 bits (of 32) from port Y of cell top.$flatten\game_manager.$sub$src/gmanager.v:35$1157 ($sub).
Removed top 26 bits (of 32) from port A of cell top.$flatten\game_manager.$sub$src/gmanager.v:35$1157 ($sub).
Removed top 4 bits (of 10) from port B of cell top.$flatten\game_manager.$sub$src/gmanager.v:35$1157 ($sub).
Removed top 26 bits (of 32) from port B of cell top.$flatten\game_manager.$sub$src/gmanager.v:34$1153 ($sub).
Removed top 22 bits (of 32) from port Y of cell top.$flatten\game_manager.$sub$src/gmanager.v:34$1153 ($sub).
Removed top 22 bits (of 32) from port B of cell top.$flatten\game_manager.$lt$src/gmanager.v:29$1151 ($lt).
Removed top 26 bits (of 32) from port B of cell top.$flatten\game_manager.$ge$src/gmanager.v:29$1150 ($ge).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.$lt$src/gmanager.v:28$1148 ($lt).
Removed top 26 bits (of 32) from port B of cell top.$flatten\game_manager.$ge$src/gmanager.v:28$1147 ($ge).
Removed top 23 bits (of 32) from port B of cell top.$flatten\core.$lt$src/vga_core.v:85$937 ($lt).
Removed top 23 bits (of 32) from port B of cell top.$flatten\core.$ge$src/vga_core.v:85$936 ($ge).
Removed top 22 bits (of 32) from port B of cell top.$flatten\core.$lt$src/vga_core.v:84$933 ($lt).
Removed top 22 bits (of 32) from port B of cell top.$flatten\core.$ge$src/vga_core.v:84$932 ($ge).
Removed top 23 bits (of 32) from port B of cell top.$flatten\core.$lt$src/vga_core.v:82$931 ($lt).
Removed top 22 bits (of 32) from port B of cell top.$flatten\core.$lt$src/vga_core.v:81$930 ($lt).
Removed top 3 bits (of 23) from FF cell top.$flatten\memory.\sh.$procdff$3834 ($dff).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\sh.$lt$src/shifter.v:45$840 ($lt).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\sh.$lt$src/shifter.v:44$839 ($lt).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\sh.$lt$src/shifter.v:43$838 ($lt).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\sh.$lt$src/shifter.v:42$837 ($lt).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\sh.$lt$src/shifter.v:41$836 ($lt).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\sh.$lt$src/shifter.v:40$835 ($lt).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\sh.$lt$src/shifter.v:39$834 ($lt).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\sh.$lt$src/shifter.v:38$833 ($lt).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\sh.$lt$src/shifter.v:37$832 ($lt).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\sh.$lt$src/shifter.v:36$831 ($lt).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\sh.$lt$src/shifter.v:35$830 ($lt).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\sh.$lt$src/shifter.v:34$829 ($lt).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\sh.$lt$src/shifter.v:33$828 ($lt).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\sh.$lt$src/shifter.v:32$827 ($lt).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\sh.$lt$src/shifter.v:31$826 ($lt).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\sh.$lt$src/shifter.v:30$825 ($lt).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\sh.$lt$src/shifter.v:29$824 ($lt).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\sh.$lt$src/shifter.v:28$823 ($lt).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\sh.$lt$src/shifter.v:27$822 ($lt).
Removed top 22 bits (of 32) from wire top.$flatten\game_manager.$sub$src/gmanager.v:34$1153_Y.
Removed top 4 bits (of 5) from wire top.$flatten\game_manager.\h.$or$src/mod24.v:18$1196_Y.
Removed top 3 bits (of 5) from wire top.$flatten\game_manager.\h.$or$src/mod24.v:18$1198_Y.
Removed top 2 bits (of 5) from wire top.$flatten\game_manager.\h.$or$src/mod24.v:19$1203_Y.
Removed top 2 bits (of 5) from wire top.$flatten\game_manager.\h.$or$src/mod24.v:19$1205_Y.
Removed top 1 bits (of 5) from wire top.$flatten\game_manager.\h.$or$src/mod24.v:20$1210_Y.
Removed top 1 bits (of 5) from wire top.$flatten\game_manager.\h.$or$src/mod24.v:20$1212_Y.
Removed top 1 bits (of 5) from wire top.$flatten\game_manager.\h.$or$src/mod24.v:21$1217_Y.
Removed top 1 bits (of 5) from wire top.$flatten\game_manager.\h.$or$src/mod24.v:21$1219_Y.
Removed top 2 bits (of 5) from wire top.$flatten\game_manager.\h.$or$src/mod24.v:25$1236_Y.
Removed top 1 bits (of 5) from wire top.$flatten\game_manager.\h.$or$src/mod24.v:25$1237_Y.
Removed top 1 bits (of 5) from wire top.$flatten\game_manager.\h.$or$src/mod24.v:25$1238_Y.
Removed top 3 bits (of 5) from wire top.$flatten\game_manager.\h.$ternary$src/mod24.v:18$1197_Y.
Removed top 3 bits (of 5) from wire top.$flatten\game_manager.\h.$ternary$src/mod24.v:18$1199_Y.
Removed top 2 bits (of 5) from wire top.$flatten\game_manager.\h.$ternary$src/mod24.v:19$1201_Y.
Removed top 4 bits (of 5) from wire top.$flatten\game_manager.\h.$ternary$src/mod24.v:19$1202_Y.
Removed top 2 bits (of 5) from wire top.$flatten\game_manager.\h.$ternary$src/mod24.v:19$1204_Y.
Removed top 2 bits (of 5) from wire top.$flatten\game_manager.\h.$ternary$src/mod24.v:19$1206_Y.
Removed top 1 bits (of 5) from wire top.$flatten\game_manager.\h.$ternary$src/mod24.v:20$1208_Y.
Removed top 1 bits (of 5) from wire top.$flatten\game_manager.\h.$ternary$src/mod24.v:20$1209_Y.
Removed top 4 bits (of 5) from wire top.$flatten\game_manager.\h.$ternary$src/mod24.v:20$1211_Y.
Removed top 1 bits (of 5) from wire top.$flatten\game_manager.\h.$ternary$src/mod24.v:20$1213_Y.
Removed top 1 bits (of 5) from wire top.$flatten\game_manager.\h.$ternary$src/mod24.v:21$1215_Y.
Removed top 1 bits (of 5) from wire top.$flatten\game_manager.\h.$ternary$src/mod24.v:21$1216_Y.
Removed top 1 bits (of 5) from wire top.$flatten\game_manager.\h.$ternary$src/mod24.v:21$1218_Y.
Removed top 1 bits (of 5) from wire top.$flatten\game_manager.\h.$ternary$src/mod24.v:21$1220_Y.
Removed top 3 bits (of 5) from wire top.$flatten\game_manager.\h.$ternary$src/mod24.v:23$1234_Y.
Removed top 9 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:33$1315_Y.
Removed top 9 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:34$1321_Y.
Removed top 9 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:35$1328_Y.
Removed top 9 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:36$1335_Y.
Removed top 9 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:37$1342_Y.
Removed top 9 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:38$1349_Y.
Removed top 9 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:39$1356_Y.
Removed top 9 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:40$1363_Y.
Removed top 9 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:41$1370_Y.
Removed top 9 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:42$1377_Y.
Removed top 9 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:43$1384_Y.
Removed top 4 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$1326_Y.
Removed top 4 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$1333_Y.
Removed top 4 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$1347_Y.
Removed top 4 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$1354_Y.
Removed top 4 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$1361_Y.
Removed top 4 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$1368_Y.
Removed top 4 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$1375_Y.
Removed top 4 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$1382_Y.
Removed top 5 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:33$1318_Y.
Removed top 4 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:33$1319_Y.
Removed top 6 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:34$1324_Y.
Removed top 4 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:34$1325_Y.
Removed top 4 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:35$1331_Y.
Removed top 4 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:35$1332_Y.
Removed top 5 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:37$1345_Y.
Removed top 4 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:37$1346_Y.
Removed top 9 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:38$1352_Y.
Removed top 4 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:38$1353_Y.
Removed top 8 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:39$1360_Y.
Removed top 4 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:40$1366_Y.
Removed top 6 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:40$1367_Y.
Removed top 5 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:41$1373_Y.
Removed top 6 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:41$1374_Y.
Removed top 6 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:42$1380_Y.
Removed top 6 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:42$1381_Y.
Removed top 4 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:43$1387_Y.
Removed top 4 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:43$1388_Y.
Removed top 11 bits (of 12) from wire top.$flatten\game_manager.\sh.$and$src/shader.v:20$1182_Y.
Removed top 11 bits (of 12) from wire top.$flatten\game_manager.\sh.$and$src/shader.v:21$1185_Y.
Removed top 11 bits (of 12) from wire top.$flatten\game_manager.\sh.$logic_not$src/shader.v:21$1184_Y.
Removed top 26 bits (of 32) from wire top.$flatten\memory.$sub$src/blockmemory.v:132$1419_Y.
Removed top 26 bits (of 32) from wire top.$flatten\memory.$sub$src/blockmemory.v:136$1424_Y.
Removed top 26 bits (of 32) from wire top.$flatten\memory.$sub$src/blockmemory.v:207$1446_Y.
Removed top 26 bits (of 32) from wire top.$flatten\memory.$sub$src/blockmemory.v:215$1448_Y.
Removed top 26 bits (of 32) from wire top.$flatten\memory.$sub$src/blockmemory.v:223$1450_Y.
Removed top 3 bits (of 6) from wire top.$flatten\memory.\sh.$ternary$src/shifter.v:10$766_Y.
Removed top 3 bits (of 6) from wire top.$flatten\memory.\sh.$ternary$src/shifter.v:10$768_Y.
Removed top 2 bits (of 6) from wire top.$flatten\memory.\sh.$ternary$src/shifter.v:12$776_Y.
Removed top 2 bits (of 6) from wire top.$flatten\memory.\sh.$ternary$src/shifter.v:14$782_Y.
Removed top 2 bits (of 6) from wire top.$flatten\memory.\sh.$ternary$src/shifter.v:14$783_Y.
Removed top 1 bits (of 6) from wire top.$flatten\memory.\sh.$ternary$src/shifter.v:16$791_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s1.$or$src/digitdisplay.v:23$454_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s1.$or$src/digitdisplay.v:28$477_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s1.$or$src/digitdisplay.v:33$502_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s1.$or$src/digitdisplay.v:38$523_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s1.$or$src/digitdisplay.v:43$540_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s1.$or$src/digitdisplay.v:47$567_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s1.$ternary$src/digitdisplay.v:18$429_Y.
Removed top 9 bits (of 12) from wire top.$flatten\sdisplay.\s1.$ternary$src/digitdisplay.v:23$453_Y.
Removed top 9 bits (of 12) from wire top.$flatten\sdisplay.\s1.$ternary$src/digitdisplay.v:28$476_Y.
Removed top 9 bits (of 12) from wire top.$flatten\sdisplay.\s1.$ternary$src/digitdisplay.v:33$501_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s1.$ternary$src/digitdisplay.v:38$522_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s1.$ternary$src/digitdisplay.v:43$539_Y.
Removed top 9 bits (of 12) from wire top.$flatten\sdisplay.\s1.$ternary$src/digitdisplay.v:47$566_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s2.$or$src/digitdisplay.v:23$454_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s2.$or$src/digitdisplay.v:28$477_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s2.$or$src/digitdisplay.v:33$502_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s2.$or$src/digitdisplay.v:38$523_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s2.$or$src/digitdisplay.v:43$540_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s2.$or$src/digitdisplay.v:47$567_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s2.$ternary$src/digitdisplay.v:18$429_Y.
Removed top 9 bits (of 12) from wire top.$flatten\sdisplay.\s2.$ternary$src/digitdisplay.v:23$453_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s2.$ternary$src/digitdisplay.v:28$476_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s2.$ternary$src/digitdisplay.v:33$501_Y.
Removed top 9 bits (of 12) from wire top.$flatten\sdisplay.\s2.$ternary$src/digitdisplay.v:38$522_Y.
Removed top 11 bits (of 12) from wire top.$flatten\sdisplay.\s2.$ternary$src/digitdisplay.v:43$539_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s2.$ternary$src/digitdisplay.v:47$566_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s3.$or$src/digitdisplay.v:23$454_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s3.$or$src/digitdisplay.v:28$477_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s3.$or$src/digitdisplay.v:33$502_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s3.$or$src/digitdisplay.v:38$523_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s3.$or$src/digitdisplay.v:43$540_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s3.$or$src/digitdisplay.v:47$567_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s3.$ternary$src/digitdisplay.v:18$429_Y.
Removed top 9 bits (of 12) from wire top.$flatten\sdisplay.\s3.$ternary$src/digitdisplay.v:23$453_Y.
Removed top 9 bits (of 12) from wire top.$flatten\sdisplay.\s3.$ternary$src/digitdisplay.v:28$476_Y.
Removed top 9 bits (of 12) from wire top.$flatten\sdisplay.\s3.$ternary$src/digitdisplay.v:33$501_Y.
Removed top 11 bits (of 12) from wire top.$flatten\sdisplay.\s3.$ternary$src/digitdisplay.v:38$522_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s3.$ternary$src/digitdisplay.v:43$539_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s3.$ternary$src/digitdisplay.v:47$566_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s4.$or$src/digitdisplay.v:23$454_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s4.$or$src/digitdisplay.v:28$477_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s4.$or$src/digitdisplay.v:33$502_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s4.$or$src/digitdisplay.v:38$523_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s4.$or$src/digitdisplay.v:43$540_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s4.$or$src/digitdisplay.v:47$567_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s4.$ternary$src/digitdisplay.v:18$429_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s4.$ternary$src/digitdisplay.v:23$453_Y.
Removed top 9 bits (of 12) from wire top.$flatten\sdisplay.\s4.$ternary$src/digitdisplay.v:28$476_Y.
Removed top 9 bits (of 12) from wire top.$flatten\sdisplay.\s4.$ternary$src/digitdisplay.v:33$501_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s4.$ternary$src/digitdisplay.v:38$522_Y.
Removed top 9 bits (of 12) from wire top.$flatten\sdisplay.\s4.$ternary$src/digitdisplay.v:43$539_Y.
Removed top 9 bits (of 12) from wire top.$flatten\sdisplay.\s4.$ternary$src/digitdisplay.v:47$566_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s5.$or$src/digitdisplay.v:23$454_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s5.$or$src/digitdisplay.v:28$477_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s5.$or$src/digitdisplay.v:33$502_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s5.$or$src/digitdisplay.v:38$523_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s5.$or$src/digitdisplay.v:43$540_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s5.$or$src/digitdisplay.v:47$567_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s5.$ternary$src/digitdisplay.v:18$429_Y.
Removed top 9 bits (of 12) from wire top.$flatten\sdisplay.\s5.$ternary$src/digitdisplay.v:23$453_Y.
Removed top 9 bits (of 12) from wire top.$flatten\sdisplay.\s5.$ternary$src/digitdisplay.v:28$476_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s5.$ternary$src/digitdisplay.v:33$501_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s5.$ternary$src/digitdisplay.v:38$522_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s5.$ternary$src/digitdisplay.v:43$539_Y.
Removed top 9 bits (of 12) from wire top.$flatten\sdisplay.\s5.$ternary$src/digitdisplay.v:47$566_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s6.$or$src/digitdisplay.v:23$454_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s6.$or$src/digitdisplay.v:28$477_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s6.$or$src/digitdisplay.v:33$502_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s6.$or$src/digitdisplay.v:38$523_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s6.$or$src/digitdisplay.v:43$540_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s6.$or$src/digitdisplay.v:47$567_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s6.$ternary$src/digitdisplay.v:18$429_Y.
Removed top 9 bits (of 12) from wire top.$flatten\sdisplay.\s6.$ternary$src/digitdisplay.v:23$453_Y.
Removed top 9 bits (of 12) from wire top.$flatten\sdisplay.\s6.$ternary$src/digitdisplay.v:28$476_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s6.$ternary$src/digitdisplay.v:33$501_Y.
Removed top 9 bits (of 12) from wire top.$flatten\sdisplay.\s6.$ternary$src/digitdisplay.v:38$522_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s6.$ternary$src/digitdisplay.v:43$539_Y.
Removed top 9 bits (of 12) from wire top.$flatten\sdisplay.\s6.$ternary$src/digitdisplay.v:47$566_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s7.$or$src/digitdisplay.v:23$454_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s7.$or$src/digitdisplay.v:28$477_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s7.$or$src/digitdisplay.v:33$502_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s7.$or$src/digitdisplay.v:38$523_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s7.$or$src/digitdisplay.v:43$540_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s7.$or$src/digitdisplay.v:47$567_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s7.$ternary$src/digitdisplay.v:18$429_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s7.$ternary$src/digitdisplay.v:23$453_Y.
Removed top 9 bits (of 12) from wire top.$flatten\sdisplay.\s7.$ternary$src/digitdisplay.v:28$476_Y.
Removed top 9 bits (of 12) from wire top.$flatten\sdisplay.\s7.$ternary$src/digitdisplay.v:33$501_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s7.$ternary$src/digitdisplay.v:38$522_Y.
Removed top 9 bits (of 12) from wire top.$flatten\sdisplay.\s7.$ternary$src/digitdisplay.v:43$539_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s7.$ternary$src/digitdisplay.v:47$566_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s8.$or$src/digitdisplay.v:23$454_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s8.$or$src/digitdisplay.v:28$477_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s8.$or$src/digitdisplay.v:33$502_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s8.$or$src/digitdisplay.v:38$523_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s8.$or$src/digitdisplay.v:43$540_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s8.$or$src/digitdisplay.v:47$567_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s8.$ternary$src/digitdisplay.v:18$429_Y.
Removed top 9 bits (of 12) from wire top.$flatten\sdisplay.\s8.$ternary$src/digitdisplay.v:23$453_Y.
Removed top 9 bits (of 12) from wire top.$flatten\sdisplay.\s8.$ternary$src/digitdisplay.v:28$476_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s8.$ternary$src/digitdisplay.v:33$501_Y.
Removed top 9 bits (of 12) from wire top.$flatten\sdisplay.\s8.$ternary$src/digitdisplay.v:38$522_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s8.$ternary$src/digitdisplay.v:43$539_Y.
Removed top 9 bits (of 12) from wire top.$flatten\sdisplay.\s8.$ternary$src/digitdisplay.v:47$566_Y.
Removed top 1 bits (of 10) from wire top.$flatten\tdisplay.$shr$src/gamespeed_display.v:17$736_Y.
Removed top 9 bits (of 10) from wire top.$flatten\tdisplay.$sub$src/gamespeed_display.v:17$735_Y.
Removed top 10 bits (of 18) from wire top.$flatten\tdisplay.$ternary$src/gamespeed_display.v:17$738_Y.
Removed top 25 bits (of 26) from wire top.$flatten\vcell.$eq$src/volatile_cell_storage.v:211$1984_Y.
Removed top 4 bits (of 5) from wire top.$flatten\vcell.\ishaper.$procmux$2855_Y.

26.14. Executing PEEPOPT pass (run peephole optimizers).

26.15. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 3 unused cells and 468 unused wires.
<suppressed ~4 debug messages>

26.16. Executing SHARE pass (SAT-based resource sharing).

26.17. Executing TECHMAP pass (map to technology primitives).

26.17.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/usr/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

26.17.2. Continuing TECHMAP pass.
Using template $paramod$145abe87336b813af869805af52840f8eaed9f1a\_90_lut_cmp_ for cells of type $gt.
Using template $paramod$63c7f1a5c4d320eda7bf5de8a615386686b975ab\_90_lut_cmp_ for cells of type $gt.
Using template $paramod$fd3a338331ce77d5c60504e1108b754e9b73ee37\_90_lut_cmp_ for cells of type $lt.
No more expansions possible.
<suppressed ~3543 debug messages>

26.18. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~38 debug messages>

26.19. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 56 unused wires.
<suppressed ~1 debug messages>

26.20. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module top:
  creating $macc model for $flatten\core.$add$src/vga_core.v:79$929 ($add).
  creating $macc model for $flatten\core.$add$src/vga_core.v:89$941 ($add).
  creating $macc model for $flatten\game_manager.$sub$src/gmanager.v:34$1153 ($sub).
  creating $macc model for $flatten\game_manager.$sub$src/gmanager.v:35$1157 ($sub).
  creating $macc model for $flatten\game_manager.$sub$src/gmanager.v:43$1158 ($sub).
  creating $macc model for $flatten\game_manager.\hh.$sub$src/mod24.v:58$1390 ($sub).
  creating $macc model for $flatten\memory.$add$src/blockmemory.v:128$1415 ($add).
  creating $macc model for $flatten\memory.$sub$src/blockmemory.v:132$1419 ($sub).
  creating $macc model for $flatten\memory.$sub$src/blockmemory.v:136$1424 ($sub).
  creating $macc model for $flatten\memory.$sub$src/blockmemory.v:180$1437 ($sub).
  creating $macc model for $flatten\memory.$sub$src/blockmemory.v:183$1439 ($sub).
  creating $macc model for $flatten\memory.$sub$src/blockmemory.v:199$1444 ($sub).
  creating $macc model for $flatten\memory.$sub$src/blockmemory.v:207$1446 ($sub).
  creating $macc model for $flatten\memory.$sub$src/blockmemory.v:215$1448 ($sub).
  creating $macc model for $flatten\memory.$sub$src/blockmemory.v:223$1450 ($sub).
  creating $macc model for $flatten\memory.$sub$src/blockmemory.v:242$1453 ($sub).
  creating $macc model for $flatten\sdisplay.$add$src/scoredisplay.v:36$572 ($add).
  creating $macc model for $flatten\sdisplay.$add$src/scoredisplay.v:40$576 ($add).
  creating $macc model for $flatten\sdisplay.$add$src/scoredisplay.v:46$578 ($add).
  creating $macc model for $flatten\sdisplay.$add$src/scoredisplay.v:51$580 ($add).
  creating $macc model for $flatten\sdisplay.$add$src/scoredisplay.v:56$582 ($add).
  creating $macc model for $flatten\sdisplay.$add$src/scoredisplay.v:61$584 ($add).
  creating $macc model for $flatten\sdisplay.$add$src/scoredisplay.v:65$586 ($add).
  creating $macc model for $flatten\sdisplay.$add$src/scoredisplay.v:70$588 ($add).
  creating $macc model for $flatten\sdisplay.$add$src/scoredisplay.v:75$590 ($add).
  creating $macc model for $flatten\sdisplay.$sub$src/scoredisplay.v:105$611 ($sub).
  creating $macc model for $flatten\sdisplay.$sub$src/scoredisplay.v:105$612 ($sub).
  creating $macc model for $flatten\sdisplay.$sub$src/scoredisplay.v:111$623 ($sub).
  creating $macc model for $flatten\sdisplay.$sub$src/scoredisplay.v:118$635 ($sub).
  creating $macc model for $flatten\sdisplay.$sub$src/scoredisplay.v:125$647 ($sub).
  creating $macc model for $flatten\sdisplay.$sub$src/scoredisplay.v:132$659 ($sub).
  creating $macc model for $flatten\sdisplay.$sub$src/scoredisplay.v:139$671 ($sub).
  creating $macc model for $flatten\sdisplay.$sub$src/scoredisplay.v:146$683 ($sub).
  creating $macc model for $flatten\sdisplay.$sub$src/scoredisplay.v:38$574 ($sub).
  creating $macc model for $flatten\sdisplay.$sub$src/scoredisplay.v:97$600 ($sub).
  creating $macc model for $flatten\t.$add$src/timer.v:18$946 ($add).
  creating $macc model for $flatten\tdisplay.$add$src/gamespeed_display.v:28$745 ($add).
  creating $macc model for $flatten\tdisplay.$mul$src/gamespeed_display.v:18$741 ($mul).
  creating $macc model for $flatten\tdisplay.$sub$src/gamespeed_display.v:17$730 ($sub).
  creating $macc model for $flatten\tdisplay.$sub$src/gamespeed_display.v:17$732 ($sub).
  creating $macc model for $flatten\tdisplay.$sub$src/gamespeed_display.v:17$735 ($sub).
  creating $macc model for $flatten\tdisplay.$sub$src/gamespeed_display.v:31$747 ($sub).
  creating $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:187$1964 ($add).
  creating $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:207$1980 ($add).
  creating $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:219$1997 ($add).
  creating $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:58$1903 ($add).
  creating $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:59$1910 ($add).
  creating $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:60$1917 ($add).
  creating $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:61$1924 ($add).
  creating $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:62$1931 ($add).
  creating $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:63$1938 ($add).
  creating $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:64$1945 ($add).
  creating $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:65$1952 ($add).
  creating $macc model for $flatten\vcell.$sub$src/volatile_cell_storage.v:200$1967 ($sub).
  creating $macc model for $flatten\vcell.$sub$src/volatile_cell_storage.v:213$1988 ($sub).
  creating $alu model for $macc $flatten\vcell.$sub$src/volatile_cell_storage.v:213$1988.
  creating $alu model for $macc $flatten\vcell.$sub$src/volatile_cell_storage.v:200$1967.
  creating $alu model for $macc $flatten\vcell.$add$src/volatile_cell_storage.v:65$1952.
  creating $alu model for $macc $flatten\vcell.$add$src/volatile_cell_storage.v:64$1945.
  creating $alu model for $macc $flatten\vcell.$add$src/volatile_cell_storage.v:63$1938.
  creating $alu model for $macc $flatten\vcell.$add$src/volatile_cell_storage.v:62$1931.
  creating $alu model for $macc $flatten\vcell.$add$src/volatile_cell_storage.v:61$1924.
  creating $alu model for $macc $flatten\vcell.$add$src/volatile_cell_storage.v:60$1917.
  creating $alu model for $macc $flatten\vcell.$add$src/volatile_cell_storage.v:59$1910.
  creating $alu model for $macc $flatten\vcell.$add$src/volatile_cell_storage.v:58$1903.
  creating $alu model for $macc $flatten\vcell.$add$src/volatile_cell_storage.v:219$1997.
  creating $alu model for $macc $flatten\vcell.$add$src/volatile_cell_storage.v:207$1980.
  creating $alu model for $macc $flatten\vcell.$add$src/volatile_cell_storage.v:187$1964.
  creating $alu model for $macc $flatten\tdisplay.$sub$src/gamespeed_display.v:31$747.
  creating $alu model for $macc $flatten\tdisplay.$sub$src/gamespeed_display.v:17$735.
  creating $alu model for $macc $flatten\tdisplay.$sub$src/gamespeed_display.v:17$732.
  creating $alu model for $macc $flatten\tdisplay.$sub$src/gamespeed_display.v:17$730.
  creating $alu model for $macc $flatten\tdisplay.$add$src/gamespeed_display.v:28$745.
  creating $alu model for $macc $flatten\t.$add$src/timer.v:18$946.
  creating $alu model for $macc $flatten\sdisplay.$sub$src/scoredisplay.v:97$600.
  creating $alu model for $macc $flatten\sdisplay.$sub$src/scoredisplay.v:38$574.
  creating $alu model for $macc $flatten\sdisplay.$sub$src/scoredisplay.v:146$683.
  creating $alu model for $macc $flatten\sdisplay.$sub$src/scoredisplay.v:139$671.
  creating $alu model for $macc $flatten\sdisplay.$sub$src/scoredisplay.v:132$659.
  creating $alu model for $macc $flatten\sdisplay.$sub$src/scoredisplay.v:125$647.
  creating $alu model for $macc $flatten\sdisplay.$sub$src/scoredisplay.v:118$635.
  creating $alu model for $macc $flatten\sdisplay.$sub$src/scoredisplay.v:111$623.
  creating $alu model for $macc $flatten\sdisplay.$sub$src/scoredisplay.v:105$612.
  creating $alu model for $macc $flatten\sdisplay.$sub$src/scoredisplay.v:105$611.
  creating $alu model for $macc $flatten\sdisplay.$add$src/scoredisplay.v:75$590.
  creating $alu model for $macc $flatten\sdisplay.$add$src/scoredisplay.v:70$588.
  creating $alu model for $macc $flatten\sdisplay.$add$src/scoredisplay.v:65$586.
  creating $alu model for $macc $flatten\sdisplay.$add$src/scoredisplay.v:61$584.
  creating $alu model for $macc $flatten\sdisplay.$add$src/scoredisplay.v:56$582.
  creating $alu model for $macc $flatten\sdisplay.$add$src/scoredisplay.v:51$580.
  creating $alu model for $macc $flatten\sdisplay.$add$src/scoredisplay.v:46$578.
  creating $alu model for $macc $flatten\sdisplay.$add$src/scoredisplay.v:40$576.
  creating $alu model for $macc $flatten\sdisplay.$add$src/scoredisplay.v:36$572.
  creating $alu model for $macc $flatten\memory.$sub$src/blockmemory.v:242$1453.
  creating $alu model for $macc $flatten\memory.$sub$src/blockmemory.v:223$1450.
  creating $alu model for $macc $flatten\memory.$sub$src/blockmemory.v:215$1448.
  creating $alu model for $macc $flatten\memory.$sub$src/blockmemory.v:207$1446.
  creating $alu model for $macc $flatten\memory.$sub$src/blockmemory.v:199$1444.
  creating $alu model for $macc $flatten\memory.$sub$src/blockmemory.v:183$1439.
  creating $alu model for $macc $flatten\memory.$sub$src/blockmemory.v:180$1437.
  creating $alu model for $macc $flatten\memory.$sub$src/blockmemory.v:136$1424.
  creating $alu model for $macc $flatten\memory.$sub$src/blockmemory.v:132$1419.
  creating $alu model for $macc $flatten\memory.$add$src/blockmemory.v:128$1415.
  creating $alu model for $macc $flatten\game_manager.\hh.$sub$src/mod24.v:58$1390.
  creating $alu model for $macc $flatten\game_manager.$sub$src/gmanager.v:43$1158.
  creating $alu model for $macc $flatten\game_manager.$sub$src/gmanager.v:35$1157.
  creating $alu model for $macc $flatten\game_manager.$sub$src/gmanager.v:34$1153.
  creating $alu model for $macc $flatten\core.$add$src/vga_core.v:89$941.
  creating $alu model for $macc $flatten\core.$add$src/vga_core.v:79$929.
  creating $macc cell for $flatten\tdisplay.$mul$src/gamespeed_display.v:18$741: $auto$alumacc.cc:365:replace_macc$6401
  creating $alu model for $flatten\core.$ge$src/vga_core.v:84$932 ($ge): new $alu
  creating $alu model for $flatten\core.$ge$src/vga_core.v:85$936 ($ge): new $alu
  creating $alu model for $flatten\core.$lt$src/vga_core.v:81$930 ($lt): new $alu
  creating $alu model for $flatten\core.$lt$src/vga_core.v:82$931 ($lt): new $alu
  creating $alu model for $flatten\core.$lt$src/vga_core.v:84$933 ($lt): new $alu
  creating $alu model for $flatten\core.$lt$src/vga_core.v:85$937 ($lt): new $alu
  creating $alu model for $flatten\game_manager.$ge$src/gmanager.v:28$1147 ($ge): new $alu
  creating $alu model for $flatten\game_manager.$ge$src/gmanager.v:29$1150 ($ge): new $alu
  creating $alu model for $flatten\game_manager.$lt$src/gmanager.v:28$1148 ($lt): new $alu
  creating $alu model for $flatten\game_manager.$lt$src/gmanager.v:29$1151 ($lt): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$1245 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$1248 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$1251 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$1254 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$1257 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$1260 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$1263 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$1266 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$1269 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$1272 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$1275 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$1278 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$1281 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$1284 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$1287 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$1290 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$1293 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$1296 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$1299 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$1302 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$1305 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$1308 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$1311 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$1246 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$1248.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$1249 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$1251.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$1252 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$1254.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$1255 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$1257.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$1258 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$1260.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$1261 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$1263.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$1264 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$1266.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$1267 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$1269.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$1270 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$1272.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$1273 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$1275.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$1276 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$1278.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$1279 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$1281.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$1282 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$1284.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$1285 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$1287.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$1288 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$1290.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$1291 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$1293.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$1294 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$1296.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$1297 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$1299.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$1300 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$1302.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$1303 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$1305.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$1306 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$1308.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$1309 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$1311.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$1312 ($lt): new $alu
  creating $alu model for $flatten\game_manager.\sh.$ge$src/shader.v:9$1167 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\sh.$gt$src/shader.v:10$1169 ($gt): new $alu
  creating $alu model for $flatten\game_manager.\sh.$gt$src/shader.v:10$1172 ($gt): new $alu
  creating $alu model for $flatten\game_manager.\sh.$gt$src/shader.v:12$1178 ($gt): new $alu
  creating $alu model for $flatten\game_manager.\sh.$le$src/shader.v:9$1162 ($le): new $alu
  creating $alu model for $flatten\game_manager.\sh.$lt$src/shader.v:10$1170 ($lt): new $alu
  creating $alu model for $flatten\game_manager.\sh.$lt$src/shader.v:10$1174 ($lt): new $alu
  creating $alu model for $flatten\memory.$ge$src/blockmemory.v:130$1416 ($ge): new $alu
  creating $alu model for $flatten\memory.$ge$src/blockmemory.v:135$1421 ($ge): new $alu
  creating $alu model for $flatten\memory.$ge$src/blockmemory.v:140$1426 ($ge): new $alu
  creating $alu model for $flatten\memory.$gt$src/blockmemory.v:182$1438 ($gt): new $alu
  creating $alu model for $flatten\memory.$lt$src/blockmemory.v:125$1414 ($lt): merged with $flatten\memory.$ge$src/blockmemory.v:130$1416.
  creating $alu model for $flatten\memory.$lt$src/blockmemory.v:130$1417 ($lt): merged with $flatten\memory.$ge$src/blockmemory.v:135$1421.
  creating $alu model for $flatten\memory.$lt$src/blockmemory.v:135$1422 ($lt): merged with $flatten\memory.$ge$src/blockmemory.v:140$1426.
  creating $alu model for $flatten\memory.\sh.$gt$src/shifter.v:23$811 ($gt): new $alu
  creating $alu model for $flatten\memory.\sh.$gt$src/shifter.v:23$812 ($gt): new $alu
  creating $alu model for $flatten\memory.\sh.$gt$src/shifter.v:23$813 ($gt): new $alu
  creating $alu model for $flatten\memory.\sh.$lt$src/shifter.v:26$821 ($lt): new $alu
  creating $alu model for $flatten\memory.\sh.$lt$src/shifter.v:27$822 ($lt): new $alu
  creating $alu model for $flatten\memory.\sh.$lt$src/shifter.v:28$823 ($lt): new $alu
  creating $alu model for $flatten\memory.\sh.$lt$src/shifter.v:29$824 ($lt): new $alu
  creating $alu model for $flatten\memory.\sh.$lt$src/shifter.v:30$825 ($lt): new $alu
  creating $alu model for $flatten\memory.\sh.$lt$src/shifter.v:31$826 ($lt): new $alu
  creating $alu model for $flatten\memory.\sh.$lt$src/shifter.v:32$827 ($lt): new $alu
  creating $alu model for $flatten\memory.\sh.$lt$src/shifter.v:33$828 ($lt): new $alu
  creating $alu model for $flatten\memory.\sh.$lt$src/shifter.v:34$829 ($lt): new $alu
  creating $alu model for $flatten\memory.\sh.$lt$src/shifter.v:35$830 ($lt): new $alu
  creating $alu model for $flatten\memory.\sh.$lt$src/shifter.v:36$831 ($lt): new $alu
  creating $alu model for $flatten\memory.\sh.$lt$src/shifter.v:37$832 ($lt): new $alu
  creating $alu model for $flatten\memory.\sh.$lt$src/shifter.v:38$833 ($lt): new $alu
  creating $alu model for $flatten\memory.\sh.$lt$src/shifter.v:39$834 ($lt): new $alu
  creating $alu model for $flatten\memory.\sh.$lt$src/shifter.v:40$835 ($lt): new $alu
  creating $alu model for $flatten\memory.\sh.$lt$src/shifter.v:41$836 ($lt): new $alu
  creating $alu model for $flatten\memory.\sh.$lt$src/shifter.v:42$837 ($lt): new $alu
  creating $alu model for $flatten\memory.\sh.$lt$src/shifter.v:43$838 ($lt): new $alu
  creating $alu model for $flatten\memory.\sh.$lt$src/shifter.v:44$839 ($lt): new $alu
  creating $alu model for $flatten\memory.\sh.$lt$src/shifter.v:45$840 ($lt): new $alu
  creating $alu model for $flatten\screen_mngr.$ge$src/screen_manager.v:11$698 ($ge): new $alu
  creating $alu model for $flatten\screen_mngr.$ge$src/screen_manager.v:12$705 ($ge): new $alu
  creating $alu model for $flatten\screen_mngr.$ge$src/screen_manager.v:13$712 ($ge): new $alu
  creating $alu model for $flatten\screen_mngr.$lt$src/screen_manager.v:11$699 ($lt): new $alu
  creating $alu model for $flatten\screen_mngr.$lt$src/screen_manager.v:12$706 ($lt): new $alu
  creating $alu model for $flatten\screen_mngr.$lt$src/screen_manager.v:13$713 ($lt): new $alu
  creating $alu model for $flatten\sdisplay.$ge$src/scoredisplay.v:102$603 ($ge): new $alu
  creating $alu model for $flatten\sdisplay.$ge$src/scoredisplay.v:102$606 ($ge): new $alu
  creating $alu model for $flatten\sdisplay.$ge$src/scoredisplay.v:109$615 ($ge): new $alu
  creating $alu model for $flatten\sdisplay.$ge$src/scoredisplay.v:116$627 ($ge): new $alu
  creating $alu model for $flatten\sdisplay.$ge$src/scoredisplay.v:123$639 ($ge): new $alu
  creating $alu model for $flatten\sdisplay.$ge$src/scoredisplay.v:130$651 ($ge): new $alu
  creating $alu model for $flatten\sdisplay.$ge$src/scoredisplay.v:137$663 ($ge): new $alu
  creating $alu model for $flatten\sdisplay.$ge$src/scoredisplay.v:143$675 ($ge): new $alu
  creating $alu model for $flatten\sdisplay.$ge$src/scoredisplay.v:143$678 ($ge): new $alu
  creating $alu model for $flatten\sdisplay.$ge$src/scoredisplay.v:147$686 ($ge): new $alu
  creating $alu model for $flatten\sdisplay.$ge$src/scoredisplay.v:94$591 ($ge): new $alu
  creating $alu model for $flatten\sdisplay.$gt$src/scoredisplay.v:35$571 ($gt): new $alu
  creating $alu model for $flatten\sdisplay.$gt$src/scoredisplay.v:37$573 ($gt): new $alu
  creating $alu model for $flatten\sdisplay.$lt$src/scoredisplay.v:102$604 ($lt): new $alu
  creating $alu model for $flatten\sdisplay.$lt$src/scoredisplay.v:102$607 ($lt): new $alu
  creating $alu model for $flatten\sdisplay.$lt$src/scoredisplay.v:109$616 ($lt): new $alu
  creating $alu model for $flatten\sdisplay.$lt$src/scoredisplay.v:116$628 ($lt): new $alu
  creating $alu model for $flatten\sdisplay.$lt$src/scoredisplay.v:123$640 ($lt): new $alu
  creating $alu model for $flatten\sdisplay.$lt$src/scoredisplay.v:130$652 ($lt): new $alu
  creating $alu model for $flatten\sdisplay.$lt$src/scoredisplay.v:137$664 ($lt): new $alu
  creating $alu model for $flatten\sdisplay.$lt$src/scoredisplay.v:143$676 ($lt): merged with $flatten\tdisplay.$sub$src/gamespeed_display.v:17$730.
  creating $alu model for $flatten\sdisplay.$lt$src/scoredisplay.v:143$679 ($lt): new $alu
  creating $alu model for $flatten\sdisplay.$lt$src/scoredisplay.v:147$687 ($lt): new $alu
  creating $alu model for $flatten\sdisplay.$lt$src/scoredisplay.v:39$575 ($lt): new $alu
  creating $alu model for $flatten\sdisplay.$lt$src/scoredisplay.v:44$577 ($lt): new $alu
  creating $alu model for $flatten\sdisplay.$lt$src/scoredisplay.v:49$579 ($lt): new $alu
  creating $alu model for $flatten\sdisplay.$lt$src/scoredisplay.v:54$581 ($lt): new $alu
  creating $alu model for $flatten\sdisplay.$lt$src/scoredisplay.v:59$583 ($lt): new $alu
  creating $alu model for $flatten\sdisplay.$lt$src/scoredisplay.v:64$585 ($lt): new $alu
  creating $alu model for $flatten\sdisplay.$lt$src/scoredisplay.v:69$587 ($lt): new $alu
  creating $alu model for $flatten\sdisplay.$lt$src/scoredisplay.v:74$589 ($lt): new $alu
  creating $alu model for $flatten\sdisplay.$lt$src/scoredisplay.v:94$592 ($lt): new $alu
  creating $alu model for $flatten\sdisplay.\s1.$gt$src/digitdisplay.v:17$407 ($gt): new $alu
  creating $alu model for $flatten\sdisplay.\s1.$gt$src/digitdisplay.v:17$410 ($gt): new $alu
  creating $alu model for $flatten\sdisplay.\s1.$gt$src/digitdisplay.v:22$431 ($gt): new $alu
  creating $alu model for $flatten\sdisplay.\s1.$gt$src/digitdisplay.v:27$456 ($gt): new $alu
  creating $alu model for $flatten\sdisplay.\s1.$gt$src/digitdisplay.v:37$507 ($gt): new $alu
  creating $alu model for $flatten\sdisplay.\s1.$lt$src/digitdisplay.v:17$408 ($lt): new $alu
  creating $alu model for $flatten\sdisplay.\s1.$lt$src/digitdisplay.v:17$411 ($lt): new $alu
  creating $alu model for $flatten\sdisplay.\s1.$lt$src/digitdisplay.v:22$432 ($lt): new $alu
  creating $alu model for $flatten\sdisplay.\s1.$lt$src/digitdisplay.v:27$457 ($lt): new $alu
  creating $alu model for $flatten\sdisplay.\s1.$lt$src/digitdisplay.v:32$483 ($lt): new $alu
  creating $alu model for $flatten\sdisplay.\s2.$gt$src/digitdisplay.v:17$410 ($gt): new $alu
  creating $alu model for $flatten\sdisplay.\s2.$gt$src/digitdisplay.v:37$507 ($gt): new $alu
  creating $alu model for $flatten\sdisplay.\s2.$lt$src/digitdisplay.v:17$411 ($lt): new $alu
  creating $alu model for $flatten\sdisplay.\s2.$lt$src/digitdisplay.v:32$483 ($lt): new $alu
  creating $alu model for $flatten\sdisplay.\s3.$gt$src/digitdisplay.v:17$410 ($gt): new $alu
  creating $alu model for $flatten\sdisplay.\s3.$gt$src/digitdisplay.v:37$507 ($gt): new $alu
  creating $alu model for $flatten\sdisplay.\s3.$lt$src/digitdisplay.v:17$411 ($lt): new $alu
  creating $alu model for $flatten\sdisplay.\s3.$lt$src/digitdisplay.v:32$483 ($lt): new $alu
  creating $alu model for $flatten\sdisplay.\s4.$gt$src/digitdisplay.v:17$410 ($gt): new $alu
  creating $alu model for $flatten\sdisplay.\s4.$gt$src/digitdisplay.v:37$507 ($gt): new $alu
  creating $alu model for $flatten\sdisplay.\s4.$lt$src/digitdisplay.v:17$411 ($lt): new $alu
  creating $alu model for $flatten\sdisplay.\s4.$lt$src/digitdisplay.v:32$483 ($lt): new $alu
  creating $alu model for $flatten\sdisplay.\s5.$gt$src/digitdisplay.v:17$410 ($gt): new $alu
  creating $alu model for $flatten\sdisplay.\s5.$gt$src/digitdisplay.v:37$507 ($gt): new $alu
  creating $alu model for $flatten\sdisplay.\s5.$lt$src/digitdisplay.v:17$411 ($lt): new $alu
  creating $alu model for $flatten\sdisplay.\s5.$lt$src/digitdisplay.v:32$483 ($lt): new $alu
  creating $alu model for $flatten\sdisplay.\s6.$gt$src/digitdisplay.v:17$410 ($gt): new $alu
  creating $alu model for $flatten\sdisplay.\s6.$gt$src/digitdisplay.v:37$507 ($gt): new $alu
  creating $alu model for $flatten\sdisplay.\s6.$lt$src/digitdisplay.v:17$411 ($lt): new $alu
  creating $alu model for $flatten\sdisplay.\s6.$lt$src/digitdisplay.v:32$483 ($lt): new $alu
  creating $alu model for $flatten\sdisplay.\s7.$gt$src/digitdisplay.v:17$410 ($gt): new $alu
  creating $alu model for $flatten\sdisplay.\s7.$gt$src/digitdisplay.v:37$507 ($gt): new $alu
  creating $alu model for $flatten\sdisplay.\s7.$lt$src/digitdisplay.v:17$411 ($lt): new $alu
  creating $alu model for $flatten\sdisplay.\s7.$lt$src/digitdisplay.v:32$483 ($lt): new $alu
  creating $alu model for $flatten\sdisplay.\s8.$gt$src/digitdisplay.v:17$410 ($gt): new $alu
  creating $alu model for $flatten\sdisplay.\s8.$gt$src/digitdisplay.v:37$507 ($gt): new $alu
  creating $alu model for $flatten\sdisplay.\s8.$lt$src/digitdisplay.v:17$411 ($lt): new $alu
  creating $alu model for $flatten\sdisplay.\s8.$lt$src/digitdisplay.v:32$483 ($lt): new $alu
  creating $alu model for $flatten\tdisplay.$ge$src/gamespeed_display.v:14$725 ($ge): new $alu
  creating $alu model for $flatten\tdisplay.$lt$src/gamespeed_display.v:14$726 ($lt): new $alu
  creating $alu model for $flatten\tdisplay.$lt$src/gamespeed_display.v:17$731 ($lt): new $alu
  creating $alu model for $flatten\tdisplay.$lt$src/gamespeed_display.v:17$733 ($lt): new $alu
  creating $alu model for $flatten\vcell.$gt$src/volatile_cell_storage.v:223$1999 ($gt): new $alu
  creating $alu cell for $flatten\vcell.$gt$src/volatile_cell_storage.v:223$1999: $auto$alumacc.cc:485:replace_alu$6550
  creating $alu cell for $flatten\tdisplay.$lt$src/gamespeed_display.v:17$733: $auto$alumacc.cc:485:replace_alu$6555
  creating $alu cell for $flatten\tdisplay.$lt$src/gamespeed_display.v:17$731: $auto$alumacc.cc:485:replace_alu$6560
  creating $alu cell for $flatten\tdisplay.$lt$src/gamespeed_display.v:14$726: $auto$alumacc.cc:485:replace_alu$6565
  creating $alu cell for $flatten\tdisplay.$ge$src/gamespeed_display.v:14$725: $auto$alumacc.cc:485:replace_alu$6576
  creating $alu cell for $flatten\sdisplay.\s8.$lt$src/digitdisplay.v:32$483: $auto$alumacc.cc:485:replace_alu$6585
  creating $alu cell for $flatten\sdisplay.\s8.$lt$src/digitdisplay.v:17$411: $auto$alumacc.cc:485:replace_alu$6596
  creating $alu cell for $flatten\sdisplay.\s8.$gt$src/digitdisplay.v:37$507: $auto$alumacc.cc:485:replace_alu$6607
  creating $alu cell for $flatten\sdisplay.\s8.$gt$src/digitdisplay.v:17$410: $auto$alumacc.cc:485:replace_alu$6612
  creating $alu cell for $flatten\sdisplay.\s7.$lt$src/digitdisplay.v:32$483: $auto$alumacc.cc:485:replace_alu$6617
  creating $alu cell for $flatten\sdisplay.\s7.$lt$src/digitdisplay.v:17$411: $auto$alumacc.cc:485:replace_alu$6628
  creating $alu cell for $flatten\sdisplay.\s7.$gt$src/digitdisplay.v:37$507: $auto$alumacc.cc:485:replace_alu$6639
  creating $alu cell for $flatten\sdisplay.\s7.$gt$src/digitdisplay.v:17$410: $auto$alumacc.cc:485:replace_alu$6644
  creating $alu cell for $flatten\sdisplay.\s6.$lt$src/digitdisplay.v:32$483: $auto$alumacc.cc:485:replace_alu$6649
  creating $alu cell for $flatten\sdisplay.\s6.$lt$src/digitdisplay.v:17$411: $auto$alumacc.cc:485:replace_alu$6660
  creating $alu cell for $flatten\sdisplay.\s6.$gt$src/digitdisplay.v:37$507: $auto$alumacc.cc:485:replace_alu$6671
  creating $alu cell for $flatten\sdisplay.\s6.$gt$src/digitdisplay.v:17$410: $auto$alumacc.cc:485:replace_alu$6676
  creating $alu cell for $flatten\sdisplay.\s5.$lt$src/digitdisplay.v:32$483: $auto$alumacc.cc:485:replace_alu$6681
  creating $alu cell for $flatten\sdisplay.\s5.$lt$src/digitdisplay.v:17$411: $auto$alumacc.cc:485:replace_alu$6692
  creating $alu cell for $flatten\sdisplay.\s5.$gt$src/digitdisplay.v:37$507: $auto$alumacc.cc:485:replace_alu$6703
  creating $alu cell for $flatten\sdisplay.\s5.$gt$src/digitdisplay.v:17$410: $auto$alumacc.cc:485:replace_alu$6708
  creating $alu cell for $flatten\sdisplay.\s4.$lt$src/digitdisplay.v:32$483: $auto$alumacc.cc:485:replace_alu$6713
  creating $alu cell for $flatten\sdisplay.\s4.$lt$src/digitdisplay.v:17$411: $auto$alumacc.cc:485:replace_alu$6724
  creating $alu cell for $flatten\sdisplay.\s4.$gt$src/digitdisplay.v:37$507: $auto$alumacc.cc:485:replace_alu$6735
  creating $alu cell for $flatten\sdisplay.\s4.$gt$src/digitdisplay.v:17$410: $auto$alumacc.cc:485:replace_alu$6740
  creating $alu cell for $flatten\sdisplay.\s3.$lt$src/digitdisplay.v:32$483: $auto$alumacc.cc:485:replace_alu$6745
  creating $alu cell for $flatten\sdisplay.\s3.$lt$src/digitdisplay.v:17$411: $auto$alumacc.cc:485:replace_alu$6756
  creating $alu cell for $flatten\sdisplay.\s3.$gt$src/digitdisplay.v:37$507: $auto$alumacc.cc:485:replace_alu$6767
  creating $alu cell for $flatten\sdisplay.\s3.$gt$src/digitdisplay.v:17$410: $auto$alumacc.cc:485:replace_alu$6772
  creating $alu cell for $flatten\sdisplay.\s2.$lt$src/digitdisplay.v:32$483: $auto$alumacc.cc:485:replace_alu$6777
  creating $alu cell for $flatten\sdisplay.\s2.$lt$src/digitdisplay.v:17$411: $auto$alumacc.cc:485:replace_alu$6788
  creating $alu cell for $flatten\sdisplay.\s2.$gt$src/digitdisplay.v:37$507: $auto$alumacc.cc:485:replace_alu$6799
  creating $alu cell for $flatten\sdisplay.\s2.$gt$src/digitdisplay.v:17$410: $auto$alumacc.cc:485:replace_alu$6804
  creating $alu cell for $flatten\sdisplay.\s1.$lt$src/digitdisplay.v:32$483: $auto$alumacc.cc:485:replace_alu$6809
  creating $alu cell for $flatten\sdisplay.\s1.$lt$src/digitdisplay.v:27$457: $auto$alumacc.cc:485:replace_alu$6820
  creating $alu cell for $flatten\sdisplay.\s1.$lt$src/digitdisplay.v:22$432: $auto$alumacc.cc:485:replace_alu$6831
  creating $alu cell for $flatten\sdisplay.\s1.$lt$src/digitdisplay.v:17$411: $auto$alumacc.cc:485:replace_alu$6842
  creating $alu cell for $flatten\sdisplay.\s1.$lt$src/digitdisplay.v:17$408: $auto$alumacc.cc:485:replace_alu$6853
  creating $alu cell for $flatten\sdisplay.\s1.$gt$src/digitdisplay.v:37$507: $auto$alumacc.cc:485:replace_alu$6864
  creating $alu cell for $flatten\sdisplay.\s1.$gt$src/digitdisplay.v:27$456: $auto$alumacc.cc:485:replace_alu$6869
  creating $alu cell for $flatten\sdisplay.\s1.$gt$src/digitdisplay.v:22$431: $auto$alumacc.cc:485:replace_alu$6874
  creating $alu cell for $flatten\sdisplay.\s1.$gt$src/digitdisplay.v:17$410: $auto$alumacc.cc:485:replace_alu$6879
  creating $alu cell for $flatten\sdisplay.\s1.$gt$src/digitdisplay.v:17$407: $auto$alumacc.cc:485:replace_alu$6884
  creating $alu cell for $flatten\sdisplay.$lt$src/scoredisplay.v:94$592: $auto$alumacc.cc:485:replace_alu$6889
  creating $alu cell for $flatten\sdisplay.$lt$src/scoredisplay.v:74$589: $auto$alumacc.cc:485:replace_alu$6900
  creating $alu cell for $flatten\sdisplay.$lt$src/scoredisplay.v:69$587: $auto$alumacc.cc:485:replace_alu$6911
  creating $alu cell for $flatten\sdisplay.$lt$src/scoredisplay.v:64$585: $auto$alumacc.cc:485:replace_alu$6922
  creating $alu cell for $flatten\sdisplay.$lt$src/scoredisplay.v:59$583: $auto$alumacc.cc:485:replace_alu$6933
  creating $alu cell for $flatten\sdisplay.$lt$src/scoredisplay.v:54$581: $auto$alumacc.cc:485:replace_alu$6944
  creating $alu cell for $flatten\sdisplay.$lt$src/scoredisplay.v:49$579: $auto$alumacc.cc:485:replace_alu$6955
  creating $alu cell for $flatten\sdisplay.$lt$src/scoredisplay.v:44$577: $auto$alumacc.cc:485:replace_alu$6966
  creating $alu cell for $flatten\sdisplay.$lt$src/scoredisplay.v:39$575: $auto$alumacc.cc:485:replace_alu$6977
  creating $alu cell for $flatten\sdisplay.$lt$src/scoredisplay.v:147$687: $auto$alumacc.cc:485:replace_alu$6988
  creating $alu cell for $flatten\sdisplay.$lt$src/scoredisplay.v:143$679: $auto$alumacc.cc:485:replace_alu$6999
  creating $alu cell for $flatten\sdisplay.$lt$src/scoredisplay.v:137$664: $auto$alumacc.cc:485:replace_alu$7004
  creating $alu cell for $flatten\sdisplay.$lt$src/scoredisplay.v:130$652: $auto$alumacc.cc:485:replace_alu$7015
  creating $alu cell for $flatten\sdisplay.$lt$src/scoredisplay.v:123$640: $auto$alumacc.cc:485:replace_alu$7026
  creating $alu cell for $flatten\sdisplay.$lt$src/scoredisplay.v:116$628: $auto$alumacc.cc:485:replace_alu$7037
  creating $alu cell for $flatten\sdisplay.$lt$src/scoredisplay.v:109$616: $auto$alumacc.cc:485:replace_alu$7048
  creating $alu cell for $flatten\sdisplay.$lt$src/scoredisplay.v:102$607: $auto$alumacc.cc:485:replace_alu$7059
  creating $alu cell for $flatten\sdisplay.$lt$src/scoredisplay.v:102$604: $auto$alumacc.cc:485:replace_alu$7070
  creating $alu cell for $flatten\sdisplay.$gt$src/scoredisplay.v:37$573: $auto$alumacc.cc:485:replace_alu$7081
  creating $alu cell for $flatten\sdisplay.$gt$src/scoredisplay.v:35$571: $auto$alumacc.cc:485:replace_alu$7086
  creating $alu cell for $flatten\sdisplay.$ge$src/scoredisplay.v:94$591: $auto$alumacc.cc:485:replace_alu$7091
  creating $alu cell for $flatten\sdisplay.$ge$src/scoredisplay.v:147$686: $auto$alumacc.cc:485:replace_alu$7100
  creating $alu cell for $flatten\sdisplay.$ge$src/scoredisplay.v:143$678: $auto$alumacc.cc:485:replace_alu$7109
  creating $alu cell for $flatten\sdisplay.$ge$src/scoredisplay.v:143$675: $auto$alumacc.cc:485:replace_alu$7122
  creating $alu cell for $flatten\sdisplay.$ge$src/scoredisplay.v:137$663: $auto$alumacc.cc:485:replace_alu$7131
  creating $alu cell for $flatten\sdisplay.$ge$src/scoredisplay.v:130$651: $auto$alumacc.cc:485:replace_alu$7140
  creating $alu cell for $flatten\sdisplay.$ge$src/scoredisplay.v:123$639: $auto$alumacc.cc:485:replace_alu$7149
  creating $alu cell for $flatten\sdisplay.$ge$src/scoredisplay.v:116$627: $auto$alumacc.cc:485:replace_alu$7158
  creating $alu cell for $flatten\sdisplay.$ge$src/scoredisplay.v:109$615: $auto$alumacc.cc:485:replace_alu$7167
  creating $alu cell for $flatten\sdisplay.$ge$src/scoredisplay.v:102$606: $auto$alumacc.cc:485:replace_alu$7176
  creating $alu cell for $flatten\sdisplay.$ge$src/scoredisplay.v:102$603: $auto$alumacc.cc:485:replace_alu$7189
  creating $alu cell for $flatten\screen_mngr.$lt$src/screen_manager.v:13$713: $auto$alumacc.cc:485:replace_alu$7198
  creating $alu cell for $flatten\screen_mngr.$lt$src/screen_manager.v:12$706: $auto$alumacc.cc:485:replace_alu$7203
  creating $alu cell for $flatten\screen_mngr.$lt$src/screen_manager.v:11$699: $auto$alumacc.cc:485:replace_alu$7214
  creating $alu cell for $flatten\screen_mngr.$ge$src/screen_manager.v:13$712: $auto$alumacc.cc:485:replace_alu$7219
  creating $alu cell for $flatten\screen_mngr.$ge$src/screen_manager.v:12$705: $auto$alumacc.cc:485:replace_alu$7232
  creating $alu cell for $flatten\screen_mngr.$ge$src/screen_manager.v:11$698: $auto$alumacc.cc:485:replace_alu$7241
  creating $alu cell for $flatten\memory.\sh.$lt$src/shifter.v:45$840: $auto$alumacc.cc:485:replace_alu$7250
  creating $alu cell for $flatten\memory.\sh.$lt$src/shifter.v:44$839: $auto$alumacc.cc:485:replace_alu$7255
  creating $alu cell for $flatten\memory.\sh.$lt$src/shifter.v:43$838: $auto$alumacc.cc:485:replace_alu$7260
  creating $alu cell for $flatten\memory.\sh.$lt$src/shifter.v:42$837: $auto$alumacc.cc:485:replace_alu$7265
  creating $alu cell for $flatten\memory.\sh.$lt$src/shifter.v:41$836: $auto$alumacc.cc:485:replace_alu$7270
  creating $alu cell for $flatten\memory.\sh.$lt$src/shifter.v:40$835: $auto$alumacc.cc:485:replace_alu$7275
  creating $alu cell for $flatten\memory.\sh.$lt$src/shifter.v:39$834: $auto$alumacc.cc:485:replace_alu$7280
  creating $alu cell for $flatten\memory.\sh.$lt$src/shifter.v:38$833: $auto$alumacc.cc:485:replace_alu$7285
  creating $alu cell for $flatten\memory.\sh.$lt$src/shifter.v:37$832: $auto$alumacc.cc:485:replace_alu$7290
  creating $alu cell for $flatten\memory.\sh.$lt$src/shifter.v:36$831: $auto$alumacc.cc:485:replace_alu$7295
  creating $alu cell for $flatten\memory.\sh.$lt$src/shifter.v:35$830: $auto$alumacc.cc:485:replace_alu$7300
  creating $alu cell for $flatten\memory.\sh.$lt$src/shifter.v:34$829: $auto$alumacc.cc:485:replace_alu$7305
  creating $alu cell for $flatten\memory.\sh.$lt$src/shifter.v:33$828: $auto$alumacc.cc:485:replace_alu$7310
  creating $alu cell for $flatten\memory.\sh.$lt$src/shifter.v:32$827: $auto$alumacc.cc:485:replace_alu$7315
  creating $alu cell for $flatten\memory.\sh.$lt$src/shifter.v:31$826: $auto$alumacc.cc:485:replace_alu$7320
  creating $alu cell for $flatten\memory.\sh.$lt$src/shifter.v:30$825: $auto$alumacc.cc:485:replace_alu$7325
  creating $alu cell for $flatten\memory.\sh.$lt$src/shifter.v:29$824: $auto$alumacc.cc:485:replace_alu$7330
  creating $alu cell for $flatten\memory.\sh.$lt$src/shifter.v:28$823: $auto$alumacc.cc:485:replace_alu$7335
  creating $alu cell for $flatten\memory.\sh.$lt$src/shifter.v:27$822: $auto$alumacc.cc:485:replace_alu$7340
  creating $alu cell for $flatten\memory.\sh.$lt$src/shifter.v:26$821: $auto$alumacc.cc:485:replace_alu$7345
  creating $alu cell for $flatten\memory.\sh.$gt$src/shifter.v:23$813: $auto$alumacc.cc:485:replace_alu$7350
  creating $alu cell for $flatten\memory.\sh.$gt$src/shifter.v:23$812: $auto$alumacc.cc:485:replace_alu$7355
  creating $alu cell for $flatten\memory.\sh.$gt$src/shifter.v:23$811: $auto$alumacc.cc:485:replace_alu$7360
  creating $alu cell for $flatten\memory.$gt$src/blockmemory.v:182$1438: $auto$alumacc.cc:485:replace_alu$7365
  creating $alu cell for $flatten\memory.$ge$src/blockmemory.v:140$1426, $flatten\memory.$lt$src/blockmemory.v:135$1422: $auto$alumacc.cc:485:replace_alu$7370
  creating $alu cell for $flatten\memory.$ge$src/blockmemory.v:135$1421, $flatten\memory.$lt$src/blockmemory.v:130$1417: $auto$alumacc.cc:485:replace_alu$7383
  creating $alu cell for $flatten\memory.$ge$src/blockmemory.v:130$1416, $flatten\memory.$lt$src/blockmemory.v:125$1414: $auto$alumacc.cc:485:replace_alu$7396
  creating $alu cell for $flatten\game_manager.\sh.$lt$src/shader.v:10$1174: $auto$alumacc.cc:485:replace_alu$7409
  creating $alu cell for $flatten\game_manager.\sh.$lt$src/shader.v:10$1170: $auto$alumacc.cc:485:replace_alu$7420
  creating $alu cell for $flatten\game_manager.\sh.$le$src/shader.v:9$1162: $auto$alumacc.cc:485:replace_alu$7431
  creating $alu cell for $flatten\game_manager.\sh.$gt$src/shader.v:12$1178: $auto$alumacc.cc:485:replace_alu$7444
  creating $alu cell for $flatten\game_manager.\sh.$gt$src/shader.v:10$1172: $auto$alumacc.cc:485:replace_alu$7449
  creating $alu cell for $flatten\game_manager.\sh.$gt$src/shader.v:10$1169: $auto$alumacc.cc:485:replace_alu$7454
  creating $alu cell for $flatten\game_manager.\sh.$ge$src/shader.v:9$1167: $auto$alumacc.cc:485:replace_alu$7459
  creating $alu cell for $flatten\game_manager.\h.$lt$src/mod24.v:15$1312: $auto$alumacc.cc:485:replace_alu$7468
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$1311, $flatten\game_manager.\h.$lt$src/mod24.v:15$1309: $auto$alumacc.cc:485:replace_alu$7473
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$1308, $flatten\game_manager.\h.$lt$src/mod24.v:15$1306: $auto$alumacc.cc:485:replace_alu$7486
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$1305, $flatten\game_manager.\h.$lt$src/mod24.v:15$1303: $auto$alumacc.cc:485:replace_alu$7499
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$1302, $flatten\game_manager.\h.$lt$src/mod24.v:15$1300: $auto$alumacc.cc:485:replace_alu$7512
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$1299, $flatten\game_manager.\h.$lt$src/mod24.v:15$1297: $auto$alumacc.cc:485:replace_alu$7525
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$1296, $flatten\game_manager.\h.$lt$src/mod24.v:15$1294: $auto$alumacc.cc:485:replace_alu$7538
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$1293, $flatten\game_manager.\h.$lt$src/mod24.v:15$1291: $auto$alumacc.cc:485:replace_alu$7551
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$1290, $flatten\game_manager.\h.$lt$src/mod24.v:15$1288: $auto$alumacc.cc:485:replace_alu$7564
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$1287, $flatten\game_manager.\h.$lt$src/mod24.v:15$1285: $auto$alumacc.cc:485:replace_alu$7577
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$1284, $flatten\game_manager.\h.$lt$src/mod24.v:15$1282: $auto$alumacc.cc:485:replace_alu$7590
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$1281, $flatten\game_manager.\h.$lt$src/mod24.v:15$1279: $auto$alumacc.cc:485:replace_alu$7603
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$1278, $flatten\game_manager.\h.$lt$src/mod24.v:15$1276: $auto$alumacc.cc:485:replace_alu$7616
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$1275, $flatten\game_manager.\h.$lt$src/mod24.v:15$1273: $auto$alumacc.cc:485:replace_alu$7629
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$1272, $flatten\game_manager.\h.$lt$src/mod24.v:15$1270: $auto$alumacc.cc:485:replace_alu$7642
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$1269, $flatten\game_manager.\h.$lt$src/mod24.v:15$1267: $auto$alumacc.cc:485:replace_alu$7655
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$1266, $flatten\game_manager.\h.$lt$src/mod24.v:15$1264: $auto$alumacc.cc:485:replace_alu$7668
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$1263, $flatten\game_manager.\h.$lt$src/mod24.v:15$1261: $auto$alumacc.cc:485:replace_alu$7681
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$1260, $flatten\game_manager.\h.$lt$src/mod24.v:15$1258: $auto$alumacc.cc:485:replace_alu$7694
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$1257, $flatten\game_manager.\h.$lt$src/mod24.v:15$1255: $auto$alumacc.cc:485:replace_alu$7707
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$1254, $flatten\game_manager.\h.$lt$src/mod24.v:15$1252: $auto$alumacc.cc:485:replace_alu$7720
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$1251, $flatten\game_manager.\h.$lt$src/mod24.v:15$1249: $auto$alumacc.cc:485:replace_alu$7733
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$1248, $flatten\game_manager.\h.$lt$src/mod24.v:15$1246: $auto$alumacc.cc:485:replace_alu$7746
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$1245: $auto$alumacc.cc:485:replace_alu$7759
  creating $alu cell for $flatten\game_manager.$lt$src/gmanager.v:29$1151: $auto$alumacc.cc:485:replace_alu$7768
  creating $alu cell for $flatten\game_manager.$lt$src/gmanager.v:28$1148: $auto$alumacc.cc:485:replace_alu$7773
  creating $alu cell for $flatten\game_manager.$ge$src/gmanager.v:29$1150: $auto$alumacc.cc:485:replace_alu$7784
  creating $alu cell for $flatten\game_manager.$ge$src/gmanager.v:28$1147: $auto$alumacc.cc:485:replace_alu$7793
  creating $alu cell for $flatten\core.$lt$src/vga_core.v:85$937: $auto$alumacc.cc:485:replace_alu$7802
  creating $alu cell for $flatten\core.$lt$src/vga_core.v:84$933: $auto$alumacc.cc:485:replace_alu$7813
  creating $alu cell for $flatten\core.$lt$src/vga_core.v:82$931: $auto$alumacc.cc:485:replace_alu$7818
  creating $alu cell for $flatten\core.$lt$src/vga_core.v:81$930: $auto$alumacc.cc:485:replace_alu$7829
  creating $alu cell for $flatten\core.$ge$src/vga_core.v:85$936: $auto$alumacc.cc:485:replace_alu$7834
  creating $alu cell for $flatten\core.$ge$src/vga_core.v:84$932: $auto$alumacc.cc:485:replace_alu$7843
  creating $alu cell for $flatten\core.$add$src/vga_core.v:79$929: $auto$alumacc.cc:485:replace_alu$7856
  creating $alu cell for $flatten\core.$add$src/vga_core.v:89$941: $auto$alumacc.cc:485:replace_alu$7859
  creating $alu cell for $flatten\game_manager.$sub$src/gmanager.v:34$1153: $auto$alumacc.cc:485:replace_alu$7862
  creating $alu cell for $flatten\game_manager.$sub$src/gmanager.v:35$1157: $auto$alumacc.cc:485:replace_alu$7865
  creating $alu cell for $flatten\game_manager.$sub$src/gmanager.v:43$1158: $auto$alumacc.cc:485:replace_alu$7868
  creating $alu cell for $flatten\game_manager.\hh.$sub$src/mod24.v:58$1390: $auto$alumacc.cc:485:replace_alu$7871
  creating $alu cell for $flatten\memory.$add$src/blockmemory.v:128$1415: $auto$alumacc.cc:485:replace_alu$7874
  creating $alu cell for $flatten\memory.$sub$src/blockmemory.v:132$1419: $auto$alumacc.cc:485:replace_alu$7877
  creating $alu cell for $flatten\memory.$sub$src/blockmemory.v:136$1424: $auto$alumacc.cc:485:replace_alu$7880
  creating $alu cell for $flatten\memory.$sub$src/blockmemory.v:180$1437: $auto$alumacc.cc:485:replace_alu$7883
  creating $alu cell for $flatten\memory.$sub$src/blockmemory.v:183$1439: $auto$alumacc.cc:485:replace_alu$7886
  creating $alu cell for $flatten\memory.$sub$src/blockmemory.v:199$1444: $auto$alumacc.cc:485:replace_alu$7889
  creating $alu cell for $flatten\memory.$sub$src/blockmemory.v:207$1446: $auto$alumacc.cc:485:replace_alu$7892
  creating $alu cell for $flatten\memory.$sub$src/blockmemory.v:215$1448: $auto$alumacc.cc:485:replace_alu$7895
  creating $alu cell for $flatten\memory.$sub$src/blockmemory.v:223$1450: $auto$alumacc.cc:485:replace_alu$7898
  creating $alu cell for $flatten\memory.$sub$src/blockmemory.v:242$1453: $auto$alumacc.cc:485:replace_alu$7901
  creating $alu cell for $flatten\sdisplay.$add$src/scoredisplay.v:36$572: $auto$alumacc.cc:485:replace_alu$7904
  creating $alu cell for $flatten\sdisplay.$add$src/scoredisplay.v:40$576: $auto$alumacc.cc:485:replace_alu$7907
  creating $alu cell for $flatten\sdisplay.$add$src/scoredisplay.v:46$578: $auto$alumacc.cc:485:replace_alu$7910
  creating $alu cell for $flatten\sdisplay.$add$src/scoredisplay.v:51$580: $auto$alumacc.cc:485:replace_alu$7913
  creating $alu cell for $flatten\sdisplay.$add$src/scoredisplay.v:56$582: $auto$alumacc.cc:485:replace_alu$7916
  creating $alu cell for $flatten\sdisplay.$add$src/scoredisplay.v:61$584: $auto$alumacc.cc:485:replace_alu$7919
  creating $alu cell for $flatten\sdisplay.$add$src/scoredisplay.v:65$586: $auto$alumacc.cc:485:replace_alu$7922
  creating $alu cell for $flatten\sdisplay.$add$src/scoredisplay.v:70$588: $auto$alumacc.cc:485:replace_alu$7925
  creating $alu cell for $flatten\sdisplay.$add$src/scoredisplay.v:75$590: $auto$alumacc.cc:485:replace_alu$7928
  creating $alu cell for $flatten\sdisplay.$sub$src/scoredisplay.v:105$611: $auto$alumacc.cc:485:replace_alu$7931
  creating $alu cell for $flatten\sdisplay.$sub$src/scoredisplay.v:105$612: $auto$alumacc.cc:485:replace_alu$7934
  creating $alu cell for $flatten\sdisplay.$sub$src/scoredisplay.v:111$623: $auto$alumacc.cc:485:replace_alu$7937
  creating $alu cell for $flatten\sdisplay.$sub$src/scoredisplay.v:118$635: $auto$alumacc.cc:485:replace_alu$7940
  creating $alu cell for $flatten\sdisplay.$sub$src/scoredisplay.v:125$647: $auto$alumacc.cc:485:replace_alu$7943
  creating $alu cell for $flatten\sdisplay.$sub$src/scoredisplay.v:132$659: $auto$alumacc.cc:485:replace_alu$7946
  creating $alu cell for $flatten\sdisplay.$sub$src/scoredisplay.v:139$671: $auto$alumacc.cc:485:replace_alu$7949
  creating $alu cell for $flatten\sdisplay.$sub$src/scoredisplay.v:146$683: $auto$alumacc.cc:485:replace_alu$7952
  creating $alu cell for $flatten\sdisplay.$sub$src/scoredisplay.v:38$574: $auto$alumacc.cc:485:replace_alu$7955
  creating $alu cell for $flatten\sdisplay.$sub$src/scoredisplay.v:97$600: $auto$alumacc.cc:485:replace_alu$7958
  creating $alu cell for $flatten\t.$add$src/timer.v:18$946: $auto$alumacc.cc:485:replace_alu$7961
  creating $alu cell for $flatten\tdisplay.$add$src/gamespeed_display.v:28$745: $auto$alumacc.cc:485:replace_alu$7964
  creating $alu cell for $flatten\tdisplay.$sub$src/gamespeed_display.v:17$730, $flatten\sdisplay.$lt$src/scoredisplay.v:143$676: $auto$alumacc.cc:485:replace_alu$7967
  creating $alu cell for $flatten\tdisplay.$sub$src/gamespeed_display.v:17$732: $auto$alumacc.cc:485:replace_alu$7978
  creating $alu cell for $flatten\tdisplay.$sub$src/gamespeed_display.v:17$735: $auto$alumacc.cc:485:replace_alu$7981
  creating $alu cell for $flatten\tdisplay.$sub$src/gamespeed_display.v:31$747: $auto$alumacc.cc:485:replace_alu$7984
  creating $alu cell for $flatten\vcell.$add$src/volatile_cell_storage.v:187$1964: $auto$alumacc.cc:485:replace_alu$7987
  creating $alu cell for $flatten\vcell.$add$src/volatile_cell_storage.v:207$1980: $auto$alumacc.cc:485:replace_alu$7990
  creating $alu cell for $flatten\vcell.$add$src/volatile_cell_storage.v:219$1997: $auto$alumacc.cc:485:replace_alu$7993
  creating $alu cell for $flatten\vcell.$add$src/volatile_cell_storage.v:58$1903: $auto$alumacc.cc:485:replace_alu$7996
  creating $alu cell for $flatten\vcell.$add$src/volatile_cell_storage.v:59$1910: $auto$alumacc.cc:485:replace_alu$7999
  creating $alu cell for $flatten\vcell.$add$src/volatile_cell_storage.v:60$1917: $auto$alumacc.cc:485:replace_alu$8002
  creating $alu cell for $flatten\vcell.$add$src/volatile_cell_storage.v:61$1924: $auto$alumacc.cc:485:replace_alu$8005
  creating $alu cell for $flatten\vcell.$add$src/volatile_cell_storage.v:62$1931: $auto$alumacc.cc:485:replace_alu$8008
  creating $alu cell for $flatten\vcell.$add$src/volatile_cell_storage.v:63$1938: $auto$alumacc.cc:485:replace_alu$8011
  creating $alu cell for $flatten\vcell.$add$src/volatile_cell_storage.v:64$1945: $auto$alumacc.cc:485:replace_alu$8014
  creating $alu cell for $flatten\vcell.$add$src/volatile_cell_storage.v:65$1952: $auto$alumacc.cc:485:replace_alu$8017
  creating $alu cell for $flatten\vcell.$sub$src/volatile_cell_storage.v:200$1967: $auto$alumacc.cc:485:replace_alu$8020
  creating $alu cell for $flatten\vcell.$sub$src/volatile_cell_storage.v:213$1988: $auto$alumacc.cc:485:replace_alu$8023
  created 202 $alu and 1 $macc cells.

26.21. Executing OPT pass (performing simple optimizations).

26.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~23 debug messages>

26.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~33 debug messages>
Removed a total of 11 cells.

26.21.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~749 debug messages>

26.21.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

26.21.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

26.21.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:262:slice$6158 ($dffe) from module top (D = { $flatten\memory.$procmux$2732_Y [9:7] $flatten\memory.$procmux$2732_Y [2] }, Q = { \memory.scorewire [9:7] \memory.scorewire [2] }, rval = 4'0000).
Adding SRST signal on $auto$ff.cc:262:slice$6158 ($dffe) from module top (D = { $flatten\memory.$procmux$2730_Y [15:10] $flatten\memory.$procmux$2730_Y [6] $flatten\memory.$procmux$2730_Y [4] $flatten\memory.$procmux$2730_Y [1:0] }, Q = { \memory.scorewire [15:10] \memory.scorewire [6] \memory.scorewire [4] \memory.scorewire [1:0] }, rval = 10'0000000000).
Adding SRST signal on $auto$ff.cc:262:slice$6158 ($dffe) from module top (D = { $flatten\memory.$procmux$2735_Y [5] $flatten\memory.$procmux$2735_Y [3] }, Q = { \memory.scorewire [5] \memory.scorewire [3] }, rval = 2'00).

26.21.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 6 unused cells and 181 unused wires.
<suppressed ~7 debug messages>

26.21.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

26.21.9. Rerunning OPT passes. (Maybe there is more to do..)

26.21.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~751 debug messages>

26.21.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

26.21.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

26.21.13. Executing OPT_DFF pass (perform DFF optimizations).

26.21.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

26.21.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

26.21.16. Rerunning OPT passes. (Maybe there is more to do..)

26.21.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~751 debug messages>

26.21.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

26.21.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

26.21.20. Executing OPT_DFF pass (perform DFF optimizations).

26.21.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

26.21.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

26.21.23. Finished OPT passes. (There is nothing left to do.)

26.22. Executing MEMORY pass.

26.22.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

26.22.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

26.22.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

26.22.4. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

26.22.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

26.22.6. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

26.22.7. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

26.22.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

26.22.9. Executing MEMORY_COLLECT pass (generating $mem cells).

26.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

26.24. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).

26.25. Executing TECHMAP pass (map to technology primitives).

26.25.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/brams_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M0'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M123'.
Successfully finished Verilog frontend.

26.25.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~5 debug messages>

26.26. Executing ICE40_BRAMINIT pass.

26.27. Executing OPT pass (performing simple optimizations).

26.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~207 debug messages>

26.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~396 debug messages>
Removed a total of 132 cells.

26.27.3. Executing OPT_DFF pass (perform DFF optimizations).

26.27.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 44 unused cells and 225 unused wires.
<suppressed ~45 debug messages>

26.27.5. Finished fast OPT passes.

26.28. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

26.29. Executing OPT pass (performing simple optimizations).

26.29.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

26.29.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

26.29.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~746 debug messages>

26.29.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    Consolidated identical input bits for $pmux cell $flatten\game_manager.\c.$procmux$2745:
      Old ports: A=12'011001100110, B=84'111111110000000011111111110000001100000011110000000000001111111100000000000001111111, Y=\game_manager.texture_lookup
      New ports: A=11'01100100110, B=77'11111110000000011111111100000110000001110000000000011111111000000000000111111, Y={ \game_manager.texture_lookup [11:7] \game_manager.texture_lookup [5:0] }
      New connections: \game_manager.texture_lookup [6] = \game_manager.texture_lookup [5]
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:18$1197:
      Old ports: A=2'00, B=2'10, Y={ $auto$opt_expr.cc:205:group_cell_inputs$8320 $auto$wreduce.cc:454:run$6215 [0] }
      New ports: A=1'0, B=1'1, Y=$auto$opt_expr.cc:205:group_cell_inputs$8320
      New connections: $auto$wreduce.cc:454:run$6215 [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:18$1199:
      Old ports: A=2'00, B=2'11, Y=$auto$wreduce.cc:454:run$6216 [1:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$6216 [0]
      New connections: $auto$wreduce.cc:454:run$6216 [1] = $auto$wreduce.cc:454:run$6216 [0]
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:19$1201:
      Old ports: A=3'000, B=3'100, Y=$auto$wreduce.cc:454:run$6217 [2:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$6217 [2]
      New connections: $auto$wreduce.cc:454:run$6217 [1:0] = 2'00
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:19$1202:
      Old ports: A=3'000, B=3'101, Y=$auto$wreduce.cc:454:run$6218 [2:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$6218 [0]
      New connections: $auto$wreduce.cc:454:run$6218 [2:1] = { $auto$wreduce.cc:454:run$6218 [0] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:19$1204:
      Old ports: A=3'000, B=3'110, Y=$auto$wreduce.cc:454:run$6219 [2:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$6219 [1]
      New connections: { $auto$wreduce.cc:454:run$6219 [2] $auto$wreduce.cc:454:run$6219 [0] } = { $auto$wreduce.cc:454:run$6219 [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:19$1206:
      Old ports: A=3'000, B=3'111, Y=$auto$wreduce.cc:454:run$6220 [2:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$6220 [0]
      New connections: $auto$wreduce.cc:454:run$6220 [2:1] = { $auto$wreduce.cc:454:run$6220 [0] $auto$wreduce.cc:454:run$6220 [0] }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:20$1208:
      Old ports: A=4'0000, B=4'1000, Y=$auto$wreduce.cc:454:run$6221 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$6221 [3]
      New connections: $auto$wreduce.cc:454:run$6221 [2:0] = 3'000
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:20$1209:
      Old ports: A=4'0000, B=4'1001, Y=$auto$wreduce.cc:454:run$6222 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$6222 [0]
      New connections: $auto$wreduce.cc:454:run$6222 [3:1] = { $auto$wreduce.cc:454:run$6222 [0] 2'00 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:20$1211:
      Old ports: A=4'0000, B=4'1010, Y=$auto$wreduce.cc:454:run$6223 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$6223 [1]
      New connections: { $auto$wreduce.cc:454:run$6223 [3:2] $auto$wreduce.cc:454:run$6223 [0] } = { $auto$wreduce.cc:454:run$6223 [1] 2'00 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:20$1213:
      Old ports: A=4'0000, B=4'1011, Y=$auto$wreduce.cc:454:run$6224 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$6224 [0]
      New connections: $auto$wreduce.cc:454:run$6224 [3:1] = { $auto$wreduce.cc:454:run$6224 [0] 1'0 $auto$wreduce.cc:454:run$6224 [0] }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:21$1215:
      Old ports: A=4'0000, B=4'1100, Y=$auto$wreduce.cc:454:run$6225 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$6225 [2]
      New connections: { $auto$wreduce.cc:454:run$6225 [3] $auto$wreduce.cc:454:run$6225 [1:0] } = { $auto$wreduce.cc:454:run$6225 [2] 2'00 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:21$1216:
      Old ports: A=4'0000, B=4'1101, Y=$auto$wreduce.cc:454:run$6226 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$6226 [0]
      New connections: $auto$wreduce.cc:454:run$6226 [3:1] = { $auto$wreduce.cc:454:run$6226 [0] $auto$wreduce.cc:454:run$6226 [0] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:21$1218:
      Old ports: A=4'0000, B=4'1110, Y=$auto$wreduce.cc:454:run$6227 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$6227 [1]
      New connections: { $auto$wreduce.cc:454:run$6227 [3:2] $auto$wreduce.cc:454:run$6227 [0] } = { $auto$wreduce.cc:454:run$6227 [1] $auto$wreduce.cc:454:run$6227 [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:21$1220:
      Old ports: A=4'0000, B=4'1111, Y=$auto$wreduce.cc:454:run$6228 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$6228 [0]
      New connections: $auto$wreduce.cc:454:run$6228 [3:1] = { $auto$wreduce.cc:454:run$6228 [0] $auto$wreduce.cc:454:run$6228 [0] $auto$wreduce.cc:454:run$6228 [0] }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:22$1222:
      Old ports: A=5'00000, B=5'10000, Y=$flatten\game_manager.\h.$ternary$src/mod24.v:22$1222_Y
      New ports: A=1'0, B=1'1, Y=$flatten\game_manager.\h.$ternary$src/mod24.v:22$1222_Y [4]
      New connections: $flatten\game_manager.\h.$ternary$src/mod24.v:22$1222_Y [3:0] = 4'0000
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:22$1223:
      Old ports: A=5'00000, B=5'10001, Y=$flatten\game_manager.\h.$ternary$src/mod24.v:22$1223_Y
      New ports: A=1'0, B=1'1, Y=$flatten\game_manager.\h.$ternary$src/mod24.v:22$1223_Y [0]
      New connections: $flatten\game_manager.\h.$ternary$src/mod24.v:22$1223_Y [4:1] = { $flatten\game_manager.\h.$ternary$src/mod24.v:22$1223_Y [0] 3'000 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:22$1225:
      Old ports: A=5'00000, B=5'10010, Y=$flatten\game_manager.\h.$ternary$src/mod24.v:22$1225_Y
      New ports: A=1'0, B=1'1, Y=$flatten\game_manager.\h.$ternary$src/mod24.v:22$1225_Y [1]
      New connections: { $flatten\game_manager.\h.$ternary$src/mod24.v:22$1225_Y [4:2] $flatten\game_manager.\h.$ternary$src/mod24.v:22$1225_Y [0] } = { $flatten\game_manager.\h.$ternary$src/mod24.v:22$1225_Y [1] 3'000 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:22$1227:
      Old ports: A=5'00000, B=5'10011, Y=$flatten\game_manager.\h.$ternary$src/mod24.v:22$1227_Y
      New ports: A=1'0, B=1'1, Y=$flatten\game_manager.\h.$ternary$src/mod24.v:22$1227_Y [0]
      New connections: $flatten\game_manager.\h.$ternary$src/mod24.v:22$1227_Y [4:1] = { $flatten\game_manager.\h.$ternary$src/mod24.v:22$1227_Y [0] 2'00 $flatten\game_manager.\h.$ternary$src/mod24.v:22$1227_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:23$1229:
      Old ports: A=5'00000, B=5'10100, Y=$flatten\game_manager.\h.$ternary$src/mod24.v:23$1229_Y
      New ports: A=1'0, B=1'1, Y=$flatten\game_manager.\h.$ternary$src/mod24.v:23$1229_Y [2]
      New connections: { $flatten\game_manager.\h.$ternary$src/mod24.v:23$1229_Y [4:3] $flatten\game_manager.\h.$ternary$src/mod24.v:23$1229_Y [1:0] } = { $flatten\game_manager.\h.$ternary$src/mod24.v:23$1229_Y [2] 3'000 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:23$1230:
      Old ports: A=5'00000, B=5'10101, Y=$flatten\game_manager.\h.$ternary$src/mod24.v:23$1230_Y
      New ports: A=1'0, B=1'1, Y=$flatten\game_manager.\h.$ternary$src/mod24.v:23$1230_Y [0]
      New connections: $flatten\game_manager.\h.$ternary$src/mod24.v:23$1230_Y [4:1] = { $flatten\game_manager.\h.$ternary$src/mod24.v:23$1230_Y [0] 1'0 $flatten\game_manager.\h.$ternary$src/mod24.v:23$1230_Y [0] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:23$1232:
      Old ports: A=5'00000, B=5'10110, Y=$flatten\game_manager.\h.$ternary$src/mod24.v:23$1232_Y
      New ports: A=1'0, B=1'1, Y=$flatten\game_manager.\h.$ternary$src/mod24.v:23$1232_Y [1]
      New connections: { $flatten\game_manager.\h.$ternary$src/mod24.v:23$1232_Y [4:2] $flatten\game_manager.\h.$ternary$src/mod24.v:23$1232_Y [0] } = { $flatten\game_manager.\h.$ternary$src/mod24.v:23$1232_Y [1] 1'0 $flatten\game_manager.\h.$ternary$src/mod24.v:23$1232_Y [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:23$1234:
      Old ports: A=5'00000, B=5'10111, Y=$auto$wreduce.cc:454:run$6229
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$6229 [0]
      New connections: $auto$wreduce.cc:454:run$6229 [4:1] = { $auto$wreduce.cc:454:run$6229 [0] 1'0 $auto$wreduce.cc:454:run$6229 [0] $auto$wreduce.cc:454:run$6229 [0] }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:33$1318:
      Old ports: A=5'00000, B=5'11000, Y=$auto$wreduce.cc:454:run$6249 [4:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$6249 [3]
      New connections: { $auto$wreduce.cc:454:run$6249 [4] $auto$wreduce.cc:454:run$6249 [2:0] } = { $auto$wreduce.cc:454:run$6249 [3] 3'000 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:33$1319:
      Old ports: A={ 1'0 $auto$wreduce.cc:454:run$6249 [4:0] }, B=6'000000, Y=$auto$wreduce.cc:454:run$6250 [5:0]
      New ports: A=$auto$wreduce.cc:454:run$6249 [4:0], B=5'00000, Y=$auto$wreduce.cc:454:run$6250 [4:0]
      New connections: $auto$wreduce.cc:454:run$6250 [5] = 1'0
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:34$1324:
      Old ports: A=4'0000, B=4'1000, Y=$auto$wreduce.cc:454:run$6251 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$6251 [3]
      New connections: $auto$wreduce.cc:454:run$6251 [2:0] = 3'000
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:34$1325:
      Old ports: A={ 2'00 $auto$wreduce.cc:454:run$6251 [3:0] }, B=6'110000, Y=$auto$wreduce.cc:454:run$6252 [5:0]
      New ports: A={ 1'0 $auto$wreduce.cc:454:run$6251 [3:0] }, B=5'10000, Y=$auto$wreduce.cc:454:run$6252 [4:0]
      New connections: $auto$wreduce.cc:454:run$6252 [5] = $auto$wreduce.cc:454:run$6252 [4]
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:35$1331:
      Old ports: A=6'000000, B=6'111000, Y=$auto$wreduce.cc:454:run$6253 [5:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$6253 [3]
      New connections: { $auto$wreduce.cc:454:run$6253 [5:4] $auto$wreduce.cc:454:run$6253 [2:0] } = { $auto$wreduce.cc:454:run$6253 [3] $auto$wreduce.cc:454:run$6253 [3] 3'000 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:36$1338:
      Old ports: A=6'000000, B=6'101000, Y=$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:36$1338_Y [5:0]
      New ports: A=1'0, B=1'1, Y=$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:36$1338_Y [3]
      New connections: { $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:36$1338_Y [5:4] $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:36$1338_Y [2:0] } = { $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:36$1338_Y [3] 4'0000 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:37$1345:
      Old ports: A=5'00000, B=5'11000, Y=$auto$wreduce.cc:454:run$6255 [4:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$6255 [3]
      New connections: { $auto$wreduce.cc:454:run$6255 [4] $auto$wreduce.cc:454:run$6255 [2:0] } = { $auto$wreduce.cc:454:run$6255 [3] 3'000 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:37$1346:
      Old ports: A={ 1'0 $auto$wreduce.cc:454:run$6255 [4:0] }, B=6'000000, Y=$auto$wreduce.cc:454:run$6256 [5:0]
      New ports: A=$auto$wreduce.cc:454:run$6255 [4:0], B=5'00000, Y=$auto$wreduce.cc:454:run$6256 [4:0]
      New connections: $auto$wreduce.cc:454:run$6256 [5] = 1'0
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:38$1352:
      Old ports: A=4'0000, B=4'1000, Y=$auto$wreduce.cc:454:run$6257 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$6257 [3]
      New connections: $auto$wreduce.cc:454:run$6257 [2:0] = 3'000
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:38$1353:
      Old ports: A={ 2'00 $auto$wreduce.cc:454:run$6257 [3:0] }, B=6'110000, Y=$auto$wreduce.cc:454:run$6258 [5:0]
      New ports: A={ 1'0 $auto$wreduce.cc:454:run$6257 [3:0] }, B=5'10000, Y=$auto$wreduce.cc:454:run$6258 [4:0]
      New connections: $auto$wreduce.cc:454:run$6258 [5] = $auto$wreduce.cc:454:run$6258 [4]
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:39$1359:
      Old ports: A=6'000000, B=6'111000, Y=$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:39$1359_Y [5:0]
      New ports: A=1'0, B=1'1, Y=$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:39$1359_Y [3]
      New connections: { $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:39$1359_Y [5:4] $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:39$1359_Y [2:0] } = { $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:39$1359_Y [3] $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:39$1359_Y [3] 3'000 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:40$1366:
      Old ports: A=6'000000, B=6'101000, Y=$auto$wreduce.cc:454:run$6260 [5:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$6260 [3]
      New connections: { $auto$wreduce.cc:454:run$6260 [5:4] $auto$wreduce.cc:454:run$6260 [2:0] } = { $auto$wreduce.cc:454:run$6260 [3] 4'0000 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:41$1373:
      Old ports: A=5'00000, B=5'11000, Y=$auto$wreduce.cc:454:run$6262 [4:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$6262 [3]
      New connections: { $auto$wreduce.cc:454:run$6262 [4] $auto$wreduce.cc:454:run$6262 [2:0] } = { $auto$wreduce.cc:454:run$6262 [3] 3'000 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:41$1374:
      Old ports: A={ 1'0 $auto$wreduce.cc:454:run$6262 [4:0] }, B=6'000000, Y=$auto$wreduce.cc:454:run$6263 [5:0]
      New ports: A=$auto$wreduce.cc:454:run$6262 [4:0], B=5'00000, Y=$auto$wreduce.cc:454:run$6263 [4:0]
      New connections: $auto$wreduce.cc:454:run$6263 [5] = 1'0
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:42$1380:
      Old ports: A=4'0000, B=4'1000, Y=$auto$wreduce.cc:454:run$6264 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$6264 [3]
      New connections: $auto$wreduce.cc:454:run$6264 [2:0] = 3'000
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:42$1381:
      Old ports: A={ 2'00 $auto$wreduce.cc:454:run$6264 [3:0] }, B=6'110000, Y=$auto$wreduce.cc:454:run$6265 [5:0]
      New ports: A={ 1'0 $auto$wreduce.cc:454:run$6264 [3:0] }, B=5'10000, Y=$auto$wreduce.cc:454:run$6265 [4:0]
      New connections: $auto$wreduce.cc:454:run$6265 [5] = $auto$wreduce.cc:454:run$6265 [4]
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:43$1387:
      Old ports: A=6'000000, B=6'111000, Y=$auto$wreduce.cc:454:run$6266 [5:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$6266 [3]
      New connections: { $auto$wreduce.cc:454:run$6266 [5:4] $auto$wreduce.cc:454:run$6266 [2:0] } = { $auto$wreduce.cc:454:run$6266 [3] $auto$wreduce.cc:454:run$6266 [3] 3'000 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\sh.$ternary$src/shader.v:20$1188:
      Old ports: A=12'000000000000, B={ \game_manager.ipixstream [11] 3'000 \game_manager.ipixstream [7] 3'000 \game_manager.ipixstream [3] 3'000 }, Y=$flatten\game_manager.\sh.$ternary$src/shader.v:20$1188_Y
      New ports: A=3'000, B={ \game_manager.ipixstream [11] \game_manager.ipixstream [7] \game_manager.ipixstream [3] }, Y={ $flatten\game_manager.\sh.$ternary$src/shader.v:20$1188_Y [11] $flatten\game_manager.\sh.$ternary$src/shader.v:20$1188_Y [7] $flatten\game_manager.\sh.$ternary$src/shader.v:20$1188_Y [3] }
      New connections: { $flatten\game_manager.\sh.$ternary$src/shader.v:20$1188_Y [10:8] $flatten\game_manager.\sh.$ternary$src/shader.v:20$1188_Y [6:4] $flatten\game_manager.\sh.$ternary$src/shader.v:20$1188_Y [2:0] } = 9'000000000
    Consolidated identical input bits for $mux cell $flatten\memory.$procmux$2599:
      Old ports: A={ 1'0 \memory.P1blk_v }, B={ 1'0 \memory.P2blk_v }, Y=$flatten\memory.$procmux$2599_Y
      New ports: A=\memory.P1blk_v, B=\memory.P2blk_v, Y=$flatten\memory.$procmux$2599_Y [4:0]
      New connections: $flatten\memory.$procmux$2599_Y [5] = 1'0
    Consolidated identical input bits for $mux cell $flatten\memory.$procmux$2730:
      Old ports: A=16'0000000000111100, B=16'0000000011001000, Y=$flatten\memory.$procmux$2730_Y
      New ports: A=2'01, B=2'10, Y={ $flatten\memory.$procmux$2730_Y [6] $flatten\memory.$procmux$2730_Y [2] }
      New connections: { $flatten\memory.$procmux$2730_Y [15:7] $flatten\memory.$procmux$2730_Y [5:3] $flatten\memory.$procmux$2730_Y [1:0] } = { 8'00000000 $flatten\memory.$procmux$2730_Y [6] $flatten\memory.$procmux$2730_Y [2] $flatten\memory.$procmux$2730_Y [2] 3'100 }
    Consolidated identical input bits for $mux cell $flatten\memory.\sh.$ternary$src/shifter.v:10$766:
      Old ports: A=3'000, B=3'100, Y=$auto$wreduce.cc:454:run$6276 [2:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$6276 [2]
      New connections: $auto$wreduce.cc:454:run$6276 [1:0] = 2'00
    Consolidated identical input bits for $mux cell $flatten\memory.\sh.$ternary$src/shifter.v:12$774:
      Old ports: A=4'0000, B=4'1000, Y=$flatten\memory.\sh.$ternary$src/shifter.v:12$774_Y [3:0]
      New ports: A=1'0, B=1'1, Y=$flatten\memory.\sh.$ternary$src/shifter.v:12$774_Y [3]
      New connections: $flatten\memory.\sh.$ternary$src/shifter.v:12$774_Y [2:0] = 3'000
    Consolidated identical input bits for $mux cell $flatten\memory.\sh.$ternary$src/shifter.v:14$782:
      Old ports: A=4'0000, B=4'1100, Y=$auto$wreduce.cc:454:run$6279 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$6279 [2]
      New connections: { $auto$wreduce.cc:454:run$6279 [3] $auto$wreduce.cc:454:run$6279 [1:0] } = { $auto$wreduce.cc:454:run$6279 [2] 2'00 }
    Consolidated identical input bits for $mux cell $flatten\memory.\sh.$ternary$src/shifter.v:16$790:
      Old ports: A=5'00000, B=5'10000, Y=$flatten\memory.\sh.$ternary$src/shifter.v:16$790_Y [4:0]
      New ports: A=1'0, B=1'1, Y=$flatten\memory.\sh.$ternary$src/shifter.v:16$790_Y [4]
      New connections: $flatten\memory.\sh.$ternary$src/shifter.v:16$790_Y [3:0] = 4'0000
    Consolidated identical input bits for $mux cell $flatten\memory.\sh.$ternary$src/shifter.v:18$798:
      Old ports: A=5'00000, B=5'10100, Y=$flatten\memory.\sh.$ternary$src/shifter.v:18$798_Y [4:0]
      New ports: A=1'0, B=1'1, Y=$flatten\memory.\sh.$ternary$src/shifter.v:18$798_Y [2]
      New connections: { $flatten\memory.\sh.$ternary$src/shifter.v:18$798_Y [4:3] $flatten\memory.\sh.$ternary$src/shifter.v:18$798_Y [1:0] } = { $flatten\memory.\sh.$ternary$src/shifter.v:18$798_Y [2] 3'000 }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.$ternary$src/scoredisplay.v:104$610:
      Old ports: A={ 8'00000000 \sdisplay.pixstream1 [3:0] }, B={ 8'00000000 \sdisplay.__pixstream2 [3:0] }, Y=\sdisplay.pixstream2
      New ports: A=\sdisplay.pixstream1 [3:0], B=\sdisplay.__pixstream2 [3:0], Y=\sdisplay.pixstream2 [3:0]
      New connections: \sdisplay.pixstream2 [11:4] = 8'00000000
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s1.$ternary$src/digitdisplay.v:18$429:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$6288 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$6288 [0]
      New connections: $auto$wreduce.cc:454:run$6288 [3:1] = { $auto$wreduce.cc:454:run$6288 [0] 1'1 $auto$wreduce.cc:454:run$6288 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s1.$ternary$src/digitdisplay.v:23$453:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$6289 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$6289 [0]
      New connections: $auto$wreduce.cc:454:run$6289 [3:1] = { $auto$wreduce.cc:454:run$6289 [0] 1'1 $auto$wreduce.cc:454:run$6289 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s1.$ternary$src/digitdisplay.v:28$476:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$6290 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$6290 [0]
      New connections: $auto$wreduce.cc:454:run$6290 [3:1] = { $auto$wreduce.cc:454:run$6290 [0] 1'1 $auto$wreduce.cc:454:run$6290 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s1.$ternary$src/digitdisplay.v:33$501:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$6291 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$6291 [0]
      New connections: $auto$wreduce.cc:454:run$6291 [3:1] = { $auto$wreduce.cc:454:run$6291 [0] 1'1 $auto$wreduce.cc:454:run$6291 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s1.$ternary$src/digitdisplay.v:38$522:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$6292 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$6292 [0]
      New connections: $auto$wreduce.cc:454:run$6292 [3:1] = { $auto$wreduce.cc:454:run$6292 [0] 1'1 $auto$wreduce.cc:454:run$6292 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s1.$ternary$src/digitdisplay.v:43$539:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$6293 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$6293 [0]
      New connections: $auto$wreduce.cc:454:run$6293 [3:1] = { $auto$wreduce.cc:454:run$6293 [0] 1'1 $auto$wreduce.cc:454:run$6293 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s1.$ternary$src/digitdisplay.v:47$566:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$6294 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$6294 [0]
      New connections: $auto$wreduce.cc:454:run$6294 [3:1] = { $auto$wreduce.cc:454:run$6294 [0] 1'1 $auto$wreduce.cc:454:run$6294 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s2.$ternary$src/digitdisplay.v:18$429:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$6301 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$6301 [0]
      New connections: $auto$wreduce.cc:454:run$6301 [3:1] = { $auto$wreduce.cc:454:run$6301 [0] 1'1 $auto$wreduce.cc:454:run$6301 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s2.$ternary$src/digitdisplay.v:23$453:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$6302 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$6302 [0]
      New connections: $auto$wreduce.cc:454:run$6302 [3:1] = { $auto$wreduce.cc:454:run$6302 [0] 1'1 $auto$wreduce.cc:454:run$6302 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s2.$ternary$src/digitdisplay.v:28$476:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$6303 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$6303 [0]
      New connections: $auto$wreduce.cc:454:run$6303 [3:1] = { $auto$wreduce.cc:454:run$6303 [0] 1'1 $auto$wreduce.cc:454:run$6303 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s2.$ternary$src/digitdisplay.v:33$501:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$6304 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$6304 [0]
      New connections: $auto$wreduce.cc:454:run$6304 [3:1] = { $auto$wreduce.cc:454:run$6304 [0] 1'1 $auto$wreduce.cc:454:run$6304 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s2.$ternary$src/digitdisplay.v:38$522:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$6305 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$6305 [0]
      New connections: $auto$wreduce.cc:454:run$6305 [3:1] = { $auto$wreduce.cc:454:run$6305 [0] 1'1 $auto$wreduce.cc:454:run$6305 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s2.$ternary$src/digitdisplay.v:43$539:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$6306 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$6306 [0]
      New connections: $auto$wreduce.cc:454:run$6306 [3:1] = { $auto$wreduce.cc:454:run$6306 [0] 1'1 $auto$wreduce.cc:454:run$6306 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s2.$ternary$src/digitdisplay.v:47$566:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$6307 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$6307 [0]
      New connections: $auto$wreduce.cc:454:run$6307 [3:1] = { $auto$wreduce.cc:454:run$6307 [0] 1'1 $auto$wreduce.cc:454:run$6307 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s3.$ternary$src/digitdisplay.v:18$429:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$6314 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$6314 [0]
      New connections: $auto$wreduce.cc:454:run$6314 [3:1] = { $auto$wreduce.cc:454:run$6314 [0] 1'1 $auto$wreduce.cc:454:run$6314 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s3.$ternary$src/digitdisplay.v:23$453:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$6315 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$6315 [0]
      New connections: $auto$wreduce.cc:454:run$6315 [3:1] = { $auto$wreduce.cc:454:run$6315 [0] 1'1 $auto$wreduce.cc:454:run$6315 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s3.$ternary$src/digitdisplay.v:28$476:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$6316 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$6316 [0]
      New connections: $auto$wreduce.cc:454:run$6316 [3:1] = { $auto$wreduce.cc:454:run$6316 [0] 1'1 $auto$wreduce.cc:454:run$6316 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s3.$ternary$src/digitdisplay.v:33$501:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$6317 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$6317 [0]
      New connections: $auto$wreduce.cc:454:run$6317 [3:1] = { $auto$wreduce.cc:454:run$6317 [0] 1'1 $auto$wreduce.cc:454:run$6317 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s3.$ternary$src/digitdisplay.v:38$522:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$6318 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$6318 [0]
      New connections: $auto$wreduce.cc:454:run$6318 [3:1] = { $auto$wreduce.cc:454:run$6318 [0] 1'1 $auto$wreduce.cc:454:run$6318 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s3.$ternary$src/digitdisplay.v:43$539:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$6319 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$6319 [0]
      New connections: $auto$wreduce.cc:454:run$6319 [3:1] = { $auto$wreduce.cc:454:run$6319 [0] 1'1 $auto$wreduce.cc:454:run$6319 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s3.$ternary$src/digitdisplay.v:47$566:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$6320 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$6320 [0]
      New connections: $auto$wreduce.cc:454:run$6320 [3:1] = { $auto$wreduce.cc:454:run$6320 [0] 1'1 $auto$wreduce.cc:454:run$6320 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s4.$ternary$src/digitdisplay.v:18$429:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$6327 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$6327 [0]
      New connections: $auto$wreduce.cc:454:run$6327 [3:1] = { $auto$wreduce.cc:454:run$6327 [0] 1'1 $auto$wreduce.cc:454:run$6327 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s4.$ternary$src/digitdisplay.v:23$453:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$6328 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$6328 [0]
      New connections: $auto$wreduce.cc:454:run$6328 [3:1] = { $auto$wreduce.cc:454:run$6328 [0] 1'1 $auto$wreduce.cc:454:run$6328 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s4.$ternary$src/digitdisplay.v:28$476:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$6329 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$6329 [0]
      New connections: $auto$wreduce.cc:454:run$6329 [3:1] = { $auto$wreduce.cc:454:run$6329 [0] 1'1 $auto$wreduce.cc:454:run$6329 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s4.$ternary$src/digitdisplay.v:33$501:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$6330 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$6330 [0]
      New connections: $auto$wreduce.cc:454:run$6330 [3:1] = { $auto$wreduce.cc:454:run$6330 [0] 1'1 $auto$wreduce.cc:454:run$6330 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s4.$ternary$src/digitdisplay.v:38$522:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$6331 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$6331 [0]
      New connections: $auto$wreduce.cc:454:run$6331 [3:1] = { $auto$wreduce.cc:454:run$6331 [0] 1'1 $auto$wreduce.cc:454:run$6331 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s4.$ternary$src/digitdisplay.v:43$539:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$6332 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$6332 [0]
      New connections: $auto$wreduce.cc:454:run$6332 [3:1] = { $auto$wreduce.cc:454:run$6332 [0] 1'1 $auto$wreduce.cc:454:run$6332 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s4.$ternary$src/digitdisplay.v:47$566:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$6333 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$6333 [0]
      New connections: $auto$wreduce.cc:454:run$6333 [3:1] = { $auto$wreduce.cc:454:run$6333 [0] 1'1 $auto$wreduce.cc:454:run$6333 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s5.$ternary$src/digitdisplay.v:18$429:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$6340 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$6340 [0]
      New connections: $auto$wreduce.cc:454:run$6340 [3:1] = { $auto$wreduce.cc:454:run$6340 [0] 1'1 $auto$wreduce.cc:454:run$6340 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s5.$ternary$src/digitdisplay.v:23$453:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$6341 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$6341 [0]
      New connections: $auto$wreduce.cc:454:run$6341 [3:1] = { $auto$wreduce.cc:454:run$6341 [0] 1'1 $auto$wreduce.cc:454:run$6341 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s5.$ternary$src/digitdisplay.v:28$476:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$6342 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$6342 [0]
      New connections: $auto$wreduce.cc:454:run$6342 [3:1] = { $auto$wreduce.cc:454:run$6342 [0] 1'1 $auto$wreduce.cc:454:run$6342 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s5.$ternary$src/digitdisplay.v:33$501:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$6343 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$6343 [0]
      New connections: $auto$wreduce.cc:454:run$6343 [3:1] = { $auto$wreduce.cc:454:run$6343 [0] 1'1 $auto$wreduce.cc:454:run$6343 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s5.$ternary$src/digitdisplay.v:38$522:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$6344 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$6344 [0]
      New connections: $auto$wreduce.cc:454:run$6344 [3:1] = { $auto$wreduce.cc:454:run$6344 [0] 1'1 $auto$wreduce.cc:454:run$6344 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s5.$ternary$src/digitdisplay.v:43$539:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$6345 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$6345 [0]
      New connections: $auto$wreduce.cc:454:run$6345 [3:1] = { $auto$wreduce.cc:454:run$6345 [0] 1'1 $auto$wreduce.cc:454:run$6345 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s5.$ternary$src/digitdisplay.v:47$566:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$6346 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$6346 [0]
      New connections: $auto$wreduce.cc:454:run$6346 [3:1] = { $auto$wreduce.cc:454:run$6346 [0] 1'1 $auto$wreduce.cc:454:run$6346 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s6.$ternary$src/digitdisplay.v:18$429:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$6353 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$6353 [0]
      New connections: $auto$wreduce.cc:454:run$6353 [3:1] = { $auto$wreduce.cc:454:run$6353 [0] 1'1 $auto$wreduce.cc:454:run$6353 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s6.$ternary$src/digitdisplay.v:23$453:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$6354 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$6354 [0]
      New connections: $auto$wreduce.cc:454:run$6354 [3:1] = { $auto$wreduce.cc:454:run$6354 [0] 1'1 $auto$wreduce.cc:454:run$6354 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s6.$ternary$src/digitdisplay.v:28$476:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$6355 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$6355 [0]
      New connections: $auto$wreduce.cc:454:run$6355 [3:1] = { $auto$wreduce.cc:454:run$6355 [0] 1'1 $auto$wreduce.cc:454:run$6355 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s6.$ternary$src/digitdisplay.v:33$501:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$6356 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$6356 [0]
      New connections: $auto$wreduce.cc:454:run$6356 [3:1] = { $auto$wreduce.cc:454:run$6356 [0] 1'1 $auto$wreduce.cc:454:run$6356 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s6.$ternary$src/digitdisplay.v:38$522:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$6357 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$6357 [0]
      New connections: $auto$wreduce.cc:454:run$6357 [3:1] = { $auto$wreduce.cc:454:run$6357 [0] 1'1 $auto$wreduce.cc:454:run$6357 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s6.$ternary$src/digitdisplay.v:43$539:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$6358 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$6358 [0]
      New connections: $auto$wreduce.cc:454:run$6358 [3:1] = { $auto$wreduce.cc:454:run$6358 [0] 1'1 $auto$wreduce.cc:454:run$6358 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s6.$ternary$src/digitdisplay.v:47$566:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$6359 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$6359 [0]
      New connections: $auto$wreduce.cc:454:run$6359 [3:1] = { $auto$wreduce.cc:454:run$6359 [0] 1'1 $auto$wreduce.cc:454:run$6359 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s7.$ternary$src/digitdisplay.v:18$429:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$6366 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$6366 [0]
      New connections: $auto$wreduce.cc:454:run$6366 [3:1] = { $auto$wreduce.cc:454:run$6366 [0] 1'1 $auto$wreduce.cc:454:run$6366 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s7.$ternary$src/digitdisplay.v:23$453:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$6367 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$6367 [0]
      New connections: $auto$wreduce.cc:454:run$6367 [3:1] = { $auto$wreduce.cc:454:run$6367 [0] 1'1 $auto$wreduce.cc:454:run$6367 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s7.$ternary$src/digitdisplay.v:28$476:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$6368 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$6368 [0]
      New connections: $auto$wreduce.cc:454:run$6368 [3:1] = { $auto$wreduce.cc:454:run$6368 [0] 1'1 $auto$wreduce.cc:454:run$6368 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s7.$ternary$src/digitdisplay.v:33$501:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$6369 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$6369 [0]
      New connections: $auto$wreduce.cc:454:run$6369 [3:1] = { $auto$wreduce.cc:454:run$6369 [0] 1'1 $auto$wreduce.cc:454:run$6369 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s7.$ternary$src/digitdisplay.v:38$522:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$6370 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$6370 [0]
      New connections: $auto$wreduce.cc:454:run$6370 [3:1] = { $auto$wreduce.cc:454:run$6370 [0] 1'1 $auto$wreduce.cc:454:run$6370 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s7.$ternary$src/digitdisplay.v:43$539:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$6371 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$6371 [0]
      New connections: $auto$wreduce.cc:454:run$6371 [3:1] = { $auto$wreduce.cc:454:run$6371 [0] 1'1 $auto$wreduce.cc:454:run$6371 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s7.$ternary$src/digitdisplay.v:47$566:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$6372 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$6372 [0]
      New connections: $auto$wreduce.cc:454:run$6372 [3:1] = { $auto$wreduce.cc:454:run$6372 [0] 1'1 $auto$wreduce.cc:454:run$6372 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s8.$ternary$src/digitdisplay.v:18$429:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$6379 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$6379 [0]
      New connections: $auto$wreduce.cc:454:run$6379 [3:1] = { $auto$wreduce.cc:454:run$6379 [0] 1'1 $auto$wreduce.cc:454:run$6379 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s8.$ternary$src/digitdisplay.v:23$453:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$6380 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$6380 [0]
      New connections: $auto$wreduce.cc:454:run$6380 [3:1] = { $auto$wreduce.cc:454:run$6380 [0] 1'1 $auto$wreduce.cc:454:run$6380 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s8.$ternary$src/digitdisplay.v:28$476:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$6381 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$6381 [0]
      New connections: $auto$wreduce.cc:454:run$6381 [3:1] = { $auto$wreduce.cc:454:run$6381 [0] 1'1 $auto$wreduce.cc:454:run$6381 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s8.$ternary$src/digitdisplay.v:33$501:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$6382 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$6382 [0]
      New connections: $auto$wreduce.cc:454:run$6382 [3:1] = { $auto$wreduce.cc:454:run$6382 [0] 1'1 $auto$wreduce.cc:454:run$6382 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s8.$ternary$src/digitdisplay.v:38$522:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$6383 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$6383 [0]
      New connections: $auto$wreduce.cc:454:run$6383 [3:1] = { $auto$wreduce.cc:454:run$6383 [0] 1'1 $auto$wreduce.cc:454:run$6383 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s8.$ternary$src/digitdisplay.v:43$539:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$6384 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$6384 [0]
      New connections: $auto$wreduce.cc:454:run$6384 [3:1] = { $auto$wreduce.cc:454:run$6384 [0] 1'1 $auto$wreduce.cc:454:run$6384 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s8.$ternary$src/digitdisplay.v:47$566:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$6385 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$6385 [0]
      New connections: $auto$wreduce.cc:454:run$6385 [3:1] = { $auto$wreduce.cc:454:run$6385 [0] 1'1 $auto$wreduce.cc:454:run$6385 [0] }
    Consolidated identical input bits for $mux cell $flatten\tdisplay.$ternary$src/gamespeed_display.v:17$740:
      Old ports: A=12'000000001111, B={ 3'000 $auto$wreduce.cc:454:run$6388 [8:0] }, Y=\tdisplay.ipixstream
      New ports: A=9'000001111, B=$auto$wreduce.cc:454:run$6388 [8:0], Y=\tdisplay.ipixstream [8:0]
      New connections: \tdisplay.ipixstream [11:9] = 3'000
    Consolidated identical input bits for $mux cell $flatten\vcell.\ishaper.$procmux$2820:
      Old ports: A=5'11111, B=5'00000, Y=$flatten\vcell.\ishaper.$procmux$2820_Y
      New ports: A=1'1, B=1'0, Y=$flatten\vcell.\ishaper.$procmux$2820_Y [0]
      New connections: $flatten\vcell.\ishaper.$procmux$2820_Y [4:1] = { $flatten\vcell.\ishaper.$procmux$2820_Y [0] $flatten\vcell.\ishaper.$procmux$2820_Y [0] $flatten\vcell.\ishaper.$procmux$2820_Y [0] $flatten\vcell.\ishaper.$procmux$2820_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\vcell.\ishaper.$procmux$2831:
      Old ports: A=5'00000, B=5'11111, Y=$flatten\vcell.\ishaper.$procmux$2831_Y
      New ports: A=1'0, B=1'1, Y=$flatten\vcell.\ishaper.$procmux$2831_Y [0]
      New connections: $flatten\vcell.\ishaper.$procmux$2831_Y [4:1] = { $flatten\vcell.\ishaper.$procmux$2831_Y [0] $flatten\vcell.\ishaper.$procmux$2831_Y [0] $flatten\vcell.\ishaper.$procmux$2831_Y [0] $flatten\vcell.\ishaper.$procmux$2831_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\vcell.\lbshaper.$procmux$3022:
      Old ports: A=5'00001, B=5'11111, Y=$flatten\vcell.\lbshaper.$procmux$3022_Y
      New ports: A=1'0, B=1'1, Y=$flatten\vcell.\lbshaper.$procmux$3022_Y [1]
      New connections: { $flatten\vcell.\lbshaper.$procmux$3022_Y [4:2] $flatten\vcell.\lbshaper.$procmux$3022_Y [0] } = { $flatten\vcell.\lbshaper.$procmux$3022_Y [1] $flatten\vcell.\lbshaper.$procmux$3022_Y [1] $flatten\vcell.\lbshaper.$procmux$3022_Y [1] 1'1 }
    Consolidated identical input bits for $mux cell $flatten\vcell.\sbshaper.$procmux$3621:
      Old ports: A=5'11111, B=5'00000, Y=$flatten\vcell.\sbshaper.$procmux$3621_Y
      New ports: A=1'1, B=1'0, Y=$flatten\vcell.\sbshaper.$procmux$3621_Y [0]
      New connections: $flatten\vcell.\sbshaper.$procmux$3621_Y [4:1] = { $flatten\vcell.\sbshaper.$procmux$3621_Y [0] $flatten\vcell.\sbshaper.$procmux$3621_Y [0] $flatten\vcell.\sbshaper.$procmux$3621_Y [0] $flatten\vcell.\sbshaper.$procmux$3621_Y [0] }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:33$1319:
      Old ports: A=$auto$wreduce.cc:454:run$6249 [4:0], B=5'00000, Y=$auto$wreduce.cc:454:run$6250 [4:0]
      New ports: A=$auto$wreduce.cc:454:run$6249 [3], B=1'0, Y=$auto$wreduce.cc:454:run$6250 [3]
      New connections: { $auto$wreduce.cc:454:run$6250 [4] $auto$wreduce.cc:454:run$6250 [2:0] } = { $auto$wreduce.cc:454:run$6250 [3] 3'000 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:34$1325:
      Old ports: A={ 1'0 $auto$wreduce.cc:454:run$6251 [3:0] }, B=5'10000, Y=$auto$wreduce.cc:454:run$6252 [4:0]
      New ports: A={ 1'0 $auto$wreduce.cc:454:run$6251 [3] }, B=2'10, Y=$auto$wreduce.cc:454:run$6252 [4:3]
      New connections: $auto$wreduce.cc:454:run$6252 [2:0] = 3'000
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:35$1332:
      Old ports: A=$auto$wreduce.cc:454:run$6253 [5:0], B=6'100000, Y=$auto$wreduce.cc:454:run$6254 [5:0]
      New ports: A={ $auto$wreduce.cc:454:run$6253 [3] $auto$wreduce.cc:454:run$6253 [3] }, B=2'10, Y={ $auto$wreduce.cc:454:run$6254 [5] $auto$wreduce.cc:454:run$6254 [3] }
      New connections: { $auto$wreduce.cc:454:run$6254 [4] $auto$wreduce.cc:454:run$6254 [2:0] } = { $auto$wreduce.cc:454:run$6254 [3] 3'000 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:36$1339:
      Old ports: A=$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:36$1338_Y [5:0], B=6'010000, Y=$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:36$1339_Y [5:0]
      New ports: A={ 1'0 $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:36$1338_Y [3] }, B=2'10, Y=$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:36$1339_Y [4:3]
      New connections: { $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:36$1339_Y [5] $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:36$1339_Y [2:0] } = { $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:36$1339_Y [3] 3'000 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:37$1346:
      Old ports: A=$auto$wreduce.cc:454:run$6255 [4:0], B=5'00000, Y=$auto$wreduce.cc:454:run$6256 [4:0]
      New ports: A=$auto$wreduce.cc:454:run$6255 [3], B=1'0, Y=$auto$wreduce.cc:454:run$6256 [3]
      New connections: { $auto$wreduce.cc:454:run$6256 [4] $auto$wreduce.cc:454:run$6256 [2:0] } = { $auto$wreduce.cc:454:run$6256 [3] 3'000 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:38$1353:
      Old ports: A={ 1'0 $auto$wreduce.cc:454:run$6257 [3:0] }, B=5'10000, Y=$auto$wreduce.cc:454:run$6258 [4:0]
      New ports: A={ 1'0 $auto$wreduce.cc:454:run$6257 [3] }, B=2'10, Y=$auto$wreduce.cc:454:run$6258 [4:3]
      New connections: $auto$wreduce.cc:454:run$6258 [2:0] = 3'000
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:39$1360:
      Old ports: A=$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:39$1359_Y [5:0], B=6'100000, Y=$auto$wreduce.cc:454:run$6259 [5:0]
      New ports: A={ $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:39$1359_Y [3] $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:39$1359_Y [3] }, B=2'10, Y={ $auto$wreduce.cc:454:run$6259 [5] $auto$wreduce.cc:454:run$6259 [3] }
      New connections: { $auto$wreduce.cc:454:run$6259 [4] $auto$wreduce.cc:454:run$6259 [2:0] } = { $auto$wreduce.cc:454:run$6259 [3] 3'000 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:40$1367:
      Old ports: A=$auto$wreduce.cc:454:run$6260 [5:0], B=6'010000, Y=$auto$wreduce.cc:454:run$6261 [5:0]
      New ports: A={ 1'0 $auto$wreduce.cc:454:run$6260 [3] }, B=2'10, Y=$auto$wreduce.cc:454:run$6261 [4:3]
      New connections: { $auto$wreduce.cc:454:run$6261 [5] $auto$wreduce.cc:454:run$6261 [2:0] } = { $auto$wreduce.cc:454:run$6261 [3] 3'000 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:41$1374:
      Old ports: A=$auto$wreduce.cc:454:run$6262 [4:0], B=5'00000, Y=$auto$wreduce.cc:454:run$6263 [4:0]
      New ports: A=$auto$wreduce.cc:454:run$6262 [3], B=1'0, Y=$auto$wreduce.cc:454:run$6263 [3]
      New connections: { $auto$wreduce.cc:454:run$6263 [4] $auto$wreduce.cc:454:run$6263 [2:0] } = { $auto$wreduce.cc:454:run$6263 [3] 3'000 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:42$1381:
      Old ports: A={ 1'0 $auto$wreduce.cc:454:run$6264 [3:0] }, B=5'10000, Y=$auto$wreduce.cc:454:run$6265 [4:0]
      New ports: A={ 1'0 $auto$wreduce.cc:454:run$6264 [3] }, B=2'10, Y=$auto$wreduce.cc:454:run$6265 [4:3]
      New connections: $auto$wreduce.cc:454:run$6265 [2:0] = 3'000
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:43$1388:
      Old ports: A=$auto$wreduce.cc:454:run$6266 [5:0], B=6'100000, Y=$auto$wreduce.cc:454:run$6267 [5:0]
      New ports: A={ $auto$wreduce.cc:454:run$6266 [3] $auto$wreduce.cc:454:run$6266 [3] }, B=2'10, Y={ $auto$wreduce.cc:454:run$6267 [5] $auto$wreduce.cc:454:run$6267 [3] }
      New connections: { $auto$wreduce.cc:454:run$6267 [4] $auto$wreduce.cc:454:run$6267 [2:0] } = { $auto$wreduce.cc:454:run$6267 [3] 3'000 }
    Consolidated identical input bits for $mux cell $flatten\memory.$procmux$2601:
      Old ports: A=$flatten\memory.$procmux$2599_Y, B={ 1'0 \memory.P3blk_v }, Y=$flatten\memory.$procmux$2601_Y
      New ports: A=$flatten\memory.$procmux$2599_Y [4:0], B=\memory.P3blk_v, Y=$flatten\memory.$procmux$2601_Y [4:0]
      New connections: $flatten\memory.$procmux$2601_Y [5] = 1'0
    Consolidated identical input bits for $mux cell $flatten\memory.$procmux$2732:
      Old ports: A=$flatten\memory.$procmux$2730_Y, B=16'0000001110000100, Y=$flatten\memory.$procmux$2732_Y
      New ports: A={ 1'0 $flatten\memory.$procmux$2730_Y [6] $flatten\memory.$procmux$2730_Y [6] $flatten\memory.$procmux$2730_Y [2] 1'1 $flatten\memory.$procmux$2730_Y [2] }, B=6'110001, Y={ $flatten\memory.$procmux$2732_Y [8:6] $flatten\memory.$procmux$2732_Y [4:2] }
      New connections: { $flatten\memory.$procmux$2732_Y [15:9] $flatten\memory.$procmux$2732_Y [5] $flatten\memory.$procmux$2732_Y [1:0] } = { 6'000000 $flatten\memory.$procmux$2732_Y [8] $flatten\memory.$procmux$2732_Y [4] 2'00 }
    Consolidated identical input bits for $mux cell $flatten\memory.\sh.$ternary$src/shifter.v:10$767:
      Old ports: A=$auto$wreduce.cc:454:run$6276 [2:0], B=3'011, Y=$flatten\memory.\sh.$ternary$src/shifter.v:10$767_Y [2:0]
      New ports: A={ $auto$wreduce.cc:454:run$6276 [2] 1'0 }, B=2'01, Y={ $flatten\memory.\sh.$ternary$src/shifter.v:10$767_Y [2] $flatten\memory.\sh.$ternary$src/shifter.v:10$767_Y [0] }
      New connections: $flatten\memory.\sh.$ternary$src/shifter.v:10$767_Y [1] = $flatten\memory.\sh.$ternary$src/shifter.v:10$767_Y [0]
    Consolidated identical input bits for $mux cell $flatten\memory.\sh.$ternary$src/shifter.v:12$775:
      Old ports: A=$flatten\memory.\sh.$ternary$src/shifter.v:12$774_Y [3:0], B=4'0111, Y=$flatten\memory.\sh.$ternary$src/shifter.v:12$775_Y [3:0]
      New ports: A={ $flatten\memory.\sh.$ternary$src/shifter.v:12$774_Y [3] 1'0 }, B=2'01, Y={ $flatten\memory.\sh.$ternary$src/shifter.v:12$775_Y [3] $flatten\memory.\sh.$ternary$src/shifter.v:12$775_Y [0] }
      New connections: $flatten\memory.\sh.$ternary$src/shifter.v:12$775_Y [2:1] = { $flatten\memory.\sh.$ternary$src/shifter.v:12$775_Y [0] $flatten\memory.\sh.$ternary$src/shifter.v:12$775_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\memory.\sh.$ternary$src/shifter.v:14$783:
      Old ports: A=$auto$wreduce.cc:454:run$6279 [3:0], B=4'1011, Y=$auto$wreduce.cc:454:run$6280 [3:0]
      New ports: A={ $auto$wreduce.cc:454:run$6279 [2] $auto$wreduce.cc:454:run$6279 [2] 1'0 }, B=3'101, Y={ $auto$wreduce.cc:454:run$6280 [3:2] $auto$wreduce.cc:454:run$6280 [0] }
      New connections: $auto$wreduce.cc:454:run$6280 [1] = $auto$wreduce.cc:454:run$6280 [0]
    Consolidated identical input bits for $mux cell $flatten\memory.\sh.$ternary$src/shifter.v:16$791:
      Old ports: A=$flatten\memory.\sh.$ternary$src/shifter.v:16$790_Y [4:0], B=5'01111, Y=$auto$wreduce.cc:454:run$6281 [4:0]
      New ports: A={ $flatten\memory.\sh.$ternary$src/shifter.v:16$790_Y [4] 1'0 }, B=2'01, Y={ $auto$wreduce.cc:454:run$6281 [4] $auto$wreduce.cc:454:run$6281 [0] }
      New connections: $auto$wreduce.cc:454:run$6281 [3:1] = { $auto$wreduce.cc:454:run$6281 [0] $auto$wreduce.cc:454:run$6281 [0] $auto$wreduce.cc:454:run$6281 [0] }
    Consolidated identical input bits for $mux cell $flatten\memory.\sh.$ternary$src/shifter.v:18$799:
      Old ports: A=$flatten\memory.\sh.$ternary$src/shifter.v:18$798_Y [4:0], B=5'10011, Y=$flatten\memory.\sh.$ternary$src/shifter.v:18$799_Y [4:0]
      New ports: A={ $flatten\memory.\sh.$ternary$src/shifter.v:18$798_Y [2] $flatten\memory.\sh.$ternary$src/shifter.v:18$798_Y [2] 1'0 }, B=3'101, Y={ $flatten\memory.\sh.$ternary$src/shifter.v:18$799_Y [4] $flatten\memory.\sh.$ternary$src/shifter.v:18$799_Y [2] $flatten\memory.\sh.$ternary$src/shifter.v:18$799_Y [0] }
      New connections: { $flatten\memory.\sh.$ternary$src/shifter.v:18$799_Y [3] $flatten\memory.\sh.$ternary$src/shifter.v:18$799_Y [1] } = { 1'0 $flatten\memory.\sh.$ternary$src/shifter.v:18$799_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.$ternary$src/scoredisplay.v:112$626:
      Old ports: A=\sdisplay.pixstream2, B={ 8'00000000 \sdisplay.__pixstream3 [3:0] }, Y=\sdisplay.pixstream3
      New ports: A=\sdisplay.pixstream2 [3:0], B=\sdisplay.__pixstream3 [3:0], Y=\sdisplay.pixstream3 [3:0]
      New connections: \sdisplay.pixstream3 [11:4] = 8'00000000
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s1.$ternary$src/digitdisplay.v:18$430:
      Old ports: A=4'0000, B=$auto$wreduce.cc:454:run$6288 [3:0], Y=\sdisplay.s1.pixstream_top [3:0]
      New ports: A=2'00, B={ 1'1 $auto$wreduce.cc:454:run$6288 [0] }, Y={ \sdisplay.s1.pixstream_top [2] \sdisplay.s1.pixstream_top [0] }
      New connections: { \sdisplay.s1.pixstream_top [3] \sdisplay.s1.pixstream_top [1] } = { \sdisplay.s1.pixstream_top [0] \sdisplay.s1.pixstream_top [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s2.$ternary$src/digitdisplay.v:18$430:
      Old ports: A=4'0000, B=$auto$wreduce.cc:454:run$6301 [3:0], Y=\sdisplay.s2.pixstream_top [3:0]
      New ports: A=2'00, B={ 1'1 $auto$wreduce.cc:454:run$6301 [0] }, Y={ \sdisplay.s2.pixstream_top [2] \sdisplay.s2.pixstream_top [0] }
      New connections: { \sdisplay.s2.pixstream_top [3] \sdisplay.s2.pixstream_top [1] } = { \sdisplay.s2.pixstream_top [0] \sdisplay.s2.pixstream_top [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s3.$ternary$src/digitdisplay.v:18$430:
      Old ports: A=4'0000, B=$auto$wreduce.cc:454:run$6314 [3:0], Y=\sdisplay.s3.pixstream_top [3:0]
      New ports: A=2'00, B={ 1'1 $auto$wreduce.cc:454:run$6314 [0] }, Y={ \sdisplay.s3.pixstream_top [2] \sdisplay.s3.pixstream_top [0] }
      New connections: { \sdisplay.s3.pixstream_top [3] \sdisplay.s3.pixstream_top [1] } = { \sdisplay.s3.pixstream_top [0] \sdisplay.s3.pixstream_top [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s4.$ternary$src/digitdisplay.v:18$430:
      Old ports: A=4'0000, B=$auto$wreduce.cc:454:run$6327 [3:0], Y=\sdisplay.s4.pixstream_top [3:0]
      New ports: A=2'00, B={ 1'1 $auto$wreduce.cc:454:run$6327 [0] }, Y={ \sdisplay.s4.pixstream_top [2] \sdisplay.s4.pixstream_top [0] }
      New connections: { \sdisplay.s4.pixstream_top [3] \sdisplay.s4.pixstream_top [1] } = { \sdisplay.s4.pixstream_top [0] \sdisplay.s4.pixstream_top [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s5.$ternary$src/digitdisplay.v:18$430:
      Old ports: A=4'0000, B=$auto$wreduce.cc:454:run$6340 [3:0], Y=\sdisplay.s5.pixstream_top [3:0]
      New ports: A=2'00, B={ 1'1 $auto$wreduce.cc:454:run$6340 [0] }, Y={ \sdisplay.s5.pixstream_top [2] \sdisplay.s5.pixstream_top [0] }
      New connections: { \sdisplay.s5.pixstream_top [3] \sdisplay.s5.pixstream_top [1] } = { \sdisplay.s5.pixstream_top [0] \sdisplay.s5.pixstream_top [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s6.$ternary$src/digitdisplay.v:18$430:
      Old ports: A=4'0000, B=$auto$wreduce.cc:454:run$6353 [3:0], Y=\sdisplay.s6.pixstream_top [3:0]
      New ports: A=2'00, B={ 1'1 $auto$wreduce.cc:454:run$6353 [0] }, Y={ \sdisplay.s6.pixstream_top [2] \sdisplay.s6.pixstream_top [0] }
      New connections: { \sdisplay.s6.pixstream_top [3] \sdisplay.s6.pixstream_top [1] } = { \sdisplay.s6.pixstream_top [0] \sdisplay.s6.pixstream_top [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s7.$ternary$src/digitdisplay.v:18$430:
      Old ports: A=4'0000, B=$auto$wreduce.cc:454:run$6366 [3:0], Y=\sdisplay.s7.pixstream_top [3:0]
      New ports: A=2'00, B={ 1'1 $auto$wreduce.cc:454:run$6366 [0] }, Y={ \sdisplay.s7.pixstream_top [2] \sdisplay.s7.pixstream_top [0] }
      New connections: { \sdisplay.s7.pixstream_top [3] \sdisplay.s7.pixstream_top [1] } = { \sdisplay.s7.pixstream_top [0] \sdisplay.s7.pixstream_top [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s8.$ternary$src/digitdisplay.v:18$430:
      Old ports: A=4'0000, B=$auto$wreduce.cc:454:run$6379 [3:0], Y=\sdisplay.s8.pixstream_top [3:0]
      New ports: A=2'00, B={ 1'1 $auto$wreduce.cc:454:run$6379 [0] }, Y={ \sdisplay.s8.pixstream_top [2] \sdisplay.s8.pixstream_top [0] }
      New connections: { \sdisplay.s8.pixstream_top [3] \sdisplay.s8.pixstream_top [1] } = { \sdisplay.s8.pixstream_top [0] \sdisplay.s8.pixstream_top [0] }
    Consolidated identical input bits for $mux cell $flatten\tdisplay.$ternary$src/gamespeed_display.v:15$729:
      Old ports: A=12'111111111111, B=\tdisplay.ipixstream, Y=\gamespeed_stream
      New ports: A=10'1111111111, B={ 1'0 \tdisplay.ipixstream [8:0] }, Y=\gamespeed_stream [9:0]
      New connections: \gamespeed_stream [11:10] = { \gamespeed_stream [9] \gamespeed_stream [9] }
    Consolidated identical input bits for $mux cell $flatten\vcell.\ishaper.$procmux$2822:
      Old ports: A=$flatten\vcell.\ishaper.$procmux$2820_Y, B=5'11111, Y=$flatten\vcell.\ishaper.$procmux$2822_Y
      New ports: A=$flatten\vcell.\ishaper.$procmux$2820_Y [0], B=1'1, Y=$flatten\vcell.\ishaper.$procmux$2822_Y [0]
      New connections: $flatten\vcell.\ishaper.$procmux$2822_Y [4:1] = { $flatten\vcell.\ishaper.$procmux$2822_Y [0] $flatten\vcell.\ishaper.$procmux$2822_Y [0] $flatten\vcell.\ishaper.$procmux$2822_Y [0] $flatten\vcell.\ishaper.$procmux$2822_Y [0] }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\memory.$procmux$2603:
      Old ports: A=$flatten\memory.$procmux$2601_Y, B={ 1'0 \memory.P4blk_v }, Y=$flatten\memory.$procmux$2603_Y
      New ports: A=$flatten\memory.$procmux$2601_Y [4:0], B=\memory.P4blk_v, Y=$flatten\memory.$procmux$2603_Y [4:0]
      New connections: $flatten\memory.$procmux$2603_Y [5] = 1'0
    Consolidated identical input bits for $mux cell $flatten\memory.$procmux$2735:
      Old ports: A=$flatten\memory.$procmux$2732_Y, B=16'0000000000101000, Y=$flatten\memory.$procmux$2735_Y
      New ports: A={ $flatten\memory.$procmux$2732_Y [8:6] $flatten\memory.$procmux$2732_Y [4] $flatten\memory.$procmux$2732_Y [4:2] }, B=7'0001010, Y=$flatten\memory.$procmux$2735_Y [8:2]
      New connections: { $flatten\memory.$procmux$2735_Y [15:9] $flatten\memory.$procmux$2735_Y [1:0] } = { 6'000000 $flatten\memory.$procmux$2735_Y [8] 2'00 }
    Consolidated identical input bits for $mux cell $flatten\memory.\sh.$ternary$src/shifter.v:12$776:
      Old ports: A=$flatten\memory.\sh.$ternary$src/shifter.v:12$775_Y [3:0], B=4'0110, Y=$auto$wreduce.cc:454:run$6278 [3:0]
      New ports: A={ $flatten\memory.\sh.$ternary$src/shifter.v:12$775_Y [3] $flatten\memory.\sh.$ternary$src/shifter.v:12$775_Y [0] $flatten\memory.\sh.$ternary$src/shifter.v:12$775_Y [0] }, B=3'010, Y={ $auto$wreduce.cc:454:run$6278 [3] $auto$wreduce.cc:454:run$6278 [1:0] }
      New connections: $auto$wreduce.cc:454:run$6278 [2] = $auto$wreduce.cc:454:run$6278 [1]
    Consolidated identical input bits for $mux cell $flatten\memory.\sh.$ternary$src/shifter.v:16$792:
      Old ports: A=$auto$wreduce.cc:454:run$6281 [4:0], B=5'01110, Y=$flatten\memory.\sh.$ternary$src/shifter.v:16$792_Y [4:0]
      New ports: A={ $auto$wreduce.cc:454:run$6281 [4] $auto$wreduce.cc:454:run$6281 [0] $auto$wreduce.cc:454:run$6281 [0] }, B=3'010, Y={ $flatten\memory.\sh.$ternary$src/shifter.v:16$792_Y [4] $flatten\memory.\sh.$ternary$src/shifter.v:16$792_Y [1:0] }
      New connections: $flatten\memory.\sh.$ternary$src/shifter.v:16$792_Y [3:2] = { $flatten\memory.\sh.$ternary$src/shifter.v:16$792_Y [1] $flatten\memory.\sh.$ternary$src/shifter.v:16$792_Y [1] }
    Consolidated identical input bits for $mux cell $flatten\memory.\sh.$ternary$src/shifter.v:18$800:
      Old ports: A=$flatten\memory.\sh.$ternary$src/shifter.v:18$799_Y [4:0], B=5'10010, Y=$flatten\memory.\sh.$ternary$src/shifter.v:18$800_Y [4:0]
      New ports: A={ $flatten\memory.\sh.$ternary$src/shifter.v:18$799_Y [4] $flatten\memory.\sh.$ternary$src/shifter.v:18$799_Y [2] $flatten\memory.\sh.$ternary$src/shifter.v:18$799_Y [0] $flatten\memory.\sh.$ternary$src/shifter.v:18$799_Y [0] }, B=4'1010, Y={ $flatten\memory.\sh.$ternary$src/shifter.v:18$800_Y [4] $flatten\memory.\sh.$ternary$src/shifter.v:18$800_Y [2:0] }
      New connections: $flatten\memory.\sh.$ternary$src/shifter.v:18$800_Y [3] = 1'0
    Consolidated identical input bits for $mux cell $flatten\sdisplay.$ternary$src/scoredisplay.v:119$638:
      Old ports: A=\sdisplay.pixstream3, B={ 8'00000000 \sdisplay.__pixstream4 [3:0] }, Y=\sdisplay.pixstream4
      New ports: A=\sdisplay.pixstream3 [3:0], B=\sdisplay.__pixstream4 [3:0], Y=\sdisplay.pixstream4 [3:0]
      New connections: \sdisplay.pixstream4 [11:4] = 8'00000000
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\memory.\sh.$ternary$src/shifter.v:16$793:
      Old ports: A=$flatten\memory.\sh.$ternary$src/shifter.v:16$792_Y [4:0], B=5'01101, Y=\memory.sh.point4 [4:0]
      New ports: A={ $flatten\memory.\sh.$ternary$src/shifter.v:16$792_Y [4] $flatten\memory.\sh.$ternary$src/shifter.v:16$792_Y [1] $flatten\memory.\sh.$ternary$src/shifter.v:16$792_Y [1:0] }, B=4'0101, Y={ \memory.sh.point4 [4] \memory.sh.point4 [2:0] }
      New connections: \memory.sh.point4 [3] = \memory.sh.point4 [2]
    Consolidated identical input bits for $mux cell $flatten\memory.\sh.$ternary$src/shifter.v:18$801:
      Old ports: A=$flatten\memory.\sh.$ternary$src/shifter.v:18$800_Y [4:0], B=5'10001, Y=\memory.sh.point5 [4:0]
      New ports: A={ $flatten\memory.\sh.$ternary$src/shifter.v:18$800_Y [4] $flatten\memory.\sh.$ternary$src/shifter.v:18$800_Y [2:0] }, B=4'1001, Y={ \memory.sh.point5 [4] \memory.sh.point5 [2:0] }
      New connections: \memory.sh.point5 [3] = 1'0
    Consolidated identical input bits for $mux cell $flatten\sdisplay.$ternary$src/scoredisplay.v:126$650:
      Old ports: A=\sdisplay.pixstream4, B={ 8'00000000 \sdisplay.__pixstream5 [3:0] }, Y=\sdisplay.pixstream5
      New ports: A=\sdisplay.pixstream4 [3:0], B=\sdisplay.__pixstream5 [3:0], Y=\sdisplay.pixstream5 [3:0]
      New connections: \sdisplay.pixstream5 [11:4] = 8'00000000
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\memory.\sh.$ternary$src/shifter.v:23$815:
      Old ports: A=\memory.sh.point5 [4:0], B=5'00000, Y=$flatten\memory.\sh.$ternary$src/shifter.v:23$815_Y [4:0]
      New ports: A={ \memory.sh.point5 [4] \memory.sh.point5 [2:0] }, B=4'0000, Y={ $flatten\memory.\sh.$ternary$src/shifter.v:23$815_Y [4] $flatten\memory.\sh.$ternary$src/shifter.v:23$815_Y [2:0] }
      New connections: $flatten\memory.\sh.$ternary$src/shifter.v:23$815_Y [3] = 1'0
    Consolidated identical input bits for $mux cell $flatten\sdisplay.$ternary$src/scoredisplay.v:133$662:
      Old ports: A=\sdisplay.pixstream5, B={ 8'00000000 \sdisplay.__pixstream6 [3:0] }, Y=\sdisplay.pixstream6
      New ports: A=\sdisplay.pixstream5 [3:0], B=\sdisplay.__pixstream6 [3:0], Y=\sdisplay.pixstream6 [3:0]
      New connections: \sdisplay.pixstream6 [11:4] = 8'00000000
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\sdisplay.$ternary$src/scoredisplay.v:140$674:
      Old ports: A=\sdisplay.pixstream6, B={ 8'00000000 \sdisplay.__pixstream7 [3:0] }, Y=\sdisplay.pixstream7
      New ports: A=\sdisplay.pixstream6 [3:0], B=\sdisplay.__pixstream7 [3:0], Y=\sdisplay.pixstream7 [3:0]
      New connections: \sdisplay.pixstream7 [11:4] = 8'00000000
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\sdisplay.$ternary$src/scoredisplay.v:148$693:
      Old ports: A=12'111111111111, B=\sdisplay.pixstream7, Y=$flatten\sdisplay.$ternary$src/scoredisplay.v:148$693_Y
      New ports: A=5'11111, B={ 1'0 \sdisplay.pixstream7 [3:0] }, Y=$flatten\sdisplay.$ternary$src/scoredisplay.v:148$693_Y [4:0]
      New connections: $flatten\sdisplay.$ternary$src/scoredisplay.v:148$693_Y [11:5] = { $flatten\sdisplay.$ternary$src/scoredisplay.v:148$693_Y [4] $flatten\sdisplay.$ternary$src/scoredisplay.v:148$693_Y [4] $flatten\sdisplay.$ternary$src/scoredisplay.v:148$693_Y [4] $flatten\sdisplay.$ternary$src/scoredisplay.v:148$693_Y [4] $flatten\sdisplay.$ternary$src/scoredisplay.v:148$693_Y [4] $flatten\sdisplay.$ternary$src/scoredisplay.v:148$693_Y [4] $flatten\sdisplay.$ternary$src/scoredisplay.v:148$693_Y [4] }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\sdisplay.$ternary$src/scoredisplay.v:148$694:
      Old ports: A=$flatten\sdisplay.$ternary$src/scoredisplay.v:148$693_Y, B={ 8'00000000 \sdisplay.__pixstream8 [3:0] }, Y=\score_screen
      New ports: A=$flatten\sdisplay.$ternary$src/scoredisplay.v:148$693_Y [4:0], B={ 1'0 \sdisplay.__pixstream8 [3:0] }, Y=\score_screen [4:0]
      New connections: \score_screen [11:5] = { \score_screen [4] \score_screen [4] \score_screen [4] \score_screen [4] \score_screen [4] \score_screen [4] \score_screen [4] }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $ternary$src/top.v:131$1142:
      Old ports: A=12'001100110011, B=\score_screen, Y=$ternary$src/top.v:131$1142_Y
      New ports: A=6'010011, B={ \score_screen [4] \score_screen [4:0] }, Y={ $ternary$src/top.v:131$1142_Y [6] $ternary$src/top.v:131$1142_Y [4:0] }
      New connections: { $ternary$src/top.v:131$1142_Y [11:7] $ternary$src/top.v:131$1142_Y [5] } = { $ternary$src/top.v:131$1142_Y [6] $ternary$src/top.v:131$1142_Y [6] $ternary$src/top.v:131$1142_Y [4] $ternary$src/top.v:131$1142_Y [4] $ternary$src/top.v:131$1142_Y [6] $ternary$src/top.v:131$1142_Y [4] }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $ternary$src/top.v:131$1143:
      Old ports: A=$ternary$src/top.v:131$1142_Y, B={ \gamespeed_stream [9] \gamespeed_stream [9] \gamespeed_stream [9:0] }, Y=$ternary$src/top.v:131$1143_Y
      New ports: A={ $ternary$src/top.v:131$1142_Y [6] $ternary$src/top.v:131$1142_Y [4] $ternary$src/top.v:131$1142_Y [4] $ternary$src/top.v:131$1142_Y [6] $ternary$src/top.v:131$1142_Y [6] $ternary$src/top.v:131$1142_Y [4] $ternary$src/top.v:131$1142_Y [4:0] }, B={ \gamespeed_stream [9] \gamespeed_stream [9:0] }, Y=$ternary$src/top.v:131$1143_Y [10:0]
      New connections: $ternary$src/top.v:131$1143_Y [11] = $ternary$src/top.v:131$1143_Y [10]
  Optimizing cells in module \top.
Performed a total of 155 changes.

26.29.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

26.29.6. Executing OPT_DFF pass (perform DFF optimizations).

26.29.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

26.29.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~573 debug messages>

26.29.9. Rerunning OPT passes. (Maybe there is more to do..)

26.29.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~745 debug messages>

26.29.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s1.$ternary$src/digitdisplay.v:23$455:
      Old ports: A={ \sdisplay.s1.pixstream_top [3:2] \sdisplay.s1.pixstream_top [3] \sdisplay.s1.pixstream_top [3] }, B=$auto$wreduce.cc:454:run$6282 [3:0], Y=\sdisplay.s1.pixstream_bot [3:0]
      New ports: A={ \sdisplay.s1.pixstream_top [2] \sdisplay.s1.pixstream_top [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8626 }, Y={ \sdisplay.s1.pixstream_bot [2] \sdisplay.s1.pixstream_bot [0] }
      New connections: { \sdisplay.s1.pixstream_bot [3] \sdisplay.s1.pixstream_bot [1] } = { \sdisplay.s1.pixstream_bot [0] \sdisplay.s1.pixstream_bot [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s2.$ternary$src/digitdisplay.v:23$455:
      Old ports: A={ \sdisplay.s2.pixstream_top [3:2] \sdisplay.s2.pixstream_top [3] \sdisplay.s2.pixstream_top [3] }, B=$auto$wreduce.cc:454:run$6295 [3:0], Y=\sdisplay.s2.pixstream_bot [3:0]
      New ports: A={ \sdisplay.s2.pixstream_top [2] \sdisplay.s2.pixstream_top [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8602 }, Y={ \sdisplay.s2.pixstream_bot [2] \sdisplay.s2.pixstream_bot [0] }
      New connections: { \sdisplay.s2.pixstream_bot [3] \sdisplay.s2.pixstream_bot [1] } = { \sdisplay.s2.pixstream_bot [0] \sdisplay.s2.pixstream_bot [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s3.$ternary$src/digitdisplay.v:23$455:
      Old ports: A={ \sdisplay.s3.pixstream_top [3:2] \sdisplay.s3.pixstream_top [3] \sdisplay.s3.pixstream_top [3] }, B=$auto$wreduce.cc:454:run$6308 [3:0], Y=\sdisplay.s3.pixstream_bot [3:0]
      New ports: A={ \sdisplay.s3.pixstream_top [2] \sdisplay.s3.pixstream_top [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8578 }, Y={ \sdisplay.s3.pixstream_bot [2] \sdisplay.s3.pixstream_bot [0] }
      New connections: { \sdisplay.s3.pixstream_bot [3] \sdisplay.s3.pixstream_bot [1] } = { \sdisplay.s3.pixstream_bot [0] \sdisplay.s3.pixstream_bot [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s4.$ternary$src/digitdisplay.v:23$455:
      Old ports: A={ \sdisplay.s4.pixstream_top [3:2] \sdisplay.s4.pixstream_top [3] \sdisplay.s4.pixstream_top [3] }, B=$auto$wreduce.cc:454:run$6321 [3:0], Y=\sdisplay.s4.pixstream_bot [3:0]
      New ports: A={ \sdisplay.s4.pixstream_top [2] \sdisplay.s4.pixstream_top [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8554 }, Y={ \sdisplay.s4.pixstream_bot [2] \sdisplay.s4.pixstream_bot [0] }
      New connections: { \sdisplay.s4.pixstream_bot [3] \sdisplay.s4.pixstream_bot [1] } = { \sdisplay.s4.pixstream_bot [0] \sdisplay.s4.pixstream_bot [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s5.$ternary$src/digitdisplay.v:23$455:
      Old ports: A={ \sdisplay.s5.pixstream_top [3:2] \sdisplay.s5.pixstream_top [3] \sdisplay.s5.pixstream_top [3] }, B=$auto$wreduce.cc:454:run$6334 [3:0], Y=\sdisplay.s5.pixstream_bot [3:0]
      New ports: A={ \sdisplay.s5.pixstream_top [2] \sdisplay.s5.pixstream_top [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8530 }, Y={ \sdisplay.s5.pixstream_bot [2] \sdisplay.s5.pixstream_bot [0] }
      New connections: { \sdisplay.s5.pixstream_bot [3] \sdisplay.s5.pixstream_bot [1] } = { \sdisplay.s5.pixstream_bot [0] \sdisplay.s5.pixstream_bot [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s6.$ternary$src/digitdisplay.v:23$455:
      Old ports: A={ \sdisplay.s6.pixstream_top [3:2] \sdisplay.s6.pixstream_top [3] \sdisplay.s6.pixstream_top [3] }, B=$auto$wreduce.cc:454:run$6347 [3:0], Y=\sdisplay.s6.pixstream_bot [3:0]
      New ports: A={ \sdisplay.s6.pixstream_top [2] \sdisplay.s6.pixstream_top [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8506 }, Y={ \sdisplay.s6.pixstream_bot [2] \sdisplay.s6.pixstream_bot [0] }
      New connections: { \sdisplay.s6.pixstream_bot [3] \sdisplay.s6.pixstream_bot [1] } = { \sdisplay.s6.pixstream_bot [0] \sdisplay.s6.pixstream_bot [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s7.$ternary$src/digitdisplay.v:23$455:
      Old ports: A={ \sdisplay.s7.pixstream_top [3:2] \sdisplay.s7.pixstream_top [3] \sdisplay.s7.pixstream_top [3] }, B=$auto$wreduce.cc:454:run$6360 [3:0], Y=\sdisplay.s7.pixstream_bot [3:0]
      New ports: A={ \sdisplay.s7.pixstream_top [2] \sdisplay.s7.pixstream_top [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8482 }, Y={ \sdisplay.s7.pixstream_bot [2] \sdisplay.s7.pixstream_bot [0] }
      New connections: { \sdisplay.s7.pixstream_bot [3] \sdisplay.s7.pixstream_bot [1] } = { \sdisplay.s7.pixstream_bot [0] \sdisplay.s7.pixstream_bot [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s8.$ternary$src/digitdisplay.v:23$455:
      Old ports: A={ \sdisplay.s8.pixstream_top [3:2] \sdisplay.s8.pixstream_top [3] \sdisplay.s8.pixstream_top [3] }, B=$auto$wreduce.cc:454:run$6373 [3:0], Y=\sdisplay.s8.pixstream_bot [3:0]
      New ports: A={ \sdisplay.s8.pixstream_top [2] \sdisplay.s8.pixstream_top [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8458 }, Y={ \sdisplay.s8.pixstream_bot [2] \sdisplay.s8.pixstream_bot [0] }
      New connections: { \sdisplay.s8.pixstream_bot [3] \sdisplay.s8.pixstream_bot [1] } = { \sdisplay.s8.pixstream_bot [0] \sdisplay.s8.pixstream_bot [0] }
  Optimizing cells in module \top.
Performed a total of 8 changes.

26.29.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

26.29.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$8031 ($sdffce) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$8031 ($sdffce) from module top.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$8031 ($sdffce) from module top.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$8031 ($sdffce) from module top.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$8031 ($sdffce) from module top.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$8031 ($sdffce) from module top.
Setting constant 0-bit at position 8 on $auto$ff.cc:262:slice$8031 ($sdffce) from module top.
Setting constant 0-bit at position 9 on $auto$ff.cc:262:slice$8031 ($sdffce) from module top.

26.29.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 174 unused wires.
<suppressed ~1 debug messages>

26.29.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~35 debug messages>

26.29.16. Rerunning OPT passes. (Maybe there is more to do..)

26.29.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~745 debug messages>

26.29.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s1.$ternary$src/digitdisplay.v:28$478:
      Old ports: A={ \sdisplay.s1.pixstream_bot [3:2] \sdisplay.s1.pixstream_bot [3] \sdisplay.s1.pixstream_bot [3] }, B={ $auto$opt_expr.cc:205:group_cell_inputs$8630 [2] 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8630 [1:0] }, Y=\sdisplay.s1.pixstream_mid [3:0]
      New ports: A={ \sdisplay.s1.pixstream_bot [2] \sdisplay.s1.pixstream_bot [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8780 }, Y={ \sdisplay.s1.pixstream_mid [2] \sdisplay.s1.pixstream_mid [0] }
      New connections: { \sdisplay.s1.pixstream_mid [3] \sdisplay.s1.pixstream_mid [1] } = { \sdisplay.s1.pixstream_mid [0] \sdisplay.s1.pixstream_mid [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s2.$ternary$src/digitdisplay.v:28$478:
      Old ports: A={ \sdisplay.s2.pixstream_bot [3:2] \sdisplay.s2.pixstream_bot [3] \sdisplay.s2.pixstream_bot [3] }, B={ $auto$opt_expr.cc:205:group_cell_inputs$8606 [2] 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8606 [1:0] }, Y=\sdisplay.s2.pixstream_mid [3:0]
      New ports: A={ \sdisplay.s2.pixstream_bot [2] \sdisplay.s2.pixstream_bot [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8778 }, Y={ \sdisplay.s2.pixstream_mid [2] \sdisplay.s2.pixstream_mid [0] }
      New connections: { \sdisplay.s2.pixstream_mid [3] \sdisplay.s2.pixstream_mid [1] } = { \sdisplay.s2.pixstream_mid [0] \sdisplay.s2.pixstream_mid [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s3.$ternary$src/digitdisplay.v:28$478:
      Old ports: A={ \sdisplay.s3.pixstream_bot [3:2] \sdisplay.s3.pixstream_bot [3] \sdisplay.s3.pixstream_bot [3] }, B={ $auto$opt_expr.cc:205:group_cell_inputs$8582 [2] 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8582 [1:0] }, Y=\sdisplay.s3.pixstream_mid [3:0]
      New ports: A={ \sdisplay.s3.pixstream_bot [2] \sdisplay.s3.pixstream_bot [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8776 }, Y={ \sdisplay.s3.pixstream_mid [2] \sdisplay.s3.pixstream_mid [0] }
      New connections: { \sdisplay.s3.pixstream_mid [3] \sdisplay.s3.pixstream_mid [1] } = { \sdisplay.s3.pixstream_mid [0] \sdisplay.s3.pixstream_mid [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s4.$ternary$src/digitdisplay.v:28$478:
      Old ports: A={ \sdisplay.s4.pixstream_bot [3:2] \sdisplay.s4.pixstream_bot [3] \sdisplay.s4.pixstream_bot [3] }, B={ $auto$opt_expr.cc:205:group_cell_inputs$8558 [2] 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8558 [1:0] }, Y=\sdisplay.s4.pixstream_mid [3:0]
      New ports: A={ \sdisplay.s4.pixstream_bot [2] \sdisplay.s4.pixstream_bot [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8774 }, Y={ \sdisplay.s4.pixstream_mid [2] \sdisplay.s4.pixstream_mid [0] }
      New connections: { \sdisplay.s4.pixstream_mid [3] \sdisplay.s4.pixstream_mid [1] } = { \sdisplay.s4.pixstream_mid [0] \sdisplay.s4.pixstream_mid [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s5.$ternary$src/digitdisplay.v:28$478:
      Old ports: A={ \sdisplay.s5.pixstream_bot [3:2] \sdisplay.s5.pixstream_bot [3] \sdisplay.s5.pixstream_bot [3] }, B={ $auto$opt_expr.cc:205:group_cell_inputs$8534 [2] 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8534 [1:0] }, Y=\sdisplay.s5.pixstream_mid [3:0]
      New ports: A={ \sdisplay.s5.pixstream_bot [2] \sdisplay.s5.pixstream_bot [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8772 }, Y={ \sdisplay.s5.pixstream_mid [2] \sdisplay.s5.pixstream_mid [0] }
      New connections: { \sdisplay.s5.pixstream_mid [3] \sdisplay.s5.pixstream_mid [1] } = { \sdisplay.s5.pixstream_mid [0] \sdisplay.s5.pixstream_mid [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s6.$ternary$src/digitdisplay.v:28$478:
      Old ports: A={ \sdisplay.s6.pixstream_bot [3:2] \sdisplay.s6.pixstream_bot [3] \sdisplay.s6.pixstream_bot [3] }, B={ $auto$opt_expr.cc:205:group_cell_inputs$8510 [2] 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8510 [1:0] }, Y=\sdisplay.s6.pixstream_mid [3:0]
      New ports: A={ \sdisplay.s6.pixstream_bot [2] \sdisplay.s6.pixstream_bot [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8770 }, Y={ \sdisplay.s6.pixstream_mid [2] \sdisplay.s6.pixstream_mid [0] }
      New connections: { \sdisplay.s6.pixstream_mid [3] \sdisplay.s6.pixstream_mid [1] } = { \sdisplay.s6.pixstream_mid [0] \sdisplay.s6.pixstream_mid [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s7.$ternary$src/digitdisplay.v:28$478:
      Old ports: A={ \sdisplay.s7.pixstream_bot [3:2] \sdisplay.s7.pixstream_bot [3] \sdisplay.s7.pixstream_bot [3] }, B={ $auto$opt_expr.cc:205:group_cell_inputs$8486 [2] 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8486 [1:0] }, Y=\sdisplay.s7.pixstream_mid [3:0]
      New ports: A={ \sdisplay.s7.pixstream_bot [2] \sdisplay.s7.pixstream_bot [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8768 }, Y={ \sdisplay.s7.pixstream_mid [2] \sdisplay.s7.pixstream_mid [0] }
      New connections: { \sdisplay.s7.pixstream_mid [3] \sdisplay.s7.pixstream_mid [1] } = { \sdisplay.s7.pixstream_mid [0] \sdisplay.s7.pixstream_mid [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s8.$ternary$src/digitdisplay.v:28$478:
      Old ports: A={ \sdisplay.s8.pixstream_bot [3:2] \sdisplay.s8.pixstream_bot [3] \sdisplay.s8.pixstream_bot [3] }, B={ $auto$opt_expr.cc:205:group_cell_inputs$8462 [2] 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8462 [1:0] }, Y=\sdisplay.s8.pixstream_mid [3:0]
      New ports: A={ \sdisplay.s8.pixstream_bot [2] \sdisplay.s8.pixstream_bot [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8766 }, Y={ \sdisplay.s8.pixstream_mid [2] \sdisplay.s8.pixstream_mid [0] }
      New connections: { \sdisplay.s8.pixstream_mid [3] \sdisplay.s8.pixstream_mid [1] } = { \sdisplay.s8.pixstream_mid [0] \sdisplay.s8.pixstream_mid [0] }
  Optimizing cells in module \top.
Performed a total of 8 changes.

26.29.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

26.29.20. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$5049 ($sdffe) from module top (D = $flatten\sdisplay.$procmux$3557_Y [1:0], Q = \sdisplay.dumpvar [1:0]).

26.29.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 9 unused wires.
<suppressed ~1 debug messages>

26.29.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~33 debug messages>

26.29.23. Rerunning OPT passes. (Maybe there is more to do..)

26.29.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~745 debug messages>

26.29.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s1.$ternary$src/digitdisplay.v:33$503:
      Old ports: A={ \sdisplay.s1.pixstream_mid [3:2] \sdisplay.s1.pixstream_mid [3] \sdisplay.s1.pixstream_mid [3] }, B={ $auto$opt_expr.cc:205:group_cell_inputs$8634 [2] 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8634 [1:0] }, Y=\sdisplay.s1.pixstream_topr [3:0]
      New ports: A={ \sdisplay.s1.pixstream_mid [2] \sdisplay.s1.pixstream_mid [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8804 }, Y={ \sdisplay.s1.pixstream_topr [2] \sdisplay.s1.pixstream_topr [0] }
      New connections: { \sdisplay.s1.pixstream_topr [3] \sdisplay.s1.pixstream_topr [1] } = { \sdisplay.s1.pixstream_topr [0] \sdisplay.s1.pixstream_topr [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s2.$ternary$src/digitdisplay.v:33$503:
      Old ports: A={ \sdisplay.s2.pixstream_mid [3:2] \sdisplay.s2.pixstream_mid [3] \sdisplay.s2.pixstream_mid [3] }, B={ $auto$opt_expr.cc:205:group_cell_inputs$8610 [2] 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8610 [1:0] }, Y=\sdisplay.s2.pixstream_topr [3:0]
      New ports: A={ \sdisplay.s2.pixstream_mid [2] \sdisplay.s2.pixstream_mid [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8802 }, Y={ \sdisplay.s2.pixstream_topr [2] \sdisplay.s2.pixstream_topr [0] }
      New connections: { \sdisplay.s2.pixstream_topr [3] \sdisplay.s2.pixstream_topr [1] } = { \sdisplay.s2.pixstream_topr [0] \sdisplay.s2.pixstream_topr [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s3.$ternary$src/digitdisplay.v:33$503:
      Old ports: A={ \sdisplay.s3.pixstream_mid [3:2] \sdisplay.s3.pixstream_mid [3] \sdisplay.s3.pixstream_mid [3] }, B={ $auto$opt_expr.cc:205:group_cell_inputs$8586 [2] 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8586 [1:0] }, Y=\sdisplay.s3.pixstream_topr [3:0]
      New ports: A={ \sdisplay.s3.pixstream_mid [2] \sdisplay.s3.pixstream_mid [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8800 }, Y={ \sdisplay.s3.pixstream_topr [2] \sdisplay.s3.pixstream_topr [0] }
      New connections: { \sdisplay.s3.pixstream_topr [3] \sdisplay.s3.pixstream_topr [1] } = { \sdisplay.s3.pixstream_topr [0] \sdisplay.s3.pixstream_topr [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s4.$ternary$src/digitdisplay.v:33$503:
      Old ports: A={ \sdisplay.s4.pixstream_mid [3:2] \sdisplay.s4.pixstream_mid [3] \sdisplay.s4.pixstream_mid [3] }, B={ $auto$opt_expr.cc:205:group_cell_inputs$8562 [2] 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8562 [1:0] }, Y=\sdisplay.s4.pixstream_topr [3:0]
      New ports: A={ \sdisplay.s4.pixstream_mid [2] \sdisplay.s4.pixstream_mid [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8798 }, Y={ \sdisplay.s4.pixstream_topr [2] \sdisplay.s4.pixstream_topr [0] }
      New connections: { \sdisplay.s4.pixstream_topr [3] \sdisplay.s4.pixstream_topr [1] } = { \sdisplay.s4.pixstream_topr [0] \sdisplay.s4.pixstream_topr [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s5.$ternary$src/digitdisplay.v:33$503:
      Old ports: A={ \sdisplay.s5.pixstream_mid [3:2] \sdisplay.s5.pixstream_mid [3] \sdisplay.s5.pixstream_mid [3] }, B={ $auto$opt_expr.cc:205:group_cell_inputs$8538 [2] 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8538 [1:0] }, Y=\sdisplay.s5.pixstream_topr [3:0]
      New ports: A={ \sdisplay.s5.pixstream_mid [2] \sdisplay.s5.pixstream_mid [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8796 }, Y={ \sdisplay.s5.pixstream_topr [2] \sdisplay.s5.pixstream_topr [0] }
      New connections: { \sdisplay.s5.pixstream_topr [3] \sdisplay.s5.pixstream_topr [1] } = { \sdisplay.s5.pixstream_topr [0] \sdisplay.s5.pixstream_topr [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s6.$ternary$src/digitdisplay.v:33$503:
      Old ports: A={ \sdisplay.s6.pixstream_mid [3:2] \sdisplay.s6.pixstream_mid [3] \sdisplay.s6.pixstream_mid [3] }, B={ $auto$opt_expr.cc:205:group_cell_inputs$8514 [2] 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8514 [1:0] }, Y=\sdisplay.s6.pixstream_topr [3:0]
      New ports: A={ \sdisplay.s6.pixstream_mid [2] \sdisplay.s6.pixstream_mid [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8794 }, Y={ \sdisplay.s6.pixstream_topr [2] \sdisplay.s6.pixstream_topr [0] }
      New connections: { \sdisplay.s6.pixstream_topr [3] \sdisplay.s6.pixstream_topr [1] } = { \sdisplay.s6.pixstream_topr [0] \sdisplay.s6.pixstream_topr [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s7.$ternary$src/digitdisplay.v:33$503:
      Old ports: A={ \sdisplay.s7.pixstream_mid [3:2] \sdisplay.s7.pixstream_mid [3] \sdisplay.s7.pixstream_mid [3] }, B={ $auto$opt_expr.cc:205:group_cell_inputs$8490 [2] 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8490 [1:0] }, Y=\sdisplay.s7.pixstream_topr [3:0]
      New ports: A={ \sdisplay.s7.pixstream_mid [2] \sdisplay.s7.pixstream_mid [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8792 }, Y={ \sdisplay.s7.pixstream_topr [2] \sdisplay.s7.pixstream_topr [0] }
      New connections: { \sdisplay.s7.pixstream_topr [3] \sdisplay.s7.pixstream_topr [1] } = { \sdisplay.s7.pixstream_topr [0] \sdisplay.s7.pixstream_topr [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s8.$ternary$src/digitdisplay.v:33$503:
      Old ports: A={ \sdisplay.s8.pixstream_mid [3:2] \sdisplay.s8.pixstream_mid [3] \sdisplay.s8.pixstream_mid [3] }, B={ $auto$opt_expr.cc:205:group_cell_inputs$8466 [2] 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8466 [1:0] }, Y=\sdisplay.s8.pixstream_topr [3:0]
      New ports: A={ \sdisplay.s8.pixstream_mid [2] \sdisplay.s8.pixstream_mid [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8790 }, Y={ \sdisplay.s8.pixstream_topr [2] \sdisplay.s8.pixstream_topr [0] }
      New connections: { \sdisplay.s8.pixstream_topr [3] \sdisplay.s8.pixstream_topr [1] } = { \sdisplay.s8.pixstream_topr [0] \sdisplay.s8.pixstream_topr [0] }
  Optimizing cells in module \top.
Performed a total of 8 changes.

26.29.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

26.29.27. Executing OPT_DFF pass (perform DFF optimizations).

26.29.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 9 unused wires.
<suppressed ~1 debug messages>

26.29.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~32 debug messages>

26.29.30. Rerunning OPT passes. (Maybe there is more to do..)

26.29.31. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~745 debug messages>

26.29.32. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s1.$ternary$src/digitdisplay.v:38$524:
      Old ports: A={ \sdisplay.s1.pixstream_topr [3:2] \sdisplay.s1.pixstream_topr [3] \sdisplay.s1.pixstream_topr [3] }, B={ $auto$opt_expr.cc:205:group_cell_inputs$8638 [2] 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8638 [1:0] }, Y=\sdisplay.s1.pixstream_topl [3:0]
      New ports: A={ \sdisplay.s1.pixstream_topr [2] \sdisplay.s1.pixstream_topr [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8820 }, Y={ \sdisplay.s1.pixstream_topl [2] \sdisplay.s1.pixstream_topl [0] }
      New connections: { \sdisplay.s1.pixstream_topl [3] \sdisplay.s1.pixstream_topl [1] } = { \sdisplay.s1.pixstream_topl [0] \sdisplay.s1.pixstream_topl [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s2.$ternary$src/digitdisplay.v:38$524:
      Old ports: A={ \sdisplay.s2.pixstream_topr [3:2] \sdisplay.s2.pixstream_topr [3] \sdisplay.s2.pixstream_topr [3] }, B={ $auto$opt_expr.cc:205:group_cell_inputs$8614 [2] 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8614 [1:0] }, Y=\sdisplay.s2.pixstream_topl [3:0]
      New ports: A={ \sdisplay.s2.pixstream_topr [2] \sdisplay.s2.pixstream_topr [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8818 }, Y={ \sdisplay.s2.pixstream_topl [2] \sdisplay.s2.pixstream_topl [0] }
      New connections: { \sdisplay.s2.pixstream_topl [3] \sdisplay.s2.pixstream_topl [1] } = { \sdisplay.s2.pixstream_topl [0] \sdisplay.s2.pixstream_topl [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s3.$ternary$src/digitdisplay.v:38$524:
      Old ports: A={ \sdisplay.s3.pixstream_topr [3:2] \sdisplay.s3.pixstream_topr [3] \sdisplay.s3.pixstream_topr [3] }, B={ $auto$opt_expr.cc:205:group_cell_inputs$8590 [2] 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8590 [1:0] }, Y=\sdisplay.s3.pixstream_topl [3:0]
      New ports: A={ \sdisplay.s3.pixstream_topr [2] \sdisplay.s3.pixstream_topr [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8816 }, Y={ \sdisplay.s3.pixstream_topl [2] \sdisplay.s3.pixstream_topl [0] }
      New connections: { \sdisplay.s3.pixstream_topl [3] \sdisplay.s3.pixstream_topl [1] } = { \sdisplay.s3.pixstream_topl [0] \sdisplay.s3.pixstream_topl [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s4.$ternary$src/digitdisplay.v:38$524:
      Old ports: A={ \sdisplay.s4.pixstream_topr [3:2] \sdisplay.s4.pixstream_topr [3] \sdisplay.s4.pixstream_topr [3] }, B={ $auto$opt_expr.cc:205:group_cell_inputs$8566 [2] 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8566 [1:0] }, Y=\sdisplay.s4.pixstream_topl [3:0]
      New ports: A={ \sdisplay.s4.pixstream_topr [2] \sdisplay.s4.pixstream_topr [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8814 }, Y={ \sdisplay.s4.pixstream_topl [2] \sdisplay.s4.pixstream_topl [0] }
      New connections: { \sdisplay.s4.pixstream_topl [3] \sdisplay.s4.pixstream_topl [1] } = { \sdisplay.s4.pixstream_topl [0] \sdisplay.s4.pixstream_topl [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s5.$ternary$src/digitdisplay.v:38$524:
      Old ports: A={ \sdisplay.s5.pixstream_topr [3:2] \sdisplay.s5.pixstream_topr [3] \sdisplay.s5.pixstream_topr [3] }, B={ $auto$opt_expr.cc:205:group_cell_inputs$8542 [2] 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8542 [1:0] }, Y=\sdisplay.s5.pixstream_topl [3:0]
      New ports: A={ \sdisplay.s5.pixstream_topr [2] \sdisplay.s5.pixstream_topr [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8812 }, Y={ \sdisplay.s5.pixstream_topl [2] \sdisplay.s5.pixstream_topl [0] }
      New connections: { \sdisplay.s5.pixstream_topl [3] \sdisplay.s5.pixstream_topl [1] } = { \sdisplay.s5.pixstream_topl [0] \sdisplay.s5.pixstream_topl [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s6.$ternary$src/digitdisplay.v:38$524:
      Old ports: A={ \sdisplay.s6.pixstream_topr [3:2] \sdisplay.s6.pixstream_topr [3] \sdisplay.s6.pixstream_topr [3] }, B={ $auto$opt_expr.cc:205:group_cell_inputs$8518 [2] 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8518 [1:0] }, Y=\sdisplay.s6.pixstream_topl [3:0]
      New ports: A={ \sdisplay.s6.pixstream_topr [2] \sdisplay.s6.pixstream_topr [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8810 }, Y={ \sdisplay.s6.pixstream_topl [2] \sdisplay.s6.pixstream_topl [0] }
      New connections: { \sdisplay.s6.pixstream_topl [3] \sdisplay.s6.pixstream_topl [1] } = { \sdisplay.s6.pixstream_topl [0] \sdisplay.s6.pixstream_topl [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s7.$ternary$src/digitdisplay.v:38$524:
      Old ports: A={ \sdisplay.s7.pixstream_topr [3:2] \sdisplay.s7.pixstream_topr [3] \sdisplay.s7.pixstream_topr [3] }, B={ $auto$opt_expr.cc:205:group_cell_inputs$8494 [2] 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8494 [1:0] }, Y=\sdisplay.s7.pixstream_topl [3:0]
      New ports: A={ \sdisplay.s7.pixstream_topr [2] \sdisplay.s7.pixstream_topr [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8808 }, Y={ \sdisplay.s7.pixstream_topl [2] \sdisplay.s7.pixstream_topl [0] }
      New connections: { \sdisplay.s7.pixstream_topl [3] \sdisplay.s7.pixstream_topl [1] } = { \sdisplay.s7.pixstream_topl [0] \sdisplay.s7.pixstream_topl [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s8.$ternary$src/digitdisplay.v:38$524:
      Old ports: A={ \sdisplay.s8.pixstream_topr [3:2] \sdisplay.s8.pixstream_topr [3] \sdisplay.s8.pixstream_topr [3] }, B={ $auto$opt_expr.cc:205:group_cell_inputs$8470 [2] 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8470 [1:0] }, Y=\sdisplay.s8.pixstream_topl [3:0]
      New ports: A={ \sdisplay.s8.pixstream_topr [2] \sdisplay.s8.pixstream_topr [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8806 }, Y={ \sdisplay.s8.pixstream_topl [2] \sdisplay.s8.pixstream_topl [0] }
      New connections: { \sdisplay.s8.pixstream_topl [3] \sdisplay.s8.pixstream_topl [1] } = { \sdisplay.s8.pixstream_topl [0] \sdisplay.s8.pixstream_topl [0] }
  Optimizing cells in module \top.
Performed a total of 8 changes.

26.29.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

26.29.34. Executing OPT_DFF pass (perform DFF optimizations).

26.29.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 8 unused wires.
<suppressed ~1 debug messages>

26.29.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~32 debug messages>

26.29.37. Rerunning OPT passes. (Maybe there is more to do..)

26.29.38. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~745 debug messages>

26.29.39. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s1.$ternary$src/digitdisplay.v:43$541:
      Old ports: A={ \sdisplay.s1.pixstream_topl [3:2] \sdisplay.s1.pixstream_topl [3] \sdisplay.s1.pixstream_topl [3] }, B={ $auto$opt_expr.cc:205:group_cell_inputs$8642 [2] 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8642 [1:0] }, Y=\sdisplay.s1.pixstream_botl [3:0]
      New ports: A={ \sdisplay.s1.pixstream_topl [2] \sdisplay.s1.pixstream_topl [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8836 }, Y={ \sdisplay.s1.pixstream_botl [2] \sdisplay.s1.pixstream_botl [0] }
      New connections: { \sdisplay.s1.pixstream_botl [3] \sdisplay.s1.pixstream_botl [1] } = { \sdisplay.s1.pixstream_botl [0] \sdisplay.s1.pixstream_botl [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s2.$ternary$src/digitdisplay.v:43$541:
      Old ports: A={ \sdisplay.s2.pixstream_topl [3:2] \sdisplay.s2.pixstream_topl [3] \sdisplay.s2.pixstream_topl [3] }, B={ $auto$opt_expr.cc:205:group_cell_inputs$8618 [2] 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8618 [1:0] }, Y=\sdisplay.s2.pixstream_botl [3:0]
      New ports: A={ \sdisplay.s2.pixstream_topl [2] \sdisplay.s2.pixstream_topl [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8834 }, Y={ \sdisplay.s2.pixstream_botl [2] \sdisplay.s2.pixstream_botl [0] }
      New connections: { \sdisplay.s2.pixstream_botl [3] \sdisplay.s2.pixstream_botl [1] } = { \sdisplay.s2.pixstream_botl [0] \sdisplay.s2.pixstream_botl [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s3.$ternary$src/digitdisplay.v:43$541:
      Old ports: A={ \sdisplay.s3.pixstream_topl [3:2] \sdisplay.s3.pixstream_topl [3] \sdisplay.s3.pixstream_topl [3] }, B={ $auto$opt_expr.cc:205:group_cell_inputs$8594 [2] 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8594 [1:0] }, Y=\sdisplay.s3.pixstream_botl [3:0]
      New ports: A={ \sdisplay.s3.pixstream_topl [2] \sdisplay.s3.pixstream_topl [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8832 }, Y={ \sdisplay.s3.pixstream_botl [2] \sdisplay.s3.pixstream_botl [0] }
      New connections: { \sdisplay.s3.pixstream_botl [3] \sdisplay.s3.pixstream_botl [1] } = { \sdisplay.s3.pixstream_botl [0] \sdisplay.s3.pixstream_botl [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s4.$ternary$src/digitdisplay.v:43$541:
      Old ports: A={ \sdisplay.s4.pixstream_topl [3:2] \sdisplay.s4.pixstream_topl [3] \sdisplay.s4.pixstream_topl [3] }, B={ $auto$opt_expr.cc:205:group_cell_inputs$8570 [2] 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8570 [1:0] }, Y=\sdisplay.s4.pixstream_botl [3:0]
      New ports: A={ \sdisplay.s4.pixstream_topl [2] \sdisplay.s4.pixstream_topl [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8830 }, Y={ \sdisplay.s4.pixstream_botl [2] \sdisplay.s4.pixstream_botl [0] }
      New connections: { \sdisplay.s4.pixstream_botl [3] \sdisplay.s4.pixstream_botl [1] } = { \sdisplay.s4.pixstream_botl [0] \sdisplay.s4.pixstream_botl [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s5.$ternary$src/digitdisplay.v:43$541:
      Old ports: A={ \sdisplay.s5.pixstream_topl [3:2] \sdisplay.s5.pixstream_topl [3] \sdisplay.s5.pixstream_topl [3] }, B={ $auto$opt_expr.cc:205:group_cell_inputs$8546 [2] 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8546 [1:0] }, Y=\sdisplay.s5.pixstream_botl [3:0]
      New ports: A={ \sdisplay.s5.pixstream_topl [2] \sdisplay.s5.pixstream_topl [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8828 }, Y={ \sdisplay.s5.pixstream_botl [2] \sdisplay.s5.pixstream_botl [0] }
      New connections: { \sdisplay.s5.pixstream_botl [3] \sdisplay.s5.pixstream_botl [1] } = { \sdisplay.s5.pixstream_botl [0] \sdisplay.s5.pixstream_botl [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s6.$ternary$src/digitdisplay.v:43$541:
      Old ports: A={ \sdisplay.s6.pixstream_topl [3:2] \sdisplay.s6.pixstream_topl [3] \sdisplay.s6.pixstream_topl [3] }, B={ $auto$opt_expr.cc:205:group_cell_inputs$8522 [2] 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8522 [1:0] }, Y=\sdisplay.s6.pixstream_botl [3:0]
      New ports: A={ \sdisplay.s6.pixstream_topl [2] \sdisplay.s6.pixstream_topl [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8826 }, Y={ \sdisplay.s6.pixstream_botl [2] \sdisplay.s6.pixstream_botl [0] }
      New connections: { \sdisplay.s6.pixstream_botl [3] \sdisplay.s6.pixstream_botl [1] } = { \sdisplay.s6.pixstream_botl [0] \sdisplay.s6.pixstream_botl [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s7.$ternary$src/digitdisplay.v:43$541:
      Old ports: A={ \sdisplay.s7.pixstream_topl [3:2] \sdisplay.s7.pixstream_topl [3] \sdisplay.s7.pixstream_topl [3] }, B={ $auto$opt_expr.cc:205:group_cell_inputs$8498 [2] 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8498 [1:0] }, Y=\sdisplay.s7.pixstream_botl [3:0]
      New ports: A={ \sdisplay.s7.pixstream_topl [2] \sdisplay.s7.pixstream_topl [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8824 }, Y={ \sdisplay.s7.pixstream_botl [2] \sdisplay.s7.pixstream_botl [0] }
      New connections: { \sdisplay.s7.pixstream_botl [3] \sdisplay.s7.pixstream_botl [1] } = { \sdisplay.s7.pixstream_botl [0] \sdisplay.s7.pixstream_botl [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s8.$ternary$src/digitdisplay.v:43$541:
      Old ports: A={ \sdisplay.s8.pixstream_topl [3:2] \sdisplay.s8.pixstream_topl [3] \sdisplay.s8.pixstream_topl [3] }, B={ $auto$opt_expr.cc:205:group_cell_inputs$8474 [2] 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8474 [1:0] }, Y=\sdisplay.s8.pixstream_botl [3:0]
      New ports: A={ \sdisplay.s8.pixstream_topl [2] \sdisplay.s8.pixstream_topl [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8822 }, Y={ \sdisplay.s8.pixstream_botl [2] \sdisplay.s8.pixstream_botl [0] }
      New connections: { \sdisplay.s8.pixstream_botl [3] \sdisplay.s8.pixstream_botl [1] } = { \sdisplay.s8.pixstream_botl [0] \sdisplay.s8.pixstream_botl [0] }
  Optimizing cells in module \top.
Performed a total of 8 changes.

26.29.40. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

26.29.41. Executing OPT_DFF pass (perform DFF optimizations).

26.29.42. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 8 unused wires.
<suppressed ~1 debug messages>

26.29.43. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~32 debug messages>

26.29.44. Rerunning OPT passes. (Maybe there is more to do..)

26.29.45. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~745 debug messages>

26.29.46. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s1.$ternary$src/digitdisplay.v:47$568:
      Old ports: A={ \sdisplay.s1.pixstream_botl [3:2] \sdisplay.s1.pixstream_botl [3] \sdisplay.s1.pixstream_botl [3] }, B={ $auto$opt_expr.cc:205:group_cell_inputs$8646 [2] 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8646 [1:0] }, Y=\sdisplay.__pixstream1 [3:0]
      New ports: A={ \sdisplay.s1.pixstream_botl [2] \sdisplay.s1.pixstream_botl [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8852 }, Y={ \sdisplay.__pixstream1 [2] \sdisplay.__pixstream1 [0] }
      New connections: { \sdisplay.__pixstream1 [3] \sdisplay.__pixstream1 [1] } = { \sdisplay.__pixstream1 [0] \sdisplay.__pixstream1 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s2.$ternary$src/digitdisplay.v:47$568:
      Old ports: A={ \sdisplay.s2.pixstream_botl [3:2] \sdisplay.s2.pixstream_botl [3] \sdisplay.s2.pixstream_botl [3] }, B={ $auto$opt_expr.cc:205:group_cell_inputs$8622 [2] 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8622 [1:0] }, Y=\sdisplay.__pixstream2 [3:0]
      New ports: A={ \sdisplay.s2.pixstream_botl [2] \sdisplay.s2.pixstream_botl [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8850 }, Y={ \sdisplay.__pixstream2 [2] \sdisplay.__pixstream2 [0] }
      New connections: { \sdisplay.__pixstream2 [3] \sdisplay.__pixstream2 [1] } = { \sdisplay.__pixstream2 [0] \sdisplay.__pixstream2 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s3.$ternary$src/digitdisplay.v:47$568:
      Old ports: A={ \sdisplay.s3.pixstream_botl [3:2] \sdisplay.s3.pixstream_botl [3] \sdisplay.s3.pixstream_botl [3] }, B={ $auto$opt_expr.cc:205:group_cell_inputs$8598 [2] 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8598 [1:0] }, Y=\sdisplay.__pixstream3 [3:0]
      New ports: A={ \sdisplay.s3.pixstream_botl [2] \sdisplay.s3.pixstream_botl [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8848 }, Y={ \sdisplay.__pixstream3 [2] \sdisplay.__pixstream3 [0] }
      New connections: { \sdisplay.__pixstream3 [3] \sdisplay.__pixstream3 [1] } = { \sdisplay.__pixstream3 [0] \sdisplay.__pixstream3 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s4.$ternary$src/digitdisplay.v:47$568:
      Old ports: A={ \sdisplay.s4.pixstream_botl [3:2] \sdisplay.s4.pixstream_botl [3] \sdisplay.s4.pixstream_botl [3] }, B={ $auto$opt_expr.cc:205:group_cell_inputs$8574 [2] 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8574 [1:0] }, Y=\sdisplay.__pixstream4 [3:0]
      New ports: A={ \sdisplay.s4.pixstream_botl [2] \sdisplay.s4.pixstream_botl [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8846 }, Y={ \sdisplay.__pixstream4 [2] \sdisplay.__pixstream4 [0] }
      New connections: { \sdisplay.__pixstream4 [3] \sdisplay.__pixstream4 [1] } = { \sdisplay.__pixstream4 [0] \sdisplay.__pixstream4 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s5.$ternary$src/digitdisplay.v:47$568:
      Old ports: A={ \sdisplay.s5.pixstream_botl [3:2] \sdisplay.s5.pixstream_botl [3] \sdisplay.s5.pixstream_botl [3] }, B={ $auto$opt_expr.cc:205:group_cell_inputs$8550 [2] 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8550 [1:0] }, Y=\sdisplay.__pixstream5 [3:0]
      New ports: A={ \sdisplay.s5.pixstream_botl [2] \sdisplay.s5.pixstream_botl [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8844 }, Y={ \sdisplay.__pixstream5 [2] \sdisplay.__pixstream5 [0] }
      New connections: { \sdisplay.__pixstream5 [3] \sdisplay.__pixstream5 [1] } = { \sdisplay.__pixstream5 [0] \sdisplay.__pixstream5 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s6.$ternary$src/digitdisplay.v:47$568:
      Old ports: A={ \sdisplay.s6.pixstream_botl [3:2] \sdisplay.s6.pixstream_botl [3] \sdisplay.s6.pixstream_botl [3] }, B={ $auto$opt_expr.cc:205:group_cell_inputs$8526 [2] 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8526 [1:0] }, Y=\sdisplay.__pixstream6 [3:0]
      New ports: A={ \sdisplay.s6.pixstream_botl [2] \sdisplay.s6.pixstream_botl [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8842 }, Y={ \sdisplay.__pixstream6 [2] \sdisplay.__pixstream6 [0] }
      New connections: { \sdisplay.__pixstream6 [3] \sdisplay.__pixstream6 [1] } = { \sdisplay.__pixstream6 [0] \sdisplay.__pixstream6 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s7.$ternary$src/digitdisplay.v:47$568:
      Old ports: A={ \sdisplay.s7.pixstream_botl [3:2] \sdisplay.s7.pixstream_botl [3] \sdisplay.s7.pixstream_botl [3] }, B={ $auto$opt_expr.cc:205:group_cell_inputs$8502 [2] 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8502 [1:0] }, Y=\sdisplay.__pixstream7 [3:0]
      New ports: A={ \sdisplay.s7.pixstream_botl [2] \sdisplay.s7.pixstream_botl [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8840 }, Y={ \sdisplay.__pixstream7 [2] \sdisplay.__pixstream7 [0] }
      New connections: { \sdisplay.__pixstream7 [3] \sdisplay.__pixstream7 [1] } = { \sdisplay.__pixstream7 [0] \sdisplay.__pixstream7 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s8.$ternary$src/digitdisplay.v:47$568:
      Old ports: A={ \sdisplay.s8.pixstream_botl [3:2] \sdisplay.s8.pixstream_botl [3] \sdisplay.s8.pixstream_botl [3] }, B={ $auto$opt_expr.cc:205:group_cell_inputs$8478 [2] 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8478 [1:0] }, Y=\sdisplay.__pixstream8 [3:0]
      New ports: A={ \sdisplay.s8.pixstream_botl [2] \sdisplay.s8.pixstream_botl [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8838 }, Y={ \sdisplay.__pixstream8 [2] \sdisplay.__pixstream8 [0] }
      New connections: { \sdisplay.__pixstream8 [3] \sdisplay.__pixstream8 [1] } = { \sdisplay.__pixstream8 [0] \sdisplay.__pixstream8 [0] }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\sdisplay.$ternary$src/scoredisplay.v:96$598:
      Old ports: A=4'0000, B=\sdisplay.__pixstream1 [3:0], Y=\sdisplay.pixstream1 [3:0]
      New ports: A=2'00, B={ \sdisplay.__pixstream1 [2] \sdisplay.__pixstream1 [0] }, Y={ \sdisplay.pixstream1 [2] \sdisplay.pixstream1 [0] }
      New connections: { \sdisplay.pixstream1 [3] \sdisplay.pixstream1 [1] } = { \sdisplay.pixstream1 [0] \sdisplay.pixstream1 [0] }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\sdisplay.$ternary$src/scoredisplay.v:104$610:
      Old ports: A=\sdisplay.pixstream1 [3:0], B={ \sdisplay.__pixstream2 [0] \sdisplay.__pixstream2 [2] \sdisplay.__pixstream2 [0] \sdisplay.__pixstream2 [0] }, Y=\sdisplay.pixstream2 [3:0]
      New ports: A={ \sdisplay.pixstream1 [2] \sdisplay.pixstream1 [0] }, B={ \sdisplay.__pixstream2 [2] \sdisplay.__pixstream2 [0] }, Y={ \sdisplay.pixstream2 [2] \sdisplay.pixstream2 [0] }
      New connections: { \sdisplay.pixstream2 [3] \sdisplay.pixstream2 [1] } = { \sdisplay.pixstream2 [0] \sdisplay.pixstream2 [0] }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\sdisplay.$ternary$src/scoredisplay.v:112$626:
      Old ports: A=\sdisplay.pixstream2 [3:0], B={ \sdisplay.__pixstream3 [0] \sdisplay.__pixstream3 [2] \sdisplay.__pixstream3 [0] \sdisplay.__pixstream3 [0] }, Y=\sdisplay.pixstream3 [3:0]
      New ports: A={ \sdisplay.pixstream2 [2] \sdisplay.pixstream2 [0] }, B={ \sdisplay.__pixstream3 [2] \sdisplay.__pixstream3 [0] }, Y={ \sdisplay.pixstream3 [2] \sdisplay.pixstream3 [0] }
      New connections: { \sdisplay.pixstream3 [3] \sdisplay.pixstream3 [1] } = { \sdisplay.pixstream3 [0] \sdisplay.pixstream3 [0] }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\sdisplay.$ternary$src/scoredisplay.v:119$638:
      Old ports: A=\sdisplay.pixstream3 [3:0], B={ \sdisplay.__pixstream4 [0] \sdisplay.__pixstream4 [2] \sdisplay.__pixstream4 [0] \sdisplay.__pixstream4 [0] }, Y=\sdisplay.pixstream4 [3:0]
      New ports: A={ \sdisplay.pixstream3 [2] \sdisplay.pixstream3 [0] }, B={ \sdisplay.__pixstream4 [2] \sdisplay.__pixstream4 [0] }, Y={ \sdisplay.pixstream4 [2] \sdisplay.pixstream4 [0] }
      New connections: { \sdisplay.pixstream4 [3] \sdisplay.pixstream4 [1] } = { \sdisplay.pixstream4 [0] \sdisplay.pixstream4 [0] }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\sdisplay.$ternary$src/scoredisplay.v:126$650:
      Old ports: A=\sdisplay.pixstream4 [3:0], B={ \sdisplay.__pixstream5 [0] \sdisplay.__pixstream5 [2] \sdisplay.__pixstream5 [0] \sdisplay.__pixstream5 [0] }, Y=\sdisplay.pixstream5 [3:0]
      New ports: A={ \sdisplay.pixstream4 [2] \sdisplay.pixstream4 [0] }, B={ \sdisplay.__pixstream5 [2] \sdisplay.__pixstream5 [0] }, Y={ \sdisplay.pixstream5 [2] \sdisplay.pixstream5 [0] }
      New connections: { \sdisplay.pixstream5 [3] \sdisplay.pixstream5 [1] } = { \sdisplay.pixstream5 [0] \sdisplay.pixstream5 [0] }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\sdisplay.$ternary$src/scoredisplay.v:133$662:
      Old ports: A=\sdisplay.pixstream5 [3:0], B={ \sdisplay.__pixstream6 [0] \sdisplay.__pixstream6 [2] \sdisplay.__pixstream6 [0] \sdisplay.__pixstream6 [0] }, Y=\sdisplay.pixstream6 [3:0]
      New ports: A={ \sdisplay.pixstream5 [2] \sdisplay.pixstream5 [0] }, B={ \sdisplay.__pixstream6 [2] \sdisplay.__pixstream6 [0] }, Y={ \sdisplay.pixstream6 [2] \sdisplay.pixstream6 [0] }
      New connections: { \sdisplay.pixstream6 [3] \sdisplay.pixstream6 [1] } = { \sdisplay.pixstream6 [0] \sdisplay.pixstream6 [0] }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\sdisplay.$ternary$src/scoredisplay.v:140$674:
      Old ports: A=\sdisplay.pixstream6 [3:0], B={ \sdisplay.__pixstream7 [0] \sdisplay.__pixstream7 [2] \sdisplay.__pixstream7 [0] \sdisplay.__pixstream7 [0] }, Y=\sdisplay.pixstream7 [3:0]
      New ports: A={ \sdisplay.pixstream6 [2] \sdisplay.pixstream6 [0] }, B={ \sdisplay.__pixstream7 [2] \sdisplay.__pixstream7 [0] }, Y={ \sdisplay.pixstream7 [2] \sdisplay.pixstream7 [0] }
      New connections: { \sdisplay.pixstream7 [3] \sdisplay.pixstream7 [1] } = { \sdisplay.pixstream7 [0] \sdisplay.pixstream7 [0] }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\sdisplay.$ternary$src/scoredisplay.v:148$693:
      Old ports: A=5'11111, B={ 1'0 \sdisplay.pixstream7 [3:0] }, Y={ $flatten\sdisplay.$ternary$src/scoredisplay.v:148$693_Y [11] $flatten\sdisplay.$ternary$src/scoredisplay.v:148$693_Y [3:0] }
      New ports: A=3'111, B={ 1'0 \sdisplay.pixstream7 [2] \sdisplay.pixstream7 [0] }, Y={ $flatten\sdisplay.$ternary$src/scoredisplay.v:148$693_Y [11] $flatten\sdisplay.$ternary$src/scoredisplay.v:148$693_Y [2] $flatten\sdisplay.$ternary$src/scoredisplay.v:148$693_Y [0] }
      New connections: { $flatten\sdisplay.$ternary$src/scoredisplay.v:148$693_Y [3] $flatten\sdisplay.$ternary$src/scoredisplay.v:148$693_Y [1] } = { $flatten\sdisplay.$ternary$src/scoredisplay.v:148$693_Y [0] $flatten\sdisplay.$ternary$src/scoredisplay.v:148$693_Y [0] }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\sdisplay.$ternary$src/scoredisplay.v:148$694:
      Old ports: A={ $flatten\sdisplay.$ternary$src/scoredisplay.v:148$693_Y [11] $flatten\sdisplay.$ternary$src/scoredisplay.v:148$693_Y [3:0] }, B={ 1'0 \sdisplay.__pixstream8 [0] \sdisplay.__pixstream8 [2] \sdisplay.__pixstream8 [0] \sdisplay.__pixstream8 [0] }, Y=\score_screen [4:0]
      New ports: A={ $flatten\sdisplay.$ternary$src/scoredisplay.v:148$693_Y [11] $flatten\sdisplay.$ternary$src/scoredisplay.v:148$693_Y [2] $flatten\sdisplay.$ternary$src/scoredisplay.v:148$693_Y [0] }, B={ 1'0 \sdisplay.__pixstream8 [2] \sdisplay.__pixstream8 [0] }, Y={ \score_screen [4] \score_screen [2] \score_screen [0] }
      New connections: { \score_screen [3] \score_screen [1] } = { \score_screen [0] \score_screen [0] }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $ternary$src/top.v:131$1142:
      Old ports: A=6'010011, B={ \score_screen [4] \score_screen [4:0] }, Y={ $ternary$src/top.v:131$1142_Y [11] $ternary$src/top.v:131$1142_Y [9] $ternary$src/top.v:131$1142_Y [3:0] }
      New ports: A=5'01001, B={ \score_screen [4] \score_screen [4] \score_screen [0] \score_screen [2] \score_screen [0] }, Y={ $ternary$src/top.v:131$1142_Y [11] $ternary$src/top.v:131$1142_Y [9] $ternary$src/top.v:131$1142_Y [3:2] $ternary$src/top.v:131$1142_Y [0] }
      New connections: $ternary$src/top.v:131$1142_Y [1] = $ternary$src/top.v:131$1142_Y [0]
  Optimizing cells in module \top.
Performed a total of 18 changes.

26.29.47. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

26.29.48. Executing OPT_DFF pass (perform DFF optimizations).

26.29.49. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 8 unused wires.
<suppressed ~1 debug messages>

26.29.50. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

26.29.51. Rerunning OPT passes. (Maybe there is more to do..)

26.29.52. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~745 debug messages>

26.29.53. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

26.29.54. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

26.29.55. Executing OPT_DFF pass (perform DFF optimizations).

26.29.56. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

26.29.57. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

26.29.58. Finished OPT passes. (There is nothing left to do.)

26.30. Executing ICE40_WRAPCARRY pass (wrap carries).

26.31. Executing TECHMAP pass (map to technology primitives).

26.31.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

26.31.2. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/arith_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

26.31.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $sdff.
Using template $paramod$32a7b7b86c07519b7537abc18e96f0331f97914d\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $not.
Using template $paramod$32efbfac1c4dc57230cf86180788fdfd12e3b511\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $sdffce.
Using extmapper simplemap for cells of type $sdffe.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod$672a140277c71df8314410f22acc08d55222c3c7\_80_ice40_alu for cells of type $alu.
Using template $paramod$constmap:59d930a2422782b39b85cd49134a384b3d87fce0$paramod$524f4122ef6340492631f8c3d6d495706ea733a6\_90_shift_shiftx for cells of type $shiftx.
Using template $paramod$b18e16801adf491a64caa0542270798e5d4ac6b6\_80_ice40_alu for cells of type $alu.
Using template $paramod$740b056ede97228d3eae64ea2fdc81f0a33e0fe7\_80_ice40_alu for cells of type $alu.
Using template $paramod$adbaf76fa5a3091a329503792521395f8ff4d1a4\_90_alu for cells of type $alu.
Using template $paramod$83dd457849c736323edf2edb15923eb27f99c683\_80_ice40_alu for cells of type $alu.
Using template $paramod$1a3a0c35c4a4896fbfd612699525c057298e72d2\_80_ice40_alu for cells of type $alu.
Using template $paramod$79fc7abbb3333dbd5736999d565fd903198fb1eb\_80_ice40_alu for cells of type $alu.
Using template $paramod$d1615bf4e5e328245ffd1550e5fe105901cda77b\_90_alu for cells of type $alu.
Using template $paramod$03eba0cdd46566f6651a3011e0b5671fa6b5e494\_80_ice40_alu for cells of type $alu.
Using template $paramod$f85408ed1aa3d09e465edae8a7bf590332ae9f7b\_80_ice40_alu for cells of type $alu.
Using template $paramod$7af24cf7f572852703f08ef7a936c59efa2c57af\_80_ice40_alu for cells of type $alu.
Using template $paramod$3ac6e4268d0279df14823f25676acf685165517e\_80_ice40_alu for cells of type $alu.
Using template $paramod$6b90a16b6f3b57b9c9d958838204f952a01dc262\_80_ice40_alu for cells of type $alu.
Using template $paramod$18205a5da979f93ffab44671dcc4a48cf14e25e2\_80_ice40_alu for cells of type $alu.
Using template $paramod$35bc5090930aec50e94a946d160c28c8e186e2e9\_80_ice40_alu for cells of type $alu.
Using template $paramod$8742280fdebca84e1c87f2a86ed84f62d558f4cc\_80_ice40_alu for cells of type $alu.
Using template $paramod$332fab4e157f868977379756d21fa99887c3c6c4\_80_ice40_alu for cells of type $alu.
Using template $paramod$d9d6055bedde760961c6356c4015e2f0000ae9c2\_80_ice40_alu for cells of type $alu.
Using template $paramod$b52bd7d9c9f7528eea96dbf9fa48ed18ac637bc8\_80_ice40_alu for cells of type $alu.
Using template $paramod$420fbc8134b4c458452de534da94701c18f4eecd\_80_ice40_alu for cells of type $alu.
Using template $paramod$00298f3f8094950cb9a5ff2fda48d0d8bde8806c\_80_ice40_alu for cells of type $alu.
Using template $paramod$76faf6aa397909704a3ca45dba523dfa58393e7e\_80_ice40_alu for cells of type $alu.
Using template $paramod$a40b3a69ab2154dca9743e30e1e84efb03b892b4\_80_ice40_alu for cells of type $alu.
Using template $paramod$df9553132937e7736c5a38f2f1f29abeed1637af\_80_ice40_alu for cells of type $alu.
Using template $paramod$fc972a7a46956c1788f3cb5257b53c8f1df2d0cc\_90_alu for cells of type $alu.
Using template $paramod$e04283ca12514baf3d204c6994bec8f178dd89f8\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $logic_and.
Using template $paramod$49641a5ace7a8dbedd31c417f5a1b54fcecf6c7d\_80_ice40_alu for cells of type $alu.
Using template $paramod$d2fa05d38998afabc6d4f34471305d0af4b8b2df\_80_ice40_alu for cells of type $alu.
Using template $paramod$3ef7d3dd227da7627a99c5e5a6a4deb817573e39\_80_ice40_alu for cells of type $alu.
Using template $paramod$dc04b7d98e503a7bab16fce2df70e6e2c5ca34d6\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $xor.
Using template $paramod$a04dd9d4d8b430140c4ff94b50470fb380fda2a0\_80_ice40_alu for cells of type $alu.
Using template $paramod$b9513f2555ba02118b069422fea717af39120cf7\_80_ice40_alu for cells of type $alu.
Using template $paramod$5a51f938fa54bf7015d956f06feadaa94e2be5b1\_80_ice40_alu for cells of type $alu.
Using template $paramod$484d51534650924b7ed4c69e46eed3a56904771f\_80_ice40_alu for cells of type $alu.
Using template $paramod$04f121e3c8858ac36578330193fd248b9a31e99c\_80_ice40_alu for cells of type $alu.
Using template $paramod$78e969f2586efcf3a5b0b0440bcca0db83d5cca2\_80_ice40_alu for cells of type $alu.
Using template $paramod$38e515139f170f15b7cce527e7a56ef53d952a24\_80_ice40_alu for cells of type $alu.
Using template $paramod$38e8498ccdc425801fe5312e427e3cf0d9089c58\_80_ice40_alu for cells of type $alu.
Using template $paramod$7e708ae28ab761f11d0fb59d3ffc72f6a4baf5d9\_90_alu for cells of type $alu.
Using template $paramod$c4905825bb8ecc38b98eb4167e8b007447af7884\_80_ice40_alu for cells of type $alu.
Using template $paramod$e82bc780abe45b949d821aa3d0d92433ac3b9e09\_80_ice40_alu for cells of type $alu.
Using template $paramod$68eb2ee261b49d479fb9d9ec0659e1d20891082b\_80_ice40_alu for cells of type $alu.
Using template $paramod$dad13a281fa6a9ffd6dd427a87dc9a952e80e9ea\_80_ice40_alu for cells of type $alu.
Using template $paramod$5ccf584370207a3ccc3032757a8e590623d4de56\_80_ice40_alu for cells of type $alu.
Using template $paramod$d597a1d02e4b78ac244cbe0a6bc64f098a6f19e7\_80_ice40_alu for cells of type $alu.
Using template $paramod$103b4016182df467cceab67bcf3e18e6361ec0fd\_80_ice40_alu for cells of type $alu.
Using template $paramod$9970e6a829a899c1fae39c88305c3c80d98a6bfd\_80_ice40_alu for cells of type $alu.
Using template $paramod$d0e4c797aa680bb54c964a262954ce9f5bfee2c5\_80_ice40_alu for cells of type $alu.
Using template $paramod$5bb6c3f3e4a5303115f41a182fad517280ea0b25\_80_ice40_alu for cells of type $alu.
Using template $paramod$a1bc51c02ce12ac21eb18988e83292af48ed7d72\_80_ice40_alu for cells of type $alu.
Using template $paramod$74a36ce84d492d3c437595b2f171af2f65358d61\_80_ice40_alu for cells of type $alu.
Using template $paramod$ea139abf5d9f33c5a8f110be2ae0a1d01adc5fd6\_80_ice40_alu for cells of type $alu.
Using template $paramod$9c32b45917accb56be6667e7eba7742d064d7fbb\_80_ice40_alu for cells of type $alu.
Using template $paramod$2d591d76303cd5065d50f216288bb81e81f2927d\_80_ice40_alu for cells of type $alu.
Using template $paramod$78648aff6d035ceca1e51be5292d8e9748cdc2be\_80_ice40_alu for cells of type $alu.
Using template $paramod$dfca81329cbbac01700318224209a5f2318c7128\_80_ice40_alu for cells of type $alu.
Using template $paramod$78464f9f65d57061f7490f3fe5dd257e4a61e2b7\_80_ice40_alu for cells of type $alu.
Using template $paramod$93b49458bab1c00eb32aff458c583f46ff61e60f\_80_ice40_alu for cells of type $alu.
Using template $paramod$c6885379b74fbbf6906b35106e386e521d86cbb2\_80_ice40_alu for cells of type $alu.
Using template $paramod$cc48387a3f2cae79a81035f3d5a9b4758cb77854\_80_ice40_alu for cells of type $alu.
Using template $paramod$aa43f2dbffadf36a7e9a5a6a61a7417f2989191d\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $lut.
Using extmapper maccmap for cells of type $macc.
  add 5'10011 * \tdisplay.state (5x4 bits, unsigned)
Using template $paramod$6e0a31ebf2a4e7bcebad5866b2b441901654250d\_90_pmux for cells of type $pmux.
Using template $paramod$3e96e356bb68fcbd4f9c12f6d97ec8513d1af8c6\_80_ice40_alu for cells of type $alu.
Using template $paramod$d902cfcd8f5bceb817669b134f968d68db216af4\_80_ice40_alu for cells of type $alu.
Using template $paramod$dbcdc7e8aa1a4080cea2deda6fdc8772064f4d90\_80_ice40_alu for cells of type $alu.
Using template $paramod$754650b284649a026620fc6856e5b6886cbfe794\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000001 for cells of type $lcu.
Using template $paramod\_90_fa\WIDTH=32'00000000000000000000000000001001 for cells of type $fa.
No more expansions possible.
<suppressed ~7254 debug messages>

26.32. Executing OPT pass (performing simple optimizations).

26.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~6210 debug messages>

26.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~7365 debug messages>
Removed a total of 2455 cells.

26.32.3. Executing OPT_DFF pass (perform DFF optimizations).

26.32.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 3299 unused cells and 6527 unused wires.
<suppressed ~3300 debug messages>

26.32.5. Finished fast OPT passes.

26.33. Executing ICE40_OPT pass (performing simple optimizations).

26.33.1. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6550.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6550.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6565.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6565.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6576.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6565.BB [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6585.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6585.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6596.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6585.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6607.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6607.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6612.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6607.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6617.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6617.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6628.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6617.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6639.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6607.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6644.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6607.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6649.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6649.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6660.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6649.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6671.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6607.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6676.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6607.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6681.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6681.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6692.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6681.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6703.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6607.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6708.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6607.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6713.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6713.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6724.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6713.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6735.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6607.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6740.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6607.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6745.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6745.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6756.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6745.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6767.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6607.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6772.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6607.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6777.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6777.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6788.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6777.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6799.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6607.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6804.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6607.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6809.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6809.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6820.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6820.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6831.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6820.BB [3]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6842.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6809.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6853.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6820.BB [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6864.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6607.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6869.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6820.BB [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6874.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6820.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6879.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6607.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6884.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6820.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6889.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6607.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6900.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6900.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6911.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6911.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6922.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6922.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6933.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6933.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6944.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6944.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6955.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6955.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6966.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6966.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6977.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6977.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6988.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6639.BB [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6999.slice[0].carry: CO=\core.hreadwire [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7004.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6639.BB [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7015.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6617.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7026.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6639.BB [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7037.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6639.BB [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7048.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6639.BB [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7059.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6565.BB [3]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7070.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6617.BB [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7081.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$7081.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7086.slice[0].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7086.slice[10].carry: CO=$auto$alumacc.cc:485:replace_alu$7086.C [10]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7086.slice[11].carry: CO=$auto$alumacc.cc:485:replace_alu$7086.C [11]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7086.slice[12].carry: CO=$auto$alumacc.cc:485:replace_alu$7086.C [12]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7086.slice[13].carry: CO=$auto$alumacc.cc:485:replace_alu$7086.C [13]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7086.slice[14].carry: CO=$auto$alumacc.cc:485:replace_alu$7086.C [14]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7086.slice[9].carry: CO=$auto$alumacc.cc:485:replace_alu$7086.C [9]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7091.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6607.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7100.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6607.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7109.slice[0].carry: CO=\core.hreadwire [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7122.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6607.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7131.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6607.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7140.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6607.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7149.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6607.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7158.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6607.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7167.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6607.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7176.slice[0].carry: CO=\core.hreadwire [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7189.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6607.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7198.slice[0].carry: CO=\core.hreadwire [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7203.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6565.BB [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7214.slice[0].carry: CO=\core.hreadwire [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7219.slice[0].carry: CO=\core.hreadwire [4]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7232.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6565.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7241.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6565.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7250.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$7250.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7255.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$7255.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7260.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$7255.BB [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7265.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$7255.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7275.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$7255.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7280.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$7255.BB [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7285.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$7255.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7290.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$7250.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7295.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$7255.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7300.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$7255.BB [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7305.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$7255.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7315.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$7255.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7320.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$7255.BB [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7325.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$7255.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7330.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$7250.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7335.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$7255.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7340.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$7255.BB [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7345.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$7255.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7355.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$7355.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7355.slice[3].carry: CO=$auto$alumacc.cc:485:replace_alu$7355.C [3]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7360.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$7360.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7365.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$7365.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7370.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$7370.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7383.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$7370.BB [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7396.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$7370.BB [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7409.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6607.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7420.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6565.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7431.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6565.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7449.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6639.BB [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7454.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6565.BB [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7459.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6565.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7468.slice[0].carry: CO=\game_manager.h.pposition [6]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7473.slice[0].carry: CO=\game_manager.h.pposition [3]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7486.slice[0].carry: CO=\game_manager.h.pposition [4]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7499.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$7444.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7512.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$7444.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7525.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$7444.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7538.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$7444.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7551.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$7444.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7564.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$7444.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7577.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$7444.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7590.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$7444.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7603.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$7444.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7616.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$7444.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7629.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$7444.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7642.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$7444.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7655.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$7444.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7668.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$7444.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7681.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$7444.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7694.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$7444.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7707.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$7444.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7720.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$7444.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7733.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$7444.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7746.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$7444.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7759.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$7444.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7768.slice[0].carry: CO=\core.hreadwire [5]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7773.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6607.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7784.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$7444.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7793.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6607.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7802.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$7802.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7813.slice[0].carry: CO=\core.hscan_pos [4]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7818.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$7802.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7829.slice[0].carry: CO=\core.hscan_pos [7]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7834.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$7802.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7843.slice[0].carry: CO=\core.hscan_pos [4]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7856.slice[0].carry: CO=\core.hscan_pos [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7859.slice[0].carry: CO=\core.vscan_pos [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7862.slice[0].carry: CO=\core.vreadwire [3]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7868.slice[0].carry: CO=\core.hreadwire [3]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7874.slice[0].carry: CO=\memory.resetperiod_state [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7877.slice[0].carry: CO=\memory.resetperiod_state [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7880.slice[0].carry: CO=\memory.resetperiod_state [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7883.slice[0].carry: CO=\memory.cooldown [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7886.slice[0].carry: CO=\memory.streak_cooldown [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7889.slice[0].carry: CO=\memory.P1blk_h [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7889.slice[5].carry: CO=$auto$alumacc.cc:485:replace_alu$7889.C [5]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7892.slice[0].carry: CO=\memory.P2blk_h [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7892.slice[5].carry: CO=$auto$alumacc.cc:485:replace_alu$7892.C [5]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7895.slice[0].carry: CO=\memory.P3blk_h [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7895.slice[5].carry: CO=$auto$alumacc.cc:485:replace_alu$7895.C [5]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7898.slice[0].carry: CO=\memory.P4blk_h [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7898.slice[5].carry: CO=$auto$alumacc.cc:485:replace_alu$7898.C [5]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7901.slice[0].carry: CO=\memory.perq [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7907.slice[0].carry: CO=\sdisplay.values[7] [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7910.slice[0].carry: CO=\sdisplay.values[6] [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7913.slice[0].carry: CO=\sdisplay.values[5] [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7916.slice[0].carry: CO=\sdisplay.values[4] [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7919.slice[0].carry: CO=\sdisplay.values[3] [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7922.slice[0].carry: CO=\sdisplay.values[2] [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7925.slice[0].carry: CO=\sdisplay.values[1] [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7928.slice[0].carry: CO=\sdisplay.values[0] [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7931.slice[0].carry: CO=\core.hreadwire [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7934.slice[0].carry: CO=\core.vreadwire [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7937.slice[0].carry: CO=\core.vreadwire [3]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7940.slice[0].carry: CO=\core.vreadwire [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7943.slice[0].carry: CO=\core.vreadwire [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7946.slice[0].carry: CO=\core.vreadwire [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7952.slice[0].carry: CO=\core.vreadwire [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7955.slice[0].carry: CO=\sdisplay.dumpvar [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7958.slice[0].carry: CO=\core.vreadwire [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7961.slice[0].carry: CO=\t.counter [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7964.slice[0].carry: CO=\tdisplay.state [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7967.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6607.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7978.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6607.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7981.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$7981.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7987.slice[0].carry: CO=\vcell.tetron_h [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7990.slice[0].carry: CO=\vcell.tetron_v [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7993.slice[0].carry: CO=\vcell.tetron_rotation [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$8005.slice[0].carry: CO=\vcell.tetron_v [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$8020.slice[0].carry: CO=\vcell.dropcool [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$8023.slice[0].carry: CO=\vcell.tetron_v [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$maccmap.cc:240:synth$22791.slice[0].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$maccmap.cc:240:synth$22791.slice[8].carry: CO=1'0

26.33.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~87 debug messages>

26.33.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~339 debug messages>
Removed a total of 113 cells.

26.33.4. Executing OPT_DFF pass (perform DFF optimizations).

26.33.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 51 unused cells and 9 unused wires.
<suppressed ~52 debug messages>

26.33.6. Rerunning OPT passes. (Removed registers in this run.)

26.33.7. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7086.slice[1].carry: CO=$auto$alumacc.cc:485:replace_alu$7086.BB [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$maccmap.cc:240:synth$22791.slice[1].carry: CO=1'0

26.33.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

26.33.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

26.33.10. Executing OPT_DFF pass (perform DFF optimizations).

26.33.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 1 unused cells and 0 unused wires.
<suppressed ~1 debug messages>

26.33.12. Rerunning OPT passes. (Removed registers in this run.)

26.33.13. Running ICE40 specific optimizations.

26.33.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

26.33.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

26.33.16. Executing OPT_DFF pass (perform DFF optimizations).

26.33.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

26.33.18. Finished OPT passes. (There is nothing left to do.)

26.34. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

26.35. Executing TECHMAP pass (map to technology primitives).

26.35.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

26.35.2. Continuing TECHMAP pass.
Using template \$_SDFFCE_PP0P_ for cells of type $_SDFFCE_PP0P_.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
Using template \$_SDFF_PP0_ for cells of type $_SDFF_PP0_.
Using template \$_SDFFCE_PP1P_ for cells of type $_SDFFCE_PP1P_.
Using template \$_SDFF_PP1_ for cells of type $_SDFF_PP1_.
No more expansions possible.
<suppressed ~1251 debug messages>

26.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

26.37. Executing SIMPLEMAP pass (map simple cells to gate primitives).
Mapping top.$auto$alumacc.cc:485:replace_alu$6671.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$7176.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$7856.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$7859.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$7862.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$7868.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$7874.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$7877.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$7883.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$7886.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$7889.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$7889.slice[5].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$7892.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$7892.slice[5].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$7895.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$7895.slice[5].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$7898.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$7898.slice[5].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$7901.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$7907.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$7910.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$7913.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$7916.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$7919.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$7922.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$7925.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$7928.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$7934.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$7943.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$7955.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$7961.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$7964.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$7987.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$7990.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$7993.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$8005.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$8020.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$8023.slice[0].carry ($lut).
Mapping top.$auto$maccmap.cc:240:synth$22791.slice[0].carry ($lut).
Mapping top.$auto$maccmap.cc:240:synth$22791.slice[1].carry ($lut).
Mapping top.$auto$maccmap.cc:240:synth$22791.slice[8].carry ($lut).

26.38. Executing ICE40_OPT pass (performing simple optimizations).

26.38.1. Running ICE40 specific optimizations.

26.38.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~913 debug messages>

26.38.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~5616 debug messages>
Removed a total of 1872 cells.

26.38.4. Executing OPT_DFF pass (perform DFF optimizations).

26.38.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 9103 unused wires.
<suppressed ~1 debug messages>

26.38.6. Rerunning OPT passes. (Removed registers in this run.)

26.38.7. Running ICE40 specific optimizations.

26.38.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~1 debug messages>

26.38.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

26.38.10. Executing OPT_DFF pass (perform DFF optimizations).

26.38.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

26.38.12. Rerunning OPT passes. (Removed registers in this run.)

26.38.13. Running ICE40 specific optimizations.

26.38.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

26.38.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

26.38.16. Executing OPT_DFF pass (perform DFF optimizations).

26.38.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

26.38.18. Finished OPT passes. (There is nothing left to do.)

26.39. Executing TECHMAP pass (map to technology primitives).

26.39.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/latches_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

26.39.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

26.40. Executing ABC pass (technology mapping using ABC).

26.40.1. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Extracted 8668 gates and 10291 wires to a netlist network with 1621 inputs and 1393 outputs.

26.40.1.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + lutpack -S 1 
ABC: + dress 
ABC: Total number of equiv classes                =    2627.
ABC: Participating nodes from both networks       =    5451.
ABC: Participating nodes from the first network   =    2636. (  61.05 % of nodes)
ABC: Participating nodes from the second network  =    2815. (  65.19 % of nodes)
ABC: Node pairs (any polarity)                    =    2636. (  61.05 % of names can be moved)
ABC: Node pairs (same polarity)                   =    2029. (  46.99 % of names can be moved)
ABC: Total runtime =     0.13 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

26.40.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     4315
ABC RESULTS:        internal signals:     7277
ABC RESULTS:           input signals:     1621
ABC RESULTS:          output signals:     1393
Removing temp directory.

26.41. Executing ICE40_WRAPCARRY pass (wrap carries).

26.42. Executing TECHMAP pass (map to technology primitives).

26.42.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

26.42.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~22 debug messages>
Removed 969 unused cells and 7158 unused wires.

26.43. Executing OPT_LUT pass (optimize LUTs).
Discovering LUTs.
Number of LUTs:     4663
  1-LUT              254
  2-LUT              622
  3-LUT             1831
  4-LUT             1956
  with \SB_CARRY    (#0)  333
  with \SB_CARRY    (#1)  366

Eliminating LUTs.
Number of LUTs:     4663
  1-LUT              254
  2-LUT              622
  3-LUT             1831
  4-LUT             1956
  with \SB_CARRY    (#0)  333
  with \SB_CARRY    (#1)  366

Combining LUTs.
Number of LUTs:     4600
  1-LUT              253
  2-LUT              548
  3-LUT             1793
  4-LUT             2006
  with \SB_CARRY    (#0)  333
  with \SB_CARRY    (#1)  366

Eliminated 0 LUTs.
Combined 63 LUTs.
<suppressed ~28303 debug messages>

26.44. Executing TECHMAP pass (map to technology primitives).

26.44.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

26.44.2. Continuing TECHMAP pass.
Using template $paramod$fd904e9e35cfd343a9df248824bd3f1408724879\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0001 for cells of type $lut.
Using template $paramod$6d6beead1425af15cf78b27fd9b11b41b5d4bce8\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0100 for cells of type $lut.
Using template $paramod$6e238df02989b317f10820a22773676e71120644\$lut for cells of type $lut.
Using template $paramod$608f40069c27841a5b3bdf03643a34bdc8974072\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11001010 for cells of type $lut.
Using template $paramod$272652f6c6fbe9a75eff76e45cc7e2788835518b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01000000 for cells of type $lut.
Using template $paramod$179512a187da069f3b79ef6612a41e494e7d54b6\$lut for cells of type $lut.
Using template $paramod$571404c0889eaf57f492cb5e37f8acb5df5852f9\$lut for cells of type $lut.
Using template $paramod$38f9bf4dd2329347b8471f0a98443dd323386889\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10001111 for cells of type $lut.
Using template $paramod$658b9ed803f0d3d335616d3858b53e0a2522f1e8\$lut for cells of type $lut.
Using template $paramod$8b24407096beec47292ddeb1567a058197a320b9\$lut for cells of type $lut.
Using template $paramod$1307f430048519f43ab1ac47bdca16ced42e5270\$lut for cells of type $lut.
Using template $paramod$53ce561f80f32d4298a3beadc88b6c5c78293221\$lut for cells of type $lut.
Using template $paramod$6b0849254d6c87461fb93e37cc18f089f61eb912\$lut for cells of type $lut.
Using template $paramod$c5b694ec89d7629b942ccf6a9be1d39e24f8edec\$lut for cells of type $lut.
Using template $paramod$43779580bfffd5d5a9f321249a174febf1dac288\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11010000 for cells of type $lut.
Using template $paramod$41326ad8644342a66dfb051d050f2b6fbf15015b\$lut for cells of type $lut.
Using template $paramod$82b4a585d1edcb5c6e755dc9bd3392228a1c1304\$lut for cells of type $lut.
Using template $paramod$20798777255c214e32de3304ce8faa1fdfa2f474\$lut for cells of type $lut.
Using template $paramod$4b2297966ddb718657b80566604f97685ffc0120\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11000101 for cells of type $lut.
Using template $paramod$40882341c54dcd36f630f00dd7e46a35652abd36\$lut for cells of type $lut.
Using template $paramod$bba54c1ef87367812b4c15f4aed5ac70773df775\$lut for cells of type $lut.
Using template $paramod$6e46ec5a196ba1a24b8e69ab094cadc07c13ac1f\$lut for cells of type $lut.
Using template $paramod$45d617c2ce0041e27b541f62b0fc3c3ce441a616\$lut for cells of type $lut.
Using template $paramod$e5e9da8fed769f971686eed8c5eea50e61f73aaa\$lut for cells of type $lut.
Using template $paramod$e9c77024ca501b890c641f9c0b10e27242db8730\$lut for cells of type $lut.
Using template $paramod$12879138d1e376f344e47ea40be66b776233be75\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01010011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00110101 for cells of type $lut.
Using template $paramod$2ea69c779d6c1b79ac5a87b0d1523c67d5628dba\$lut for cells of type $lut.
Using template $paramod$b4f85a6321a00b090afc4e21d68e7b99eb94d149\$lut for cells of type $lut.
Using template $paramod$94ac66a11090dca84889e55fcf03297912a5b7ec\$lut for cells of type $lut.
Using template $paramod$ab8bb87959c5d7cfa27886cee1355b38e054a61a\$lut for cells of type $lut.
Using template $paramod$a50be0e6fa3a01511bb234559cb74fb8bd3e2061\$lut for cells of type $lut.
Using template $paramod$973818279bc95792902f3c09371fd2407d04a2a5\$lut for cells of type $lut.
Using template $paramod$b297295e19b03521716155b85537bbe86d6a9ae6\$lut for cells of type $lut.
Using template $paramod$b4d0f4738a5ce50c7f36c2aa2ecc09cfb874f2b6\$lut for cells of type $lut.
Using template $paramod$04b674496422df8889c01c3744b94097628ccfbc\$lut for cells of type $lut.
Using template $paramod$703a13a751e631ef123f38f7d2125aeabec0f94c\$lut for cells of type $lut.
Using template $paramod$c1a19a87ccbbb03d43a72335db63f692ddf82cc1\$lut for cells of type $lut.
Using template $paramod$933f4f3e373a784da64d137def3625bdd36d1695\$lut for cells of type $lut.
Using template $paramod$e49f6e3576ef1a6d2f58c54414dbb786af8cc869\$lut for cells of type $lut.
Using template $paramod$b431bfd938e35871dd0b7668e1503c7e8b9d491c\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10101100 for cells of type $lut.
Using template $paramod$baa939b0bd5b3e0c8760492528669bd58f640542\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000001\LUT=2'01 for cells of type $lut.
Using template $paramod$b93d1ea7a612a32c185108f67a153d44ffb9aac2\$lut for cells of type $lut.
Using template $paramod$4a51864395fae58ba30115ac09ca86f922da2001\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01100000 for cells of type $lut.
Using template $paramod$4972722c284f07fee673f7cb99e6a36ce4a244f0\$lut for cells of type $lut.
Using template $paramod$0a94662b0161fc067fc2a1123fd5ac94da2ec1db\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10100011 for cells of type $lut.
Using template $paramod$aefabbfb9c1b4f52428d3138553c9ded9b193061\$lut for cells of type $lut.
Using template $paramod$ed10455c824c2a3761aabdeb1e31dad905f66e6e\$lut for cells of type $lut.
Using template $paramod$6e3b22478ca21c5590744f2e30b92938c4d90996\$lut for cells of type $lut.
Using template $paramod$d53578aacfd93124244778d88be0e90eb09c1b1b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11110100 for cells of type $lut.
Using template $paramod$a670b08a47dd8a34f954c50cd06e9996d77e8467\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0110 for cells of type $lut.
Using template $paramod$332a399730bfc61adea04021a76b1c4e4030f37d\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00011111 for cells of type $lut.
Using template $paramod$2d07c1a6c53c7b878509360922c4fa5ebedc3011\$lut for cells of type $lut.
Using template $paramod$df196ed0a1da5c4a58c5e08a1dac304fd3fccaab\$lut for cells of type $lut.
Using template $paramod$161491d8314cab9d5d32db4aa31f31f4ef4f6dc6\$lut for cells of type $lut.
Using template $paramod$49308c380d4434ff502cc9276068deff427c75f2\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001110 for cells of type $lut.
Using template $paramod$d6d3aaeac1b9aa2c4b652c48e0deb565040dda72\$lut for cells of type $lut.
Using template $paramod$7a9d9396461df152f697894fa3b294ad1b285e08\$lut for cells of type $lut.
Using template $paramod$7fcc2f13195f27c397064377984d87a90c06749d\$lut for cells of type $lut.
Using template $paramod$71d951b20e73043168c1656217d126e617052faa\$lut for cells of type $lut.
Using template $paramod$de3d8c0ac9a85f776878d56395b6e0bf04ae72e7\$lut for cells of type $lut.
Using template $paramod$bdb7f9ed72fd4f5c7ad81c376f2d8a5c72a0098d\$lut for cells of type $lut.
Using template $paramod$cc14edb43bcbbd83b718cef08414cb23048bb6d0\$lut for cells of type $lut.
Using template $paramod$314fe9458b07176c4d2c8c59533027c4c55155b5\$lut for cells of type $lut.
Using template $paramod$5a621b016c894274d07edef48c49b401a15fd796\$lut for cells of type $lut.
Using template $paramod$cde3aa23c1efa60a470cf0f0281347d6ba585afa\$lut for cells of type $lut.
Using template $paramod$f3e1547c4b47e64c590e75cf09078b2507c8cc75\$lut for cells of type $lut.
Using template $paramod$048d4aa2263b685fba6c6b0d38f6224df0dc3042\$lut for cells of type $lut.
Using template $paramod$30c7bb594369ca20ff4ff844ba6ed3179f45572d\$lut for cells of type $lut.
Using template $paramod$11ec7271d8e6e5aeaace08c13e4c601f10e31038\$lut for cells of type $lut.
Using template $paramod$fb5ee0bdef1c4e74aaf1fd8efae98b46a2f5e564\$lut for cells of type $lut.
Using template $paramod$adac5163f2ca606e303e4fcb6e4ac1a8cfe9825d\$lut for cells of type $lut.
Using template $paramod$19ec49f31a8d230a567aa44ce3ea81a03c101e2b\$lut for cells of type $lut.
Using template $paramod$81d8a60fd95b1a9f9ef71c12a774ae6988cb9fd5\$lut for cells of type $lut.
Using template $paramod$b82dd4a20dbf0d54061c2335089cd4250464eb8a\$lut for cells of type $lut.
Using template $paramod$6047691d8bbb6cff4c2e5680ed3445ca5625ef2f\$lut for cells of type $lut.
Using template $paramod$d2e6d37235ab843778c678747f5760d5e87de899\$lut for cells of type $lut.
Using template $paramod$a20b0c093af372402eecf32644de5f0208303079\$lut for cells of type $lut.
Using template $paramod$4da2782c2e024b3eded45331a6607870b9d0254f\$lut for cells of type $lut.
Using template $paramod$5898ae4e52b22eca363a418fa94151158a507d30\$lut for cells of type $lut.
Using template $paramod$2d8ecce5c907513cebcd38ab5efe0fc26fc03464\$lut for cells of type $lut.
Using template $paramod$2e7a95e82db1d690ae9ba5d10f68b175fa2cb467\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01001111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10110000 for cells of type $lut.
Using template $paramod$5c32c59025c0b98f20e63f249d83e7ebb4b085e3\$lut for cells of type $lut.
Using template $paramod$c24ed72ebb67e9ead6029e42e909ef7fc0abbb11\$lut for cells of type $lut.
Using template $paramod$e5759512db67494ff77fbdfc66dff4006376568f\$lut for cells of type $lut.
Using template $paramod$3039c7f41767c4672f4e3f22ad78f16d42720fbf\$lut for cells of type $lut.
Using template $paramod$30234ddca80ec18fbcf4d45d8bd1821aad47e8fd\$lut for cells of type $lut.
Using template $paramod$20dcd9314eed520b3e0cea5805287f04a998fa12\$lut for cells of type $lut.
Using template $paramod$64d6de3597216f499496775aac50d94cdc0fe47f\$lut for cells of type $lut.
Using template $paramod$b4410865e8124402796f9dfbf73ef8d279fdbd08\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000111 for cells of type $lut.
Using template $paramod$ad9afe568e97c0bb73618642f5dd77addc807716\$lut for cells of type $lut.
Using template $paramod$9d5b68c8da3340b77f1f858b0659185c5f0c4481\$lut for cells of type $lut.
Using template $paramod$59c595af41d4a5cce2d588c3a5f1342749ce7a77\$lut for cells of type $lut.
Using template $paramod$0f52647588235a7349ddd3f3432c9ac1e33ad9e1\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1011 for cells of type $lut.
Using template $paramod$a3cdc1eb771a2c6a16f64da161e11100ac409d2b\$lut for cells of type $lut.
Using template $paramod$070c25fd511137f15d1e71bbe71a249842a7ac16\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1110 for cells of type $lut.
Using template $paramod$e053a22d78e6bd5ea33183ea69976f0db741be0e\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01111111 for cells of type $lut.
Using template $paramod$e0bde73e598487237493c8a43ca52c95a3727354\$lut for cells of type $lut.
Using template $paramod$fd1e68d43235621014e35437b4508a97628b7e8f\$lut for cells of type $lut.
Using template $paramod$1843b3c15f2447d117e2d5de9b00f791ef5f9fa3\$lut for cells of type $lut.
Using template $paramod$4282def8dbd6df3d1248ad282c629bee684502c2\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11111000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10010000 for cells of type $lut.
Using template $paramod$cbfd30b70b4f0ac8dd1d3ed758215fbf49783a3b\$lut for cells of type $lut.
Using template $paramod$415b9dd3a15783ae56c103f189fd8e182f997441\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01111000 for cells of type $lut.
Using template $paramod$85b779ce5ab505dbf25e5e046fb43ca2b76b878b\$lut for cells of type $lut.
Using template $paramod$7d3cbfc289ec00e0691f33de08826f2254fca668\$lut for cells of type $lut.
Using template $paramod$4cf5305612d86489c1a6171729557670bf08582e\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01101000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11101001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01101001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11010011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01000010 for cells of type $lut.
Using template $paramod$cc08dba3aac8677e797984bdf18a09dd37547dd3\$lut for cells of type $lut.
Using template $paramod$b4f15f202f50520dbc381cd0880ac94f830f05a8\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11101111 for cells of type $lut.
Using template $paramod$6d23198eb2b8f79a41c7626605a61009695893b1\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001101 for cells of type $lut.
Using template $paramod$fc318a7df7fe07fd6e06d67fcbc358e9823ea389\$lut for cells of type $lut.
Using template $paramod$8c8483b8dba6dbd9a5f43a97c71ce4530d6e6ded\$lut for cells of type $lut.
Using template $paramod$a3d9d50a26c80b5c42d9b864ac52f329113a426e\$lut for cells of type $lut.
Using template $paramod$2167383712a3ef5a7aa9a279cd8db29e1fc2db5f\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11110001 for cells of type $lut.
Using template $paramod$bf60f6ec407ee294958b6566514fc3125ec42258\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01000011 for cells of type $lut.
Using template $paramod$5766b753e513aa2393ffc25ef94ebc79dc098484\$lut for cells of type $lut.
Using template $paramod$a59507d273cd827eb6c46c37820d50a1b717efdf\$lut for cells of type $lut.
Using template $paramod$310dc7912bb5756ab08137f6868c0abbecf66466\$lut for cells of type $lut.
Using template $paramod$9ce83c401f07863ef6c07aa36141bf86d010bac8\$lut for cells of type $lut.
Using template $paramod$9d707d218adbd63b6f9a0c79d7ee037306fb6296\$lut for cells of type $lut.
Using template $paramod$05e1aa03f4032f091e9babe2ae153c9bb3e7b396\$lut for cells of type $lut.
Using template $paramod$0de052767abdccc3aefc818722bdc3c7850d25d6\$lut for cells of type $lut.
Using template $paramod$ba05b8a1a425003df083aea0e69541f5cbdc68f2\$lut for cells of type $lut.
Using template $paramod$9850450c7f2ce6ec6d61697515f47872a7c4eee5\$lut for cells of type $lut.
Using template $paramod$cb32992e51dcc00437a87053fcf4571f3e5aa6f1\$lut for cells of type $lut.
Using template $paramod$444dc65d62c26ac5c920b1ef08094df1b8d6a003\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00011100 for cells of type $lut.
Using template $paramod$575b200168b9e109c2ed99df4359056f2c6696ac\$lut for cells of type $lut.
Using template $paramod$f63fe32f78d5f3c5de711945c592c8c5ec2303ae\$lut for cells of type $lut.
Using template $paramod$a15fd389a2f54cb7b94707b25934d226e68d9e2e\$lut for cells of type $lut.
Using template $paramod$774861bf9b1885d60265e6ddea1c95a32f095489\$lut for cells of type $lut.
Using template $paramod$bb07aa4c6c95211b927837b9073769ffabb3aaa5\$lut for cells of type $lut.
Using template $paramod$fceb3a526de44b8f6b38e567360f59f7cf5878fb\$lut for cells of type $lut.
Using template $paramod$c471af5667a682bd131a5b479e58e470d1b2b7cd\$lut for cells of type $lut.
Using template $paramod$df0b68f8e63b2deb6710e23abd8b8ff0796d4897\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11000010 for cells of type $lut.
Using template $paramod$3204210736873ef5d53b95f3dbe4714b354f9351\$lut for cells of type $lut.
No more expansions possible.
<suppressed ~6943 debug messages>
Removed 0 unused cells and 10686 unused wires.

26.45. Executing AUTONAME pass.
Renamed 424243 objects in module top (199 iterations).
<suppressed ~10016 debug messages>

26.46. Executing HIERARCHY pass (managing design hierarchy).

26.46.1. Analyzing design hierarchy..
Top module:  \top

26.46.2. Analyzing design hierarchy..
Top module:  \top
Removed 0 unused modules.

26.47. Printing statistics.

=== top ===

   Number of wires:               6723
   Number of wire bits:          21281
   Number of public wires:        6723
   Number of public wire bits:   21281
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               7053
     SB_CARRY                     1224
     SB_DFF                         34
     SB_DFFE                        25
     SB_DFFESR                     952
     SB_DFFESS                      45
     SB_DFFSR                      167
     SB_DFFSS                        5
     SB_LUT4                      4600
     SB_PLL40_PAD                    1

26.48. Executing CHECK pass (checking for obvious problems).
Checking module top...
Found and reported 0 problems.

26.49. Executing JSON backend.

Warnings: 307 unique messages, 315 total
End of script. Logfile hash: 3969ef5619, CPU: user 14.28s system 0.08s, MEM: 139.48 MB peak
Yosys 0.12 (git sha1 2156e20)
Time spent: 27% 41x opt_expr (4 sec), 16% 36x opt_clean (2 sec), ...
