
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.12 (git sha1 2156e20)


-- Parsing `src/meta_mem.v' using frontend `verilog' --

1. Executing Verilog-2005 frontend: src/meta_mem.v
Parsing Verilog input from `src/meta_mem.v' to AST representation.
Generating RTLIL representation for module `\memory'.
Successfully finished Verilog frontend.

-- Parsing `src/shifter.v' using frontend `verilog' --

2. Executing Verilog-2005 frontend: src/shifter.v
Parsing Verilog input from `src/shifter.v' to AST representation.
Generating RTLIL representation for module `\shifter'.
Successfully finished Verilog frontend.

-- Parsing `src/meta_memrow.v' using frontend `verilog' --

3. Executing Verilog-2005 frontend: src/meta_memrow.v
Parsing Verilog input from `src/meta_memrow.v' to AST representation.
Generating RTLIL representation for module `\memcell_row'.
Successfully finished Verilog frontend.

-- Parsing `src/meta_memcell.v' using frontend `verilog' --

4. Executing Verilog-2005 frontend: src/meta_memcell.v
Parsing Verilog input from `src/meta_memcell.v' to AST representation.
Generating RTLIL representation for module `\memcell'.
Successfully finished Verilog frontend.

-- Parsing `src/vga_core.v' using frontend `verilog' --

5. Executing Verilog-2005 frontend: src/vga_core.v
Parsing Verilog input from `src/vga_core.v' to AST representation.
Generating RTLIL representation for module `\VGAcore'.
Warning: reg '\r' is assigned in a continuous assignment at src/vga_core.v:60.12-60.50.
Warning: reg '\b' is assigned in a continuous assignment at src/vga_core.v:61.12-61.50.
Warning: reg '\g' is assigned in a continuous assignment at src/vga_core.v:62.12-62.50.
Successfully finished Verilog frontend.

-- Parsing `src/timer.v' using frontend `verilog' --

6. Executing Verilog-2005 frontend: src/timer.v
Parsing Verilog input from `src/timer.v' to AST representation.
Generating RTLIL representation for module `\timer'.
Successfully finished Verilog frontend.

-- Parsing `src/volatile_cell_storage.v' using frontend `verilog' --

7. Executing Verilog-2005 frontend: src/volatile_cell_storage.v
Parsing Verilog input from `src/volatile_cell_storage.v' to AST representation.
Generating RTLIL representation for module `\cellstorage'.
Warning: reg '\P1blk_v' is assigned in a continuous assignment at src/volatile_cell_storage.v:45.12-45.51.
Warning: reg '\P2blk_v' is assigned in a continuous assignment at src/volatile_cell_storage.v:46.12-46.51.
Warning: reg '\P3blk_v' is assigned in a continuous assignment at src/volatile_cell_storage.v:47.12-47.51.
Warning: reg '\P4blk_v' is assigned in a continuous assignment at src/volatile_cell_storage.v:48.12-48.51.
Warning: reg '\P1blk_h' is assigned in a continuous assignment at src/volatile_cell_storage.v:50.12-50.51.
Warning: reg '\P2blk_h' is assigned in a continuous assignment at src/volatile_cell_storage.v:51.12-51.51.
Warning: reg '\P3blk_h' is assigned in a continuous assignment at src/volatile_cell_storage.v:52.12-52.51.
Warning: reg '\P4blk_h' is assigned in a continuous assignment at src/volatile_cell_storage.v:53.12-53.51.
Successfully finished Verilog frontend.

-- Parsing `src/vga_pll.v' using frontend `verilog' --

8. Executing Verilog-2005 frontend: src/vga_pll.v
Parsing Verilog input from `src/vga_pll.v' to AST representation.
Generating RTLIL representation for module `\vga_pll'.
Successfully finished Verilog frontend.

-- Parsing `src/tetron_I.v' using frontend `verilog' --

9. Executing Verilog-2005 frontend: src/tetron_I.v
Parsing Verilog input from `src/tetron_I.v' to AST representation.
Generating RTLIL representation for module `\tetron_I_shaper'.
Warning: wire '\blk1_voffset' is assigned in a block at src/tetron_I.v:21.13-21.30.
Warning: wire '\blk1_hoffset' is assigned in a block at src/tetron_I.v:22.13-22.30.
Warning: wire '\blk2_voffset' is assigned in a block at src/tetron_I.v:23.13-23.30.
Warning: wire '\blk2_hoffset' is assigned in a block at src/tetron_I.v:24.13-24.30.
Warning: wire '\blk3_voffset' is assigned in a block at src/tetron_I.v:25.13-25.30.
Warning: wire '\blk3_hoffset' is assigned in a block at src/tetron_I.v:26.13-26.30.
Warning: wire '\blk4_voffset' is assigned in a block at src/tetron_I.v:27.13-27.30.
Warning: wire '\blk4_hoffset' is assigned in a block at src/tetron_I.v:28.13-28.30.
Warning: wire '\blk1_voffset' is assigned in a block at src/tetron_I.v:31.17-31.34.
Warning: wire '\blk1_hoffset' is assigned in a block at src/tetron_I.v:32.17-32.34.
Warning: wire '\blk2_voffset' is assigned in a block at src/tetron_I.v:33.17-33.34.
Warning: wire '\blk2_hoffset' is assigned in a block at src/tetron_I.v:34.17-34.35.
Warning: wire '\blk3_voffset' is assigned in a block at src/tetron_I.v:35.17-35.34.
Warning: wire '\blk3_hoffset' is assigned in a block at src/tetron_I.v:36.17-36.34.
Warning: wire '\blk4_voffset' is assigned in a block at src/tetron_I.v:37.17-37.34.
Warning: wire '\blk4_hoffset' is assigned in a block at src/tetron_I.v:38.17-38.34.
Warning: wire '\blk1_voffset' is assigned in a block at src/tetron_I.v:42.17-42.34.
Warning: wire '\blk1_hoffset' is assigned in a block at src/tetron_I.v:43.17-43.34.
Warning: wire '\blk2_voffset' is assigned in a block at src/tetron_I.v:44.17-44.35.
Warning: wire '\blk2_hoffset' is assigned in a block at src/tetron_I.v:45.17-45.34.
Warning: wire '\blk3_voffset' is assigned in a block at src/tetron_I.v:46.17-46.34.
Warning: wire '\blk3_hoffset' is assigned in a block at src/tetron_I.v:47.17-47.34.
Warning: wire '\blk4_voffset' is assigned in a block at src/tetron_I.v:48.17-48.34.
Warning: wire '\blk4_hoffset' is assigned in a block at src/tetron_I.v:49.17-49.34.
Warning: wire '\blk1_voffset' is assigned in a block at src/tetron_I.v:53.17-53.34.
Warning: wire '\blk1_hoffset' is assigned in a block at src/tetron_I.v:54.17-54.34.
Warning: wire '\blk2_voffset' is assigned in a block at src/tetron_I.v:55.17-55.34.
Warning: wire '\blk2_hoffset' is assigned in a block at src/tetron_I.v:56.17-56.35.
Warning: wire '\blk3_voffset' is assigned in a block at src/tetron_I.v:57.17-57.34.
Warning: wire '\blk3_hoffset' is assigned in a block at src/tetron_I.v:58.17-58.34.
Warning: wire '\blk4_voffset' is assigned in a block at src/tetron_I.v:59.17-59.34.
Warning: wire '\blk4_hoffset' is assigned in a block at src/tetron_I.v:60.17-60.34.
Warning: wire '\blk1_voffset' is assigned in a block at src/tetron_I.v:64.17-64.34.
Warning: wire '\blk1_hoffset' is assigned in a block at src/tetron_I.v:65.17-65.34.
Warning: wire '\blk2_voffset' is assigned in a block at src/tetron_I.v:66.17-66.35.
Warning: wire '\blk2_hoffset' is assigned in a block at src/tetron_I.v:67.17-67.34.
Warning: wire '\blk3_voffset' is assigned in a block at src/tetron_I.v:68.17-68.34.
Warning: wire '\blk3_hoffset' is assigned in a block at src/tetron_I.v:69.17-69.34.
Warning: wire '\blk4_voffset' is assigned in a block at src/tetron_I.v:70.17-70.34.
Warning: wire '\blk4_hoffset' is assigned in a block at src/tetron_I.v:71.17-71.34.
Successfully finished Verilog frontend.

-- Parsing `src/top.v' using frontend `verilog' --

10. Executing Verilog-2005 frontend: src/top.v
Parsing Verilog input from `src/top.v' to AST representation.
Generating RTLIL representation for module `\top'.
Successfully finished Verilog frontend.

-- Parsing `src/gmanager.v' using frontend `verilog' --

11. Executing Verilog-2005 frontend: src/gmanager.v
Parsing Verilog input from `src/gmanager.v' to AST representation.
Generating RTLIL representation for module `\gmanager'.
Successfully finished Verilog frontend.

-- Parsing `src/shader.v' using frontend `verilog' --

12. Executing Verilog-2005 frontend: src/shader.v
Parsing Verilog input from `src/shader.v' to AST representation.
Generating RTLIL representation for module `\shader'.
Successfully finished Verilog frontend.

-- Parsing `src/mod24.v' using frontend `verilog' --

13. Executing Verilog-2005 frontend: src/mod24.v
Parsing Verilog input from `src/mod24.v' to AST representation.
Generating RTLIL representation for module `\blknum_horizontal'.
Generating RTLIL representation for module `\offsetmap'.
Generating RTLIL representation for module `\blkoffset_horizontal'.
Successfully finished Verilog frontend.

-- Parsing `src/color_lut.v' using frontend `verilog' --

14. Executing Verilog-2005 frontend: src/color_lut.v
Parsing Verilog input from `src/color_lut.v' to AST representation.
Generating RTLIL representation for module `\color_lut'.
Successfully finished Verilog frontend.

-- Parsing `src/blockmemory.v' using frontend `verilog' --

15. Executing Verilog-2005 frontend: src/blockmemory.v
Parsing Verilog input from `src/blockmemory.v' to AST representation.
Generating RTLIL representation for module `\blkmemory'.
Successfully finished Verilog frontend.

-- Running command `synth_ice40 -top top -json fpga/vga_tetris.json' --

16. Executing SYNTH_ICE40 pass.

16.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Generating RTLIL representation for module `\ICESTORM_RAM'.
Successfully finished Verilog frontend.

16.2. Executing HIERARCHY pass (managing design hierarchy).

16.2.1. Analyzing design hierarchy..
Top module:  \top
Used module:     \VGAcore
Used module:     \gmanager
Used module:         \color_lut
Used module:         \shader
Used module:         \blkoffset_horizontal
Used module:             \offsetmap
Used module:         \blknum_horizontal
Used module:     \cellstorage
Used module:         \tetron_I_shaper
Used module:     \blkmemory
Used module:         \memory
Used module:             \memcell_row
Used module:                 \memcell
Used module:         \shifter
Used module:     \vga_pll
Used module:     \timer
Reprocessing module cellstorage because instantiated module tetron_I_shaper has become available.
Generating RTLIL representation for module `\cellstorage'.
Warning: reg '\P1blk_v' is assigned in a continuous assignment at src/volatile_cell_storage.v:45.12-45.51.
Warning: reg '\P2blk_v' is assigned in a continuous assignment at src/volatile_cell_storage.v:46.12-46.51.
Warning: reg '\P3blk_v' is assigned in a continuous assignment at src/volatile_cell_storage.v:47.12-47.51.
Warning: reg '\P4blk_v' is assigned in a continuous assignment at src/volatile_cell_storage.v:48.12-48.51.
Warning: reg '\P1blk_h' is assigned in a continuous assignment at src/volatile_cell_storage.v:50.12-50.51.
Warning: reg '\P2blk_h' is assigned in a continuous assignment at src/volatile_cell_storage.v:51.12-51.51.
Warning: reg '\P3blk_h' is assigned in a continuous assignment at src/volatile_cell_storage.v:52.12-52.51.
Warning: reg '\P4blk_h' is assigned in a continuous assignment at src/volatile_cell_storage.v:53.12-53.51.

16.2.2. Analyzing design hierarchy..
Top module:  \top
Used module:     \VGAcore
Used module:     \gmanager
Used module:         \color_lut
Used module:         \shader
Used module:         \blkoffset_horizontal
Used module:             \offsetmap
Used module:         \blknum_horizontal
Used module:     \cellstorage
Used module:         \tetron_I_shaper
Used module:     \blkmemory
Used module:         \memory
Used module:             \memcell_row
Used module:                 \memcell
Used module:         \shifter
Used module:     \vga_pll
Used module:     \timer

16.2.3. Analyzing design hierarchy..
Top module:  \top
Used module:     \VGAcore
Used module:     \gmanager
Used module:         \color_lut
Used module:         \shader
Used module:         \blkoffset_horizontal
Used module:             \offsetmap
Used module:         \blknum_horizontal
Used module:     \cellstorage
Used module:         \tetron_I_shaper
Used module:     \blkmemory
Used module:         \memory
Used module:             \memcell_row
Used module:                 \memcell
Used module:         \shifter
Used module:     \vga_pll
Used module:     \timer
Removed 0 unused modules.
Warning: Resizing cell port blkmemory.mem.hitbox_checker_3_y from 5 bits to 6 bits.
Warning: Resizing cell port blkmemory.mem.hitbox_checker_3_x from 5 bits to 6 bits.
Warning: Resizing cell port blkmemory.mem.hitbox_checker_2_y from 5 bits to 6 bits.
Warning: Resizing cell port blkmemory.mem.hitbox_checker_2_x from 5 bits to 6 bits.
Warning: Resizing cell port blkmemory.mem.hitbox_checker_1_y from 5 bits to 6 bits.
Warning: Resizing cell port blkmemory.mem.hitbox_checker_1_x from 5 bits to 6 bits.
Warning: Resizing cell port blkmemory.mem.hitbox_checker_0_y from 5 bits to 6 bits.
Warning: Resizing cell port blkmemory.mem.hitbox_checker_0_x from 5 bits to 6 bits.
Warning: Resizing cell port blkmemory.mem.color_requestor_y from 5 bits to 6 bits.
Warning: Resizing cell port blkmemory.mem.color_requestor_x from 5 bits to 6 bits.
Warning: Resizing cell port gmanager.hh.blkid from 5 bits to 6 bits.

16.3. Executing PROC pass (convert processes to netlists).

16.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

16.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 5 switch rules as full_case in process $proc$src/volatile_cell_storage.v:76$1272 in module cellstorage.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1386$1115 in module SB_DFFNES.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1328$1108 in module SB_DFFNESS.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1251$1104 in module SB_DFFNER.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1193$1097 in module SB_DFFNESR.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1122$1094 in module SB_DFFNS.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1072$1091 in module SB_DFFNSS.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1001$1088 in module SB_DFFNR.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:951$1085 in module SB_DFFNSR.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:789$1077 in module SB_DFFES.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:731$1070 in module SB_DFFESS.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:654$1066 in module SB_DFFER.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:596$1059 in module SB_DFFESR.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:525$1056 in module SB_DFFS.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:475$1053 in module SB_DFFSS.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:404$1050 in module SB_DFFR.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:354$1047 in module SB_DFFSR.
Marked 6 switch rules as full_case in process $proc$src/blockmemory.v:89$844 in module blkmemory.
Marked 1 switch rules as full_case in process $proc$src/color_lut.v:8$827 in module color_lut.
Marked 2 switch rules as full_case in process $proc$src/gmanager.v:69$595 in module gmanager.
Marked 1 switch rules as full_case in process $proc$src/tetron_I.v:19$573 in module tetron_I_shaper.
Marked 2 switch rules as full_case in process $proc$src/timer.v:10$520 in module timer.
Marked 1 switch rules as full_case in process $proc$src/vga_core.v:64$504 in module VGAcore.
Marked 2 switch rules as full_case in process $proc$src/meta_memcell.v:22$498 in module memcell.
Removed a total of 0 dead cases.

16.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 18 redundant assignments.
Promoted 59 assignments to connections.

16.3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\SB_DFFNES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1118'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1114'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1107'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1103'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1096'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1093'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1090'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1087'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1084'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFN.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1082'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1080'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1076'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1069'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1065'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1058'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1055'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1052'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1049'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1046'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFF.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1044'.
  Set init value: \Q = 1'0
Found init rule in `\top.$proc$src/top.v:29$581'.
  Set init value: \resetn_gen = 4'0000

16.3.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \S in `\SB_DFFNES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1386$1115'.
Found async reset \R in `\SB_DFFNER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1251$1104'.
Found async reset \S in `\SB_DFFNS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1122$1094'.
Found async reset \R in `\SB_DFFNR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1001$1088'.
Found async reset \S in `\SB_DFFES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:789$1077'.
Found async reset \R in `\SB_DFFER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:654$1066'.
Found async reset \S in `\SB_DFFS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:525$1056'.
Found async reset \R in `\SB_DFFR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:404$1050'.

16.3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1313'.
Creating decoders for process `\cellstorage.$proc$src/volatile_cell_storage.v:76$1272'.
     1/19: $0\buttdebounceR[5:0]
     2/19: $0\buttdebounceT[5:0]
     3/19: $0\buttdebounceL[5:0]
     4/19: $0\state[7:0]
     5/19: $0\process_decline[0:0]
     6/19: $0\process_steal[0:0]
     7/19: $0\postdecline_cool[0:0]
     8/19: $0\cooldown[0:0]
     9/19: $0\movement_available[0:0]
    10/19: $0\tetron_type[3:0]
    11/19: $0\keep_tetron_rotation[2:0]
    12/19: $0\keep_tetron_h[4:0]
    13/19: $0\keep_tetron_v[4:0]
    14/19: $0\tetron_rotation[2:0]
    15/19: $0\tetron_h[4:0]
    16/19: $0\tetron_v[4:0]
    17/19: $0\volatile_blk_color[2:0]
    18/19: $0\movement_intent[0:0]
    19/19: $0\movement_request[0:0]
Creating decoders for process `\SB_DFFNES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1118'.
Creating decoders for process `\SB_DFFNES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1386$1115'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1114'.
Creating decoders for process `\SB_DFFNESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1328$1108'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1107'.
Creating decoders for process `\SB_DFFNER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1251$1104'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1103'.
Creating decoders for process `\SB_DFFNESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1193$1097'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1096'.
Creating decoders for process `\SB_DFFNS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1122$1094'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1093'.
Creating decoders for process `\SB_DFFNSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1072$1091'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1090'.
Creating decoders for process `\SB_DFFNR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1001$1088'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1087'.
Creating decoders for process `\SB_DFFNSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:951$1085'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1084'.
Creating decoders for process `\SB_DFFNE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:906$1083'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFN.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1082'.
Creating decoders for process `\SB_DFFN.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:868$1081'.
Creating decoders for process `\SB_DFFES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1080'.
Creating decoders for process `\SB_DFFES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:789$1077'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1076'.
Creating decoders for process `\SB_DFFESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:731$1070'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1069'.
Creating decoders for process `\SB_DFFER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:654$1066'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1065'.
Creating decoders for process `\SB_DFFESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:596$1059'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1058'.
Creating decoders for process `\SB_DFFS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:525$1056'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1055'.
Creating decoders for process `\SB_DFFSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:475$1053'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1052'.
Creating decoders for process `\SB_DFFR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:404$1050'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1049'.
Creating decoders for process `\SB_DFFSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:354$1047'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1046'.
Creating decoders for process `\SB_DFFE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:309$1045'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFF.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1044'.
Creating decoders for process `\SB_DFF.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:271$1043'.
Creating decoders for process `\blkmemory.$proc$src/blockmemory.v:89$844'.
     1/12: $0\perq[3:0]
     2/12: $0\resetperiod_state[20:0]
     3/12: $0\resetperiod[0:0]
     4/12: $0\stealstatus[3:0]
     5/12: $0\mm_colorsetter_value[2:0]
     6/12: $0\mm_colorsetter_commit[0:0]
     7/12: $0\mm_colosetter_y[5:0]
     8/12: $0\mm_colosetter_x[5:0]
     9/12: $0\proposed_memval[2:0]
    10/12: $0\movement_steal[0:0]
    11/12: $0\movement_commit[0:0]
    12/12: $0\movement_declined[0:0]
Creating decoders for process `\color_lut.$proc$src/color_lut.v:8$827'.
     1/1: $0\color[11:0]
Creating decoders for process `\blknum_horizontal.$proc$src/mod24.v:0$677'.
Creating decoders for process `\gmanager.$proc$src/gmanager.v:69$595'.
     1/4: $2\pixstream[11:0]
     2/4: $2\ipixstream[11:0]
     3/4: $1\ipixstream[11:0]
     4/4: $1\pixstream[11:0]
Creating decoders for process `\top.$proc$src/top.v:29$581'.
Creating decoders for process `\top.$proc$src/top.v:33$579'.
Creating decoders for process `\tetron_I_shaper.$proc$src/tetron_I.v:19$573'.
     1/8: $0\blk4_hoffset[4:0]
     2/8: $0\blk4_voffset[4:0]
     3/8: $0\blk3_hoffset[4:0]
     4/8: $0\blk3_voffset[4:0]
     5/8: $0\blk2_hoffset[4:0]
     6/8: $0\blk2_voffset[4:0]
     7/8: $0\blk1_hoffset[4:0]
     8/8: $0\blk1_voffset[4:0]
Creating decoders for process `\timer.$proc$src/timer.v:10$520'.
     1/2: $0\counter[24:0]
     2/2: $0\trigger[0:0]
Creating decoders for process `\VGAcore.$proc$src/vga_core.v:64$504'.
     1/11: $0\proposed_b[3:0]
     2/11: $0\proposed_g[3:0]
     3/11: $0\proposed_r[3:0]
     4/11: $0\hscan_pos[9:0]
     5/11: $0\v_drawing_pixels[0:0]
     6/11: $0\h_drawing_pixels[0:0]
     7/11: $0\vscan_pos[9:0]
     8/11: $0\vreadwire[9:0]
     9/11: $0\hreadwire[9:0]
    10/11: $0\v_sync[0:0]
    11/11: $0\h_sync[0:0]
Creating decoders for process `\memcell.$proc$src/meta_memcell.v:22$498'.
     1/1: $0\priv_mem[2:0]

16.3.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\cellstorage.\itetron_blk_h[0]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1313'.
No latch inferred for signal `\cellstorage.\itetron_blk_h[1]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1313'.
No latch inferred for signal `\cellstorage.\itetron_blk_h[2]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1313'.
No latch inferred for signal `\cellstorage.\itetron_blk_h[3]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1313'.
No latch inferred for signal `\cellstorage.\itetron_blk_v[0]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1313'.
No latch inferred for signal `\cellstorage.\itetron_blk_v[1]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1313'.
No latch inferred for signal `\cellstorage.\itetron_blk_v[2]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1313'.
No latch inferred for signal `\cellstorage.\itetron_blk_v[3]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1313'.
No latch inferred for signal `\color_lut.\color' from process `\color_lut.$proc$src/color_lut.v:8$827'.
No latch inferred for signal `\blknum_horizontal.\locators[0]' from process `\blknum_horizontal.$proc$src/mod24.v:0$677'.
No latch inferred for signal `\blknum_horizontal.\locators[1]' from process `\blknum_horizontal.$proc$src/mod24.v:0$677'.
No latch inferred for signal `\blknum_horizontal.\locators[2]' from process `\blknum_horizontal.$proc$src/mod24.v:0$677'.
No latch inferred for signal `\blknum_horizontal.\locators[3]' from process `\blknum_horizontal.$proc$src/mod24.v:0$677'.
No latch inferred for signal `\blknum_horizontal.\locators[4]' from process `\blknum_horizontal.$proc$src/mod24.v:0$677'.
No latch inferred for signal `\blknum_horizontal.\locators[5]' from process `\blknum_horizontal.$proc$src/mod24.v:0$677'.
No latch inferred for signal `\blknum_horizontal.\locators[6]' from process `\blknum_horizontal.$proc$src/mod24.v:0$677'.
No latch inferred for signal `\blknum_horizontal.\locators[7]' from process `\blknum_horizontal.$proc$src/mod24.v:0$677'.
No latch inferred for signal `\blknum_horizontal.\locators[8]' from process `\blknum_horizontal.$proc$src/mod24.v:0$677'.
No latch inferred for signal `\blknum_horizontal.\locators[9]' from process `\blknum_horizontal.$proc$src/mod24.v:0$677'.
No latch inferred for signal `\blknum_horizontal.\locators[10]' from process `\blknum_horizontal.$proc$src/mod24.v:0$677'.
No latch inferred for signal `\blknum_horizontal.\locators[11]' from process `\blknum_horizontal.$proc$src/mod24.v:0$677'.
No latch inferred for signal `\blknum_horizontal.\locators[12]' from process `\blknum_horizontal.$proc$src/mod24.v:0$677'.
No latch inferred for signal `\blknum_horizontal.\locators[13]' from process `\blknum_horizontal.$proc$src/mod24.v:0$677'.
No latch inferred for signal `\blknum_horizontal.\locators[14]' from process `\blknum_horizontal.$proc$src/mod24.v:0$677'.
No latch inferred for signal `\blknum_horizontal.\locators[15]' from process `\blknum_horizontal.$proc$src/mod24.v:0$677'.
No latch inferred for signal `\blknum_horizontal.\locators[16]' from process `\blknum_horizontal.$proc$src/mod24.v:0$677'.
No latch inferred for signal `\blknum_horizontal.\locators[17]' from process `\blknum_horizontal.$proc$src/mod24.v:0$677'.
No latch inferred for signal `\blknum_horizontal.\locators[18]' from process `\blknum_horizontal.$proc$src/mod24.v:0$677'.
No latch inferred for signal `\blknum_horizontal.\locators[19]' from process `\blknum_horizontal.$proc$src/mod24.v:0$677'.
No latch inferred for signal `\blknum_horizontal.\locators[20]' from process `\blknum_horizontal.$proc$src/mod24.v:0$677'.
No latch inferred for signal `\blknum_horizontal.\locators[21]' from process `\blknum_horizontal.$proc$src/mod24.v:0$677'.
No latch inferred for signal `\blknum_horizontal.\locators[22]' from process `\blknum_horizontal.$proc$src/mod24.v:0$677'.
No latch inferred for signal `\blknum_horizontal.\locators[23]' from process `\blknum_horizontal.$proc$src/mod24.v:0$677'.

16.3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\cellstorage.\movement_request' using process `\cellstorage.$proc$src/volatile_cell_storage.v:76$1272'.
  created $dff cell `$procdff$1986' with positive edge clock.
Creating register for signal `\cellstorage.\movement_intent' using process `\cellstorage.$proc$src/volatile_cell_storage.v:76$1272'.
  created $dff cell `$procdff$1987' with positive edge clock.
Creating register for signal `\cellstorage.\volatile_blk_color' using process `\cellstorage.$proc$src/volatile_cell_storage.v:76$1272'.
  created $dff cell `$procdff$1988' with positive edge clock.
Creating register for signal `\cellstorage.\tetron_v' using process `\cellstorage.$proc$src/volatile_cell_storage.v:76$1272'.
  created $dff cell `$procdff$1989' with positive edge clock.
Creating register for signal `\cellstorage.\tetron_h' using process `\cellstorage.$proc$src/volatile_cell_storage.v:76$1272'.
  created $dff cell `$procdff$1990' with positive edge clock.
Creating register for signal `\cellstorage.\tetron_rotation' using process `\cellstorage.$proc$src/volatile_cell_storage.v:76$1272'.
  created $dff cell `$procdff$1991' with positive edge clock.
Creating register for signal `\cellstorage.\keep_tetron_v' using process `\cellstorage.$proc$src/volatile_cell_storage.v:76$1272'.
  created $dff cell `$procdff$1992' with positive edge clock.
Creating register for signal `\cellstorage.\keep_tetron_h' using process `\cellstorage.$proc$src/volatile_cell_storage.v:76$1272'.
  created $dff cell `$procdff$1993' with positive edge clock.
Creating register for signal `\cellstorage.\keep_tetron_rotation' using process `\cellstorage.$proc$src/volatile_cell_storage.v:76$1272'.
  created $dff cell `$procdff$1994' with positive edge clock.
Creating register for signal `\cellstorage.\tetron_type' using process `\cellstorage.$proc$src/volatile_cell_storage.v:76$1272'.
  created $dff cell `$procdff$1995' with positive edge clock.
Creating register for signal `\cellstorage.\movement_available' using process `\cellstorage.$proc$src/volatile_cell_storage.v:76$1272'.
  created $dff cell `$procdff$1996' with positive edge clock.
Creating register for signal `\cellstorage.\cooldown' using process `\cellstorage.$proc$src/volatile_cell_storage.v:76$1272'.
  created $dff cell `$procdff$1997' with positive edge clock.
Creating register for signal `\cellstorage.\postdecline_cool' using process `\cellstorage.$proc$src/volatile_cell_storage.v:76$1272'.
  created $dff cell `$procdff$1998' with positive edge clock.
Creating register for signal `\cellstorage.\process_steal' using process `\cellstorage.$proc$src/volatile_cell_storage.v:76$1272'.
  created $dff cell `$procdff$1999' with positive edge clock.
Creating register for signal `\cellstorage.\state' using process `\cellstorage.$proc$src/volatile_cell_storage.v:76$1272'.
  created $dff cell `$procdff$2000' with positive edge clock.
Creating register for signal `\cellstorage.\buttdebounceL' using process `\cellstorage.$proc$src/volatile_cell_storage.v:76$1272'.
  created $dff cell `$procdff$2001' with positive edge clock.
Creating register for signal `\cellstorage.\buttdebounceR' using process `\cellstorage.$proc$src/volatile_cell_storage.v:76$1272'.
  created $dff cell `$procdff$2002' with positive edge clock.
Creating register for signal `\cellstorage.\buttdebounceT' using process `\cellstorage.$proc$src/volatile_cell_storage.v:76$1272'.
  created $dff cell `$procdff$2003' with positive edge clock.
Creating register for signal `\cellstorage.\process_decline' using process `\cellstorage.$proc$src/volatile_cell_storage.v:76$1272'.
  created $dff cell `$procdff$2004' with positive edge clock.
Creating register for signal `\SB_DFFNES.\Q' using process `\SB_DFFNES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1386$1115'.
  created $adff cell `$procdff$2005' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESS.\Q' using process `\SB_DFFNESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1328$1108'.
  created $dff cell `$procdff$2006' with negative edge clock.
Creating register for signal `\SB_DFFNER.\Q' using process `\SB_DFFNER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1251$1104'.
  created $adff cell `$procdff$2007' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESR.\Q' using process `\SB_DFFNESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1193$1097'.
  created $dff cell `$procdff$2008' with negative edge clock.
Creating register for signal `\SB_DFFNS.\Q' using process `\SB_DFFNS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1122$1094'.
  created $adff cell `$procdff$2009' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSS.\Q' using process `\SB_DFFNSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1072$1091'.
  created $dff cell `$procdff$2010' with negative edge clock.
Creating register for signal `\SB_DFFNR.\Q' using process `\SB_DFFNR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1001$1088'.
  created $adff cell `$procdff$2011' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSR.\Q' using process `\SB_DFFNSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:951$1085'.
  created $dff cell `$procdff$2012' with negative edge clock.
Creating register for signal `\SB_DFFNE.\Q' using process `\SB_DFFNE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:906$1083'.
  created $dff cell `$procdff$2013' with negative edge clock.
Creating register for signal `\SB_DFFN.\Q' using process `\SB_DFFN.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:868$1081'.
  created $dff cell `$procdff$2014' with negative edge clock.
Creating register for signal `\SB_DFFES.\Q' using process `\SB_DFFES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:789$1077'.
  created $adff cell `$procdff$2015' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESS.\Q' using process `\SB_DFFESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:731$1070'.
  created $dff cell `$procdff$2016' with positive edge clock.
Creating register for signal `\SB_DFFER.\Q' using process `\SB_DFFER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:654$1066'.
  created $adff cell `$procdff$2017' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESR.\Q' using process `\SB_DFFESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:596$1059'.
  created $dff cell `$procdff$2018' with positive edge clock.
Creating register for signal `\SB_DFFS.\Q' using process `\SB_DFFS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:525$1056'.
  created $adff cell `$procdff$2019' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSS.\Q' using process `\SB_DFFSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:475$1053'.
  created $dff cell `$procdff$2020' with positive edge clock.
Creating register for signal `\SB_DFFR.\Q' using process `\SB_DFFR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:404$1050'.
  created $adff cell `$procdff$2021' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSR.\Q' using process `\SB_DFFSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:354$1047'.
  created $dff cell `$procdff$2022' with positive edge clock.
Creating register for signal `\SB_DFFE.\Q' using process `\SB_DFFE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:309$1045'.
  created $dff cell `$procdff$2023' with positive edge clock.
Creating register for signal `\SB_DFF.\Q' using process `\SB_DFF.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:271$1043'.
  created $dff cell `$procdff$2024' with positive edge clock.
Creating register for signal `\blkmemory.\movement_declined' using process `\blkmemory.$proc$src/blockmemory.v:89$844'.
  created $dff cell `$procdff$2025' with positive edge clock.
Creating register for signal `\blkmemory.\movement_commit' using process `\blkmemory.$proc$src/blockmemory.v:89$844'.
  created $dff cell `$procdff$2026' with positive edge clock.
Creating register for signal `\blkmemory.\movement_steal' using process `\blkmemory.$proc$src/blockmemory.v:89$844'.
  created $dff cell `$procdff$2027' with positive edge clock.
Creating register for signal `\blkmemory.\proposed_memval' using process `\blkmemory.$proc$src/blockmemory.v:89$844'.
  created $dff cell `$procdff$2028' with positive edge clock.
Creating register for signal `\blkmemory.\mm_colosetter_x' using process `\blkmemory.$proc$src/blockmemory.v:89$844'.
  created $dff cell `$procdff$2029' with positive edge clock.
Creating register for signal `\blkmemory.\mm_colosetter_y' using process `\blkmemory.$proc$src/blockmemory.v:89$844'.
  created $dff cell `$procdff$2030' with positive edge clock.
Creating register for signal `\blkmemory.\mm_colorsetter_commit' using process `\blkmemory.$proc$src/blockmemory.v:89$844'.
  created $dff cell `$procdff$2031' with positive edge clock.
Creating register for signal `\blkmemory.\mm_colorsetter_value' using process `\blkmemory.$proc$src/blockmemory.v:89$844'.
  created $dff cell `$procdff$2032' with positive edge clock.
Creating register for signal `\blkmemory.\stealstatus' using process `\blkmemory.$proc$src/blockmemory.v:89$844'.
  created $dff cell `$procdff$2033' with positive edge clock.
Creating register for signal `\blkmemory.\resetperiod' using process `\blkmemory.$proc$src/blockmemory.v:89$844'.
  created $dff cell `$procdff$2034' with positive edge clock.
Creating register for signal `\blkmemory.\resetperiod_state' using process `\blkmemory.$proc$src/blockmemory.v:89$844'.
  created $dff cell `$procdff$2035' with positive edge clock.
Creating register for signal `\blkmemory.\perq' using process `\blkmemory.$proc$src/blockmemory.v:89$844'.
  created $dff cell `$procdff$2036' with positive edge clock.
Creating register for signal `\gmanager.\pixstream' using process `\gmanager.$proc$src/gmanager.v:69$595'.
  created $dff cell `$procdff$2037' with positive edge clock.
Creating register for signal `\gmanager.\ipixstream' using process `\gmanager.$proc$src/gmanager.v:69$595'.
  created $dff cell `$procdff$2038' with positive edge clock.
Creating register for signal `\top.\reset' using process `\top.$proc$src/top.v:33$579'.
  created $dff cell `$procdff$2039' with positive edge clock.
Creating register for signal `\top.\resetn_gen' using process `\top.$proc$src/top.v:33$579'.
  created $dff cell `$procdff$2040' with positive edge clock.
Creating register for signal `\tetron_I_shaper.\blk1_voffset' using process `\tetron_I_shaper.$proc$src/tetron_I.v:19$573'.
  created $dff cell `$procdff$2041' with positive edge clock.
Creating register for signal `\tetron_I_shaper.\blk1_hoffset' using process `\tetron_I_shaper.$proc$src/tetron_I.v:19$573'.
  created $dff cell `$procdff$2042' with positive edge clock.
Creating register for signal `\tetron_I_shaper.\blk2_voffset' using process `\tetron_I_shaper.$proc$src/tetron_I.v:19$573'.
  created $dff cell `$procdff$2043' with positive edge clock.
Creating register for signal `\tetron_I_shaper.\blk2_hoffset' using process `\tetron_I_shaper.$proc$src/tetron_I.v:19$573'.
  created $dff cell `$procdff$2044' with positive edge clock.
Creating register for signal `\tetron_I_shaper.\blk3_voffset' using process `\tetron_I_shaper.$proc$src/tetron_I.v:19$573'.
  created $dff cell `$procdff$2045' with positive edge clock.
Creating register for signal `\tetron_I_shaper.\blk3_hoffset' using process `\tetron_I_shaper.$proc$src/tetron_I.v:19$573'.
  created $dff cell `$procdff$2046' with positive edge clock.
Creating register for signal `\tetron_I_shaper.\blk4_voffset' using process `\tetron_I_shaper.$proc$src/tetron_I.v:19$573'.
  created $dff cell `$procdff$2047' with positive edge clock.
Creating register for signal `\tetron_I_shaper.\blk4_hoffset' using process `\tetron_I_shaper.$proc$src/tetron_I.v:19$573'.
  created $dff cell `$procdff$2048' with positive edge clock.
Creating register for signal `\timer.\trigger' using process `\timer.$proc$src/timer.v:10$520'.
  created $dff cell `$procdff$2049' with positive edge clock.
Creating register for signal `\timer.\counter' using process `\timer.$proc$src/timer.v:10$520'.
  created $dff cell `$procdff$2050' with positive edge clock.
Creating register for signal `\VGAcore.\h_sync' using process `\VGAcore.$proc$src/vga_core.v:64$504'.
  created $dff cell `$procdff$2051' with positive edge clock.
Creating register for signal `\VGAcore.\v_sync' using process `\VGAcore.$proc$src/vga_core.v:64$504'.
  created $dff cell `$procdff$2052' with positive edge clock.
Creating register for signal `\VGAcore.\hreadwire' using process `\VGAcore.$proc$src/vga_core.v:64$504'.
  created $dff cell `$procdff$2053' with positive edge clock.
Creating register for signal `\VGAcore.\vreadwire' using process `\VGAcore.$proc$src/vga_core.v:64$504'.
  created $dff cell `$procdff$2054' with positive edge clock.
Creating register for signal `\VGAcore.\hscan_pos' using process `\VGAcore.$proc$src/vga_core.v:64$504'.
  created $dff cell `$procdff$2055' with positive edge clock.
Creating register for signal `\VGAcore.\vscan_pos' using process `\VGAcore.$proc$src/vga_core.v:64$504'.
  created $dff cell `$procdff$2056' with positive edge clock.
Creating register for signal `\VGAcore.\proposed_r' using process `\VGAcore.$proc$src/vga_core.v:64$504'.
  created $dff cell `$procdff$2057' with positive edge clock.
Creating register for signal `\VGAcore.\proposed_b' using process `\VGAcore.$proc$src/vga_core.v:64$504'.
  created $dff cell `$procdff$2058' with positive edge clock.
Creating register for signal `\VGAcore.\proposed_g' using process `\VGAcore.$proc$src/vga_core.v:64$504'.
  created $dff cell `$procdff$2059' with positive edge clock.
Creating register for signal `\VGAcore.\h_drawing_pixels' using process `\VGAcore.$proc$src/vga_core.v:64$504'.
  created $dff cell `$procdff$2060' with positive edge clock.
Creating register for signal `\VGAcore.\v_drawing_pixels' using process `\VGAcore.$proc$src/vga_core.v:64$504'.
  created $dff cell `$procdff$2061' with positive edge clock.
Creating register for signal `\memcell.\priv_mem' using process `\memcell.$proc$src/meta_memcell.v:22$498'.
  created $dff cell `$procdff$2062' with positive edge clock.

16.3.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

16.3.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `cellstorage.$proc$src/volatile_cell_storage.v:0$1313'.
Found and cleaned up 12 empty switches in `\cellstorage.$proc$src/volatile_cell_storage.v:76$1272'.
Removing empty process `cellstorage.$proc$src/volatile_cell_storage.v:76$1272'.
Removing empty process `SB_DFFNES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1118'.
Found and cleaned up 1 empty switch in `\SB_DFFNES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1386$1115'.
Removing empty process `SB_DFFNES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1386$1115'.
Removing empty process `SB_DFFNESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1114'.
Found and cleaned up 2 empty switches in `\SB_DFFNESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1328$1108'.
Removing empty process `SB_DFFNESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1328$1108'.
Removing empty process `SB_DFFNER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1107'.
Found and cleaned up 1 empty switch in `\SB_DFFNER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1251$1104'.
Removing empty process `SB_DFFNER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1251$1104'.
Removing empty process `SB_DFFNESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1103'.
Found and cleaned up 2 empty switches in `\SB_DFFNESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1193$1097'.
Removing empty process `SB_DFFNESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1193$1097'.
Removing empty process `SB_DFFNS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1096'.
Removing empty process `SB_DFFNS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1122$1094'.
Removing empty process `SB_DFFNSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1093'.
Found and cleaned up 1 empty switch in `\SB_DFFNSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1072$1091'.
Removing empty process `SB_DFFNSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1072$1091'.
Removing empty process `SB_DFFNR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1090'.
Removing empty process `SB_DFFNR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1001$1088'.
Removing empty process `SB_DFFNSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1087'.
Found and cleaned up 1 empty switch in `\SB_DFFNSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:951$1085'.
Removing empty process `SB_DFFNSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:951$1085'.
Removing empty process `SB_DFFNE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1084'.
Found and cleaned up 1 empty switch in `\SB_DFFNE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:906$1083'.
Removing empty process `SB_DFFNE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:906$1083'.
Removing empty process `SB_DFFN.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1082'.
Removing empty process `SB_DFFN.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:868$1081'.
Removing empty process `SB_DFFES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1080'.
Found and cleaned up 1 empty switch in `\SB_DFFES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:789$1077'.
Removing empty process `SB_DFFES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:789$1077'.
Removing empty process `SB_DFFESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1076'.
Found and cleaned up 2 empty switches in `\SB_DFFESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:731$1070'.
Removing empty process `SB_DFFESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:731$1070'.
Removing empty process `SB_DFFER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1069'.
Found and cleaned up 1 empty switch in `\SB_DFFER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:654$1066'.
Removing empty process `SB_DFFER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:654$1066'.
Removing empty process `SB_DFFESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1065'.
Found and cleaned up 2 empty switches in `\SB_DFFESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:596$1059'.
Removing empty process `SB_DFFESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:596$1059'.
Removing empty process `SB_DFFS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1058'.
Removing empty process `SB_DFFS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:525$1056'.
Removing empty process `SB_DFFSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1055'.
Found and cleaned up 1 empty switch in `\SB_DFFSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:475$1053'.
Removing empty process `SB_DFFSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:475$1053'.
Removing empty process `SB_DFFR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1052'.
Removing empty process `SB_DFFR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:404$1050'.
Removing empty process `SB_DFFSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1049'.
Found and cleaned up 1 empty switch in `\SB_DFFSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:354$1047'.
Removing empty process `SB_DFFSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:354$1047'.
Removing empty process `SB_DFFE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1046'.
Found and cleaned up 1 empty switch in `\SB_DFFE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:309$1045'.
Removing empty process `SB_DFFE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:309$1045'.
Removing empty process `SB_DFF.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1044'.
Removing empty process `SB_DFF.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:271$1043'.
Found and cleaned up 17 empty switches in `\blkmemory.$proc$src/blockmemory.v:89$844'.
Removing empty process `blkmemory.$proc$src/blockmemory.v:89$844'.
Found and cleaned up 1 empty switch in `\color_lut.$proc$src/color_lut.v:8$827'.
Removing empty process `color_lut.$proc$src/color_lut.v:8$827'.
Removing empty process `blknum_horizontal.$proc$src/mod24.v:0$677'.
Found and cleaned up 3 empty switches in `\gmanager.$proc$src/gmanager.v:69$595'.
Removing empty process `gmanager.$proc$src/gmanager.v:69$595'.
Removing empty process `top.$proc$src/top.v:29$581'.
Removing empty process `top.$proc$src/top.v:33$579'.
Found and cleaned up 5 empty switches in `\tetron_I_shaper.$proc$src/tetron_I.v:19$573'.
Removing empty process `tetron_I_shaper.$proc$src/tetron_I.v:19$573'.
Found and cleaned up 2 empty switches in `\timer.$proc$src/timer.v:10$520'.
Removing empty process `timer.$proc$src/timer.v:10$520'.
Found and cleaned up 3 empty switches in `\VGAcore.$proc$src/vga_core.v:64$504'.
Removing empty process `VGAcore.$proc$src/vga_core.v:64$504'.
Found and cleaned up 3 empty switches in `\memcell.$proc$src/meta_memcell.v:22$498'.
Removing empty process `memcell.$proc$src/meta_memcell.v:22$498'.
Cleaned up 64 empty switches.

16.3.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module cellstorage.
<suppressed ~21 debug messages>
Optimizing module blkmemory.
<suppressed ~15 debug messages>
Optimizing module color_lut.
<suppressed ~1 debug messages>
Optimizing module blkoffset_horizontal.
Optimizing module offsetmap.
<suppressed ~1 debug messages>
Optimizing module blknum_horizontal.
<suppressed ~1 debug messages>
Optimizing module shader.
<suppressed ~1 debug messages>
Optimizing module gmanager.
<suppressed ~5 debug messages>
Optimizing module top.
Optimizing module tetron_I_shaper.
<suppressed ~9 debug messages>
Optimizing module vga_pll.
Optimizing module timer.
<suppressed ~2 debug messages>
Optimizing module VGAcore.
<suppressed ~11 debug messages>
Optimizing module memcell.
<suppressed ~1 debug messages>
Optimizing module memcell_row.
<suppressed ~2 debug messages>
Optimizing module shifter.
Optimizing module memory.
<suppressed ~6 debug messages>

16.4. Executing FLATTEN pass (flatten design).
Deleting now unused module cellstorage.
Deleting now unused module blkmemory.
Deleting now unused module color_lut.
Deleting now unused module blkoffset_horizontal.
Deleting now unused module offsetmap.
Deleting now unused module blknum_horizontal.
Deleting now unused module shader.
Deleting now unused module gmanager.
Deleting now unused module tetron_I_shaper.
Deleting now unused module vga_pll.
Deleting now unused module timer.
Deleting now unused module VGAcore.
Deleting now unused module memcell.
Deleting now unused module memcell_row.
Deleting now unused module shifter.
Deleting now unused module memory.
<suppressed ~49 debug messages>

16.5. Executing TRIBUF pass.

16.6. Executing DEMINOUT pass (demote inout ports to input or output).

16.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~305 debug messages>

16.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 378 unused cells and 2960 unused wires.
<suppressed ~422 debug messages>

16.9. Executing CHECK pass (checking for obvious problems).
Checking module top...
Found and reported 0 problems.

16.10. Executing OPT pass (performing simple optimizations).

16.10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~1 debug messages>

16.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~1701 debug messages>
Removed a total of 567 cells.

16.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $flatten\memory.$procmux$1590: \memory.resetperiod -> 1'0
      Replacing known input bits on port A of cell $flatten\memory.$procmux$1588: \memory.resetperiod -> 1'1
      Replacing known input bits on port A of cell $flatten\vcell.$procmux$1375: \vcell.movement_available -> 1'1
      Replacing known input bits on port A of cell $flatten\vcell.$procmux$1368: \vcell.movement_available -> 1'0
  Analyzing evaluation results.
    dead port 2/2 on $mux $flatten\game_manager.$procmux$1820.
    dead port 2/2 on $mux $flatten\game_manager.$procmux$1823.
    dead port 2/2 on $mux $flatten\game_manager.$procmux$1829.
Removed 3 multiplexer ports.
<suppressed ~774 debug messages>

16.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

16.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

16.10.6. Executing OPT_DFF pass (perform DFF optimizations).

16.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 586 unused wires.
<suppressed ~16 debug messages>

16.10.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

16.10.9. Rerunning OPT passes. (Maybe there is more to do..)

16.10.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~774 debug messages>

16.10.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

16.10.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

16.10.13. Executing OPT_DFF pass (perform DFF optimizations).

16.10.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

16.10.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

16.10.16. Finished OPT passes. (There is nothing left to do.)

16.11. Executing FSM pass (extract and optimize FSM).

16.11.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking top.game_manager.ipixstream as FSM state register:
    Users of register don't seem to benefit from recoding.
Found FSM state register top.memory.stealstatus.
Not marking top.vcell.ishaper.blk1_hoffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.ishaper.blk1_voffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.ishaper.blk2_hoffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.ishaper.blk2_voffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.ishaper.blk3_hoffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.ishaper.blk3_voffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.ishaper.blk4_hoffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.ishaper.blk4_voffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Found FSM state register top.vcell.tetron_type.

16.11.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\memory.stealstatus' from module `\top'.
  found $dff cell for state register: $flatten\memory.$procdff$2033
  root of input selection tree: $flatten\memory.$0\stealstatus[3:0]
  found reset state: 4'0000 (guessed from mux tree)
  found ctrl input: \reset
  found state code: 4'0000
  found ctrl input: \memory.resetperiod
  found ctrl input: $flatten\memory.$gt$src/blockmemory.v:135$862_Y
  found ctrl input: $flatten\memory.$and$src/blockmemory.v:126$860_Y
  found ctrl input: $flatten\memory.$eq$src/blockmemory.v:126$859_Y
  found ctrl input: $flatten\memory.$eq$src/blockmemory.v:136$863_Y
  found ctrl input: $flatten\memory.$procmux$1614_CMP
  found ctrl input: \vcell.movement_intent
  found ctrl input: $flatten\memory.$eq$src/blockmemory.v:166$871_Y
  found ctrl input: $flatten\memory.$eq$src/blockmemory.v:158$869_Y
  found ctrl input: $flatten\memory.$eq$src/blockmemory.v:150$867_Y
  found ctrl input: $flatten\memory.$eq$src/blockmemory.v:142$865_Y
  found state code: 4'0001
  found state code: 4'0010
  found state code: 4'0011
  found state code: 4'0100
  found ctrl output: $flatten\memory.$eq$src/blockmemory.v:166$871_Y
  found ctrl output: $flatten\memory.$eq$src/blockmemory.v:158$869_Y
  found ctrl output: $flatten\memory.$eq$src/blockmemory.v:150$867_Y
  found ctrl output: $flatten\memory.$eq$src/blockmemory.v:142$865_Y
  ctrl inputs: { \vcell.movement_intent \memory.resetperiod $flatten\memory.$eq$src/blockmemory.v:126$859_Y $flatten\memory.$and$src/blockmemory.v:126$860_Y $flatten\memory.$gt$src/blockmemory.v:135$862_Y $flatten\memory.$eq$src/blockmemory.v:136$863_Y $flatten\memory.$procmux$1614_CMP \reset }
  ctrl outputs: { $flatten\memory.$0\stealstatus[3:0] $flatten\memory.$eq$src/blockmemory.v:142$865_Y $flatten\memory.$eq$src/blockmemory.v:150$867_Y $flatten\memory.$eq$src/blockmemory.v:158$869_Y $flatten\memory.$eq$src/blockmemory.v:166$871_Y }
  transition:     4'0000 8'-------0 ->     4'0000 8'00001000
  transition:     4'0000 8'-0000--1 ->     4'0000 8'00001000
  transition:     4'0000 8'-0100--1 ->     4'0000 8'00001000
  transition:     4'0000 8'-0-10--1 ->     4'0000 8'00001000
  transition:     4'0000 8'-00010-1 ->     4'0000 8'00001000
  transition:     4'0000 8'-01010-1 ->     4'0000 8'00001000
  transition:     4'0000 8'-0-110-1 ->     4'0000 8'00001000
  transition:     4'0000 8'-0001101 ->     4'0000 8'00001000
  transition:     4'0000 8'-0101101 ->     4'0000 8'00001000
  transition:     4'0000 8'-0-11101 ->     4'0000 8'00001000
  transition:     4'0000 8'00--1111 ->     4'0001 8'00011000
  transition:     4'0000 8'10001111 ->     4'0000 8'00001000
  transition:     4'0000 8'10101111 ->     4'0000 8'00001000
  transition:     4'0000 8'10-11111 ->     4'0000 8'00001000
  transition:     4'0000 8'-1-----1 ->     4'0000 8'00001000
  transition:     4'0100 8'-------0 ->     4'0000 8'00000000
  transition:     4'0100 8'-0000--1 ->     4'0100 8'01000000
  transition:     4'0100 8'-0100--1 ->     4'0000 8'00000000
  transition:     4'0100 8'-0-10--1 ->     4'0100 8'01000000
  transition:     4'0100 8'-00010-1 ->     4'0100 8'01000000
  transition:     4'0100 8'-01010-1 ->     4'0000 8'00000000
  transition:     4'0100 8'-0-110-1 ->     4'0100 8'01000000
  transition:     4'0100 8'-0001101 ->     4'0100 8'01000000
  transition:     4'0100 8'-0101101 ->     4'0000 8'00000000
  transition:     4'0100 8'-0-11101 ->     4'0100 8'01000000
  transition:     4'0100 8'00001111 ->     4'0100 8'01000000
  transition:     4'0100 8'00101111 ->     4'0000 8'00000000
  transition:     4'0100 8'00-11111 ->     4'0100 8'01000000
  transition:     4'0100 8'10001111 ->     4'0100 8'01000000
  transition:     4'0100 8'10101111 ->     4'0000 8'00000000
  transition:     4'0100 8'10-11111 ->     4'0100 8'01000000
  transition:     4'0100 8'-1-----1 ->     4'0100 8'01000000
  transition:     4'0010 8'-------0 ->     4'0000 8'00000010
  transition:     4'0010 8'-0000--1 ->     4'0010 8'00100010
  transition:     4'0010 8'-0100--1 ->     4'0000 8'00000010
  transition:     4'0010 8'-0-10--1 ->     4'0010 8'00100010
  transition:     4'0010 8'-00010-1 ->     4'0010 8'00100010
  transition:     4'0010 8'-01010-1 ->     4'0000 8'00000010
  transition:     4'0010 8'-0-110-1 ->     4'0010 8'00100010
  transition:     4'0010 8'-0001101 ->     4'0010 8'00100010
  transition:     4'0010 8'-0101101 ->     4'0000 8'00000010
  transition:     4'0010 8'-0-11101 ->     4'0010 8'00100010
  transition:     4'0010 8'00--1111 ->     4'0011 8'00110010
  transition:     4'0010 8'10001111 ->     4'0010 8'00100010
  transition:     4'0010 8'10101111 ->     4'0000 8'00000010
  transition:     4'0010 8'10-11111 ->     4'0010 8'00100010
  transition:     4'0010 8'-1-----1 ->     4'0010 8'00100010
  transition:     4'0001 8'-------0 ->     4'0000 8'00000100
  transition:     4'0001 8'-0000--1 ->     4'0001 8'00010100
  transition:     4'0001 8'-0100--1 ->     4'0000 8'00000100
  transition:     4'0001 8'-0-10--1 ->     4'0001 8'00010100
  transition:     4'0001 8'-00010-1 ->     4'0001 8'00010100
  transition:     4'0001 8'-01010-1 ->     4'0000 8'00000100
  transition:     4'0001 8'-0-110-1 ->     4'0001 8'00010100
  transition:     4'0001 8'-0001101 ->     4'0001 8'00010100
  transition:     4'0001 8'-0101101 ->     4'0000 8'00000100
  transition:     4'0001 8'-0-11101 ->     4'0001 8'00010100
  transition:     4'0001 8'00--1111 ->     4'0010 8'00100100
  transition:     4'0001 8'10001111 ->     4'0001 8'00010100
  transition:     4'0001 8'10101111 ->     4'0000 8'00000100
  transition:     4'0001 8'10-11111 ->     4'0001 8'00010100
  transition:     4'0001 8'-1-----1 ->     4'0001 8'00010100
  transition:     4'0011 8'-------0 ->     4'0000 8'00000001
  transition:     4'0011 8'-0000--1 ->     4'0011 8'00110001
  transition:     4'0011 8'-0100--1 ->     4'0000 8'00000001
  transition:     4'0011 8'-0-10--1 ->     4'0011 8'00110001
  transition:     4'0011 8'-00010-1 ->     4'0011 8'00110001
  transition:     4'0011 8'-01010-1 ->     4'0000 8'00000001
  transition:     4'0011 8'-0-110-1 ->     4'0011 8'00110001
  transition:     4'0011 8'-0001101 ->     4'0011 8'00110001
  transition:     4'0011 8'-0101101 ->     4'0000 8'00000001
  transition:     4'0011 8'-0-11101 ->     4'0011 8'00110001
  transition:     4'0011 8'00--1111 ->     4'0100 8'01000001
  transition:     4'0011 8'10001111 ->     4'0011 8'00110001
  transition:     4'0011 8'10101111 ->     4'0000 8'00000001
  transition:     4'0011 8'10-11111 ->     4'0011 8'00110001
  transition:     4'0011 8'-1-----1 ->     4'0011 8'00110001
Extracting FSM `\vcell.tetron_type' from module `\top'.
  found $dff cell for state register: $flatten\vcell.$procdff$1995
  root of input selection tree: $flatten\vcell.$0\tetron_type[3:0]
  found reset state: 4'0000 (guessed from mux tree)
  found ctrl input: \reset
  found state code: 4'0000
  fsm extraction failed: at least two states are required.

16.11.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\memory.stealstatus$2063' from module `\top'.
  Merging pattern 8'-0001101 and 8'-0101101 from group (0 0 8'00001000).
  Merging pattern 8'-0101101 and 8'-0001101 from group (0 0 8'00001000).
  Merging pattern 8'10001111 and 8'10101111 from group (0 0 8'00001000).
  Merging pattern 8'10101111 and 8'10001111 from group (0 0 8'00001000).
  Merging pattern 8'-00010-1 and 8'-01010-1 from group (0 0 8'00001000).
  Merging pattern 8'-01010-1 and 8'-00010-1 from group (0 0 8'00001000).
  Merging pattern 8'-0000--1 and 8'-0100--1 from group (0 0 8'00001000).
  Merging pattern 8'-0100--1 and 8'-0000--1 from group (0 0 8'00001000).
  Merging pattern 8'-0-01101 and 8'-0-11101 from group (0 0 8'00001000).
  Merging pattern 8'-0-11101 and 8'-0-01101 from group (0 0 8'00001000).
  Merging pattern 8'10-01111 and 8'10-11111 from group (0 0 8'00001000).
  Merging pattern 8'10-11111 and 8'10-01111 from group (0 0 8'00001000).
  Merging pattern 8'-0-010-1 and 8'-0-110-1 from group (0 0 8'00001000).
  Merging pattern 8'-0-110-1 and 8'-0-010-1 from group (0 0 8'00001000).
  Merging pattern 8'-0-00--1 and 8'-0-10--1 from group (0 0 8'00001000).
  Merging pattern 8'-0-10--1 and 8'-0-00--1 from group (0 0 8'00001000).
  Merging pattern 8'00101111 and 8'10101111 from group (1 0 8'00000000).
  Merging pattern 8'10101111 and 8'00101111 from group (1 0 8'00000000).
  Merging pattern 8'-0101101 and 8'-0101111 from group (1 0 8'00000000).
  Merging pattern 8'-0101111 and 8'-0101101 from group (1 0 8'00000000).
  Merging pattern 8'-01010-1 and 8'-01011-1 from group (1 0 8'00000000).
  Merging pattern 8'-01011-1 and 8'-01010-1 from group (1 0 8'00000000).
  Merging pattern 8'-0100--1 and 8'-0101--1 from group (1 0 8'00000000).
  Merging pattern 8'-0101--1 and 8'-0100--1 from group (1 0 8'00000000).
  Merging pattern 8'00001111 and 8'10001111 from group (1 1 8'01000000).
  Merging pattern 8'10001111 and 8'00001111 from group (1 1 8'01000000).
  Merging pattern 8'00-11111 and 8'10-11111 from group (1 1 8'01000000).
  Merging pattern 8'10-11111 and 8'00-11111 from group (1 1 8'01000000).
  Merging pattern 8'-0001101 and 8'-0001111 from group (1 1 8'01000000).
  Merging pattern 8'-0-11101 and 8'-0-11111 from group (1 1 8'01000000).
  Merging pattern 8'-0001111 and 8'-0001101 from group (1 1 8'01000000).
  Merging pattern 8'-0-11111 and 8'-0-11101 from group (1 1 8'01000000).
  Merging pattern 8'-00010-1 and 8'-00011-1 from group (1 1 8'01000000).
  Merging pattern 8'-0-110-1 and 8'-0-111-1 from group (1 1 8'01000000).
  Merging pattern 8'-00011-1 and 8'-00010-1 from group (1 1 8'01000000).
  Merging pattern 8'-0-111-1 and 8'-0-110-1 from group (1 1 8'01000000).
  Merging pattern 8'-0000--1 and 8'-0001--1 from group (1 1 8'01000000).
  Merging pattern 8'-0-10--1 and 8'-0-11--1 from group (1 1 8'01000000).
  Merging pattern 8'-0001--1 and 8'-0000--1 from group (1 1 8'01000000).
  Merging pattern 8'-0-11--1 and 8'-0-10--1 from group (1 1 8'01000000).

16.11.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 17 unused cells and 17 unused wires.
<suppressed ~18 debug messages>

16.11.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\memory.stealstatus$2063' from module `\top'.
  Removing unused output signal $flatten\memory.$0\stealstatus[3:0] [0].
  Removing unused output signal $flatten\memory.$0\stealstatus[3:0] [1].
  Removing unused output signal $flatten\memory.$0\stealstatus[3:0] [2].
  Removing unused output signal $flatten\memory.$0\stealstatus[3:0] [3].

16.11.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\memory.stealstatus$2063' from module `\top' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  0000 -> ----1
  0100 -> ---1-
  0010 -> --1--
  0001 -> -1---
  0011 -> 1----

16.11.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\memory.stealstatus$2063' from module `top':
-------------------------------------

  Information on FSM $fsm$\memory.stealstatus$2063 (\memory.stealstatus):

  Number of input signals:    8
  Number of output signals:   4
  Number of state bits:       5

  Input signals:
    0: \reset
    1: $flatten\memory.$procmux$1614_CMP
    2: $flatten\memory.$eq$src/blockmemory.v:136$863_Y
    3: $flatten\memory.$gt$src/blockmemory.v:135$862_Y
    4: $flatten\memory.$and$src/blockmemory.v:126$860_Y
    5: $flatten\memory.$eq$src/blockmemory.v:126$859_Y
    6: \memory.resetperiod
    7: \vcell.movement_intent

  Output signals:
    0: $flatten\memory.$eq$src/blockmemory.v:166$871_Y
    1: $flatten\memory.$eq$src/blockmemory.v:158$869_Y
    2: $flatten\memory.$eq$src/blockmemory.v:150$867_Y
    3: $flatten\memory.$eq$src/blockmemory.v:142$865_Y

  State encoding:
    0:    5'----1  <RESET STATE>
    1:    5'---1-
    2:    5'--1--
    3:    5'-1---
    4:    5'1----

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 8'-------0   ->     0 4'1000
      1:     0 8'-0--1101   ->     0 4'1000
      2:     0 8'10--1111   ->     0 4'1000
      3:     0 8'-0--10-1   ->     0 4'1000
      4:     0 8'-0--0--1   ->     0 4'1000
      5:     0 8'-1-----1   ->     0 4'1000
      6:     0 8'00--1111   ->     3 4'1000
      7:     1 8'-------0   ->     0 4'0000
      8:     1 8'-010---1   ->     0 4'0000
      9:     1 8'-000---1   ->     1 4'0000
     10:     1 8'-0-1---1   ->     1 4'0000
     11:     1 8'-1-----1   ->     1 4'0000
     12:     2 8'-------0   ->     0 4'0010
     13:     2 8'-0101101   ->     0 4'0010
     14:     2 8'10101111   ->     0 4'0010
     15:     2 8'-01010-1   ->     0 4'0010
     16:     2 8'-0100--1   ->     0 4'0010
     17:     2 8'-0001101   ->     2 4'0010
     18:     2 8'-0-11101   ->     2 4'0010
     19:     2 8'10001111   ->     2 4'0010
     20:     2 8'10-11111   ->     2 4'0010
     21:     2 8'-00010-1   ->     2 4'0010
     22:     2 8'-0-110-1   ->     2 4'0010
     23:     2 8'-0000--1   ->     2 4'0010
     24:     2 8'-0-10--1   ->     2 4'0010
     25:     2 8'-1-----1   ->     2 4'0010
     26:     2 8'00--1111   ->     4 4'0010
     27:     3 8'-------0   ->     0 4'0100
     28:     3 8'-0101101   ->     0 4'0100
     29:     3 8'10101111   ->     0 4'0100
     30:     3 8'-01010-1   ->     0 4'0100
     31:     3 8'-0100--1   ->     0 4'0100
     32:     3 8'00--1111   ->     2 4'0100
     33:     3 8'-0001101   ->     3 4'0100
     34:     3 8'-0-11101   ->     3 4'0100
     35:     3 8'10001111   ->     3 4'0100
     36:     3 8'10-11111   ->     3 4'0100
     37:     3 8'-00010-1   ->     3 4'0100
     38:     3 8'-0-110-1   ->     3 4'0100
     39:     3 8'-0000--1   ->     3 4'0100
     40:     3 8'-0-10--1   ->     3 4'0100
     41:     3 8'-1-----1   ->     3 4'0100
     42:     4 8'-------0   ->     0 4'0001
     43:     4 8'-0101101   ->     0 4'0001
     44:     4 8'10101111   ->     0 4'0001
     45:     4 8'-01010-1   ->     0 4'0001
     46:     4 8'-0100--1   ->     0 4'0001
     47:     4 8'00--1111   ->     1 4'0001
     48:     4 8'-0001101   ->     4 4'0001
     49:     4 8'-0-11101   ->     4 4'0001
     50:     4 8'10001111   ->     4 4'0001
     51:     4 8'10-11111   ->     4 4'0001
     52:     4 8'-00010-1   ->     4 4'0001
     53:     4 8'-0-110-1   ->     4 4'0001
     54:     4 8'-0000--1   ->     4 4'0001
     55:     4 8'-0-10--1   ->     4 4'0001
     56:     4 8'-1-----1   ->     4 4'0001

-------------------------------------

16.11.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\memory.stealstatus$2063' from module `\top'.

16.12. Executing OPT pass (performing simple optimizations).

16.12.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~1 debug messages>

16.12.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~69 debug messages>
Removed a total of 23 cells.

16.12.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~772 debug messages>

16.12.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

16.12.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

16.12.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $flatten\vcell.\ishaper.$procdff$2048 ($dff) from module top (D = $flatten\vcell.\ishaper.$procmux$1845_Y [0], Q = \vcell.ishaper.blk4_hoffset [0], rval = 1'0).
Adding SRST signal on $flatten\vcell.\ishaper.$procdff$2048 ($dff) from module top (D = $flatten\vcell.\ishaper.$procmux$1839_Y [4:2], Q = \vcell.ishaper.blk4_hoffset [4:2], rval = 3'000).
Adding SRST signal on $flatten\vcell.\ishaper.$procdff$2048 ($dff) from module top (D = $flatten\vcell.\ishaper.$procmux$1843_Y [1], Q = \vcell.ishaper.blk4_hoffset [1], rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$2254 ($sdff) from module top (D = $flatten\vcell.\ishaper.$procmux$1843_Y [1], Q = \vcell.ishaper.blk4_hoffset [1]).
Adding EN signal on $auto$ff.cc:262:slice$2249 ($sdff) from module top (D = 3'000, Q = \vcell.ishaper.blk4_hoffset [4:2]).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$2262 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$2262 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$2262 ($sdffe) from module top.
Adding EN signal on $auto$ff.cc:262:slice$2248 ($sdff) from module top (D = $flatten\vcell.\ishaper.$procmux$1845_Y [0], Q = \vcell.ishaper.blk4_hoffset [0]).
Adding SRST signal on $flatten\vcell.\ishaper.$procdff$2047 ($dff) from module top (D = $flatten\vcell.\ishaper.$procmux$1856_Y [1], Q = \vcell.ishaper.blk4_voffset [1], rval = 1'0).
Adding SRST signal on $flatten\vcell.\ishaper.$procdff$2047 ($dff) from module top (D = $flatten\vcell.\ishaper.$procmux$1850_Y [4:2], Q = \vcell.ishaper.blk4_voffset [4:2], rval = 3'000).
Adding SRST signal on $flatten\vcell.\ishaper.$procdff$2047 ($dff) from module top (D = $flatten\vcell.\ishaper.$procmux$1854_Y [0], Q = \vcell.ishaper.blk4_voffset [0], rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$2272 ($sdff) from module top (D = $flatten\vcell.\ishaper.$procmux$1854_Y [0], Q = \vcell.ishaper.blk4_voffset [0]).
Adding EN signal on $auto$ff.cc:262:slice$2267 ($sdff) from module top (D = 3'000, Q = \vcell.ishaper.blk4_voffset [4:2]).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$2280 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$2280 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$2280 ($sdffe) from module top.
Adding EN signal on $auto$ff.cc:262:slice$2266 ($sdff) from module top (D = $flatten\vcell.\ishaper.$procmux$1856_Y [1], Q = \vcell.ishaper.blk4_voffset [1]).
Adding SRST signal on $flatten\vcell.\ishaper.$procdff$2046 ($dff) from module top (D = $flatten\vcell.\ishaper.$procmux$1867_Y [0], Q = \vcell.ishaper.blk3_hoffset [0], rval = 1'0).
Adding SRST signal on $flatten\vcell.\ishaper.$procdff$2046 ($dff) from module top (D = $flatten\vcell.\ishaper.$procmux$1861_Y [4:1], Q = \vcell.ishaper.blk3_hoffset [4:1], rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$2285 ($sdff) from module top (D = 4'0000, Q = \vcell.ishaper.blk3_hoffset [4:1]).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$2290 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$2290 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$2290 ($sdffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$2290 ($sdffe) from module top.
Adding EN signal on $auto$ff.cc:262:slice$2284 ($sdff) from module top (D = $flatten\vcell.\ishaper.$procmux$1867_Y [0], Q = \vcell.ishaper.blk3_hoffset [0]).
Adding SRST signal on $flatten\vcell.\ishaper.$procdff$2045 ($dff) from module top (D = $flatten\vcell.\ishaper.$procmux$1878_Y [0], Q = \vcell.ishaper.blk3_voffset [0], rval = 1'0).
Adding SRST signal on $flatten\vcell.\ishaper.$procdff$2045 ($dff) from module top (D = $flatten\vcell.\ishaper.$procmux$1872_Y [4:1], Q = \vcell.ishaper.blk3_voffset [4:1], rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$2295 ($sdff) from module top (D = 4'0000, Q = \vcell.ishaper.blk3_voffset [4:1]).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$2300 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$2300 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$2300 ($sdffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$2300 ($sdffe) from module top.
Adding EN signal on $auto$ff.cc:262:slice$2294 ($sdff) from module top (D = $flatten\vcell.\ishaper.$procmux$1878_Y [0], Q = \vcell.ishaper.blk3_voffset [0]).
Adding SRST signal on $flatten\vcell.\ishaper.$procdff$2044 ($dff) from module top (D = $flatten\vcell.\ishaper.$procmux$1889_Y [0], Q = \vcell.ishaper.blk2_hoffset [0], rval = 1'0).
Adding SRST signal on $flatten\vcell.\ishaper.$procdff$2044 ($dff) from module top (D = $flatten\vcell.\ishaper.$procmux$1887_Y [4:1], Q = \vcell.ishaper.blk2_hoffset [4:1], rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$2305 ($sdff) from module top (D = $flatten\vcell.\ishaper.$procmux$1887_Y [4:1], Q = \vcell.ishaper.blk2_hoffset [4:1]).
Adding EN signal on $auto$ff.cc:262:slice$2304 ($sdff) from module top (D = $flatten\vcell.\ishaper.$procmux$1889_Y [0], Q = \vcell.ishaper.blk2_hoffset [0]).
Adding SRST signal on $flatten\vcell.\ishaper.$procdff$2043 ($dff) from module top (D = $flatten\vcell.\ishaper.$procmux$1900_Y, Q = \vcell.ishaper.blk2_voffset, rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$2316 ($sdff) from module top (D = $flatten\vcell.\ishaper.$procmux$1900_Y, Q = \vcell.ishaper.blk2_voffset).
Adding SRST signal on $flatten\vcell.\ishaper.$procdff$2042 ($dff) from module top (D = $flatten\vcell.\ishaper.$procmux$1911_Y [0], Q = \vcell.ishaper.blk1_hoffset [0], rval = 1'0).
Adding SRST signal on $flatten\vcell.\ishaper.$procdff$2042 ($dff) from module top (D = $flatten\vcell.\ishaper.$procmux$1905_Y [4:1], Q = \vcell.ishaper.blk1_hoffset [4:1], rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$2321 ($sdff) from module top (D = 4'0000, Q = \vcell.ishaper.blk1_hoffset [4:1]).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$2326 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$2326 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$2326 ($sdffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$2326 ($sdffe) from module top.
Adding EN signal on $auto$ff.cc:262:slice$2320 ($sdff) from module top (D = $flatten\vcell.\ishaper.$procmux$1911_Y [0], Q = \vcell.ishaper.blk1_hoffset [0]).
Adding SRST signal on $flatten\vcell.\ishaper.$procdff$2041 ($dff) from module top (D = $flatten\vcell.\ishaper.$procmux$1916_Y [4:1], Q = \vcell.ishaper.blk1_voffset [4:1], rval = 4'0000).
Adding SRST signal on $flatten\vcell.\ishaper.$procdff$2041 ($dff) from module top (D = $flatten\vcell.\ishaper.$procmux$1920_Y [0], Q = \vcell.ishaper.blk1_voffset [0], rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$2335 ($sdff) from module top (D = $flatten\vcell.\ishaper.$procmux$1920_Y [0], Q = \vcell.ishaper.blk1_voffset [0]).
Adding EN signal on $auto$ff.cc:262:slice$2330 ($sdff) from module top (D = 4'0000, Q = \vcell.ishaper.blk1_voffset [4:1]).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$2343 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$2343 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$2343 ($sdffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$2343 ($sdffe) from module top.
Adding SRST signal on $flatten\vcell.$procdff$2004 ($dff) from module top (D = $flatten\vcell.$procmux$1331_Y, Q = \vcell.process_decline, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$2344 ($sdff) from module top (D = $flatten\vcell.$procmux$1328_Y, Q = \vcell.process_decline).
Adding SRST signal on $flatten\vcell.$procdff$2003 ($dff) from module top (D = { \butt2 \vcell.buttdebounceT [5:1] }, Q = \vcell.buttdebounceT, rval = 6'000000).
Adding SRST signal on $flatten\vcell.$procdff$2002 ($dff) from module top (D = { \butt3 \vcell.buttdebounceR [5:1] }, Q = \vcell.buttdebounceR, rval = 6'000000).
Adding SRST signal on $flatten\vcell.$procdff$2001 ($dff) from module top (D = { \butt1 \vcell.buttdebounceL [5:1] }, Q = \vcell.buttdebounceL, rval = 6'000000).
Adding SRST signal on $flatten\vcell.$procdff$2000 ($dff) from module top (D = { \vcell.state [6:0] $flatten\vcell.$xor$src/volatile_cell_storage.v:103$1276_Y }, Q = \vcell.state, rval = 8'11110000).
Adding SRST signal on $flatten\vcell.$procdff$1999 ($dff) from module top (D = $flatten\vcell.$procmux$1341_Y, Q = \vcell.process_steal, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$2356 ($sdff) from module top (D = $flatten\vcell.$procmux$1338_Y, Q = \vcell.process_steal).
Adding SRST signal on $flatten\vcell.$procdff$1997 ($dff) from module top (D = $flatten\vcell.$procmux$1363_Y, Q = \vcell.cooldown, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$2364 ($sdff) from module top (D = $flatten\vcell.$procmux$1358_Y, Q = \vcell.cooldown).
Adding SRST signal on $flatten\vcell.$procdff$1996 ($dff) from module top (D = $flatten\vcell.$procmux$1386_Y, Q = \vcell.movement_available, rval = 1'1).
Adding EN signal on $flatten\vcell.$procdff$1995 ($dff) from module top (D = 4'0000, Q = \vcell.tetron_type).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$2373 ($dffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$2373 ($dffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$2373 ($dffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$2373 ($dffe) from module top.
Adding SRST signal on $flatten\vcell.$procdff$1994 ($dff) from module top (D = $flatten\vcell.$procmux$1397_Y, Q = \vcell.keep_tetron_rotation, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2374 ($sdff) from module top (D = \vcell.tetron_rotation, Q = \vcell.keep_tetron_rotation).
Adding SRST signal on $flatten\vcell.$procdff$1993 ($dff) from module top (D = $flatten\vcell.$procmux$1405_Y, Q = \vcell.keep_tetron_h, rval = 5'00101).
Adding EN signal on $auto$ff.cc:262:slice$2380 ($sdff) from module top (D = \vcell.tetron_h, Q = \vcell.keep_tetron_h).
Adding SRST signal on $flatten\vcell.$procdff$1992 ($dff) from module top (D = $flatten\vcell.$procmux$1413_Y, Q = \vcell.keep_tetron_v, rval = 5'00101).
Adding EN signal on $auto$ff.cc:262:slice$2386 ($sdff) from module top (D = \vcell.tetron_v, Q = \vcell.keep_tetron_v).
Adding SRST signal on $flatten\vcell.$procdff$1991 ($dff) from module top (D = $flatten\vcell.$procmux$1432_Y, Q = \vcell.tetron_rotation, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2392 ($sdff) from module top (D = $flatten\vcell.$procmux$1432_Y, Q = \vcell.tetron_rotation).
Adding SRST signal on $flatten\vcell.$procdff$1990 ($dff) from module top (D = $flatten\vcell.$procmux$1445_Y, Q = \vcell.tetron_h, rval = 5'00101).
Adding EN signal on $auto$ff.cc:262:slice$2406 ($sdff) from module top (D = $flatten\vcell.$procmux$1445_Y, Q = \vcell.tetron_h).
Adding SRST signal on $flatten\vcell.$procdff$1989 ($dff) from module top (D = $flatten\vcell.$procmux$1464_Y, Q = \vcell.tetron_v, rval = 5'00101).
Adding EN signal on $auto$ff.cc:262:slice$2414 ($sdff) from module top (D = $flatten\vcell.$procmux$1464_Y, Q = \vcell.tetron_v).
Adding SRST signal on $flatten\vcell.$procdff$1988 ($dff) from module top (D = $flatten\vcell.$procmux$1472_Y, Q = \vcell.volatile_blk_color, rval = 3'100).
Adding EN signal on $auto$ff.cc:262:slice$2424 ($sdff) from module top (D = $flatten\vcell.$ternary$src/volatile_cell_storage.v:165$1311_Y, Q = \vcell.volatile_blk_color).
Adding SRST signal on $flatten\vcell.$procdff$1987 ($dff) from module top (D = $flatten\vcell.$procmux$1489_Y, Q = \vcell.movement_intent, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$2430 ($sdff) from module top (D = $flatten\vcell.$procmux$1487_Y, Q = \vcell.movement_intent).
Adding SRST signal on $flatten\vcell.$procdff$1986 ($dff) from module top (D = $flatten\vcell.$procmux$1512_Y, Q = \vcell.movement_request, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$2436 ($sdff) from module top (D = $flatten\vcell.$procmux$1512_Y, Q = \vcell.movement_request).
Adding SRST signal on $flatten\t.$procdff$2050 ($dff) from module top (D = $flatten\t.$add$src/timer.v:18$523_Y, Q = \t.counter, rval = 25'0000000000000000000000000).
Adding EN signal on $flatten\t.$procdff$2049 ($dff) from module top (D = $flatten\t.$procmux$1934_Y, Q = \t.trigger).
Adding SRST signal on $flatten\memory.\mem.\row_9.\cell_9.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_9.\cell_9.$procmux$1981_Y, Q = \memory.mem.row_9.cell_9.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2450 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_9.cell_9.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_9.\cell_8.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_9.\cell_8.$procmux$1981_Y, Q = \memory.mem.row_9.cell_8.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2452 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_9.cell_8.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_9.\cell_7.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_9.\cell_7.$procmux$1981_Y, Q = \memory.mem.row_9.cell_7.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2454 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_9.cell_7.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_9.\cell_6.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_9.\cell_6.$procmux$1981_Y, Q = \memory.mem.row_9.cell_6.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2456 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_9.cell_6.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_9.\cell_5.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_9.\cell_5.$procmux$1981_Y, Q = \memory.mem.row_9.cell_5.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2458 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_9.cell_5.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_9.\cell_4.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_9.\cell_4.$procmux$1981_Y, Q = \memory.mem.row_9.cell_4.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2460 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_9.cell_4.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_9.\cell_3.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_9.\cell_3.$procmux$1981_Y, Q = \memory.mem.row_9.cell_3.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2462 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_9.cell_3.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_9.\cell_2.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_9.\cell_2.$procmux$1981_Y, Q = \memory.mem.row_9.cell_2.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2464 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_9.cell_2.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_9.\cell_12.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_9.\cell_12.$procmux$1981_Y, Q = \memory.mem.row_9.cell_12.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2466 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_9.cell_12.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_9.\cell_11.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_9.\cell_11.$procmux$1981_Y, Q = \memory.mem.row_9.cell_11.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2468 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_9.cell_11.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_9.\cell_10.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_9.\cell_10.$procmux$1981_Y, Q = \memory.mem.row_9.cell_10.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2470 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_9.cell_10.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_9.\cell_1.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_9.\cell_1.$procmux$1981_Y, Q = \memory.mem.row_9.cell_1.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2472 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_9.cell_1.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_9.\cell_0.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_9.\cell_0.$procmux$1981_Y, Q = \memory.mem.row_9.cell_0.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2474 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_9.cell_0.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_8.\cell_9.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_8.\cell_9.$procmux$1981_Y, Q = \memory.mem.row_8.cell_9.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2476 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_8.cell_9.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_8.\cell_8.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_8.\cell_8.$procmux$1981_Y, Q = \memory.mem.row_8.cell_8.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2478 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_8.cell_8.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_8.\cell_7.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_8.\cell_7.$procmux$1981_Y, Q = \memory.mem.row_8.cell_7.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2480 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_8.cell_7.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_8.\cell_6.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_8.\cell_6.$procmux$1981_Y, Q = \memory.mem.row_8.cell_6.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2482 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_8.cell_6.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_8.\cell_5.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_8.\cell_5.$procmux$1981_Y, Q = \memory.mem.row_8.cell_5.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2484 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_8.cell_5.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_8.\cell_4.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_8.\cell_4.$procmux$1981_Y, Q = \memory.mem.row_8.cell_4.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2486 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_8.cell_4.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_8.\cell_3.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_8.\cell_3.$procmux$1981_Y, Q = \memory.mem.row_8.cell_3.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2488 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_8.cell_3.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_8.\cell_2.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_8.\cell_2.$procmux$1981_Y, Q = \memory.mem.row_8.cell_2.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2490 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_8.cell_2.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_8.\cell_12.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_8.\cell_12.$procmux$1981_Y, Q = \memory.mem.row_8.cell_12.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2492 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_8.cell_12.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_8.\cell_11.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_8.\cell_11.$procmux$1981_Y, Q = \memory.mem.row_8.cell_11.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2494 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_8.cell_11.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_8.\cell_10.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_8.\cell_10.$procmux$1981_Y, Q = \memory.mem.row_8.cell_10.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2496 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_8.cell_10.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_8.\cell_1.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_8.\cell_1.$procmux$1981_Y, Q = \memory.mem.row_8.cell_1.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2498 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_8.cell_1.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_8.\cell_0.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_8.\cell_0.$procmux$1981_Y, Q = \memory.mem.row_8.cell_0.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2500 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_8.cell_0.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_7.\cell_9.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_7.\cell_9.$procmux$1981_Y, Q = \memory.mem.row_7.cell_9.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2502 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_7.cell_9.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_7.\cell_8.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_7.\cell_8.$procmux$1981_Y, Q = \memory.mem.row_7.cell_8.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2504 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_7.cell_8.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_7.\cell_7.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_7.\cell_7.$procmux$1981_Y, Q = \memory.mem.row_7.cell_7.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2506 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_7.cell_7.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_7.\cell_6.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_7.\cell_6.$procmux$1981_Y, Q = \memory.mem.row_7.cell_6.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2508 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_7.cell_6.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_7.\cell_5.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_7.\cell_5.$procmux$1981_Y, Q = \memory.mem.row_7.cell_5.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2510 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_7.cell_5.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_7.\cell_4.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_7.\cell_4.$procmux$1981_Y, Q = \memory.mem.row_7.cell_4.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2512 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_7.cell_4.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_7.\cell_3.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_7.\cell_3.$procmux$1981_Y, Q = \memory.mem.row_7.cell_3.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2514 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_7.cell_3.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_7.\cell_2.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_7.\cell_2.$procmux$1981_Y, Q = \memory.mem.row_7.cell_2.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2516 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_7.cell_2.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_7.\cell_12.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_7.\cell_12.$procmux$1981_Y, Q = \memory.mem.row_7.cell_12.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2518 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_7.cell_12.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_7.\cell_11.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_7.\cell_11.$procmux$1981_Y, Q = \memory.mem.row_7.cell_11.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2520 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_7.cell_11.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_7.\cell_10.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_7.\cell_10.$procmux$1981_Y, Q = \memory.mem.row_7.cell_10.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2522 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_7.cell_10.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_7.\cell_1.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_7.\cell_1.$procmux$1981_Y, Q = \memory.mem.row_7.cell_1.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2524 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_7.cell_1.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_7.\cell_0.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_7.\cell_0.$procmux$1981_Y, Q = \memory.mem.row_7.cell_0.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2526 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_7.cell_0.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_6.\cell_9.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_6.\cell_9.$procmux$1981_Y, Q = \memory.mem.row_6.cell_9.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2528 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_6.cell_9.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_6.\cell_8.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_6.\cell_8.$procmux$1981_Y, Q = \memory.mem.row_6.cell_8.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2530 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_6.cell_8.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_6.\cell_7.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_6.\cell_7.$procmux$1981_Y, Q = \memory.mem.row_6.cell_7.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2532 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_6.cell_7.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_6.\cell_6.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_6.\cell_6.$procmux$1981_Y, Q = \memory.mem.row_6.cell_6.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2534 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_6.cell_6.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_6.\cell_5.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_6.\cell_5.$procmux$1981_Y, Q = \memory.mem.row_6.cell_5.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2536 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_6.cell_5.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_6.\cell_4.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_6.\cell_4.$procmux$1981_Y, Q = \memory.mem.row_6.cell_4.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2538 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_6.cell_4.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_6.\cell_3.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_6.\cell_3.$procmux$1981_Y, Q = \memory.mem.row_6.cell_3.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2540 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_6.cell_3.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_6.\cell_2.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_6.\cell_2.$procmux$1981_Y, Q = \memory.mem.row_6.cell_2.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2542 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_6.cell_2.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_6.\cell_12.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_6.\cell_12.$procmux$1981_Y, Q = \memory.mem.row_6.cell_12.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2544 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_6.cell_12.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_6.\cell_11.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_6.\cell_11.$procmux$1981_Y, Q = \memory.mem.row_6.cell_11.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2546 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_6.cell_11.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_6.\cell_10.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_6.\cell_10.$procmux$1981_Y, Q = \memory.mem.row_6.cell_10.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2548 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_6.cell_10.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_6.\cell_1.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_6.\cell_1.$procmux$1981_Y, Q = \memory.mem.row_6.cell_1.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2550 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_6.cell_1.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_6.\cell_0.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_6.\cell_0.$procmux$1981_Y, Q = \memory.mem.row_6.cell_0.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2552 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_6.cell_0.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_5.\cell_9.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_5.\cell_9.$procmux$1981_Y, Q = \memory.mem.row_5.cell_9.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2554 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_5.cell_9.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_5.\cell_8.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_5.\cell_8.$procmux$1981_Y, Q = \memory.mem.row_5.cell_8.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2556 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_5.cell_8.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_5.\cell_7.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_5.\cell_7.$procmux$1981_Y, Q = \memory.mem.row_5.cell_7.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2558 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_5.cell_7.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_5.\cell_6.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_5.\cell_6.$procmux$1981_Y, Q = \memory.mem.row_5.cell_6.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2560 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_5.cell_6.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_5.\cell_5.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_5.\cell_5.$procmux$1981_Y, Q = \memory.mem.row_5.cell_5.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2562 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_5.cell_5.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_5.\cell_4.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_5.\cell_4.$procmux$1981_Y, Q = \memory.mem.row_5.cell_4.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2564 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_5.cell_4.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_5.\cell_3.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_5.\cell_3.$procmux$1981_Y, Q = \memory.mem.row_5.cell_3.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2566 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_5.cell_3.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_5.\cell_2.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_5.\cell_2.$procmux$1981_Y, Q = \memory.mem.row_5.cell_2.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2568 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_5.cell_2.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_5.\cell_12.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_5.\cell_12.$procmux$1981_Y, Q = \memory.mem.row_5.cell_12.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2570 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_5.cell_12.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_5.\cell_11.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_5.\cell_11.$procmux$1981_Y, Q = \memory.mem.row_5.cell_11.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2572 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_5.cell_11.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_5.\cell_10.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_5.\cell_10.$procmux$1981_Y, Q = \memory.mem.row_5.cell_10.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2574 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_5.cell_10.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_5.\cell_1.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_5.\cell_1.$procmux$1981_Y, Q = \memory.mem.row_5.cell_1.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2576 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_5.cell_1.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_5.\cell_0.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_5.\cell_0.$procmux$1981_Y, Q = \memory.mem.row_5.cell_0.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2578 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_5.cell_0.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_4.\cell_9.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_4.\cell_9.$procmux$1981_Y, Q = \memory.mem.row_4.cell_9.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2580 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_4.cell_9.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_4.\cell_8.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_4.\cell_8.$procmux$1981_Y, Q = \memory.mem.row_4.cell_8.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2582 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_4.cell_8.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_4.\cell_7.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_4.\cell_7.$procmux$1981_Y, Q = \memory.mem.row_4.cell_7.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2584 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_4.cell_7.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_4.\cell_6.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_4.\cell_6.$procmux$1981_Y, Q = \memory.mem.row_4.cell_6.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2586 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_4.cell_6.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_4.\cell_5.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_4.\cell_5.$procmux$1981_Y, Q = \memory.mem.row_4.cell_5.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2588 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_4.cell_5.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_4.\cell_4.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_4.\cell_4.$procmux$1981_Y, Q = \memory.mem.row_4.cell_4.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2590 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_4.cell_4.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_4.\cell_3.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_4.\cell_3.$procmux$1981_Y, Q = \memory.mem.row_4.cell_3.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2592 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_4.cell_3.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_4.\cell_2.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_4.\cell_2.$procmux$1981_Y, Q = \memory.mem.row_4.cell_2.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2594 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_4.cell_2.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_4.\cell_12.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_4.\cell_12.$procmux$1981_Y, Q = \memory.mem.row_4.cell_12.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2596 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_4.cell_12.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_4.\cell_11.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_4.\cell_11.$procmux$1981_Y, Q = \memory.mem.row_4.cell_11.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2598 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_4.cell_11.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_4.\cell_10.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_4.\cell_10.$procmux$1981_Y, Q = \memory.mem.row_4.cell_10.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2600 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_4.cell_10.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_4.\cell_1.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_4.\cell_1.$procmux$1981_Y, Q = \memory.mem.row_4.cell_1.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2602 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_4.cell_1.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_4.\cell_0.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_4.\cell_0.$procmux$1981_Y, Q = \memory.mem.row_4.cell_0.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2604 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_4.cell_0.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_3.\cell_9.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_3.\cell_9.$procmux$1981_Y, Q = \memory.mem.row_3.cell_9.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2606 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_3.cell_9.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_3.\cell_8.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_3.\cell_8.$procmux$1981_Y, Q = \memory.mem.row_3.cell_8.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2608 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_3.cell_8.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_3.\cell_7.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_3.\cell_7.$procmux$1981_Y, Q = \memory.mem.row_3.cell_7.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2610 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_3.cell_7.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_3.\cell_6.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_3.\cell_6.$procmux$1981_Y, Q = \memory.mem.row_3.cell_6.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2612 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_3.cell_6.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_3.\cell_5.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_3.\cell_5.$procmux$1981_Y, Q = \memory.mem.row_3.cell_5.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2614 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_3.cell_5.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_3.\cell_4.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_3.\cell_4.$procmux$1981_Y, Q = \memory.mem.row_3.cell_4.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2616 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_3.cell_4.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_3.\cell_3.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_3.\cell_3.$procmux$1981_Y, Q = \memory.mem.row_3.cell_3.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2618 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_3.cell_3.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_3.\cell_2.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_3.\cell_2.$procmux$1981_Y, Q = \memory.mem.row_3.cell_2.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2620 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_3.cell_2.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_3.\cell_12.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_3.\cell_12.$procmux$1981_Y, Q = \memory.mem.row_3.cell_12.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2622 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_3.cell_12.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_3.\cell_11.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_3.\cell_11.$procmux$1981_Y, Q = \memory.mem.row_3.cell_11.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2624 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_3.cell_11.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_3.\cell_10.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_3.\cell_10.$procmux$1981_Y, Q = \memory.mem.row_3.cell_10.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2626 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_3.cell_10.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_3.\cell_1.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_3.\cell_1.$procmux$1981_Y, Q = \memory.mem.row_3.cell_1.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2628 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_3.cell_1.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_3.\cell_0.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_3.\cell_0.$procmux$1981_Y, Q = \memory.mem.row_3.cell_0.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2630 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_3.cell_0.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_21.\cell_9.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_21.\cell_9.$procmux$1981_Y, Q = \memory.mem.row_21.cell_9.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2632 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_21.cell_9.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_21.\cell_8.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_21.\cell_8.$procmux$1981_Y, Q = \memory.mem.row_21.cell_8.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2634 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_21.cell_8.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_21.\cell_7.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_21.\cell_7.$procmux$1981_Y, Q = \memory.mem.row_21.cell_7.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2636 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_21.cell_7.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_21.\cell_6.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_21.\cell_6.$procmux$1981_Y, Q = \memory.mem.row_21.cell_6.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2638 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_21.cell_6.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_21.\cell_5.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_21.\cell_5.$procmux$1981_Y, Q = \memory.mem.row_21.cell_5.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2640 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_21.cell_5.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_21.\cell_4.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_21.\cell_4.$procmux$1981_Y, Q = \memory.mem.row_21.cell_4.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2642 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_21.cell_4.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_21.\cell_3.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_21.\cell_3.$procmux$1981_Y, Q = \memory.mem.row_21.cell_3.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2644 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_21.cell_3.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_21.\cell_2.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_21.\cell_2.$procmux$1981_Y, Q = \memory.mem.row_21.cell_2.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2646 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_21.cell_2.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_21.\cell_12.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_21.\cell_12.$procmux$1981_Y, Q = \memory.mem.row_21.cell_12.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2648 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_21.cell_12.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_21.\cell_11.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_21.\cell_11.$procmux$1981_Y, Q = \memory.mem.row_21.cell_11.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2650 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_21.cell_11.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_21.\cell_10.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_21.\cell_10.$procmux$1981_Y, Q = \memory.mem.row_21.cell_10.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2652 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_21.cell_10.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_21.\cell_1.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_21.\cell_1.$procmux$1981_Y, Q = \memory.mem.row_21.cell_1.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2654 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_21.cell_1.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_21.\cell_0.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_21.\cell_0.$procmux$1981_Y, Q = \memory.mem.row_21.cell_0.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2656 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_21.cell_0.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_20.\cell_9.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_20.\cell_9.$procmux$1981_Y, Q = \memory.mem.row_20.cell_9.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2658 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_20.cell_9.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_20.\cell_8.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_20.\cell_8.$procmux$1981_Y, Q = \memory.mem.row_20.cell_8.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2660 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_20.cell_8.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_20.\cell_7.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_20.\cell_7.$procmux$1981_Y, Q = \memory.mem.row_20.cell_7.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2662 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_20.cell_7.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_20.\cell_6.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_20.\cell_6.$procmux$1981_Y, Q = \memory.mem.row_20.cell_6.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2664 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_20.cell_6.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_20.\cell_5.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_20.\cell_5.$procmux$1981_Y, Q = \memory.mem.row_20.cell_5.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2666 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_20.cell_5.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_20.\cell_4.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_20.\cell_4.$procmux$1981_Y, Q = \memory.mem.row_20.cell_4.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2668 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_20.cell_4.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_20.\cell_3.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_20.\cell_3.$procmux$1981_Y, Q = \memory.mem.row_20.cell_3.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2670 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_20.cell_3.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_20.\cell_2.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_20.\cell_2.$procmux$1981_Y, Q = \memory.mem.row_20.cell_2.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2672 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_20.cell_2.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_20.\cell_12.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_20.\cell_12.$procmux$1981_Y, Q = \memory.mem.row_20.cell_12.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2674 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_20.cell_12.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_20.\cell_11.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_20.\cell_11.$procmux$1981_Y, Q = \memory.mem.row_20.cell_11.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2676 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_20.cell_11.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_20.\cell_10.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_20.\cell_10.$procmux$1981_Y, Q = \memory.mem.row_20.cell_10.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2678 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_20.cell_10.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_20.\cell_1.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_20.\cell_1.$procmux$1981_Y, Q = \memory.mem.row_20.cell_1.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2680 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_20.cell_1.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_20.\cell_0.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_20.\cell_0.$procmux$1981_Y, Q = \memory.mem.row_20.cell_0.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2682 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_20.cell_0.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_2.\cell_9.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_2.\cell_9.$procmux$1981_Y, Q = \memory.mem.row_2.cell_9.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2684 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_2.cell_9.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_2.\cell_8.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_2.\cell_8.$procmux$1981_Y, Q = \memory.mem.row_2.cell_8.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2686 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_2.cell_8.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_2.\cell_7.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_2.\cell_7.$procmux$1981_Y, Q = \memory.mem.row_2.cell_7.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2688 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_2.cell_7.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_2.\cell_6.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_2.\cell_6.$procmux$1981_Y, Q = \memory.mem.row_2.cell_6.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2690 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_2.cell_6.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_2.\cell_5.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_2.\cell_5.$procmux$1981_Y, Q = \memory.mem.row_2.cell_5.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2692 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_2.cell_5.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_2.\cell_4.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_2.\cell_4.$procmux$1981_Y, Q = \memory.mem.row_2.cell_4.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2694 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_2.cell_4.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_2.\cell_3.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_2.\cell_3.$procmux$1981_Y, Q = \memory.mem.row_2.cell_3.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2696 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_2.cell_3.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_2.\cell_2.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_2.\cell_2.$procmux$1981_Y, Q = \memory.mem.row_2.cell_2.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2698 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_2.cell_2.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_2.\cell_12.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_2.\cell_12.$procmux$1981_Y, Q = \memory.mem.row_2.cell_12.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2700 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_2.cell_12.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_2.\cell_11.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_2.\cell_11.$procmux$1981_Y, Q = \memory.mem.row_2.cell_11.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2702 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_2.cell_11.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_2.\cell_10.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_2.\cell_10.$procmux$1981_Y, Q = \memory.mem.row_2.cell_10.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2704 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_2.cell_10.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_2.\cell_1.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_2.\cell_1.$procmux$1981_Y, Q = \memory.mem.row_2.cell_1.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2706 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_2.cell_1.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_2.\cell_0.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_2.\cell_0.$procmux$1981_Y, Q = \memory.mem.row_2.cell_0.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2708 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_2.cell_0.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_19.\cell_9.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_19.\cell_9.$procmux$1981_Y, Q = \memory.mem.row_19.cell_9.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2710 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_19.cell_9.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_19.\cell_8.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_19.\cell_8.$procmux$1981_Y, Q = \memory.mem.row_19.cell_8.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2712 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_19.cell_8.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_19.\cell_7.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_19.\cell_7.$procmux$1981_Y, Q = \memory.mem.row_19.cell_7.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2714 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_19.cell_7.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_19.\cell_6.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_19.\cell_6.$procmux$1981_Y, Q = \memory.mem.row_19.cell_6.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2716 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_19.cell_6.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_19.\cell_5.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_19.\cell_5.$procmux$1981_Y, Q = \memory.mem.row_19.cell_5.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2718 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_19.cell_5.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_19.\cell_4.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_19.\cell_4.$procmux$1981_Y, Q = \memory.mem.row_19.cell_4.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2720 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_19.cell_4.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_19.\cell_3.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_19.\cell_3.$procmux$1981_Y, Q = \memory.mem.row_19.cell_3.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2722 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_19.cell_3.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_19.\cell_2.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_19.\cell_2.$procmux$1981_Y, Q = \memory.mem.row_19.cell_2.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2724 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_19.cell_2.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_19.\cell_12.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_19.\cell_12.$procmux$1981_Y, Q = \memory.mem.row_19.cell_12.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2726 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_19.cell_12.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_19.\cell_11.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_19.\cell_11.$procmux$1981_Y, Q = \memory.mem.row_19.cell_11.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2728 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_19.cell_11.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_19.\cell_10.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_19.\cell_10.$procmux$1981_Y, Q = \memory.mem.row_19.cell_10.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2730 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_19.cell_10.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_19.\cell_1.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_19.\cell_1.$procmux$1981_Y, Q = \memory.mem.row_19.cell_1.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2732 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_19.cell_1.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_19.\cell_0.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_19.\cell_0.$procmux$1981_Y, Q = \memory.mem.row_19.cell_0.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2734 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_19.cell_0.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_18.\cell_9.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_18.\cell_9.$procmux$1981_Y, Q = \memory.mem.row_18.cell_9.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2736 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_18.cell_9.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_18.\cell_8.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_18.\cell_8.$procmux$1981_Y, Q = \memory.mem.row_18.cell_8.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2738 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_18.cell_8.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_18.\cell_7.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_18.\cell_7.$procmux$1981_Y, Q = \memory.mem.row_18.cell_7.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2740 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_18.cell_7.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_18.\cell_6.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_18.\cell_6.$procmux$1981_Y, Q = \memory.mem.row_18.cell_6.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2742 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_18.cell_6.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_18.\cell_5.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_18.\cell_5.$procmux$1981_Y, Q = \memory.mem.row_18.cell_5.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2744 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_18.cell_5.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_18.\cell_4.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_18.\cell_4.$procmux$1981_Y, Q = \memory.mem.row_18.cell_4.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2746 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_18.cell_4.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_18.\cell_3.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_18.\cell_3.$procmux$1981_Y, Q = \memory.mem.row_18.cell_3.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2748 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_18.cell_3.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_18.\cell_2.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_18.\cell_2.$procmux$1981_Y, Q = \memory.mem.row_18.cell_2.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2750 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_18.cell_2.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_18.\cell_12.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_18.\cell_12.$procmux$1981_Y, Q = \memory.mem.row_18.cell_12.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2752 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_18.cell_12.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_18.\cell_11.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_18.\cell_11.$procmux$1981_Y, Q = \memory.mem.row_18.cell_11.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2754 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_18.cell_11.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_18.\cell_10.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_18.\cell_10.$procmux$1981_Y, Q = \memory.mem.row_18.cell_10.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2756 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_18.cell_10.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_18.\cell_1.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_18.\cell_1.$procmux$1981_Y, Q = \memory.mem.row_18.cell_1.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2758 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_18.cell_1.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_18.\cell_0.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_18.\cell_0.$procmux$1981_Y, Q = \memory.mem.row_18.cell_0.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2760 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_18.cell_0.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_17.\cell_9.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_17.\cell_9.$procmux$1981_Y, Q = \memory.mem.row_17.cell_9.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2762 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_17.cell_9.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_17.\cell_8.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_17.\cell_8.$procmux$1981_Y, Q = \memory.mem.row_17.cell_8.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2764 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_17.cell_8.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_17.\cell_7.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_17.\cell_7.$procmux$1981_Y, Q = \memory.mem.row_17.cell_7.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2766 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_17.cell_7.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_17.\cell_6.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_17.\cell_6.$procmux$1981_Y, Q = \memory.mem.row_17.cell_6.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2768 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_17.cell_6.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_17.\cell_5.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_17.\cell_5.$procmux$1981_Y, Q = \memory.mem.row_17.cell_5.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2770 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_17.cell_5.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_17.\cell_4.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_17.\cell_4.$procmux$1981_Y, Q = \memory.mem.row_17.cell_4.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2772 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_17.cell_4.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_17.\cell_3.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_17.\cell_3.$procmux$1981_Y, Q = \memory.mem.row_17.cell_3.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2774 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_17.cell_3.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_17.\cell_2.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_17.\cell_2.$procmux$1981_Y, Q = \memory.mem.row_17.cell_2.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2776 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_17.cell_2.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_17.\cell_12.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_17.\cell_12.$procmux$1981_Y, Q = \memory.mem.row_17.cell_12.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2778 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_17.cell_12.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_17.\cell_11.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_17.\cell_11.$procmux$1981_Y, Q = \memory.mem.row_17.cell_11.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2780 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_17.cell_11.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_17.\cell_10.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_17.\cell_10.$procmux$1981_Y, Q = \memory.mem.row_17.cell_10.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2782 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_17.cell_10.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_17.\cell_1.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_17.\cell_1.$procmux$1981_Y, Q = \memory.mem.row_17.cell_1.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2784 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_17.cell_1.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_17.\cell_0.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_17.\cell_0.$procmux$1981_Y, Q = \memory.mem.row_17.cell_0.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2786 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_17.cell_0.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_16.\cell_9.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_16.\cell_9.$procmux$1981_Y, Q = \memory.mem.row_16.cell_9.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2788 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_16.cell_9.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_16.\cell_8.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_16.\cell_8.$procmux$1981_Y, Q = \memory.mem.row_16.cell_8.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2790 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_16.cell_8.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_16.\cell_7.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_16.\cell_7.$procmux$1981_Y, Q = \memory.mem.row_16.cell_7.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2792 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_16.cell_7.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_16.\cell_6.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_16.\cell_6.$procmux$1981_Y, Q = \memory.mem.row_16.cell_6.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2794 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_16.cell_6.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_16.\cell_5.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_16.\cell_5.$procmux$1981_Y, Q = \memory.mem.row_16.cell_5.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2796 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_16.cell_5.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_16.\cell_4.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_16.\cell_4.$procmux$1981_Y, Q = \memory.mem.row_16.cell_4.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2798 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_16.cell_4.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_16.\cell_3.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_16.\cell_3.$procmux$1981_Y, Q = \memory.mem.row_16.cell_3.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2800 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_16.cell_3.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_16.\cell_2.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_16.\cell_2.$procmux$1981_Y, Q = \memory.mem.row_16.cell_2.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2802 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_16.cell_2.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_16.\cell_12.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_16.\cell_12.$procmux$1981_Y, Q = \memory.mem.row_16.cell_12.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2804 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_16.cell_12.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_16.\cell_11.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_16.\cell_11.$procmux$1981_Y, Q = \memory.mem.row_16.cell_11.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2806 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_16.cell_11.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_16.\cell_10.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_16.\cell_10.$procmux$1981_Y, Q = \memory.mem.row_16.cell_10.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2808 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_16.cell_10.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_16.\cell_1.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_16.\cell_1.$procmux$1981_Y, Q = \memory.mem.row_16.cell_1.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2810 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_16.cell_1.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_16.\cell_0.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_16.\cell_0.$procmux$1981_Y, Q = \memory.mem.row_16.cell_0.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2812 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_16.cell_0.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_15.\cell_9.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_15.\cell_9.$procmux$1981_Y, Q = \memory.mem.row_15.cell_9.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2814 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_15.cell_9.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_15.\cell_8.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_15.\cell_8.$procmux$1981_Y, Q = \memory.mem.row_15.cell_8.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2816 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_15.cell_8.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_15.\cell_7.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_15.\cell_7.$procmux$1981_Y, Q = \memory.mem.row_15.cell_7.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2818 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_15.cell_7.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_15.\cell_6.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_15.\cell_6.$procmux$1981_Y, Q = \memory.mem.row_15.cell_6.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2820 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_15.cell_6.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_15.\cell_5.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_15.\cell_5.$procmux$1981_Y, Q = \memory.mem.row_15.cell_5.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2822 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_15.cell_5.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_15.\cell_4.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_15.\cell_4.$procmux$1981_Y, Q = \memory.mem.row_15.cell_4.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2824 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_15.cell_4.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_15.\cell_3.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_15.\cell_3.$procmux$1981_Y, Q = \memory.mem.row_15.cell_3.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2826 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_15.cell_3.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_15.\cell_2.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_15.\cell_2.$procmux$1981_Y, Q = \memory.mem.row_15.cell_2.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2828 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_15.cell_2.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_15.\cell_12.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_15.\cell_12.$procmux$1981_Y, Q = \memory.mem.row_15.cell_12.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2830 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_15.cell_12.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_15.\cell_11.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_15.\cell_11.$procmux$1981_Y, Q = \memory.mem.row_15.cell_11.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2832 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_15.cell_11.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_15.\cell_10.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_15.\cell_10.$procmux$1981_Y, Q = \memory.mem.row_15.cell_10.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2834 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_15.cell_10.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_15.\cell_1.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_15.\cell_1.$procmux$1981_Y, Q = \memory.mem.row_15.cell_1.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2836 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_15.cell_1.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_15.\cell_0.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_15.\cell_0.$procmux$1981_Y, Q = \memory.mem.row_15.cell_0.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2838 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_15.cell_0.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_14.\cell_9.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_14.\cell_9.$procmux$1981_Y, Q = \memory.mem.row_14.cell_9.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2840 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_14.cell_9.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_14.\cell_8.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_14.\cell_8.$procmux$1981_Y, Q = \memory.mem.row_14.cell_8.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2842 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_14.cell_8.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_14.\cell_7.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_14.\cell_7.$procmux$1981_Y, Q = \memory.mem.row_14.cell_7.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2844 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_14.cell_7.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_14.\cell_6.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_14.\cell_6.$procmux$1981_Y, Q = \memory.mem.row_14.cell_6.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2846 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_14.cell_6.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_14.\cell_5.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_14.\cell_5.$procmux$1981_Y, Q = \memory.mem.row_14.cell_5.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2848 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_14.cell_5.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_14.\cell_4.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_14.\cell_4.$procmux$1981_Y, Q = \memory.mem.row_14.cell_4.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2850 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_14.cell_4.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_14.\cell_3.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_14.\cell_3.$procmux$1981_Y, Q = \memory.mem.row_14.cell_3.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2852 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_14.cell_3.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_14.\cell_2.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_14.\cell_2.$procmux$1981_Y, Q = \memory.mem.row_14.cell_2.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2854 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_14.cell_2.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_14.\cell_12.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_14.\cell_12.$procmux$1981_Y, Q = \memory.mem.row_14.cell_12.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2856 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_14.cell_12.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_14.\cell_11.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_14.\cell_11.$procmux$1981_Y, Q = \memory.mem.row_14.cell_11.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2858 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_14.cell_11.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_14.\cell_10.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_14.\cell_10.$procmux$1981_Y, Q = \memory.mem.row_14.cell_10.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2860 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_14.cell_10.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_14.\cell_1.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_14.\cell_1.$procmux$1981_Y, Q = \memory.mem.row_14.cell_1.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2862 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_14.cell_1.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_14.\cell_0.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_14.\cell_0.$procmux$1981_Y, Q = \memory.mem.row_14.cell_0.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2864 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_14.cell_0.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_13.\cell_9.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_13.\cell_9.$procmux$1981_Y, Q = \memory.mem.row_13.cell_9.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2866 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_13.cell_9.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_13.\cell_8.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_13.\cell_8.$procmux$1981_Y, Q = \memory.mem.row_13.cell_8.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2868 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_13.cell_8.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_13.\cell_7.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_13.\cell_7.$procmux$1981_Y, Q = \memory.mem.row_13.cell_7.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2870 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_13.cell_7.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_13.\cell_6.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_13.\cell_6.$procmux$1981_Y, Q = \memory.mem.row_13.cell_6.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2872 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_13.cell_6.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_13.\cell_5.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_13.\cell_5.$procmux$1981_Y, Q = \memory.mem.row_13.cell_5.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2874 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_13.cell_5.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_13.\cell_4.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_13.\cell_4.$procmux$1981_Y, Q = \memory.mem.row_13.cell_4.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2876 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_13.cell_4.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_13.\cell_3.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_13.\cell_3.$procmux$1981_Y, Q = \memory.mem.row_13.cell_3.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2878 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_13.cell_3.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_13.\cell_2.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_13.\cell_2.$procmux$1981_Y, Q = \memory.mem.row_13.cell_2.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2880 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_13.cell_2.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_13.\cell_12.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_13.\cell_12.$procmux$1981_Y, Q = \memory.mem.row_13.cell_12.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2882 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_13.cell_12.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_13.\cell_11.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_13.\cell_11.$procmux$1981_Y, Q = \memory.mem.row_13.cell_11.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2884 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_13.cell_11.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_13.\cell_10.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_13.\cell_10.$procmux$1981_Y, Q = \memory.mem.row_13.cell_10.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2886 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_13.cell_10.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_13.\cell_1.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_13.\cell_1.$procmux$1981_Y, Q = \memory.mem.row_13.cell_1.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2888 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_13.cell_1.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_13.\cell_0.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_13.\cell_0.$procmux$1981_Y, Q = \memory.mem.row_13.cell_0.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2890 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_13.cell_0.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_12.\cell_9.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_12.\cell_9.$procmux$1981_Y, Q = \memory.mem.row_12.cell_9.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2892 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_12.cell_9.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_12.\cell_8.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_12.\cell_8.$procmux$1981_Y, Q = \memory.mem.row_12.cell_8.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2894 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_12.cell_8.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_12.\cell_7.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_12.\cell_7.$procmux$1981_Y, Q = \memory.mem.row_12.cell_7.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2896 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_12.cell_7.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_12.\cell_6.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_12.\cell_6.$procmux$1981_Y, Q = \memory.mem.row_12.cell_6.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2898 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_12.cell_6.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_12.\cell_5.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_12.\cell_5.$procmux$1981_Y, Q = \memory.mem.row_12.cell_5.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2900 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_12.cell_5.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_12.\cell_4.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_12.\cell_4.$procmux$1981_Y, Q = \memory.mem.row_12.cell_4.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2902 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_12.cell_4.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_12.\cell_3.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_12.\cell_3.$procmux$1981_Y, Q = \memory.mem.row_12.cell_3.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2904 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_12.cell_3.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_12.\cell_2.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_12.\cell_2.$procmux$1981_Y, Q = \memory.mem.row_12.cell_2.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2906 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_12.cell_2.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_12.\cell_12.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_12.\cell_12.$procmux$1981_Y, Q = \memory.mem.row_12.cell_12.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2908 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_12.cell_12.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_12.\cell_11.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_12.\cell_11.$procmux$1981_Y, Q = \memory.mem.row_12.cell_11.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2910 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_12.cell_11.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_12.\cell_10.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_12.\cell_10.$procmux$1981_Y, Q = \memory.mem.row_12.cell_10.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2912 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_12.cell_10.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_12.\cell_1.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_12.\cell_1.$procmux$1981_Y, Q = \memory.mem.row_12.cell_1.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2914 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_12.cell_1.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_12.\cell_0.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_12.\cell_0.$procmux$1981_Y, Q = \memory.mem.row_12.cell_0.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2916 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_12.cell_0.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_11.\cell_9.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_11.\cell_9.$procmux$1981_Y, Q = \memory.mem.row_11.cell_9.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2918 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_11.cell_9.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_11.\cell_8.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_11.\cell_8.$procmux$1981_Y, Q = \memory.mem.row_11.cell_8.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2920 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_11.cell_8.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_11.\cell_7.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_11.\cell_7.$procmux$1981_Y, Q = \memory.mem.row_11.cell_7.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2922 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_11.cell_7.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_11.\cell_6.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_11.\cell_6.$procmux$1981_Y, Q = \memory.mem.row_11.cell_6.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2924 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_11.cell_6.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_11.\cell_5.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_11.\cell_5.$procmux$1981_Y, Q = \memory.mem.row_11.cell_5.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2926 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_11.cell_5.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_11.\cell_4.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_11.\cell_4.$procmux$1981_Y, Q = \memory.mem.row_11.cell_4.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2928 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_11.cell_4.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_11.\cell_3.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_11.\cell_3.$procmux$1981_Y, Q = \memory.mem.row_11.cell_3.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2930 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_11.cell_3.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_11.\cell_2.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_11.\cell_2.$procmux$1981_Y, Q = \memory.mem.row_11.cell_2.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2932 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_11.cell_2.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_11.\cell_12.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_11.\cell_12.$procmux$1981_Y, Q = \memory.mem.row_11.cell_12.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2934 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_11.cell_12.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_11.\cell_11.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_11.\cell_11.$procmux$1981_Y, Q = \memory.mem.row_11.cell_11.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2936 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_11.cell_11.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_11.\cell_10.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_11.\cell_10.$procmux$1981_Y, Q = \memory.mem.row_11.cell_10.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2938 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_11.cell_10.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_11.\cell_1.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_11.\cell_1.$procmux$1981_Y, Q = \memory.mem.row_11.cell_1.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2940 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_11.cell_1.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_11.\cell_0.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_11.\cell_0.$procmux$1981_Y, Q = \memory.mem.row_11.cell_0.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2942 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_11.cell_0.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_10.\cell_9.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_10.\cell_9.$procmux$1981_Y, Q = \memory.mem.row_10.cell_9.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2944 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_10.cell_9.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_10.\cell_8.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_10.\cell_8.$procmux$1981_Y, Q = \memory.mem.row_10.cell_8.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2946 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_10.cell_8.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_10.\cell_7.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_10.\cell_7.$procmux$1981_Y, Q = \memory.mem.row_10.cell_7.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2948 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_10.cell_7.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_10.\cell_6.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_10.\cell_6.$procmux$1981_Y, Q = \memory.mem.row_10.cell_6.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2950 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_10.cell_6.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_10.\cell_5.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_10.\cell_5.$procmux$1981_Y, Q = \memory.mem.row_10.cell_5.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2952 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_10.cell_5.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_10.\cell_4.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_10.\cell_4.$procmux$1981_Y, Q = \memory.mem.row_10.cell_4.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2954 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_10.cell_4.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_10.\cell_3.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_10.\cell_3.$procmux$1981_Y, Q = \memory.mem.row_10.cell_3.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2956 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_10.cell_3.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_10.\cell_2.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_10.\cell_2.$procmux$1981_Y, Q = \memory.mem.row_10.cell_2.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2958 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_10.cell_2.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_10.\cell_12.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_10.\cell_12.$procmux$1981_Y, Q = \memory.mem.row_10.cell_12.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2960 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_10.cell_12.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_10.\cell_11.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_10.\cell_11.$procmux$1981_Y, Q = \memory.mem.row_10.cell_11.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2962 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_10.cell_11.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_10.\cell_10.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_10.\cell_10.$procmux$1981_Y, Q = \memory.mem.row_10.cell_10.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2964 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_10.cell_10.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_10.\cell_1.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_10.\cell_1.$procmux$1981_Y, Q = \memory.mem.row_10.cell_1.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2966 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_10.cell_1.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_10.\cell_0.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_10.\cell_0.$procmux$1981_Y, Q = \memory.mem.row_10.cell_0.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2968 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_10.cell_0.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_1.\cell_9.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_1.\cell_9.$procmux$1981_Y, Q = \memory.mem.row_1.cell_9.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2970 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_1.cell_9.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_1.\cell_8.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_1.\cell_8.$procmux$1981_Y, Q = \memory.mem.row_1.cell_8.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2972 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_1.cell_8.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_1.\cell_7.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_1.\cell_7.$procmux$1981_Y, Q = \memory.mem.row_1.cell_7.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2974 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_1.cell_7.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_1.\cell_6.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_1.\cell_6.$procmux$1981_Y, Q = \memory.mem.row_1.cell_6.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2976 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_1.cell_6.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_1.\cell_5.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_1.\cell_5.$procmux$1981_Y, Q = \memory.mem.row_1.cell_5.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2978 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_1.cell_5.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_1.\cell_4.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_1.\cell_4.$procmux$1981_Y, Q = \memory.mem.row_1.cell_4.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2980 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_1.cell_4.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_1.\cell_3.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_1.\cell_3.$procmux$1981_Y, Q = \memory.mem.row_1.cell_3.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2982 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_1.cell_3.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_1.\cell_2.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_1.\cell_2.$procmux$1981_Y, Q = \memory.mem.row_1.cell_2.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2984 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_1.cell_2.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_1.\cell_12.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_1.\cell_12.$procmux$1981_Y, Q = \memory.mem.row_1.cell_12.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2986 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_1.cell_12.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_1.\cell_11.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_1.\cell_11.$procmux$1981_Y, Q = \memory.mem.row_1.cell_11.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2988 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_1.cell_11.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_1.\cell_10.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_1.\cell_10.$procmux$1981_Y, Q = \memory.mem.row_1.cell_10.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2990 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_1.cell_10.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_1.\cell_1.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_1.\cell_1.$procmux$1981_Y, Q = \memory.mem.row_1.cell_1.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2992 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_1.cell_1.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_1.\cell_0.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_1.\cell_0.$procmux$1981_Y, Q = \memory.mem.row_1.cell_0.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2994 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_1.cell_0.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_0.\cell_9.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_0.\cell_9.$procmux$1981_Y, Q = \memory.mem.row_0.cell_9.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2996 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_0.cell_9.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_0.\cell_8.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_0.\cell_8.$procmux$1981_Y, Q = \memory.mem.row_0.cell_8.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$2998 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_0.cell_8.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_0.\cell_7.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_0.\cell_7.$procmux$1981_Y, Q = \memory.mem.row_0.cell_7.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3000 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_0.cell_7.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_0.\cell_6.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_0.\cell_6.$procmux$1981_Y, Q = \memory.mem.row_0.cell_6.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3002 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_0.cell_6.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_0.\cell_5.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_0.\cell_5.$procmux$1981_Y, Q = \memory.mem.row_0.cell_5.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3004 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_0.cell_5.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_0.\cell_4.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_0.\cell_4.$procmux$1981_Y, Q = \memory.mem.row_0.cell_4.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3006 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_0.cell_4.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_0.\cell_3.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_0.\cell_3.$procmux$1981_Y, Q = \memory.mem.row_0.cell_3.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3008 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_0.cell_3.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_0.\cell_2.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_0.\cell_2.$procmux$1981_Y, Q = \memory.mem.row_0.cell_2.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3010 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_0.cell_2.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_0.\cell_12.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_0.\cell_12.$procmux$1981_Y, Q = \memory.mem.row_0.cell_12.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3012 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_0.cell_12.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_0.\cell_11.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_0.\cell_11.$procmux$1981_Y, Q = \memory.mem.row_0.cell_11.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3014 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_0.cell_11.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_0.\cell_10.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_0.\cell_10.$procmux$1981_Y, Q = \memory.mem.row_0.cell_10.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3016 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_0.cell_10.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_0.\cell_1.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_0.\cell_1.$procmux$1981_Y, Q = \memory.mem.row_0.cell_1.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3018 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_0.cell_1.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_0.\cell_0.$procdff$2062 ($dff) from module top (D = $flatten\memory.\mem.\row_0.\cell_0.$procmux$1981_Y, Q = \memory.mem.row_0.cell_0.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3020 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_0.cell_0.priv_mem).
Adding SRST signal on $flatten\memory.$procdff$2036 ($dff) from module top (D = $flatten\memory.$procmux$1570_Y, Q = \memory.perq, rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$3022 ($sdff) from module top (D = $flatten\memory.$procmux$1567_Y, Q = \memory.perq).
Adding SRST signal on $flatten\memory.$procdff$2035 ($dff) from module top (D = $flatten\memory.$procmux$1582_Y, Q = \memory.resetperiod_state, rval = 21'000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$3030 ($sdff) from module top (D = $flatten\memory.$procmux$1580_Y, Q = \memory.resetperiod_state).
Adding SRST signal on $flatten\memory.$procdff$2034 ($dff) from module top (D = $flatten\memory.$procmux$1590_Y, Q = \memory.resetperiod, rval = 1'1).
Adding SRST signal on $flatten\memory.$procdff$2032 ($dff) from module top (D = $flatten\memory.$procmux$1645_Y, Q = \memory.mm_colorsetter_value, rval = 3'110).
Adding EN signal on $auto$ff.cc:262:slice$3037 ($sdff) from module top (D = $flatten\memory.$procmux$1633_Y, Q = \memory.mm_colorsetter_value).
Adding SRST signal on $flatten\memory.$procdff$2031 ($dff) from module top (D = $flatten\memory.$procmux$1672_Y, Q = \memory.mm_colorsetter_commit, rval = 1'1).
Adding EN signal on $auto$ff.cc:262:slice$3047 ($sdff) from module top (D = $flatten\memory.$procmux$1672_Y, Q = \memory.mm_colorsetter_commit).
Adding SRST signal on $flatten\memory.$procdff$2030 ($dff) from module top (D = $flatten\memory.$procmux$1703_Y, Q = \memory.mm_colosetter_y, rval = 6'000000).
Adding EN signal on $auto$ff.cc:262:slice$3063 ($sdff) from module top (D = $flatten\memory.$procmux$1703_Y, Q = \memory.mm_colosetter_y).
Adding SRST signal on $flatten\memory.$procdff$2029 ($dff) from module top (D = $flatten\memory.$procmux$1734_Y, Q = \memory.mm_colosetter_x, rval = 6'000000).
Adding EN signal on $auto$ff.cc:262:slice$3079 ($sdff) from module top (D = $flatten\memory.$procmux$1734_Y, Q = \memory.mm_colosetter_x).
Adding SRST signal on $flatten\memory.$procdff$2028 ($dff) from module top (D = $flatten\memory.$procmux$1740_Y, Q = \memory.proposed_memval, rval = 3'111).
Adding EN signal on $auto$ff.cc:262:slice$3095 ($sdff) from module top (D = \memory.memvalwire, Q = \memory.proposed_memval).
Adding SRST signal on $flatten\memory.$procdff$2027 ($dff) from module top (D = $flatten\memory.$procmux$1764_Y, Q = \memory.movement_steal, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$3097 ($sdff) from module top (D = $flatten\memory.$procmux$1761_Y, Q = \memory.movement_steal).
Adding SRST signal on $flatten\memory.$procdff$2026 ($dff) from module top (D = $flatten\memory.$procmux$1783_Y, Q = \memory.movement_commit, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$3099 ($sdff) from module top (D = $flatten\memory.$procmux$1780_Y, Q = \memory.movement_commit).
Adding SRST signal on $flatten\memory.$procdff$2025 ($dff) from module top (D = $flatten\memory.$procmux$1805_Y, Q = \memory.movement_declined, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$3101 ($sdff) from module top (D = $flatten\memory.$procmux$1802_Y, Q = \memory.movement_declined).
Adding SRST signal on $flatten\game_manager.$procdff$2038 ($dff) from module top (D = $flatten\game_manager.$2\ipixstream[11:0], Q = \game_manager.ipixstream, rval = 12'000000000000).
Adding EN signal on $auto$ff.cc:262:slice$3103 ($sdff) from module top (D = \game_manager.texture_lookup, Q = \game_manager.ipixstream).
Adding SRST signal on $flatten\game_manager.$procdff$2037 ($dff) from module top (D = $flatten\game_manager.$procmux$1834_Y [3:0], Q = \game_manager.pixstream [3:0], rval = 4'0000).
Adding SRST signal on $flatten\game_manager.$procdff$2037 ($dff) from module top (D = \game_manager.shaded [11:4], Q = \game_manager.pixstream [11:4], rval = 8'00000000).
Adding EN signal on $flatten\core.$procdff$2061 ($dff) from module top (D = $flatten\core.$lt$src/vga_core.v:82$508_Y, Q = \core.v_drawing_pixels).
Adding EN signal on $flatten\core.$procdff$2060 ($dff) from module top (D = $flatten\core.$lt$src/vga_core.v:81$507_Y, Q = \core.h_drawing_pixels).
Adding SRST signal on $flatten\core.$procdff$2059 ($dff) from module top (D = \game_manager.pixstream [7:4], Q = \core.proposed_g, rval = 4'0000).
Adding SRST signal on $flatten\core.$procdff$2058 ($dff) from module top (D = \game_manager.pixstream [11:8], Q = \core.proposed_b, rval = 4'0000).
Adding SRST signal on $flatten\core.$procdff$2057 ($dff) from module top (D = \game_manager.pixstream [3:0], Q = \core.proposed_r, rval = 4'0000).
Adding SRST signal on $flatten\core.$procdff$2056 ($dff) from module top (D = $flatten\core.$procmux$1959_Y, Q = \core.vscan_pos, rval = 10'0000000000).
Adding EN signal on $auto$ff.cc:262:slice$3114 ($sdff) from module top (D = $flatten\core.$add$src/vga_core.v:89$518_Y, Q = \core.vscan_pos).
Adding SRST signal on $flatten\core.$procdff$2055 ($dff) from module top (D = $flatten\core.$add$src/vga_core.v:79$506_Y, Q = \core.hscan_pos, rval = 10'0000000000).
Adding EN signal on $flatten\core.$procdff$2054 ($dff) from module top (D = \core.vscan_pos, Q = \core.vreadwire).
Adding EN signal on $flatten\core.$procdff$2053 ($dff) from module top (D = \core.hscan_pos, Q = \core.hreadwire).
Adding EN signal on $flatten\core.$procdff$2052 ($dff) from module top (D = $flatten\core.$logic_not$src/vga_core.v:85$516_Y, Q = \core.v_sync).
Adding EN signal on $flatten\core.$procdff$2051 ($dff) from module top (D = $flatten\core.$logic_not$src/vga_core.v:84$512_Y, Q = \core.h_sync).

16.12.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 666 unused cells and 696 unused wires.
<suppressed ~667 debug messages>

16.12.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~34 debug messages>

16.12.9. Rerunning OPT passes. (Maybe there is more to do..)

16.12.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~469 debug messages>

16.12.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

16.12.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~132 debug messages>
Removed a total of 44 cells.

16.12.13. Executing OPT_DFF pass (perform DFF optimizations).
Removing never-active SRST on $auto$ff.cc:262:slice$2313 ($sdffe) from module top.
Adding SRST signal on $auto$ff.cc:262:slice$2313 ($sdffe) from module top (D = $flatten\vcell.\ishaper.$procmux$1885_Y [0], Q = \vcell.ishaper.blk2_hoffset [0], rval = 1'1).
Removing never-active SRST on $auto$ff.cc:262:slice$2301 ($sdffe) from module top.
Adding SRST signal on $auto$ff.cc:262:slice$2301 ($sdffe) from module top (D = $flatten\vcell.\ishaper.$procmux$1872_Y [0], Q = \vcell.ishaper.blk3_voffset [0], rval = 1'1).
Removing never-active SRST on $auto$ff.cc:262:slice$2317 ($sdffe) from module top.
Adding SRST signal on $auto$ff.cc:262:slice$2317 ($sdffe) from module top (D = $flatten\vcell.\ishaper.$procmux$1894_Y [0], Q = \vcell.ishaper.blk2_voffset [0], rval = 1'1).
Adding SRST signal on $auto$ff.cc:262:slice$2317 ($sdffe) from module top (D = $flatten\vcell.\ishaper.$procmux$1898_Y [4:1], Q = \vcell.ishaper.blk2_voffset [4:1], rval = 4'1111).
Removing never-active SRST on $auto$ff.cc:262:slice$2291 ($sdffe) from module top.
Adding SRST signal on $auto$ff.cc:262:slice$2291 ($sdffe) from module top (D = $flatten\vcell.\ishaper.$procmux$1863_Y [0], Q = \vcell.ishaper.blk3_hoffset [0], rval = 1'1).
Removing never-active SRST on $auto$ff.cc:262:slice$2281 ($sdffe) from module top.
Adding SRST signal on $auto$ff.cc:262:slice$2281 ($sdffe) from module top (D = $flatten\vcell.\ishaper.$procmux$1854_Y [1], Q = \vcell.ishaper.blk4_voffset [1], rval = 1'1).
Removing never-active SRST on $auto$ff.cc:262:slice$2263 ($sdffe) from module top.
Adding SRST signal on $auto$ff.cc:262:slice$2263 ($sdffe) from module top (D = $flatten\vcell.\ishaper.$procmux$1843_Y [0], Q = \vcell.ishaper.blk4_hoffset [0], rval = 1'1).
Removing never-active SRST on $auto$ff.cc:262:slice$2327 ($sdffe) from module top.
Adding SRST signal on $auto$ff.cc:262:slice$2327 ($sdffe) from module top (D = $flatten\vcell.\ishaper.$procmux$1909_Y [0], Q = \vcell.ishaper.blk1_hoffset [0], rval = 1'1).

16.12.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 10 unused cells and 62 unused wires.
<suppressed ~11 debug messages>

16.12.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

16.12.16. Rerunning OPT passes. (Maybe there is more to do..)

16.12.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~470 debug messages>

16.12.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

16.12.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

16.12.20. Executing OPT_DFF pass (perform DFF optimizations).

16.12.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

16.12.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

16.12.23. Rerunning OPT passes. (Maybe there is more to do..)

16.12.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~470 debug messages>

16.12.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

16.12.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

16.12.27. Executing OPT_DFF pass (perform DFF optimizations).

16.12.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

16.12.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

16.12.30. Finished OPT passes. (There is nothing left to do.)

16.13. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 25) from port B of cell top.$flatten\t.$eq$src/timer.v:14$522 ($eq).
Removed top 3 bits (of 4) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$2113 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$2117 ($eq).
Removed top 1 bits (of 6) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$2212 ($eq).
Removed top 3 bits (of 7) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$2208 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$2232 ($eq).
Removed top 3 bits (of 6) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$2228 ($eq).
Removed top 2 bits (of 6) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$2224 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$2240 ($eq).
Removed top 4 bits (of 5) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$2236 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$auto$opt_dff.cc:198:make_patterns_logic$3056 ($ne).
Removed top 6 bits (of 9) from port B of cell top.$auto$opt_dff.cc:198:make_patterns_logic$3052 ($ne).
Removed top 1 bits (of 4) from port B of cell top.$auto$opt_dff.cc:198:make_patterns_logic$3050 ($ne).
Removed top 1 bits (of 5) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$2078 ($eq).
Removed top 1 bits (of 7) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$2076 ($eq).
Removed top 5 bits (of 6) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:384$3 ($eq).
Removed top 4 bits (of 6) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:429$5 ($eq).
Removed top 4 bits (of 6) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:474$7 ($eq).
Removed top 3 bits (of 6) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:519$9 ($eq).
Removed top 3 bits (of 6) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:564$11 ($eq).
Removed top 3 bits (of 6) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:609$13 ($eq).
Removed top 3 bits (of 6) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:654$15 ($eq).
Removed top 2 bits (of 6) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:699$17 ($eq).
Removed top 2 bits (of 6) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:744$19 ($eq).
Removed top 2 bits (of 6) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:789$21 ($eq).
Removed top 2 bits (of 6) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:834$23 ($eq).
Removed top 2 bits (of 6) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:879$25 ($eq).
Removed top 2 bits (of 6) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:924$27 ($eq).
Removed top 2 bits (of 6) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:969$29 ($eq).
Removed top 2 bits (of 6) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1014$31 ($eq).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1059$33 ($eq).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1104$35 ($eq).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1149$37 ($eq).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1194$39 ($eq).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1239$41 ($eq).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1284$43 ($eq).
Removed top 4 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1321$47 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1321$53 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1321$59 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1321$65 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1321$71 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1321$77 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1321$83 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1321$89 ($eq).
Removed top 4 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1325$112 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1325$115 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1325$118 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1325$121 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1325$124 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1325$127 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1325$130 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1325$133 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1325$136 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1325$139 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1325$142 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1325$145 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1325$148 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1325$151 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1325$154 ($eq).
Removed top 4 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1326$177 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1326$180 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1326$183 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1326$186 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1326$189 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1326$192 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1326$195 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1326$198 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1326$201 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1326$204 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1326$207 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1326$210 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1326$213 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1326$216 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1326$219 ($eq).
Removed top 4 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1327$242 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1327$245 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1327$248 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1327$251 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1327$254 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1327$257 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1327$260 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1327$263 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1327$266 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1327$269 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1327$272 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1327$275 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1327$278 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1327$281 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1327$284 ($eq).
Removed top 4 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1328$307 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1328$310 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1328$313 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1328$316 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1328$319 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1328$322 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1328$325 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1328$328 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1328$331 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1328$334 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1328$337 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1328$340 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1328$343 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1328$346 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1328$349 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:227$495 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:214$493 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:201$491 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:188$489 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:175$487 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:162$485 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:149$483 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:136$481 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:123$479 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:110$477 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:97$475 ($eq).
Removed top 4 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:84$473 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:61$468 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:61$465 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:61$462 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:61$459 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:61$456 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:61$453 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:61$450 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:61$447 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:61$444 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:61$441 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:61$438 ($eq).
Removed top 4 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:61$435 ($eq).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_0.$shiftx$src/meta_memrow.v:0$432 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_0.$shiftx$src/meta_memrow.v:0$431 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_0.$shiftx$src/meta_memrow.v:0$430 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_0.$shiftx$src/meta_memrow.v:0$429 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_1.$shiftx$src/meta_memrow.v:0$432 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_1.$shiftx$src/meta_memrow.v:0$431 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_1.$shiftx$src/meta_memrow.v:0$430 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_1.$shiftx$src/meta_memrow.v:0$429 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_2.$shiftx$src/meta_memrow.v:0$432 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_2.$shiftx$src/meta_memrow.v:0$431 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_2.$shiftx$src/meta_memrow.v:0$430 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_2.$shiftx$src/meta_memrow.v:0$429 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_3.$shiftx$src/meta_memrow.v:0$432 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_3.$shiftx$src/meta_memrow.v:0$431 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_3.$shiftx$src/meta_memrow.v:0$430 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_3.$shiftx$src/meta_memrow.v:0$429 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_4.$shiftx$src/meta_memrow.v:0$432 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_4.$shiftx$src/meta_memrow.v:0$431 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_4.$shiftx$src/meta_memrow.v:0$430 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_4.$shiftx$src/meta_memrow.v:0$429 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_5.$shiftx$src/meta_memrow.v:0$432 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_5.$shiftx$src/meta_memrow.v:0$431 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_5.$shiftx$src/meta_memrow.v:0$430 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_5.$shiftx$src/meta_memrow.v:0$429 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_6.$shiftx$src/meta_memrow.v:0$432 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_6.$shiftx$src/meta_memrow.v:0$431 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_6.$shiftx$src/meta_memrow.v:0$430 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_6.$shiftx$src/meta_memrow.v:0$429 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_7.$shiftx$src/meta_memrow.v:0$432 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_7.$shiftx$src/meta_memrow.v:0$431 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_7.$shiftx$src/meta_memrow.v:0$430 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_7.$shiftx$src/meta_memrow.v:0$429 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_8.$shiftx$src/meta_memrow.v:0$432 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_8.$shiftx$src/meta_memrow.v:0$431 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_8.$shiftx$src/meta_memrow.v:0$430 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_8.$shiftx$src/meta_memrow.v:0$429 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_9.$shiftx$src/meta_memrow.v:0$432 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_9.$shiftx$src/meta_memrow.v:0$431 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_9.$shiftx$src/meta_memrow.v:0$430 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_9.$shiftx$src/meta_memrow.v:0$429 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_10.$shiftx$src/meta_memrow.v:0$432 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_10.$shiftx$src/meta_memrow.v:0$431 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_10.$shiftx$src/meta_memrow.v:0$430 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_10.$shiftx$src/meta_memrow.v:0$429 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_11.$shiftx$src/meta_memrow.v:0$432 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_11.$shiftx$src/meta_memrow.v:0$431 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_11.$shiftx$src/meta_memrow.v:0$430 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_11.$shiftx$src/meta_memrow.v:0$429 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_12.$shiftx$src/meta_memrow.v:0$432 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_12.$shiftx$src/meta_memrow.v:0$431 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_12.$shiftx$src/meta_memrow.v:0$430 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_12.$shiftx$src/meta_memrow.v:0$429 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_13.$shiftx$src/meta_memrow.v:0$432 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_13.$shiftx$src/meta_memrow.v:0$431 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_13.$shiftx$src/meta_memrow.v:0$430 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_13.$shiftx$src/meta_memrow.v:0$429 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_14.$shiftx$src/meta_memrow.v:0$432 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_14.$shiftx$src/meta_memrow.v:0$431 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_14.$shiftx$src/meta_memrow.v:0$430 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_14.$shiftx$src/meta_memrow.v:0$429 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_15.$shiftx$src/meta_memrow.v:0$432 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_15.$shiftx$src/meta_memrow.v:0$431 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_15.$shiftx$src/meta_memrow.v:0$430 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_15.$shiftx$src/meta_memrow.v:0$429 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_16.$shiftx$src/meta_memrow.v:0$432 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_16.$shiftx$src/meta_memrow.v:0$431 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_16.$shiftx$src/meta_memrow.v:0$430 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_16.$shiftx$src/meta_memrow.v:0$429 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_17.$shiftx$src/meta_memrow.v:0$432 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_17.$shiftx$src/meta_memrow.v:0$431 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_17.$shiftx$src/meta_memrow.v:0$430 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_17.$shiftx$src/meta_memrow.v:0$429 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_18.$shiftx$src/meta_memrow.v:0$432 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_18.$shiftx$src/meta_memrow.v:0$431 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_18.$shiftx$src/meta_memrow.v:0$430 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_18.$shiftx$src/meta_memrow.v:0$429 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_19.$shiftx$src/meta_memrow.v:0$432 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_19.$shiftx$src/meta_memrow.v:0$431 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_19.$shiftx$src/meta_memrow.v:0$430 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_19.$shiftx$src/meta_memrow.v:0$429 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_20.$shiftx$src/meta_memrow.v:0$432 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_20.$shiftx$src/meta_memrow.v:0$431 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_20.$shiftx$src/meta_memrow.v:0$430 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_20.$shiftx$src/meta_memrow.v:0$429 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_21.$shiftx$src/meta_memrow.v:0$432 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_21.$shiftx$src/meta_memrow.v:0$431 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_21.$shiftx$src/meta_memrow.v:0$430 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_21.$shiftx$src/meta_memrow.v:0$429 ($shiftx).
Removed cell top.$flatten\memory.$procmux$1728 ($mux).
Removed cell top.$flatten\memory.$procmux$1725 ($mux).
Removed cell top.$flatten\memory.$procmux$1723 ($mux).
Removed cell top.$flatten\memory.$procmux$1721 ($mux).
Removed cell top.$flatten\memory.$procmux$1719 ($mux).
Removed cell top.$flatten\memory.$procmux$1710 ($mux).
Removed cell top.$flatten\memory.$procmux$1697 ($mux).
Removed cell top.$flatten\memory.$procmux$1694 ($mux).
Removed cell top.$flatten\memory.$procmux$1692 ($mux).
Removed cell top.$flatten\memory.$procmux$1690 ($mux).
Removed cell top.$flatten\memory.$procmux$1688 ($mux).
Removed cell top.$flatten\memory.$procmux$1679 ($mux).
Removed cell top.$flatten\memory.$procmux$1670 ($mux).
Removed cell top.$flatten\memory.$procmux$1667 ($mux).
Removed cell top.$flatten\memory.$procmux$1665 ($mux).
Removed cell top.$flatten\memory.$procmux$1663 ($mux).
Removed cell top.$flatten\memory.$procmux$1661 ($mux).
Removed cell top.$flatten\memory.$procmux$1652 ($mux).
Removed cell top.$flatten\memory.$procmux$1627 ($mux).
Removed top 1 bits (of 4) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$2100 ($eq).
Removed top 2 bits (of 3) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$2096 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$2094 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$2090 ($eq).
Removed cell top.$flatten\memory.$procmux$1576 ($mux).
Removed cell top.$flatten\memory.$procmux$1562 ($mux).
Removed top 31 bits (of 32) from port B of cell top.$flatten\memory.$sub$src/blockmemory.v:169$872 ($sub).
Removed top 26 bits (of 32) from port Y of cell top.$flatten\memory.$sub$src/blockmemory.v:169$872 ($sub).
Removed top 1 bits (of 6) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$2088 ($eq).
Removed top 31 bits (of 32) from port B of cell top.$flatten\memory.$sub$src/blockmemory.v:161$870 ($sub).
Removed top 26 bits (of 32) from port Y of cell top.$flatten\memory.$sub$src/blockmemory.v:161$870 ($sub).
Removed top 31 bits (of 32) from port B of cell top.$flatten\memory.$sub$src/blockmemory.v:153$868 ($sub).
Removed top 26 bits (of 32) from port Y of cell top.$flatten\memory.$sub$src/blockmemory.v:153$868 ($sub).
Removed top 31 bits (of 32) from port B of cell top.$flatten\memory.$sub$src/blockmemory.v:145$866 ($sub).
Removed top 26 bits (of 32) from port Y of cell top.$flatten\memory.$sub$src/blockmemory.v:145$866 ($sub).
Removed top 3 bits (of 4) from port B of cell top.$flatten\memory.$eq$src/blockmemory.v:136$863 ($eq).
Removed top 31 bits (of 32) from port B of cell top.$flatten\memory.$gt$src/blockmemory.v:135$862 ($gt).
Removed top 26 bits (of 32) from port B of cell top.$flatten\memory.$ge$src/blockmemory.v:120$858 ($ge).
Removed top 26 bits (of 32) from port B of cell top.$flatten\memory.$sub$src/blockmemory.v:116$856 ($sub).
Removed top 26 bits (of 32) from port Y of cell top.$flatten\memory.$sub$src/blockmemory.v:116$856 ($sub).
Removed top 26 bits (of 32) from port B of cell top.$flatten\memory.$lt$src/blockmemory.v:115$854 ($lt).
Removed top 26 bits (of 32) from port B of cell top.$flatten\memory.$ge$src/blockmemory.v:115$853 ($ge).
Removed top 27 bits (of 32) from port B of cell top.$flatten\memory.$sub$src/blockmemory.v:112$851 ($sub).
Removed top 26 bits (of 32) from port Y of cell top.$flatten\memory.$sub$src/blockmemory.v:112$851 ($sub).
Removed top 26 bits (of 32) from port B of cell top.$flatten\memory.$lt$src/blockmemory.v:110$849 ($lt).
Removed top 27 bits (of 32) from port B of cell top.$flatten\memory.$ge$src/blockmemory.v:110$848 ($ge).
Removed top 27 bits (of 32) from port B of cell top.$flatten\memory.$lt$src/blockmemory.v:105$846 ($lt).
Removed top 2 bits (of 3) from port B of cell top.$flatten\vcell.\ishaper.$eq$src/tetron_I.v:41$576 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$flatten\vcell.\ishaper.$eq$src/tetron_I.v:52$577 ($eq).
Removed cell top.$flatten\vcell.\ishaper.$procmux$1839 ($mux).
Removed top 3 bits (of 5) from mux cell top.$flatten\vcell.\ishaper.$procmux$1841 ($mux).
Removed top 3 bits (of 5) from mux cell top.$flatten\vcell.\ishaper.$procmux$1843 ($mux).
Removed cell top.$flatten\vcell.\ishaper.$procmux$1850 ($mux).
Removed top 3 bits (of 5) from mux cell top.$flatten\vcell.\ishaper.$procmux$1852 ($mux).
Removed top 3 bits (of 5) from mux cell top.$flatten\vcell.\ishaper.$procmux$1854 ($mux).
Removed cell top.$flatten\vcell.\ishaper.$procmux$1861 ($mux).
Removed top 4 bits (of 5) from mux cell top.$flatten\vcell.\ishaper.$procmux$1863 ($mux).
Removed cell top.$flatten\vcell.\ishaper.$procmux$1872 ($mux).
Removed cell top.$flatten\vcell.\ishaper.$procmux$1883 ($mux).
Removed cell top.$flatten\vcell.\ishaper.$procmux$1894 ($mux).
Removed cell top.$flatten\vcell.\ishaper.$procmux$1907 ($mux).
Removed cell top.$flatten\vcell.\ishaper.$procmux$1909 ($mux).
Removed top 4 bits (of 5) from mux cell top.$flatten\vcell.\ishaper.$procmux$1920 ($mux).
Removed cell top.$flatten\vcell.$procmux$1494 ($mux).
Removed cell top.$flatten\vcell.$procmux$1462 ($mux).
Removed cell top.$flatten\vcell.$procmux$1456 ($mux).
Removed cell top.$flatten\vcell.$procmux$1450 ($mux).
Removed cell top.$flatten\vcell.$procmux$1443 ($mux).
Removed cell top.$flatten\vcell.$procmux$1437 ($mux).
Removed cell top.$flatten\vcell.$procmux$1430 ($mux).
Removed cell top.$flatten\vcell.$procmux$1427 ($mux).
Removed cell top.$flatten\vcell.$procmux$1424 ($mux).
Removed cell top.$flatten\vcell.$procmux$1421 ($mux).
Removed cell top.$flatten\vcell.$procmux$1418 ($mux).
Removed cell top.$flatten\vcell.$procmux$1350 ($mux).
Removed cell top.$flatten\vcell.$procmux$1336 ($mux).
Removed cell top.$flatten\vcell.$procmux$1326 ($mux).
Removed top 1 bits (of 3) from port B of cell top.$flatten\vcell.$eq$src/volatile_cell_storage.v:125$1292 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$flatten\vcell.$add$src/volatile_cell_storage.v:53$1271 ($add).
Removed top 4 bits (of 5) from port B of cell top.$flatten\vcell.$add$src/volatile_cell_storage.v:52$1270 ($add).
Removed top 4 bits (of 5) from port B of cell top.$flatten\vcell.$add$src/volatile_cell_storage.v:50$1268 ($add).
Removed top 3 bits (of 5) from port B of cell top.$flatten\vcell.$add$src/volatile_cell_storage.v:48$1267 ($add).
Removed top 4 bits (of 5) from port B of cell top.$flatten\vcell.$add$src/volatile_cell_storage.v:47$1266 ($add).
Removed top 4 bits (of 5) from port B of cell top.$flatten\vcell.$add$src/volatile_cell_storage.v:45$1264 ($add).
Removed top 1 bits (of 3) from port B of cell top.$flatten\game_manager.\c.$procmux$1815_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$flatten\game_manager.\c.$procmux$1816_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell top.$flatten\game_manager.\c.$procmux$1817_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell top.$flatten\game_manager.\sh.$eq$src/shader.v:9$601 ($eq).
Removed top 27 bits (of 32) from port B of cell top.$flatten\game_manager.\sh.$ge$src/shader.v:9$603 ($ge).
Removed top 30 bits (of 32) from port B of cell top.$flatten\game_manager.\sh.$gt$src/shader.v:10$605 ($gt).
Removed top 27 bits (of 32) from port B of cell top.$flatten\game_manager.\sh.$lt$src/shader.v:10$606 ($lt).
Removed top 30 bits (of 32) from port B of cell top.$flatten\game_manager.\sh.$gt$src/shader.v:10$608 ($gt).
Removed top 27 bits (of 32) from port B of cell top.$flatten\game_manager.\sh.$lt$src/shader.v:10$610 ($lt).
Removed top 11 bits (of 12) from port Y of cell top.$flatten\game_manager.\sh.$and$src/shader.v:20$618 ($and).
Removed top 11 bits (of 12) from port B of cell top.$flatten\game_manager.\sh.$and$src/shader.v:21$621 ($and).
Removed top 11 bits (of 12) from port Y of cell top.$flatten\game_manager.\sh.$and$src/shader.v:21$621 ($and).
Removed top 4 bits (of 10) from port Y of cell top.$flatten\game_manager.\hh.$sub$src/mod24.v:58$826 ($sub).
Removed top 4 bits (of 10) from port A of cell top.$flatten\game_manager.\hh.$sub$src/mod24.v:58$826 ($sub).
Removed top 4 bits (of 10) from port B of cell top.$flatten\game_manager.\hh.$sub$src/mod24.v:58$826 ($sub).
Removed top 4 bits (of 10) from port Y of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$825 ($or).
Removed top 4 bits (of 10) from port A of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$825 ($or).
Removed top 4 bits (of 10) from port B of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$825 ($or).
Removed top 4 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:43$824 ($mux).
Removed top 4 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:43$823 ($mux).
Removed top 4 bits (of 10) from port Y of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$818 ($or).
Removed top 4 bits (of 10) from port A of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$818 ($or).
Removed top 4 bits (of 10) from port B of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$818 ($or).
Removed top 4 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:42$817 ($mux).
Removed top 6 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:42$816 ($mux).
Removed top 4 bits (of 10) from port Y of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$811 ($or).
Removed top 4 bits (of 10) from port A of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$811 ($or).
Removed top 4 bits (of 10) from port B of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$811 ($or).
Removed top 4 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:41$810 ($mux).
Removed top 5 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:41$809 ($mux).
Removed top 4 bits (of 10) from port Y of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$804 ($or).
Removed top 4 bits (of 10) from port A of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$804 ($or).
Removed top 4 bits (of 10) from port B of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$804 ($or).
Removed top 4 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:40$803 ($mux).
Removed top 4 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:40$802 ($mux).
Removed top 1 bits (of 5) from port B of cell top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:40$799 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:40$798 ($eq).
Removed top 4 bits (of 10) from port Y of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$797 ($or).
Removed top 4 bits (of 10) from port A of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$797 ($or).
Removed top 4 bits (of 10) from port B of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$797 ($or).
Removed top 4 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:39$796 ($mux).
Removed top 4 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:39$795 ($mux).
Removed top 1 bits (of 5) from port B of cell top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:39$792 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:39$791 ($eq).
Removed top 4 bits (of 10) from port Y of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$790 ($or).
Removed top 4 bits (of 10) from port A of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$790 ($or).
Removed top 4 bits (of 10) from port B of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$790 ($or).
Removed top 4 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:38$789 ($mux).
Removed top 6 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:38$788 ($mux).
Removed top 1 bits (of 5) from port B of cell top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:38$785 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:38$784 ($eq).
Removed top 4 bits (of 10) from port Y of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$783 ($or).
Removed top 4 bits (of 10) from port A of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$783 ($or).
Removed top 4 bits (of 10) from port B of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$783 ($or).
Removed top 4 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:37$782 ($mux).
Removed top 5 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:37$781 ($mux).
Removed top 1 bits (of 5) from port B of cell top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:37$778 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:37$777 ($eq).
Removed top 4 bits (of 10) from port Y of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$776 ($or).
Removed top 4 bits (of 10) from port A of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$776 ($or).
Removed top 4 bits (of 10) from port B of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$776 ($or).
Removed top 4 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:36$775 ($mux).
Removed top 4 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:36$774 ($mux).
Removed top 2 bits (of 5) from port B of cell top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:36$771 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:36$770 ($eq).
Removed top 4 bits (of 10) from port Y of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$769 ($or).
Removed top 4 bits (of 10) from port A of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$769 ($or).
Removed top 4 bits (of 10) from port B of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$769 ($or).
Removed top 4 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:35$768 ($mux).
Removed top 4 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:35$767 ($mux).
Removed top 2 bits (of 5) from port B of cell top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:35$764 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:35$763 ($eq).
Removed top 4 bits (of 10) from port Y of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$762 ($or).
Removed top 4 bits (of 10) from port A of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$762 ($or).
Removed top 4 bits (of 10) from port B of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$762 ($or).
Removed top 4 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:34$761 ($mux).
Removed top 6 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:34$760 ($mux).
Removed top 3 bits (of 5) from port B of cell top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:34$757 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:34$756 ($eq).
Removed top 4 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:33$755 ($mux).
Removed top 5 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:33$754 ($mux).
Removed top 4 bits (of 5) from port B of cell top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:33$751 ($eq).
Removed top 4 bits (of 5) from mux cell top.$flatten\game_manager.\h.$ternary$src/mod24.v:18$631 ($mux).
Removed top 3 bits (of 5) from mux cell top.$flatten\game_manager.\h.$ternary$src/mod24.v:18$633 ($mux).
Removed top 4 bits (of 5) from port A of cell top.$flatten\game_manager.\h.$or$src/mod24.v:18$634 ($or).
Removed top 3 bits (of 5) from port B of cell top.$flatten\game_manager.\h.$or$src/mod24.v:18$634 ($or).
Removed top 3 bits (of 5) from port Y of cell top.$flatten\game_manager.\h.$or$src/mod24.v:18$634 ($or).
Removed top 3 bits (of 5) from mux cell top.$flatten\game_manager.\h.$ternary$src/mod24.v:18$635 ($mux).
Removed top 3 bits (of 5) from port A of cell top.$flatten\game_manager.\h.$or$src/mod24.v:18$636 ($or).
Removed top 3 bits (of 5) from port B of cell top.$flatten\game_manager.\h.$or$src/mod24.v:18$636 ($or).
Removed top 3 bits (of 5) from port Y of cell top.$flatten\game_manager.\h.$or$src/mod24.v:18$636 ($or).
Removed top 2 bits (of 5) from mux cell top.$flatten\game_manager.\h.$ternary$src/mod24.v:19$637 ($mux).
Removed top 2 bits (of 5) from mux cell top.$flatten\game_manager.\h.$ternary$src/mod24.v:19$638 ($mux).
Removed top 2 bits (of 5) from port A of cell top.$flatten\game_manager.\h.$or$src/mod24.v:19$639 ($or).
Removed top 2 bits (of 5) from port B of cell top.$flatten\game_manager.\h.$or$src/mod24.v:19$639 ($or).
Removed top 2 bits (of 5) from port Y of cell top.$flatten\game_manager.\h.$or$src/mod24.v:19$639 ($or).
Removed top 2 bits (of 5) from mux cell top.$flatten\game_manager.\h.$ternary$src/mod24.v:19$640 ($mux).
Removed top 2 bits (of 5) from port A of cell top.$flatten\game_manager.\h.$or$src/mod24.v:19$641 ($or).
Removed top 2 bits (of 5) from port B of cell top.$flatten\game_manager.\h.$or$src/mod24.v:19$641 ($or).
Removed top 2 bits (of 5) from port Y of cell top.$flatten\game_manager.\h.$or$src/mod24.v:19$641 ($or).
Removed top 2 bits (of 5) from mux cell top.$flatten\game_manager.\h.$ternary$src/mod24.v:19$642 ($mux).
Removed top 2 bits (of 5) from port A of cell top.$flatten\game_manager.\h.$or$src/mod24.v:19$643 ($or).
Removed top 2 bits (of 5) from port B of cell top.$flatten\game_manager.\h.$or$src/mod24.v:19$643 ($or).
Removed top 2 bits (of 5) from port Y of cell top.$flatten\game_manager.\h.$or$src/mod24.v:19$643 ($or).
Removed top 1 bits (of 5) from mux cell top.$flatten\game_manager.\h.$ternary$src/mod24.v:20$644 ($mux).
Removed top 1 bits (of 5) from mux cell top.$flatten\game_manager.\h.$ternary$src/mod24.v:20$645 ($mux).
Removed top 1 bits (of 5) from port A of cell top.$flatten\game_manager.\h.$or$src/mod24.v:20$646 ($or).
Removed top 1 bits (of 5) from port B of cell top.$flatten\game_manager.\h.$or$src/mod24.v:20$646 ($or).
Removed top 1 bits (of 5) from port Y of cell top.$flatten\game_manager.\h.$or$src/mod24.v:20$646 ($or).
Removed top 1 bits (of 5) from mux cell top.$flatten\game_manager.\h.$ternary$src/mod24.v:20$647 ($mux).
Removed top 1 bits (of 5) from port A of cell top.$flatten\game_manager.\h.$or$src/mod24.v:20$648 ($or).
Removed top 1 bits (of 5) from port B of cell top.$flatten\game_manager.\h.$or$src/mod24.v:20$648 ($or).
Removed top 1 bits (of 5) from port Y of cell top.$flatten\game_manager.\h.$or$src/mod24.v:20$648 ($or).
Removed top 1 bits (of 5) from mux cell top.$flatten\game_manager.\h.$ternary$src/mod24.v:20$649 ($mux).
Removed top 1 bits (of 5) from port A of cell top.$flatten\game_manager.\h.$or$src/mod24.v:20$650 ($or).
Removed top 1 bits (of 5) from port B of cell top.$flatten\game_manager.\h.$or$src/mod24.v:20$650 ($or).
Removed top 1 bits (of 5) from port Y of cell top.$flatten\game_manager.\h.$or$src/mod24.v:20$650 ($or).
Removed top 1 bits (of 5) from mux cell top.$flatten\game_manager.\h.$ternary$src/mod24.v:21$651 ($mux).
Removed top 1 bits (of 5) from mux cell top.$flatten\game_manager.\h.$ternary$src/mod24.v:21$652 ($mux).
Removed top 1 bits (of 5) from port A of cell top.$flatten\game_manager.\h.$or$src/mod24.v:21$653 ($or).
Removed top 1 bits (of 5) from port B of cell top.$flatten\game_manager.\h.$or$src/mod24.v:21$653 ($or).
Removed top 1 bits (of 5) from port Y of cell top.$flatten\game_manager.\h.$or$src/mod24.v:21$653 ($or).
Removed top 1 bits (of 5) from mux cell top.$flatten\game_manager.\h.$ternary$src/mod24.v:21$654 ($mux).
Removed top 1 bits (of 5) from port A of cell top.$flatten\game_manager.\h.$or$src/mod24.v:21$655 ($or).
Removed top 1 bits (of 5) from port B of cell top.$flatten\game_manager.\h.$or$src/mod24.v:21$655 ($or).
Removed top 1 bits (of 5) from port Y of cell top.$flatten\game_manager.\h.$or$src/mod24.v:21$655 ($or).
Removed top 1 bits (of 5) from mux cell top.$flatten\game_manager.\h.$ternary$src/mod24.v:21$656 ($mux).
Removed top 1 bits (of 5) from port A of cell top.$flatten\game_manager.\h.$or$src/mod24.v:21$657 ($or).
Removed top 1 bits (of 5) from port B of cell top.$flatten\game_manager.\h.$or$src/mod24.v:21$657 ($or).
Removed top 1 bits (of 5) from port Y of cell top.$flatten\game_manager.\h.$or$src/mod24.v:21$657 ($or).
Removed top 3 bits (of 5) from port A of cell top.$flatten\game_manager.\h.$or$src/mod24.v:25$672 ($or).
Removed top 2 bits (of 5) from port B of cell top.$flatten\game_manager.\h.$or$src/mod24.v:25$672 ($or).
Removed top 2 bits (of 5) from port Y of cell top.$flatten\game_manager.\h.$or$src/mod24.v:25$672 ($or).
Removed top 2 bits (of 5) from port A of cell top.$flatten\game_manager.\h.$or$src/mod24.v:25$673 ($or).
Removed top 1 bits (of 5) from port B of cell top.$flatten\game_manager.\h.$or$src/mod24.v:25$673 ($or).
Removed top 1 bits (of 5) from port Y of cell top.$flatten\game_manager.\h.$or$src/mod24.v:25$673 ($or).
Removed top 1 bits (of 5) from port A of cell top.$flatten\game_manager.\h.$or$src/mod24.v:25$674 ($or).
Removed top 1 bits (of 5) from port B of cell top.$flatten\game_manager.\h.$or$src/mod24.v:25$674 ($or).
Removed top 1 bits (of 5) from port Y of cell top.$flatten\game_manager.\h.$or$src/mod24.v:25$674 ($or).
Removed top 1 bits (of 5) from port A of cell top.$flatten\game_manager.\h.$or$src/mod24.v:25$675 ($or).
Removed top 27 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$681 ($ge).
Removed top 26 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$682 ($lt).
Removed top 26 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$684 ($ge).
Removed top 25 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$685 ($lt).
Removed top 25 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$687 ($ge).
Removed top 25 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$688 ($lt).
Removed top 25 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$690 ($ge).
Removed top 25 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$691 ($lt).
Removed top 25 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$693 ($ge).
Removed top 24 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$694 ($lt).
Removed top 24 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$696 ($ge).
Removed top 24 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$697 ($lt).
Removed top 24 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$699 ($ge).
Removed top 24 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$700 ($lt).
Removed top 24 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$702 ($ge).
Removed top 24 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$703 ($lt).
Removed top 24 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$705 ($ge).
Removed top 24 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$706 ($lt).
Removed top 24 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$708 ($ge).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$709 ($lt).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$711 ($ge).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$712 ($lt).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$714 ($ge).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$715 ($lt).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$717 ($ge).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$718 ($lt).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$720 ($ge).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$721 ($lt).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$723 ($ge).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$724 ($lt).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$726 ($ge).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$727 ($lt).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$729 ($ge).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$730 ($lt).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$732 ($ge).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$733 ($lt).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$735 ($ge).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$736 ($lt).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$738 ($ge).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$739 ($lt).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$741 ($ge).
Removed top 22 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$742 ($lt).
Removed top 22 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$744 ($ge).
Removed top 22 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$745 ($lt).
Removed top 22 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$747 ($ge).
Removed top 22 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$748 ($lt).
Removed top 8 bits (of 12) from mux cell top.$flatten\game_manager.$procmux$1834 ($mux).
Removed top 31 bits (of 32) from port B of cell top.$flatten\game_manager.\sh.$le$src/shader.v:9$598 ($le).
Removed top 26 bits (of 32) from port B of cell top.$flatten\game_manager.$sub$src/gmanager.v:43$594 ($sub).
Removed top 22 bits (of 32) from port Y of cell top.$flatten\game_manager.$sub$src/gmanager.v:43$594 ($sub).
Removed top 22 bits (of 32) from port B of cell top.$flatten\game_manager.$sub$src/gmanager.v:35$593 ($sub).
Removed top 26 bits (of 32) from port Y of cell top.$flatten\game_manager.$sub$src/gmanager.v:35$593 ($sub).
Removed top 26 bits (of 32) from port A of cell top.$flatten\game_manager.$sub$src/gmanager.v:35$593 ($sub).
Removed top 4 bits (of 10) from port B of cell top.$flatten\game_manager.$sub$src/gmanager.v:35$593 ($sub).
Removed top 26 bits (of 32) from port B of cell top.$flatten\game_manager.$sub$src/gmanager.v:34$589 ($sub).
Removed top 22 bits (of 32) from port Y of cell top.$flatten\game_manager.$sub$src/gmanager.v:34$589 ($sub).
Removed top 22 bits (of 32) from port B of cell top.$flatten\game_manager.$lt$src/gmanager.v:29$587 ($lt).
Removed top 26 bits (of 32) from port B of cell top.$flatten\game_manager.$ge$src/gmanager.v:29$586 ($ge).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.$lt$src/gmanager.v:28$584 ($lt).
Removed top 26 bits (of 32) from port B of cell top.$flatten\game_manager.$ge$src/gmanager.v:28$583 ($ge).
Removed top 23 bits (of 32) from port B of cell top.$flatten\core.$lt$src/vga_core.v:85$514 ($lt).
Removed top 23 bits (of 32) from port B of cell top.$flatten\core.$ge$src/vga_core.v:85$513 ($ge).
Removed top 22 bits (of 32) from port B of cell top.$flatten\core.$lt$src/vga_core.v:84$510 ($lt).
Removed top 22 bits (of 32) from port B of cell top.$flatten\core.$ge$src/vga_core.v:84$509 ($ge).
Removed top 23 bits (of 32) from port B of cell top.$flatten\core.$lt$src/vga_core.v:82$508 ($lt).
Removed top 22 bits (of 32) from port B of cell top.$flatten\core.$lt$src/vga_core.v:81$507 ($lt).
Removed top 8 bits (of 12) from wire top.$flatten\game_manager.$procmux$1834_Y.
Removed top 22 bits (of 32) from wire top.$flatten\game_manager.$sub$src/gmanager.v:34$589_Y.
Removed top 4 bits (of 5) from wire top.$flatten\game_manager.\h.$or$src/mod24.v:18$632_Y.
Removed top 3 bits (of 5) from wire top.$flatten\game_manager.\h.$or$src/mod24.v:18$634_Y.
Removed top 2 bits (of 5) from wire top.$flatten\game_manager.\h.$or$src/mod24.v:19$639_Y.
Removed top 2 bits (of 5) from wire top.$flatten\game_manager.\h.$or$src/mod24.v:19$641_Y.
Removed top 1 bits (of 5) from wire top.$flatten\game_manager.\h.$or$src/mod24.v:20$646_Y.
Removed top 1 bits (of 5) from wire top.$flatten\game_manager.\h.$or$src/mod24.v:20$648_Y.
Removed top 1 bits (of 5) from wire top.$flatten\game_manager.\h.$or$src/mod24.v:21$653_Y.
Removed top 1 bits (of 5) from wire top.$flatten\game_manager.\h.$or$src/mod24.v:21$655_Y.
Removed top 2 bits (of 5) from wire top.$flatten\game_manager.\h.$or$src/mod24.v:25$672_Y.
Removed top 1 bits (of 5) from wire top.$flatten\game_manager.\h.$or$src/mod24.v:25$673_Y.
Removed top 1 bits (of 5) from wire top.$flatten\game_manager.\h.$or$src/mod24.v:25$674_Y.
Removed top 4 bits (of 5) from wire top.$flatten\game_manager.\h.$ternary$src/mod24.v:18$633_Y.
Removed top 3 bits (of 5) from wire top.$flatten\game_manager.\h.$ternary$src/mod24.v:18$635_Y.
Removed top 2 bits (of 5) from wire top.$flatten\game_manager.\h.$ternary$src/mod24.v:19$637_Y.
Removed top 3 bits (of 5) from wire top.$flatten\game_manager.\h.$ternary$src/mod24.v:19$638_Y.
Removed top 2 bits (of 5) from wire top.$flatten\game_manager.\h.$ternary$src/mod24.v:19$640_Y.
Removed top 2 bits (of 5) from wire top.$flatten\game_manager.\h.$ternary$src/mod24.v:19$642_Y.
Removed top 1 bits (of 5) from wire top.$flatten\game_manager.\h.$ternary$src/mod24.v:20$644_Y.
Removed top 1 bits (of 5) from wire top.$flatten\game_manager.\h.$ternary$src/mod24.v:20$645_Y.
Removed top 1 bits (of 5) from wire top.$flatten\game_manager.\h.$ternary$src/mod24.v:20$647_Y.
Removed top 1 bits (of 5) from wire top.$flatten\game_manager.\h.$ternary$src/mod24.v:20$649_Y.
Removed top 1 bits (of 5) from wire top.$flatten\game_manager.\h.$ternary$src/mod24.v:21$651_Y.
Removed top 1 bits (of 5) from wire top.$flatten\game_manager.\h.$ternary$src/mod24.v:21$652_Y.
Removed top 1 bits (of 5) from wire top.$flatten\game_manager.\h.$ternary$src/mod24.v:21$654_Y.
Removed top 1 bits (of 5) from wire top.$flatten\game_manager.\h.$ternary$src/mod24.v:21$656_Y.
Removed top 9 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:33$751_Y.
Removed top 9 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:34$757_Y.
Removed top 9 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:35$764_Y.
Removed top 9 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:36$771_Y.
Removed top 9 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:37$778_Y.
Removed top 9 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:38$785_Y.
Removed top 9 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:39$792_Y.
Removed top 9 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:40$799_Y.
Removed top 9 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:41$806_Y.
Removed top 9 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:42$813_Y.
Removed top 9 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:43$820_Y.
Removed top 4 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$762_Y.
Removed top 4 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$769_Y.
Removed top 4 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$783_Y.
Removed top 4 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$790_Y.
Removed top 4 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$797_Y.
Removed top 5 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:33$754_Y.
Removed top 4 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:33$755_Y.
Removed top 6 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:34$760_Y.
Removed top 6 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:34$761_Y.
Removed top 4 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:35$767_Y.
Removed top 4 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:35$768_Y.
Removed top 8 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:37$782_Y.
Removed top 6 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:38$788_Y.
Removed top 4 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:38$789_Y.
Removed top 4 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:39$795_Y.
Removed top 4 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:39$796_Y.
Removed top 6 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:41$810_Y.
Removed top 6 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:42$816_Y.
Removed top 4 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:42$817_Y.
Removed top 4 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:43$823_Y.
Removed top 4 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:43$824_Y.
Removed top 11 bits (of 12) from wire top.$flatten\game_manager.\sh.$and$src/shader.v:20$618_Y.
Removed top 11 bits (of 12) from wire top.$flatten\game_manager.\sh.$and$src/shader.v:21$621_Y.
Removed top 11 bits (of 12) from wire top.$flatten\game_manager.\sh.$logic_not$src/shader.v:21$620_Y.
Removed top 26 bits (of 32) from wire top.$flatten\memory.$sub$src/blockmemory.v:112$851_Y.
Removed top 26 bits (of 32) from wire top.$flatten\memory.$sub$src/blockmemory.v:116$856_Y.
Removed top 31 bits (of 32) from wire top.$flatten\memory.$sub$src/blockmemory.v:153$868_Y.
Removed top 26 bits (of 32) from wire top.$flatten\memory.$sub$src/blockmemory.v:161$870_Y.
Removed top 3 bits (of 5) from wire top.$flatten\vcell.\ishaper.$procmux$1841_Y.
Removed top 3 bits (of 5) from wire top.$flatten\vcell.\ishaper.$procmux$1843_Y.
Removed top 3 bits (of 5) from wire top.$flatten\vcell.\ishaper.$procmux$1852_Y.
Removed top 3 bits (of 5) from wire top.$flatten\vcell.\ishaper.$procmux$1854_Y.
Removed top 4 bits (of 5) from wire top.$flatten\vcell.\ishaper.$procmux$1863_Y.
Removed top 4 bits (of 5) from wire top.$flatten\vcell.\ishaper.$procmux$1920_Y.

16.14. Executing PEEPOPT pass (run peephole optimizers).

16.15. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 119 unused wires.
<suppressed ~1 debug messages>

16.16. Executing SHARE pass (SAT-based resource sharing).

16.17. Executing TECHMAP pass (map to technology primitives).

16.17.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/usr/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

16.17.2. Continuing TECHMAP pass.
Using template $paramod$63c7f1a5c4d320eda7bf5de8a615386686b975ab\_90_lut_cmp_ for cells of type $gt.
No more expansions possible.
<suppressed ~1756 debug messages>

16.18. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~26 debug messages>

16.19. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 29 unused wires.
<suppressed ~1 debug messages>

16.20. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module top:
  creating $macc model for $flatten\core.$add$src/vga_core.v:79$506 ($add).
  creating $macc model for $flatten\core.$add$src/vga_core.v:89$518 ($add).
  creating $macc model for $flatten\game_manager.$sub$src/gmanager.v:34$589 ($sub).
  creating $macc model for $flatten\game_manager.$sub$src/gmanager.v:35$593 ($sub).
  creating $macc model for $flatten\game_manager.$sub$src/gmanager.v:43$594 ($sub).
  creating $macc model for $flatten\game_manager.\hh.$sub$src/mod24.v:58$826 ($sub).
  creating $macc model for $flatten\memory.$add$src/blockmemory.v:108$847 ($add).
  creating $macc model for $flatten\memory.$sub$src/blockmemory.v:112$851 ($sub).
  creating $macc model for $flatten\memory.$sub$src/blockmemory.v:116$856 ($sub).
  creating $macc model for $flatten\memory.$sub$src/blockmemory.v:145$866 ($sub).
  creating $macc model for $flatten\memory.$sub$src/blockmemory.v:153$868 ($sub).
  creating $macc model for $flatten\memory.$sub$src/blockmemory.v:161$870 ($sub).
  creating $macc model for $flatten\memory.$sub$src/blockmemory.v:169$872 ($sub).
  creating $macc model for $flatten\memory.$sub$src/blockmemory.v:182$874 ($sub).
  creating $macc model for $flatten\t.$add$src/timer.v:18$523 ($add).
  creating $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:107$1277 ($add).
  creating $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:113$1282 ($add).
  creating $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:125$1293 ($add).
  creating $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:45$1264 ($add).
  creating $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:46$1265 ($add).
  creating $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:47$1266 ($add).
  creating $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:48$1267 ($add).
  creating $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:50$1268 ($add).
  creating $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:51$1269 ($add).
  creating $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:52$1270 ($add).
  creating $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:53$1271 ($add).
  creating $macc model for $flatten\vcell.$sub$src/volatile_cell_storage.v:119$1287 ($sub).
  creating $alu model for $macc $flatten\vcell.$sub$src/volatile_cell_storage.v:119$1287.
  creating $alu model for $macc $flatten\vcell.$add$src/volatile_cell_storage.v:53$1271.
  creating $alu model for $macc $flatten\vcell.$add$src/volatile_cell_storage.v:52$1270.
  creating $alu model for $macc $flatten\vcell.$add$src/volatile_cell_storage.v:51$1269.
  creating $alu model for $macc $flatten\vcell.$add$src/volatile_cell_storage.v:50$1268.
  creating $alu model for $macc $flatten\vcell.$add$src/volatile_cell_storage.v:48$1267.
  creating $alu model for $macc $flatten\vcell.$add$src/volatile_cell_storage.v:47$1266.
  creating $alu model for $macc $flatten\vcell.$add$src/volatile_cell_storage.v:46$1265.
  creating $alu model for $macc $flatten\vcell.$add$src/volatile_cell_storage.v:45$1264.
  creating $alu model for $macc $flatten\vcell.$add$src/volatile_cell_storage.v:125$1293.
  creating $alu model for $macc $flatten\vcell.$add$src/volatile_cell_storage.v:113$1282.
  creating $alu model for $macc $flatten\vcell.$add$src/volatile_cell_storage.v:107$1277.
  creating $alu model for $macc $flatten\t.$add$src/timer.v:18$523.
  creating $alu model for $macc $flatten\memory.$sub$src/blockmemory.v:182$874.
  creating $alu model for $macc $flatten\memory.$sub$src/blockmemory.v:169$872.
  creating $alu model for $macc $flatten\memory.$sub$src/blockmemory.v:161$870.
  creating $alu model for $macc $flatten\memory.$sub$src/blockmemory.v:153$868.
  creating $alu model for $macc $flatten\memory.$sub$src/blockmemory.v:145$866.
  creating $alu model for $macc $flatten\memory.$sub$src/blockmemory.v:116$856.
  creating $alu model for $macc $flatten\memory.$sub$src/blockmemory.v:112$851.
  creating $alu model for $macc $flatten\memory.$add$src/blockmemory.v:108$847.
  creating $alu model for $macc $flatten\game_manager.\hh.$sub$src/mod24.v:58$826.
  creating $alu model for $macc $flatten\game_manager.$sub$src/gmanager.v:43$594.
  creating $alu model for $macc $flatten\game_manager.$sub$src/gmanager.v:35$593.
  creating $alu model for $macc $flatten\game_manager.$sub$src/gmanager.v:34$589.
  creating $alu model for $macc $flatten\core.$add$src/vga_core.v:89$518.
  creating $alu model for $macc $flatten\core.$add$src/vga_core.v:79$506.
  creating $alu model for $flatten\core.$ge$src/vga_core.v:84$509 ($ge): new $alu
  creating $alu model for $flatten\core.$ge$src/vga_core.v:85$513 ($ge): new $alu
  creating $alu model for $flatten\core.$lt$src/vga_core.v:81$507 ($lt): new $alu
  creating $alu model for $flatten\core.$lt$src/vga_core.v:82$508 ($lt): new $alu
  creating $alu model for $flatten\core.$lt$src/vga_core.v:84$510 ($lt): new $alu
  creating $alu model for $flatten\core.$lt$src/vga_core.v:85$514 ($lt): new $alu
  creating $alu model for $flatten\game_manager.$ge$src/gmanager.v:28$583 ($ge): new $alu
  creating $alu model for $flatten\game_manager.$ge$src/gmanager.v:29$586 ($ge): new $alu
  creating $alu model for $flatten\game_manager.$lt$src/gmanager.v:28$584 ($lt): new $alu
  creating $alu model for $flatten\game_manager.$lt$src/gmanager.v:29$587 ($lt): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$681 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$684 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$687 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$690 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$693 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$696 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$699 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$702 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$705 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$708 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$711 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$714 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$717 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$720 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$723 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$726 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$729 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$732 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$735 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$738 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$741 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$744 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$747 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$682 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$684.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$685 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$687.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$688 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$690.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$691 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$693.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$694 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$696.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$697 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$699.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$700 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$702.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$703 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$705.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$706 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$708.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$709 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$711.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$712 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$714.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$715 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$717.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$718 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$720.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$721 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$723.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$724 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$726.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$727 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$729.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$730 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$732.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$733 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$735.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$736 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$738.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$739 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$741.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$742 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$744.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$745 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$747.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$748 ($lt): new $alu
  creating $alu model for $flatten\game_manager.\sh.$ge$src/shader.v:9$603 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\sh.$gt$src/shader.v:10$605 ($gt): new $alu
  creating $alu model for $flatten\game_manager.\sh.$gt$src/shader.v:10$608 ($gt): new $alu
  creating $alu model for $flatten\game_manager.\sh.$gt$src/shader.v:12$614 ($gt): new $alu
  creating $alu model for $flatten\game_manager.\sh.$le$src/shader.v:9$598 ($le): new $alu
  creating $alu model for $flatten\game_manager.\sh.$lt$src/shader.v:10$606 ($lt): new $alu
  creating $alu model for $flatten\game_manager.\sh.$lt$src/shader.v:10$610 ($lt): new $alu
  creating $alu model for $flatten\memory.$ge$src/blockmemory.v:110$848 ($ge): new $alu
  creating $alu model for $flatten\memory.$ge$src/blockmemory.v:115$853 ($ge): new $alu
  creating $alu model for $flatten\memory.$ge$src/blockmemory.v:120$858 ($ge): new $alu
  creating $alu model for $flatten\memory.$lt$src/blockmemory.v:105$846 ($lt): merged with $flatten\memory.$ge$src/blockmemory.v:110$848.
  creating $alu model for $flatten\memory.$lt$src/blockmemory.v:110$849 ($lt): merged with $flatten\memory.$ge$src/blockmemory.v:115$853.
  creating $alu model for $flatten\memory.$lt$src/blockmemory.v:115$854 ($lt): merged with $flatten\memory.$ge$src/blockmemory.v:120$858.
  creating $alu cell for $flatten\memory.$ge$src/blockmemory.v:120$858, $flatten\memory.$lt$src/blockmemory.v:115$854: $auto$alumacc.cc:485:replace_alu$3264
  creating $alu cell for $flatten\memory.$ge$src/blockmemory.v:115$853, $flatten\memory.$lt$src/blockmemory.v:110$849: $auto$alumacc.cc:485:replace_alu$3277
  creating $alu cell for $flatten\memory.$ge$src/blockmemory.v:110$848, $flatten\memory.$lt$src/blockmemory.v:105$846: $auto$alumacc.cc:485:replace_alu$3290
  creating $alu cell for $flatten\game_manager.\sh.$lt$src/shader.v:10$610: $auto$alumacc.cc:485:replace_alu$3303
  creating $alu cell for $flatten\game_manager.\sh.$lt$src/shader.v:10$606: $auto$alumacc.cc:485:replace_alu$3314
  creating $alu cell for $flatten\game_manager.\sh.$le$src/shader.v:9$598: $auto$alumacc.cc:485:replace_alu$3325
  creating $alu cell for $flatten\game_manager.\sh.$gt$src/shader.v:12$614: $auto$alumacc.cc:485:replace_alu$3338
  creating $alu cell for $flatten\game_manager.\sh.$gt$src/shader.v:10$608: $auto$alumacc.cc:485:replace_alu$3343
  creating $alu cell for $flatten\game_manager.\sh.$gt$src/shader.v:10$605: $auto$alumacc.cc:485:replace_alu$3348
  creating $alu cell for $flatten\game_manager.\sh.$ge$src/shader.v:9$603: $auto$alumacc.cc:485:replace_alu$3353
  creating $alu cell for $flatten\game_manager.\h.$lt$src/mod24.v:15$748: $auto$alumacc.cc:485:replace_alu$3362
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$747, $flatten\game_manager.\h.$lt$src/mod24.v:15$745: $auto$alumacc.cc:485:replace_alu$3367
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$744, $flatten\game_manager.\h.$lt$src/mod24.v:15$742: $auto$alumacc.cc:485:replace_alu$3380
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$741, $flatten\game_manager.\h.$lt$src/mod24.v:15$739: $auto$alumacc.cc:485:replace_alu$3393
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$738, $flatten\game_manager.\h.$lt$src/mod24.v:15$736: $auto$alumacc.cc:485:replace_alu$3406
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$735, $flatten\game_manager.\h.$lt$src/mod24.v:15$733: $auto$alumacc.cc:485:replace_alu$3419
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$732, $flatten\game_manager.\h.$lt$src/mod24.v:15$730: $auto$alumacc.cc:485:replace_alu$3432
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$729, $flatten\game_manager.\h.$lt$src/mod24.v:15$727: $auto$alumacc.cc:485:replace_alu$3445
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$726, $flatten\game_manager.\h.$lt$src/mod24.v:15$724: $auto$alumacc.cc:485:replace_alu$3458
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$723, $flatten\game_manager.\h.$lt$src/mod24.v:15$721: $auto$alumacc.cc:485:replace_alu$3471
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$720, $flatten\game_manager.\h.$lt$src/mod24.v:15$718: $auto$alumacc.cc:485:replace_alu$3484
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$717, $flatten\game_manager.\h.$lt$src/mod24.v:15$715: $auto$alumacc.cc:485:replace_alu$3497
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$714, $flatten\game_manager.\h.$lt$src/mod24.v:15$712: $auto$alumacc.cc:485:replace_alu$3510
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$711, $flatten\game_manager.\h.$lt$src/mod24.v:15$709: $auto$alumacc.cc:485:replace_alu$3523
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$708, $flatten\game_manager.\h.$lt$src/mod24.v:15$706: $auto$alumacc.cc:485:replace_alu$3536
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$705, $flatten\game_manager.\h.$lt$src/mod24.v:15$703: $auto$alumacc.cc:485:replace_alu$3549
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$702, $flatten\game_manager.\h.$lt$src/mod24.v:15$700: $auto$alumacc.cc:485:replace_alu$3562
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$699, $flatten\game_manager.\h.$lt$src/mod24.v:15$697: $auto$alumacc.cc:485:replace_alu$3575
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$696, $flatten\game_manager.\h.$lt$src/mod24.v:15$694: $auto$alumacc.cc:485:replace_alu$3588
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$693, $flatten\game_manager.\h.$lt$src/mod24.v:15$691: $auto$alumacc.cc:485:replace_alu$3601
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$690, $flatten\game_manager.\h.$lt$src/mod24.v:15$688: $auto$alumacc.cc:485:replace_alu$3614
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$687, $flatten\game_manager.\h.$lt$src/mod24.v:15$685: $auto$alumacc.cc:485:replace_alu$3627
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$684, $flatten\game_manager.\h.$lt$src/mod24.v:15$682: $auto$alumacc.cc:485:replace_alu$3640
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$681: $auto$alumacc.cc:485:replace_alu$3653
  creating $alu cell for $flatten\game_manager.$lt$src/gmanager.v:29$587: $auto$alumacc.cc:485:replace_alu$3662
  creating $alu cell for $flatten\game_manager.$lt$src/gmanager.v:28$584: $auto$alumacc.cc:485:replace_alu$3667
  creating $alu cell for $flatten\game_manager.$ge$src/gmanager.v:29$586: $auto$alumacc.cc:485:replace_alu$3678
  creating $alu cell for $flatten\game_manager.$ge$src/gmanager.v:28$583: $auto$alumacc.cc:485:replace_alu$3687
  creating $alu cell for $flatten\core.$lt$src/vga_core.v:85$514: $auto$alumacc.cc:485:replace_alu$3696
  creating $alu cell for $flatten\core.$lt$src/vga_core.v:84$510: $auto$alumacc.cc:485:replace_alu$3707
  creating $alu cell for $flatten\core.$lt$src/vga_core.v:82$508: $auto$alumacc.cc:485:replace_alu$3712
  creating $alu cell for $flatten\core.$lt$src/vga_core.v:81$507: $auto$alumacc.cc:485:replace_alu$3723
  creating $alu cell for $flatten\core.$ge$src/vga_core.v:85$513: $auto$alumacc.cc:485:replace_alu$3728
  creating $alu cell for $flatten\core.$ge$src/vga_core.v:84$509: $auto$alumacc.cc:485:replace_alu$3737
  creating $alu cell for $flatten\core.$add$src/vga_core.v:79$506: $auto$alumacc.cc:485:replace_alu$3750
  creating $alu cell for $flatten\core.$add$src/vga_core.v:89$518: $auto$alumacc.cc:485:replace_alu$3753
  creating $alu cell for $flatten\game_manager.$sub$src/gmanager.v:34$589: $auto$alumacc.cc:485:replace_alu$3756
  creating $alu cell for $flatten\game_manager.$sub$src/gmanager.v:35$593: $auto$alumacc.cc:485:replace_alu$3759
  creating $alu cell for $flatten\game_manager.$sub$src/gmanager.v:43$594: $auto$alumacc.cc:485:replace_alu$3762
  creating $alu cell for $flatten\game_manager.\hh.$sub$src/mod24.v:58$826: $auto$alumacc.cc:485:replace_alu$3765
  creating $alu cell for $flatten\memory.$add$src/blockmemory.v:108$847: $auto$alumacc.cc:485:replace_alu$3768
  creating $alu cell for $flatten\memory.$sub$src/blockmemory.v:112$851: $auto$alumacc.cc:485:replace_alu$3771
  creating $alu cell for $flatten\memory.$sub$src/blockmemory.v:116$856: $auto$alumacc.cc:485:replace_alu$3774
  creating $alu cell for $flatten\memory.$sub$src/blockmemory.v:145$866: $auto$alumacc.cc:485:replace_alu$3777
  creating $alu cell for $flatten\memory.$sub$src/blockmemory.v:153$868: $auto$alumacc.cc:485:replace_alu$3780
  creating $alu cell for $flatten\memory.$sub$src/blockmemory.v:161$870: $auto$alumacc.cc:485:replace_alu$3783
  creating $alu cell for $flatten\memory.$sub$src/blockmemory.v:169$872: $auto$alumacc.cc:485:replace_alu$3786
  creating $alu cell for $flatten\memory.$sub$src/blockmemory.v:182$874: $auto$alumacc.cc:485:replace_alu$3789
  creating $alu cell for $flatten\t.$add$src/timer.v:18$523: $auto$alumacc.cc:485:replace_alu$3792
  creating $alu cell for $flatten\vcell.$add$src/volatile_cell_storage.v:107$1277: $auto$alumacc.cc:485:replace_alu$3795
  creating $alu cell for $flatten\vcell.$add$src/volatile_cell_storage.v:113$1282: $auto$alumacc.cc:485:replace_alu$3798
  creating $alu cell for $flatten\vcell.$add$src/volatile_cell_storage.v:125$1293: $auto$alumacc.cc:485:replace_alu$3801
  creating $alu cell for $flatten\vcell.$add$src/volatile_cell_storage.v:45$1264: $auto$alumacc.cc:485:replace_alu$3804
  creating $alu cell for $flatten\vcell.$add$src/volatile_cell_storage.v:46$1265: $auto$alumacc.cc:485:replace_alu$3807
  creating $alu cell for $flatten\vcell.$add$src/volatile_cell_storage.v:47$1266: $auto$alumacc.cc:485:replace_alu$3810
  creating $alu cell for $flatten\vcell.$add$src/volatile_cell_storage.v:48$1267: $auto$alumacc.cc:485:replace_alu$3813
  creating $alu cell for $flatten\vcell.$add$src/volatile_cell_storage.v:50$1268: $auto$alumacc.cc:485:replace_alu$3816
  creating $alu cell for $flatten\vcell.$add$src/volatile_cell_storage.v:51$1269: $auto$alumacc.cc:485:replace_alu$3819
  creating $alu cell for $flatten\vcell.$add$src/volatile_cell_storage.v:52$1270: $auto$alumacc.cc:485:replace_alu$3822
  creating $alu cell for $flatten\vcell.$add$src/volatile_cell_storage.v:53$1271: $auto$alumacc.cc:485:replace_alu$3825
  creating $alu cell for $flatten\vcell.$sub$src/volatile_cell_storage.v:119$1287: $auto$alumacc.cc:485:replace_alu$3828
  created 71 $alu and 0 $macc cells.

16.21. Executing OPT pass (performing simple optimizations).

16.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~1 debug messages>

16.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~36 debug messages>
Removed a total of 12 cells.

16.21.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~463 debug messages>

16.21.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

16.21.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

16.21.6. Executing OPT_DFF pass (perform DFF optimizations).

16.21.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 81 unused wires.
<suppressed ~1 debug messages>

16.21.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

16.21.9. Rerunning OPT passes. (Maybe there is more to do..)

16.21.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~463 debug messages>

16.21.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

16.21.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

16.21.13. Executing OPT_DFF pass (perform DFF optimizations).

16.21.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

16.21.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

16.21.16. Finished OPT passes. (There is nothing left to do.)

16.22. Executing MEMORY pass.

16.22.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

16.22.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

16.22.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

16.22.4. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

16.22.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

16.22.6. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

16.22.7. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

16.22.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

16.22.9. Executing MEMORY_COLLECT pass (generating $mem cells).

16.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

16.24. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).

16.25. Executing TECHMAP pass (map to technology primitives).

16.25.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/brams_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M0'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M123'.
Successfully finished Verilog frontend.

16.25.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~5 debug messages>

16.26. Executing ICE40_BRAMINIT pass.

16.27. Executing OPT pass (performing simple optimizations).

16.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~66 debug messages>

16.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~90 debug messages>
Removed a total of 30 cells.

16.27.3. Executing OPT_DFF pass (perform DFF optimizations).

16.27.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 16 unused cells and 71 unused wires.
<suppressed ~17 debug messages>

16.27.5. Finished fast OPT passes.

16.28. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

16.29. Executing OPT pass (performing simple optimizations).

16.29.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

16.29.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

16.29.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~459 debug messages>

16.29.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    Consolidated identical input bits for $pmux cell $flatten\game_manager.\c.$procmux$1810:
      Old ports: A=12'011001100110, B=84'111111110000000011111111110000001100000011110000000000001111111100000000000001111111, Y=\game_manager.texture_lookup
      New ports: A=11'01100100110, B=77'11111110000000011111111100000110000001110000000000011111111000000000000111111, Y={ \game_manager.texture_lookup [11:7] \game_manager.texture_lookup [5:0] }
      New connections: \game_manager.texture_lookup [6] = \game_manager.texture_lookup [5]
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:18$633:
      Old ports: A=2'00, B=2'10, Y={ $auto$opt_expr.cc:205:group_cell_inputs$3918 $auto$wreduce.cc:454:run$3158 [0] }
      New ports: A=1'0, B=1'1, Y=$auto$opt_expr.cc:205:group_cell_inputs$3918
      New connections: $auto$wreduce.cc:454:run$3158 [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:18$635:
      Old ports: A=2'00, B=2'11, Y=$auto$wreduce.cc:454:run$3159 [1:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$3159 [0]
      New connections: $auto$wreduce.cc:454:run$3159 [1] = $auto$wreduce.cc:454:run$3159 [0]
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:19$637:
      Old ports: A=3'000, B=3'100, Y=$auto$wreduce.cc:454:run$3160 [2:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$3160 [2]
      New connections: $auto$wreduce.cc:454:run$3160 [1:0] = 2'00
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:19$638:
      Old ports: A=3'000, B=3'101, Y=$auto$wreduce.cc:454:run$3161 [2:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$3161 [0]
      New connections: $auto$wreduce.cc:454:run$3161 [2:1] = { $auto$wreduce.cc:454:run$3161 [0] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:19$640:
      Old ports: A=3'000, B=3'110, Y=$auto$wreduce.cc:454:run$3162 [2:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$3162 [1]
      New connections: { $auto$wreduce.cc:454:run$3162 [2] $auto$wreduce.cc:454:run$3162 [0] } = { $auto$wreduce.cc:454:run$3162 [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:19$642:
      Old ports: A=3'000, B=3'111, Y=$auto$wreduce.cc:454:run$3163 [2:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$3163 [0]
      New connections: $auto$wreduce.cc:454:run$3163 [2:1] = { $auto$wreduce.cc:454:run$3163 [0] $auto$wreduce.cc:454:run$3163 [0] }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:20$644:
      Old ports: A=4'0000, B=4'1000, Y=$auto$wreduce.cc:454:run$3164 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$3164 [3]
      New connections: $auto$wreduce.cc:454:run$3164 [2:0] = 3'000
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:20$645:
      Old ports: A=4'0000, B=4'1001, Y=$auto$wreduce.cc:454:run$3165 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$3165 [0]
      New connections: $auto$wreduce.cc:454:run$3165 [3:1] = { $auto$wreduce.cc:454:run$3165 [0] 2'00 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:20$647:
      Old ports: A=4'0000, B=4'1010, Y=$auto$wreduce.cc:454:run$3166 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$3166 [1]
      New connections: { $auto$wreduce.cc:454:run$3166 [3:2] $auto$wreduce.cc:454:run$3166 [0] } = { $auto$wreduce.cc:454:run$3166 [1] 2'00 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:20$649:
      Old ports: A=4'0000, B=4'1011, Y=$auto$wreduce.cc:454:run$3167 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$3167 [0]
      New connections: $auto$wreduce.cc:454:run$3167 [3:1] = { $auto$wreduce.cc:454:run$3167 [0] 1'0 $auto$wreduce.cc:454:run$3167 [0] }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:21$651:
      Old ports: A=4'0000, B=4'1100, Y=$auto$wreduce.cc:454:run$3168 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$3168 [2]
      New connections: { $auto$wreduce.cc:454:run$3168 [3] $auto$wreduce.cc:454:run$3168 [1:0] } = { $auto$wreduce.cc:454:run$3168 [2] 2'00 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:21$652:
      Old ports: A=4'0000, B=4'1101, Y=$auto$wreduce.cc:454:run$3169 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$3169 [0]
      New connections: $auto$wreduce.cc:454:run$3169 [3:1] = { $auto$wreduce.cc:454:run$3169 [0] $auto$wreduce.cc:454:run$3169 [0] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:21$654:
      Old ports: A=4'0000, B=4'1110, Y=$auto$wreduce.cc:454:run$3170 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$3170 [1]
      New connections: { $auto$wreduce.cc:454:run$3170 [3:2] $auto$wreduce.cc:454:run$3170 [0] } = { $auto$wreduce.cc:454:run$3170 [1] $auto$wreduce.cc:454:run$3170 [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:21$656:
      Old ports: A=4'0000, B=4'1111, Y=$auto$wreduce.cc:454:run$3171 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$3171 [0]
      New connections: $auto$wreduce.cc:454:run$3171 [3:1] = { $auto$wreduce.cc:454:run$3171 [0] $auto$wreduce.cc:454:run$3171 [0] $auto$wreduce.cc:454:run$3171 [0] }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:22$658:
      Old ports: A=5'00000, B=5'10000, Y=$flatten\game_manager.\h.$ternary$src/mod24.v:22$658_Y
      New ports: A=1'0, B=1'1, Y=$flatten\game_manager.\h.$ternary$src/mod24.v:22$658_Y [4]
      New connections: $flatten\game_manager.\h.$ternary$src/mod24.v:22$658_Y [3:0] = 4'0000
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:22$659:
      Old ports: A=5'00000, B=5'10001, Y=$flatten\game_manager.\h.$ternary$src/mod24.v:22$659_Y
      New ports: A=1'0, B=1'1, Y=$flatten\game_manager.\h.$ternary$src/mod24.v:22$659_Y [0]
      New connections: $flatten\game_manager.\h.$ternary$src/mod24.v:22$659_Y [4:1] = { $flatten\game_manager.\h.$ternary$src/mod24.v:22$659_Y [0] 3'000 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:22$661:
      Old ports: A=5'00000, B=5'10010, Y=$flatten\game_manager.\h.$ternary$src/mod24.v:22$661_Y
      New ports: A=1'0, B=1'1, Y=$flatten\game_manager.\h.$ternary$src/mod24.v:22$661_Y [1]
      New connections: { $flatten\game_manager.\h.$ternary$src/mod24.v:22$661_Y [4:2] $flatten\game_manager.\h.$ternary$src/mod24.v:22$661_Y [0] } = { $flatten\game_manager.\h.$ternary$src/mod24.v:22$661_Y [1] 3'000 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:22$663:
      Old ports: A=5'00000, B=5'10011, Y=$flatten\game_manager.\h.$ternary$src/mod24.v:22$663_Y
      New ports: A=1'0, B=1'1, Y=$flatten\game_manager.\h.$ternary$src/mod24.v:22$663_Y [0]
      New connections: $flatten\game_manager.\h.$ternary$src/mod24.v:22$663_Y [4:1] = { $flatten\game_manager.\h.$ternary$src/mod24.v:22$663_Y [0] 2'00 $flatten\game_manager.\h.$ternary$src/mod24.v:22$663_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:23$665:
      Old ports: A=5'00000, B=5'10100, Y=$flatten\game_manager.\h.$ternary$src/mod24.v:23$665_Y
      New ports: A=1'0, B=1'1, Y=$flatten\game_manager.\h.$ternary$src/mod24.v:23$665_Y [2]
      New connections: { $flatten\game_manager.\h.$ternary$src/mod24.v:23$665_Y [4:3] $flatten\game_manager.\h.$ternary$src/mod24.v:23$665_Y [1:0] } = { $flatten\game_manager.\h.$ternary$src/mod24.v:23$665_Y [2] 3'000 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:23$666:
      Old ports: A=5'00000, B=5'10101, Y=$flatten\game_manager.\h.$ternary$src/mod24.v:23$666_Y
      New ports: A=1'0, B=1'1, Y=$flatten\game_manager.\h.$ternary$src/mod24.v:23$666_Y [0]
      New connections: $flatten\game_manager.\h.$ternary$src/mod24.v:23$666_Y [4:1] = { $flatten\game_manager.\h.$ternary$src/mod24.v:23$666_Y [0] 1'0 $flatten\game_manager.\h.$ternary$src/mod24.v:23$666_Y [0] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:23$668:
      Old ports: A=5'00000, B=5'10110, Y=$flatten\game_manager.\h.$ternary$src/mod24.v:23$668_Y
      New ports: A=1'0, B=1'1, Y=$flatten\game_manager.\h.$ternary$src/mod24.v:23$668_Y [1]
      New connections: { $flatten\game_manager.\h.$ternary$src/mod24.v:23$668_Y [4:2] $flatten\game_manager.\h.$ternary$src/mod24.v:23$668_Y [0] } = { $flatten\game_manager.\h.$ternary$src/mod24.v:23$668_Y [1] 1'0 $flatten\game_manager.\h.$ternary$src/mod24.v:23$668_Y [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:23$670:
      Old ports: A=5'00000, B=5'10111, Y=$flatten\game_manager.\h.$ternary$src/mod24.v:23$670_Y
      New ports: A=1'0, B=1'1, Y=$flatten\game_manager.\h.$ternary$src/mod24.v:23$670_Y [0]
      New connections: $flatten\game_manager.\h.$ternary$src/mod24.v:23$670_Y [4:1] = { $flatten\game_manager.\h.$ternary$src/mod24.v:23$670_Y [0] 1'0 $flatten\game_manager.\h.$ternary$src/mod24.v:23$670_Y [0] $flatten\game_manager.\h.$ternary$src/mod24.v:23$670_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:33$754:
      Old ports: A=5'00000, B=5'11000, Y=$auto$wreduce.cc:454:run$3188 [4:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$3188 [3]
      New connections: { $auto$wreduce.cc:454:run$3188 [4] $auto$wreduce.cc:454:run$3188 [2:0] } = { $auto$wreduce.cc:454:run$3188 [3] 3'000 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:33$755:
      Old ports: A={ 1'0 $auto$wreduce.cc:454:run$3188 [4:0] }, B=6'000000, Y=$auto$wreduce.cc:454:run$3189 [5:0]
      New ports: A=$auto$wreduce.cc:454:run$3188 [4:0], B=5'00000, Y=$auto$wreduce.cc:454:run$3189 [4:0]
      New connections: $auto$wreduce.cc:454:run$3189 [5] = 1'0
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:34$760:
      Old ports: A=4'0000, B=4'1000, Y=$auto$wreduce.cc:454:run$3190 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$3190 [3]
      New connections: $auto$wreduce.cc:454:run$3190 [2:0] = 3'000
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:34$761:
      Old ports: A={ 2'00 $auto$wreduce.cc:454:run$3190 [3:0] }, B=6'110000, Y=$auto$wreduce.cc:454:run$3191 [5:0]
      New ports: A={ 1'0 $auto$wreduce.cc:454:run$3190 [3:0] }, B=5'10000, Y=$auto$wreduce.cc:454:run$3191 [4:0]
      New connections: $auto$wreduce.cc:454:run$3191 [5] = $auto$wreduce.cc:454:run$3191 [4]
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:35$767:
      Old ports: A=6'000000, B=6'111000, Y=$auto$wreduce.cc:454:run$3192 [5:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$3192 [3]
      New connections: { $auto$wreduce.cc:454:run$3192 [5:4] $auto$wreduce.cc:454:run$3192 [2:0] } = { $auto$wreduce.cc:454:run$3192 [3] $auto$wreduce.cc:454:run$3192 [3] 3'000 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:36$774:
      Old ports: A=6'000000, B=6'101000, Y=$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:36$774_Y [5:0]
      New ports: A=1'0, B=1'1, Y=$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:36$774_Y [3]
      New connections: { $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:36$774_Y [5:4] $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:36$774_Y [2:0] } = { $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:36$774_Y [3] 4'0000 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:37$781:
      Old ports: A=5'00000, B=5'11000, Y=$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:37$781_Y [4:0]
      New ports: A=1'0, B=1'1, Y=$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:37$781_Y [3]
      New connections: { $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:37$781_Y [4] $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:37$781_Y [2:0] } = { $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:37$781_Y [3] 3'000 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:37$782:
      Old ports: A={ 1'0 $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:37$781_Y [4:0] }, B=6'000000, Y=$auto$wreduce.cc:454:run$3194 [5:0]
      New ports: A=$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:37$781_Y [4:0], B=5'00000, Y=$auto$wreduce.cc:454:run$3194 [4:0]
      New connections: $auto$wreduce.cc:454:run$3194 [5] = 1'0
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:38$788:
      Old ports: A=4'0000, B=4'1000, Y=$auto$wreduce.cc:454:run$3195 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$3195 [3]
      New connections: $auto$wreduce.cc:454:run$3195 [2:0] = 3'000
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:38$789:
      Old ports: A={ 2'00 $auto$wreduce.cc:454:run$3195 [3:0] }, B=6'110000, Y=$auto$wreduce.cc:454:run$3196 [5:0]
      New ports: A={ 1'0 $auto$wreduce.cc:454:run$3195 [3:0] }, B=5'10000, Y=$auto$wreduce.cc:454:run$3196 [4:0]
      New connections: $auto$wreduce.cc:454:run$3196 [5] = $auto$wreduce.cc:454:run$3196 [4]
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:39$795:
      Old ports: A=6'000000, B=6'111000, Y=$auto$wreduce.cc:454:run$3197 [5:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$3197 [3]
      New connections: { $auto$wreduce.cc:454:run$3197 [5:4] $auto$wreduce.cc:454:run$3197 [2:0] } = { $auto$wreduce.cc:454:run$3197 [3] $auto$wreduce.cc:454:run$3197 [3] 3'000 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:40$802:
      Old ports: A=6'000000, B=6'101000, Y=$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:40$802_Y [5:0]
      New ports: A=1'0, B=1'1, Y=$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:40$802_Y [3]
      New connections: { $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:40$802_Y [5:4] $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:40$802_Y [2:0] } = { $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:40$802_Y [3] 4'0000 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:41$809:
      Old ports: A=5'00000, B=5'11000, Y=$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:41$809_Y [4:0]
      New ports: A=1'0, B=1'1, Y=$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:41$809_Y [3]
      New connections: { $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:41$809_Y [4] $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:41$809_Y [2:0] } = { $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:41$809_Y [3] 3'000 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:41$810:
      Old ports: A={ 1'0 $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:41$809_Y [4:0] }, B=6'000000, Y=$auto$wreduce.cc:454:run$3199 [5:0]
      New ports: A=$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:41$809_Y [4:0], B=5'00000, Y=$auto$wreduce.cc:454:run$3199 [4:0]
      New connections: $auto$wreduce.cc:454:run$3199 [5] = 1'0
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:42$816:
      Old ports: A=4'0000, B=4'1000, Y=$auto$wreduce.cc:454:run$3200 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$3200 [3]
      New connections: $auto$wreduce.cc:454:run$3200 [2:0] = 3'000
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:42$817:
      Old ports: A={ 2'00 $auto$wreduce.cc:454:run$3200 [3:0] }, B=6'110000, Y=$auto$wreduce.cc:454:run$3201 [5:0]
      New ports: A={ 1'0 $auto$wreduce.cc:454:run$3200 [3:0] }, B=5'10000, Y=$auto$wreduce.cc:454:run$3201 [4:0]
      New connections: $auto$wreduce.cc:454:run$3201 [5] = $auto$wreduce.cc:454:run$3201 [4]
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:43$823:
      Old ports: A=6'000000, B=6'111000, Y=$auto$wreduce.cc:454:run$3202 [5:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$3202 [3]
      New connections: { $auto$wreduce.cc:454:run$3202 [5:4] $auto$wreduce.cc:454:run$3202 [2:0] } = { $auto$wreduce.cc:454:run$3202 [3] $auto$wreduce.cc:454:run$3202 [3] 3'000 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\sh.$ternary$src/shader.v:20$624:
      Old ports: A=12'000000000000, B={ \game_manager.ipixstream [11] 3'000 \game_manager.ipixstream [7] 3'000 \game_manager.ipixstream [3] 3'000 }, Y=$flatten\game_manager.\sh.$ternary$src/shader.v:20$624_Y
      New ports: A=3'000, B={ \game_manager.ipixstream [11] \game_manager.ipixstream [7] \game_manager.ipixstream [3] }, Y={ $flatten\game_manager.\sh.$ternary$src/shader.v:20$624_Y [11] $flatten\game_manager.\sh.$ternary$src/shader.v:20$624_Y [7] $flatten\game_manager.\sh.$ternary$src/shader.v:20$624_Y [3] }
      New connections: { $flatten\game_manager.\sh.$ternary$src/shader.v:20$624_Y [10:8] $flatten\game_manager.\sh.$ternary$src/shader.v:20$624_Y [6:4] $flatten\game_manager.\sh.$ternary$src/shader.v:20$624_Y [2:0] } = 9'000000000
    Consolidated identical input bits for $mux cell $flatten\memory.$procmux$1712:
      Old ports: A={ 1'0 \memory.P1blk_v }, B={ 1'0 \memory.P2blk_v }, Y=$flatten\memory.$procmux$1712_Y
      New ports: A=\memory.P1blk_v, B=\memory.P2blk_v, Y=$flatten\memory.$procmux$1712_Y [4:0]
      New connections: $flatten\memory.$procmux$1712_Y [5] = 1'0
    Consolidated identical input bits for $mux cell $flatten\vcell.\ishaper.$procmux$1841:
      Old ports: A=2'10, B=2'00, Y=$auto$wreduce.cc:454:run$3211 [1:0]
      New ports: A=1'1, B=1'0, Y=$auto$wreduce.cc:454:run$3211 [1]
      New connections: $auto$wreduce.cc:454:run$3211 [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\vcell.\ishaper.$procmux$1852:
      Old ports: A=2'00, B=2'10, Y=$auto$wreduce.cc:454:run$3213 [1:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$3213 [1]
      New connections: $auto$wreduce.cc:454:run$3213 [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\vcell.\ishaper.$procmux$1885:
      Old ports: A=5'11111, B=5'00000, Y=$flatten\vcell.\ishaper.$procmux$1885_Y
      New ports: A=1'1, B=1'0, Y=$flatten\vcell.\ishaper.$procmux$1885_Y [0]
      New connections: $flatten\vcell.\ishaper.$procmux$1885_Y [4:1] = { $flatten\vcell.\ishaper.$procmux$1885_Y [0] $flatten\vcell.\ishaper.$procmux$1885_Y [0] $flatten\vcell.\ishaper.$procmux$1885_Y [0] $flatten\vcell.\ishaper.$procmux$1885_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\vcell.\ishaper.$procmux$1896:
      Old ports: A=5'00000, B=5'11111, Y=$flatten\vcell.\ishaper.$procmux$1896_Y
      New ports: A=1'0, B=1'1, Y=$flatten\vcell.\ishaper.$procmux$1896_Y [0]
      New connections: $flatten\vcell.\ishaper.$procmux$1896_Y [4:1] = { $flatten\vcell.\ishaper.$procmux$1896_Y [0] $flatten\vcell.\ishaper.$procmux$1896_Y [0] $flatten\vcell.\ishaper.$procmux$1896_Y [0] $flatten\vcell.\ishaper.$procmux$1896_Y [0] }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:33$755:
      Old ports: A=$auto$wreduce.cc:454:run$3188 [4:0], B=5'00000, Y=$auto$wreduce.cc:454:run$3189 [4:0]
      New ports: A=$auto$wreduce.cc:454:run$3188 [3], B=1'0, Y=$auto$wreduce.cc:454:run$3189 [3]
      New connections: { $auto$wreduce.cc:454:run$3189 [4] $auto$wreduce.cc:454:run$3189 [2:0] } = { $auto$wreduce.cc:454:run$3189 [3] 3'000 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:34$761:
      Old ports: A={ 1'0 $auto$wreduce.cc:454:run$3190 [3:0] }, B=5'10000, Y=$auto$wreduce.cc:454:run$3191 [4:0]
      New ports: A={ 1'0 $auto$wreduce.cc:454:run$3190 [3] }, B=2'10, Y=$auto$wreduce.cc:454:run$3191 [4:3]
      New connections: $auto$wreduce.cc:454:run$3191 [2:0] = 3'000
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:35$768:
      Old ports: A=$auto$wreduce.cc:454:run$3192 [5:0], B=6'100000, Y=$auto$wreduce.cc:454:run$3193 [5:0]
      New ports: A={ $auto$wreduce.cc:454:run$3192 [3] $auto$wreduce.cc:454:run$3192 [3] }, B=2'10, Y={ $auto$wreduce.cc:454:run$3193 [5] $auto$wreduce.cc:454:run$3193 [3] }
      New connections: { $auto$wreduce.cc:454:run$3193 [4] $auto$wreduce.cc:454:run$3193 [2:0] } = { $auto$wreduce.cc:454:run$3193 [3] 3'000 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:36$775:
      Old ports: A=$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:36$774_Y [5:0], B=6'010000, Y=$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:36$775_Y [5:0]
      New ports: A={ 1'0 $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:36$774_Y [3] }, B=2'10, Y=$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:36$775_Y [4:3]
      New connections: { $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:36$775_Y [5] $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:36$775_Y [2:0] } = { $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:36$775_Y [3] 3'000 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:37$782:
      Old ports: A=$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:37$781_Y [4:0], B=5'00000, Y=$auto$wreduce.cc:454:run$3194 [4:0]
      New ports: A=$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:37$781_Y [3], B=1'0, Y=$auto$wreduce.cc:454:run$3194 [3]
      New connections: { $auto$wreduce.cc:454:run$3194 [4] $auto$wreduce.cc:454:run$3194 [2:0] } = { $auto$wreduce.cc:454:run$3194 [3] 3'000 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:38$789:
      Old ports: A={ 1'0 $auto$wreduce.cc:454:run$3195 [3:0] }, B=5'10000, Y=$auto$wreduce.cc:454:run$3196 [4:0]
      New ports: A={ 1'0 $auto$wreduce.cc:454:run$3195 [3] }, B=2'10, Y=$auto$wreduce.cc:454:run$3196 [4:3]
      New connections: $auto$wreduce.cc:454:run$3196 [2:0] = 3'000
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:39$796:
      Old ports: A=$auto$wreduce.cc:454:run$3197 [5:0], B=6'100000, Y=$auto$wreduce.cc:454:run$3198 [5:0]
      New ports: A={ $auto$wreduce.cc:454:run$3197 [3] $auto$wreduce.cc:454:run$3197 [3] }, B=2'10, Y={ $auto$wreduce.cc:454:run$3198 [5] $auto$wreduce.cc:454:run$3198 [3] }
      New connections: { $auto$wreduce.cc:454:run$3198 [4] $auto$wreduce.cc:454:run$3198 [2:0] } = { $auto$wreduce.cc:454:run$3198 [3] 3'000 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:40$803:
      Old ports: A=$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:40$802_Y [5:0], B=6'010000, Y=$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:40$803_Y [5:0]
      New ports: A={ 1'0 $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:40$802_Y [3] }, B=2'10, Y=$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:40$803_Y [4:3]
      New connections: { $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:40$803_Y [5] $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:40$803_Y [2:0] } = { $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:40$803_Y [3] 3'000 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:41$810:
      Old ports: A=$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:41$809_Y [4:0], B=5'00000, Y=$auto$wreduce.cc:454:run$3199 [4:0]
      New ports: A=$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:41$809_Y [3], B=1'0, Y=$auto$wreduce.cc:454:run$3199 [3]
      New connections: { $auto$wreduce.cc:454:run$3199 [4] $auto$wreduce.cc:454:run$3199 [2:0] } = { $auto$wreduce.cc:454:run$3199 [3] 3'000 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:42$817:
      Old ports: A={ 1'0 $auto$wreduce.cc:454:run$3200 [3:0] }, B=5'10000, Y=$auto$wreduce.cc:454:run$3201 [4:0]
      New ports: A={ 1'0 $auto$wreduce.cc:454:run$3200 [3] }, B=2'10, Y=$auto$wreduce.cc:454:run$3201 [4:3]
      New connections: $auto$wreduce.cc:454:run$3201 [2:0] = 3'000
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:43$824:
      Old ports: A=$auto$wreduce.cc:454:run$3202 [5:0], B=6'100000, Y=$auto$wreduce.cc:454:run$3203 [5:0]
      New ports: A={ $auto$wreduce.cc:454:run$3202 [3] $auto$wreduce.cc:454:run$3202 [3] }, B=2'10, Y={ $auto$wreduce.cc:454:run$3203 [5] $auto$wreduce.cc:454:run$3203 [3] }
      New connections: { $auto$wreduce.cc:454:run$3203 [4] $auto$wreduce.cc:454:run$3203 [2:0] } = { $auto$wreduce.cc:454:run$3203 [3] 3'000 }
    Consolidated identical input bits for $mux cell $flatten\memory.$procmux$1714:
      Old ports: A=$flatten\memory.$procmux$1712_Y, B={ 1'0 \memory.P3blk_v }, Y=$flatten\memory.$procmux$1714_Y
      New ports: A=$flatten\memory.$procmux$1712_Y [4:0], B=\memory.P3blk_v, Y=$flatten\memory.$procmux$1714_Y [4:0]
      New connections: $flatten\memory.$procmux$1714_Y [5] = 1'0
    Consolidated identical input bits for $mux cell $flatten\vcell.\ishaper.$procmux$1843:
      Old ports: A=$auto$wreduce.cc:454:run$3211 [1:0], B=2'10, Y=$auto$wreduce.cc:454:run$3212 [1:0]
      New ports: A=$auto$wreduce.cc:454:run$3211 [1], B=1'1, Y=$auto$wreduce.cc:454:run$3212 [1]
      New connections: $auto$wreduce.cc:454:run$3212 [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\vcell.\ishaper.$procmux$1887:
      Old ports: A=$flatten\vcell.\ishaper.$procmux$1885_Y, B=5'11111, Y=$flatten\vcell.\ishaper.$procmux$1887_Y
      New ports: A=$flatten\vcell.\ishaper.$procmux$1885_Y [0], B=1'1, Y=$flatten\vcell.\ishaper.$procmux$1887_Y [0]
      New connections: $flatten\vcell.\ishaper.$procmux$1887_Y [4:1] = { $flatten\vcell.\ishaper.$procmux$1887_Y [0] $flatten\vcell.\ishaper.$procmux$1887_Y [0] $flatten\vcell.\ishaper.$procmux$1887_Y [0] $flatten\vcell.\ishaper.$procmux$1887_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\vcell.\ishaper.$procmux$1898:
      Old ports: A=$flatten\vcell.\ishaper.$procmux$1896_Y, B=5'00001, Y=$flatten\vcell.\ishaper.$procmux$1898_Y
      New ports: A={ $flatten\vcell.\ishaper.$procmux$1896_Y [0] $flatten\vcell.\ishaper.$procmux$1896_Y [0] }, B=2'01, Y=$flatten\vcell.\ishaper.$procmux$1898_Y [1:0]
      New connections: $flatten\vcell.\ishaper.$procmux$1898_Y [4:2] = { $flatten\vcell.\ishaper.$procmux$1898_Y [1] $flatten\vcell.\ishaper.$procmux$1898_Y [1] $flatten\vcell.\ishaper.$procmux$1898_Y [1] }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\memory.$procmux$1716:
      Old ports: A=$flatten\memory.$procmux$1714_Y, B={ 1'0 \memory.P4blk_v }, Y=$flatten\memory.$procmux$1716_Y
      New ports: A=$flatten\memory.$procmux$1714_Y [4:0], B=\memory.P4blk_v, Y=$flatten\memory.$procmux$1716_Y [4:0]
      New connections: $flatten\memory.$procmux$1716_Y [5] = 1'0
  Optimizing cells in module \top.
Performed a total of 62 changes.

16.29.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~18 debug messages>
Removed a total of 6 cells.

16.29.6. Executing OPT_DFF pass (perform DFF optimizations).

16.29.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 5 unused wires.
<suppressed ~1 debug messages>

16.29.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~189 debug messages>

16.29.9. Rerunning OPT passes. (Maybe there is more to do..)

16.29.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~458 debug messages>

16.29.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

16.29.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

16.29.13. Executing OPT_DFF pass (perform DFF optimizations).

16.29.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 78 unused wires.
<suppressed ~1 debug messages>

16.29.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

16.29.16. Rerunning OPT passes. (Maybe there is more to do..)

16.29.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~458 debug messages>

16.29.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

16.29.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

16.29.20. Executing OPT_DFF pass (perform DFF optimizations).

16.29.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

16.29.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

16.29.23. Finished OPT passes. (There is nothing left to do.)

16.30. Executing ICE40_WRAPCARRY pass (wrap carries).

16.31. Executing TECHMAP pass (map to technology primitives).

16.31.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

16.31.2. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/arith_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

16.31.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $sdff.
Using template $paramod$672a140277c71df8314410f22acc08d55222c3c7\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $sdffce.
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $sdffe.
Using template $paramod$constmap:27b0148fb3658c67ad7b9fc9095ff5ad5fa65583$paramod$6ddcfc8e220ec76ddb4b1e5b538c8add94cc72ca\_90_shift_shiftx for cells of type $shiftx.
Using template $paramod$b18e16801adf491a64caa0542270798e5d4ac6b6\_80_ice40_alu for cells of type $alu.
Using template $paramod$3ac6e4268d0279df14823f25676acf685165517e\_80_ice40_alu for cells of type $alu.
Using template $paramod$c6885379b74fbbf6906b35106e386e521d86cbb2\_80_ice40_alu for cells of type $alu.
Using template $paramod$8742280fdebca84e1c87f2a86ed84f62d558f4cc\_80_ice40_alu for cells of type $alu.
Using template $paramod$332fab4e157f868977379756d21fa99887c3c6c4\_80_ice40_alu for cells of type $alu.
Using template $paramod$420fbc8134b4c458452de534da94701c18f4eecd\_80_ice40_alu for cells of type $alu.
Using template $paramod$00298f3f8094950cb9a5ff2fda48d0d8bde8806c\_80_ice40_alu for cells of type $alu.
Using template $paramod$76faf6aa397909704a3ca45dba523dfa58393e7e\_80_ice40_alu for cells of type $alu.
Using template $paramod$a40b3a69ab2154dca9743e30e1e84efb03b892b4\_80_ice40_alu for cells of type $alu.
Using template $paramod$df9553132937e7736c5a38f2f1f29abeed1637af\_80_ice40_alu for cells of type $alu.
Using template $paramod$fc972a7a46956c1788f3cb5257b53c8f1df2d0cc\_90_alu for cells of type $alu.
Using template $paramod$e04283ca12514baf3d204c6994bec8f178dd89f8\_80_ice40_alu for cells of type $alu.
Using template $paramod$d9d6055bedde760961c6356c4015e2f0000ae9c2\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $logic_and.
Using template $paramod$3ef7d3dd227da7627a99c5e5a6a4deb817573e39\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $xor.
Using template $paramod$dc04b7d98e503a7bab16fce2df70e6e2c5ca34d6\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $lut.
Using template $paramod$6e0a31ebf2a4e7bcebad5866b2b441901654250d\_90_pmux for cells of type $pmux.
Using template $paramod$740b056ede97228d3eae64ea2fdc81f0a33e0fe7\_80_ice40_alu for cells of type $alu.
Using template $paramod$78e969f2586efcf3a5b0b0440bcca0db83d5cca2\_80_ice40_alu for cells of type $alu.
Using template $paramod$83dd457849c736323edf2edb15923eb27f99c683\_80_ice40_alu for cells of type $alu.
Using template $paramod$3e96e356bb68fcbd4f9c12f6d97ec8513d1af8c6\_80_ice40_alu for cells of type $alu.
Using template $paramod$6b90a16b6f3b57b9c9d958838204f952a01dc262\_80_ice40_alu for cells of type $alu.
Using template $paramod$93b49458bab1c00eb32aff458c583f46ff61e60f\_80_ice40_alu for cells of type $alu.
Using template $paramod$d902cfcd8f5bceb817669b134f968d68db216af4\_80_ice40_alu for cells of type $alu.
Using template $paramod$9c32b45917accb56be6667e7eba7742d064d7fbb\_80_ice40_alu for cells of type $alu.
Using template $paramod$2d591d76303cd5065d50f216288bb81e81f2927d\_80_ice40_alu for cells of type $alu.
Using template $paramod$78648aff6d035ceca1e51be5292d8e9748cdc2be\_80_ice40_alu for cells of type $alu.
Using template $paramod$49641a5ace7a8dbedd31c417f5a1b54fcecf6c7d\_80_ice40_alu for cells of type $alu.
Using template $paramod$dbcdc7e8aa1a4080cea2deda6fdc8772064f4d90\_80_ice40_alu for cells of type $alu.
Using template $paramod$754650b284649a026620fc6856e5b6886cbfe794\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000001 for cells of type $lcu.
No more expansions possible.
<suppressed ~4184 debug messages>

16.32. Executing OPT pass (performing simple optimizations).

16.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~3634 debug messages>

16.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~4344 debug messages>
Removed a total of 1448 cells.

16.32.3. Executing OPT_DFF pass (perform DFF optimizations).

16.32.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 3495 unused cells and 3451 unused wires.
<suppressed ~3496 debug messages>

16.32.5. Finished fast OPT passes.

16.33. Executing ICE40_OPT pass (performing simple optimizations).

16.33.1. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3264.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$3264.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3277.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$3264.BB [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3290.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$3264.BB [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3303.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$3303.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3314.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$3314.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3325.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$3314.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3343.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$3303.BB [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3348.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$3314.BB [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3353.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$3314.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3362.slice[0].carry: CO=\game_manager.h.pposition [6]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3367.slice[0].carry: CO=\game_manager.h.pposition [3]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3380.slice[0].carry: CO=\game_manager.h.pposition [4]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3393.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$3338.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3406.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$3338.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3419.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$3338.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3432.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$3338.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3445.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$3338.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3458.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$3338.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3471.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$3338.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3484.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$3338.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3497.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$3338.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3510.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$3338.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3523.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$3338.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3536.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$3338.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3549.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$3338.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3562.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$3338.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3575.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$3338.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3588.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$3338.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3601.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$3338.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3614.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$3338.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3627.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$3338.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3640.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$3338.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3653.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$3338.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3662.slice[0].carry: CO=\core.hreadwire [5]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3667.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$3303.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3678.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$3338.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3687.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$3303.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3696.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$3696.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3707.slice[0].carry: CO=\core.hscan_pos [4]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3712.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$3696.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3723.slice[0].carry: CO=\core.hscan_pos [7]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3728.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$3696.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3737.slice[0].carry: CO=\core.hscan_pos [4]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3750.slice[0].carry: CO=\core.hscan_pos [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3753.slice[0].carry: CO=\core.vscan_pos [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3756.slice[0].carry: CO=\core.vreadwire [3]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3762.slice[0].carry: CO=\core.hreadwire [3]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3768.slice[0].carry: CO=\memory.resetperiod_state [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3771.slice[0].carry: CO=\memory.resetperiod_state [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3774.slice[0].carry: CO=\memory.resetperiod_state [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3777.slice[0].carry: CO=\memory.P1blk_h [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3777.slice[5].carry: CO=$auto$alumacc.cc:485:replace_alu$3777.C [5]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3780.slice[0].carry: CO=\memory.P2blk_h [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3780.slice[5].carry: CO=$auto$alumacc.cc:485:replace_alu$3780.C [5]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3783.slice[0].carry: CO=\memory.P3blk_h [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3783.slice[5].carry: CO=$auto$alumacc.cc:485:replace_alu$3783.C [5]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3786.slice[0].carry: CO=\memory.P4blk_h [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3786.slice[5].carry: CO=$auto$alumacc.cc:485:replace_alu$3786.C [5]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3789.slice[0].carry: CO=\memory.perq [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3792.slice[0].carry: CO=\t.counter [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3795.slice[0].carry: CO=\vcell.tetron_h [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3798.slice[0].carry: CO=\vcell.tetron_v [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3801.slice[0].carry: CO=\vcell.tetron_rotation [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$3828.slice[0].carry: CO=\vcell.tetron_v [0]

16.33.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~176 debug messages>

16.33.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~90 debug messages>
Removed a total of 30 cells.

16.33.4. Executing OPT_DFF pass (perform DFF optimizations).

16.33.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 14 unused cells and 4 unused wires.
<suppressed ~15 debug messages>

16.33.6. Rerunning OPT passes. (Removed registers in this run.)

16.33.7. Running ICE40 specific optimizations.

16.33.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

16.33.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

16.33.10. Executing OPT_DFF pass (perform DFF optimizations).

16.33.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

16.33.12. Finished OPT passes. (There is nothing left to do.)

16.34. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

16.35. Executing TECHMAP pass (map to technology primitives).

16.35.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

16.35.2. Continuing TECHMAP pass.
Using template \$_SDFFCE_PP0P_ for cells of type $_SDFFCE_PP0P_.
Using template \$_SDFFCE_PP1P_ for cells of type $_SDFFCE_PP1P_.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
Using template \$_SDFF_PP0_ for cells of type $_SDFF_PP0_.
Using template \$_SDFF_PP1_ for cells of type $_SDFF_PP1_.
No more expansions possible.
<suppressed ~1110 debug messages>

16.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

16.37. Executing SIMPLEMAP pass (map simple cells to gate primitives).
Mapping top.$auto$alumacc.cc:485:replace_alu$3750.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3753.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3756.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3762.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3768.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3771.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3777.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3777.slice[5].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3780.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3780.slice[5].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3783.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3783.slice[5].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3786.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3786.slice[5].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3789.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3792.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3795.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3798.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3801.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$3828.slice[0].carry ($lut).

16.38. Executing ICE40_OPT pass (performing simple optimizations).

16.38.1. Running ICE40 specific optimizations.

16.38.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~351 debug messages>

16.38.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~5106 debug messages>
Removed a total of 1702 cells.

16.38.4. Executing OPT_DFF pass (perform DFF optimizations).

16.38.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 8158 unused wires.
<suppressed ~1 debug messages>

16.38.6. Rerunning OPT passes. (Removed registers in this run.)

16.38.7. Running ICE40 specific optimizations.

16.38.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~1 debug messages>

16.38.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

16.38.10. Executing OPT_DFF pass (perform DFF optimizations).

16.38.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

16.38.12. Rerunning OPT passes. (Removed registers in this run.)

16.38.13. Running ICE40 specific optimizations.

16.38.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

16.38.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

16.38.16. Executing OPT_DFF pass (perform DFF optimizations).

16.38.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

16.38.18. Finished OPT passes. (There is nothing left to do.)

16.39. Executing TECHMAP pass (map to technology primitives).

16.39.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/latches_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

16.39.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

16.40. Executing ABC pass (technology mapping using ABC).

16.40.1. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Extracted 5870 gates and 7074 wires to a netlist network with 1202 inputs and 478 outputs.

16.40.1.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + lutpack -S 1 
ABC: + dress 
ABC: Total number of equiv classes                =    1338.
ABC: Participating nodes from both networks       =    2797.
ABC: Participating nodes from the first network   =    1342. (  47.88 % of nodes)
ABC: Participating nodes from the second network  =    1455. (  51.91 % of nodes)
ABC: Node pairs (any polarity)                    =    1342. (  47.88 % of names can be moved)
ABC: Node pairs (same polarity)                   =     829. (  29.58 % of names can be moved)
ABC: Total runtime =     0.06 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

16.40.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     2800
ABC RESULTS:        internal signals:     5394
ABC RESULTS:           input signals:     1202
ABC RESULTS:          output signals:      478
Removing temp directory.

16.41. Executing ICE40_WRAPCARRY pass (wrap carries).

16.42. Executing TECHMAP pass (map to technology primitives).

16.42.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

16.42.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~22 debug messages>
Removed 384 unused cells and 4801 unused wires.

16.43. Executing OPT_LUT pass (optimize LUTs).
Discovering LUTs.
Number of LUTs:     2958
  1-LUT               71
  2-LUT              249
  3-LUT             1066
  4-LUT             1572
  with \SB_CARRY    (#0)  144
  with \SB_CARRY    (#1)  153

Eliminating LUTs.
Number of LUTs:     2958
  1-LUT               71
  2-LUT              249
  3-LUT             1066
  4-LUT             1572
  with \SB_CARRY    (#0)  144
  with \SB_CARRY    (#1)  153

Combining LUTs.
Number of LUTs:     2953
  1-LUT               71
  2-LUT              244
  3-LUT             1061
  4-LUT             1577
  with \SB_CARRY    (#0)  144
  with \SB_CARRY    (#1)  153

Eliminated 0 LUTs.
Combined 5 LUTs.
<suppressed ~19590 debug messages>

16.44. Executing TECHMAP pass (map to technology primitives).

16.44.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

16.44.2. Continuing TECHMAP pass.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01000000 for cells of type $lut.
Using template $paramod$6d6beead1425af15cf78b27fd9b11b41b5d4bce8\$lut for cells of type $lut.
Using template $paramod$6e238df02989b317f10820a22773676e71120644\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10001111 for cells of type $lut.
Using template $paramod$fd904e9e35cfd343a9df248824bd3f1408724879\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000001 for cells of type $lut.
Using template $paramod$38f9bf4dd2329347b8471f0a98443dd323386889\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0001 for cells of type $lut.
Using template $paramod$658b9ed803f0d3d335616d3858b53e0a2522f1e8\$lut for cells of type $lut.
Using template $paramod$571404c0889eaf57f492cb5e37f8acb5df5852f9\$lut for cells of type $lut.
Using template $paramod$de3d8c0ac9a85f776878d56395b6e0bf04ae72e7\$lut for cells of type $lut.
Using template $paramod$bdb7f9ed72fd4f5c7ad81c376f2d8a5c72a0098d\$lut for cells of type $lut.
Using template $paramod$52b0f43ae6cb52b5e726dd3244952f6f33bb5f19\$lut for cells of type $lut.
Using template $paramod$e5e9da8fed769f971686eed8c5eea50e61f73aaa\$lut for cells of type $lut.
Using template $paramod$45d617c2ce0041e27b541f62b0fc3c3ce441a616\$lut for cells of type $lut.
Using template $paramod$2ea69c779d6c1b79ac5a87b0d1523c67d5628dba\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01010011 for cells of type $lut.
Using template $paramod$973818279bc95792902f3c09371fd2407d04a2a5\$lut for cells of type $lut.
Using template $paramod$c1a19a87ccbbb03d43a72335db63f692ddf82cc1\$lut for cells of type $lut.
Using template $paramod$a50be0e6fa3a01511bb234559cb74fb8bd3e2061\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1000 for cells of type $lut.
Using template $paramod$6b0849254d6c87461fb93e37cc18f089f61eb912\$lut for cells of type $lut.
Using template $paramod$4b2297966ddb718657b80566604f97685ffc0120\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01110000 for cells of type $lut.
Using template $paramod$43779580bfffd5d5a9f321249a174febf1dac288\$lut for cells of type $lut.
Using template $paramod$272652f6c6fbe9a75eff76e45cc7e2788835518b\$lut for cells of type $lut.
Using template $paramod$179512a187da069f3b79ef6612a41e494e7d54b6\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001101 for cells of type $lut.
Using template $paramod$c24ed72ebb67e9ead6029e42e909ef7fc0abbb11\$lut for cells of type $lut.
Using template $paramod$71d951b20e73043168c1656217d126e617052faa\$lut for cells of type $lut.
Using template $paramod$e49f6e3576ef1a6d2f58c54414dbb786af8cc869\$lut for cells of type $lut.
Using template $paramod$415b9dd3a15783ae56c103f189fd8e182f997441\$lut for cells of type $lut.
Using template $paramod$c5b694ec89d7629b942ccf6a9be1d39e24f8edec\$lut for cells of type $lut.
Using template $paramod$2d07c1a6c53c7b878509360922c4fa5ebedc3011\$lut for cells of type $lut.
Using template $paramod$df196ed0a1da5c4a58c5e08a1dac304fd3fccaab\$lut for cells of type $lut.
Using template $paramod$85b779ce5ab505dbf25e5e046fb43ca2b76b878b\$lut for cells of type $lut.
Using template $paramod$64669a7e87c28e39425dffff48145545533b4971\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10100011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10000000 for cells of type $lut.
Using template $paramod$4cf5305612d86489c1a6171729557670bf08582e\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10101100 for cells of type $lut.
Using template $paramod$7a9d9396461df152f697894fa3b294ad1b285e08\$lut for cells of type $lut.
Using template $paramod$441de597d9318495d3225f370c9f7379b3b0fd0d\$lut for cells of type $lut.
Using template $paramod$703a13a751e631ef123f38f7d2125aeabec0f94c\$lut for cells of type $lut.
Using template $paramod$94ac66a11090dca84889e55fcf03297912a5b7ec\$lut for cells of type $lut.
Using template $paramod$cc08dba3aac8677e797984bdf18a09dd37547dd3\$lut for cells of type $lut.
Using template $paramod$8b24407096beec47292ddeb1567a058197a320b9\$lut for cells of type $lut.
Using template $paramod$ab8bb87959c5d7cfa27886cee1355b38e054a61a\$lut for cells of type $lut.
Using template $paramod$575b200168b9e109c2ed99df4359056f2c6696ac\$lut for cells of type $lut.
Using template $paramod$4da2782c2e024b3eded45331a6607870b9d0254f\$lut for cells of type $lut.
Using template $paramod$ed10455c824c2a3761aabdeb1e31dad905f66e6e\$lut for cells of type $lut.
Using template $paramod$f54c0ffd7b041ca43eac7710ab19c0666d826c22\$lut for cells of type $lut.
Using template $paramod$608f40069c27841a5b3bdf03643a34bdc8974072\$lut for cells of type $lut.
Using template $paramod$adac5163f2ca606e303e4fcb6e4ac1a8cfe9825d\$lut for cells of type $lut.
Using template $paramod$02fbd2dfd8b419c0d6fd5205680ad063cd40eac8\$lut for cells of type $lut.
Using template $paramod$c5f3c57a6d466a2f42208bafb8985b96ce884440\$lut for cells of type $lut.
Using template $paramod$d6d3aaeac1b9aa2c4b652c48e0deb565040dda72\$lut for cells of type $lut.
Using template $paramod$82b4a585d1edcb5c6e755dc9bd3392228a1c1304\$lut for cells of type $lut.
Using template $paramod$cc14edb43bcbbd83b718cef08414cb23048bb6d0\$lut for cells of type $lut.
Using template $paramod$2f99e7dde0142f5eb4336d05fd90a596d3f2e038\$lut for cells of type $lut.
Using template $paramod$048d4aa2263b685fba6c6b0d38f6224df0dc3042\$lut for cells of type $lut.
Using template $paramod$30c7bb594369ca20ff4ff844ba6ed3179f45572d\$lut for cells of type $lut.
Using template $paramod$12879138d1e376f344e47ea40be66b776233be75\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001110 for cells of type $lut.
Using template $paramod$5c32c59025c0b98f20e63f249d83e7ebb4b085e3\$lut for cells of type $lut.
Using template $paramod$243c00f5eb9faa1d5ce3478fdc389a56070781f8\$lut for cells of type $lut.
Using template $paramod$e9c77024ca501b890c641f9c0b10e27242db8730\$lut for cells of type $lut.
Using template $paramod$0f52647588235a7349ddd3f3432c9ac1e33ad9e1\$lut for cells of type $lut.
Using template $paramod$fe9a0158d0352193457c4f5b6282ac86d35fb3ee\$lut for cells of type $lut.
Using template $paramod$f3e1547c4b47e64c590e75cf09078b2507c8cc75\$lut for cells of type $lut.
Using template $paramod$279a8d961e6b2ded8450bee8ed637cb9efa31f02\$lut for cells of type $lut.
Using template $paramod$bba54c1ef87367812b4c15f4aed5ac70773df775\$lut for cells of type $lut.
Using template $paramod$04b674496422df8889c01c3744b94097628ccfbc\$lut for cells of type $lut.
Using template $paramod$359fe4e746656bf9c72aecaff84fc7bdea9f55a5\$lut for cells of type $lut.
Using template $paramod$ad3a97108c9f4d10f8acfa309b668b9455d3d733\$lut for cells of type $lut.
Using template $paramod$11ec7271d8e6e5aeaace08c13e4c601f10e31038\$lut for cells of type $lut.
Using template $paramod$6d23198eb2b8f79a41c7626605a61009695893b1\$lut for cells of type $lut.
Using template $paramod$c93083768903e88c37e0c9b82fead370b0886961\$lut for cells of type $lut.
Using template $paramod$a8b2b0f3a3fd7b01c99e8d61bb72f602bd41af54\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00110101 for cells of type $lut.
Using template $paramod$ea0faad69a26c91786a25961ea149d0e0961eb1f\$lut for cells of type $lut.
Using template $paramod$933f4f3e373a784da64d137def3625bdd36d1695\$lut for cells of type $lut.
Using template $paramod$b4d0f4738a5ce50c7f36c2aa2ecc09cfb874f2b6\$lut for cells of type $lut.
Using template $paramod$50666a8f9d622ca1f027a4587dfd5f2a7d8810c9\$lut for cells of type $lut.
Using template $paramod$b297295e19b03521716155b85537bbe86d6a9ae6\$lut for cells of type $lut.
Using template $paramod$a2d691ba21e093558f2a36669ee489fbccffbcd3\$lut for cells of type $lut.
Using template $paramod$99a2a175d178a040bb1ffceb53184fb0f59423c6\$lut for cells of type $lut.
Using template $paramod$44587907eb547902863ad65ee925d87164ab0cc4\$lut for cells of type $lut.
Using template $paramod$e6b46dd25a62ee5d1aa18fe97e151c7486cb2a1d\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11010000 for cells of type $lut.
Using template $paramod$b93d1ea7a612a32c185108f67a153d44ffb9aac2\$lut for cells of type $lut.
Using template $paramod$e5759512db67494ff77fbdfc66dff4006376568f\$lut for cells of type $lut.
Using template $paramod$41326ad8644342a66dfb051d050f2b6fbf15015b\$lut for cells of type $lut.
Using template $paramod$4da6fe9957da309dc16b8f31a6b80b19c05c808d\$lut for cells of type $lut.
Using template $paramod$e053a22d78e6bd5ea33183ea69976f0db741be0e\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01100000 for cells of type $lut.
Using template $paramod$ef55f89c74d994c27b4ec4bac79af43e8b1d7e25\$lut for cells of type $lut.
Using template $paramod$1843b3c15f2447d117e2d5de9b00f791ef5f9fa3\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11100000 for cells of type $lut.
Using template $paramod$b431bfd938e35871dd0b7668e1503c7e8b9d491c\$lut for cells of type $lut.
Using template $paramod$e0bde73e598487237493c8a43ca52c95a3727354\$lut for cells of type $lut.
Using template $paramod$314fe9458b07176c4d2c8c59533027c4c55155b5\$lut for cells of type $lut.
Using template $paramod$b82dd4a20dbf0d54061c2335089cd4250464eb8a\$lut for cells of type $lut.
Using template $paramod$2ddcccd9af7012bbbb71535b01f81cd1c912c08d\$lut for cells of type $lut.
Using template $paramod$81d8a60fd95b1a9f9ef71c12a774ae6988cb9fd5\$lut for cells of type $lut.
Using template $paramod$5898ae4e52b22eca363a418fa94151158a507d30\$lut for cells of type $lut.
Using template $paramod$332a399730bfc61adea04021a76b1c4e4030f37d\$lut for cells of type $lut.
Using template $paramod$5a621b016c894274d07edef48c49b401a15fd796\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11000010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00111010 for cells of type $lut.
Using template $paramod$6dc74df2fe0850c8fb3c96abdf34db34fae34cfd\$lut for cells of type $lut.
Using template $paramod$1bf62ab10e48d71d6497bccacf5c70420c470fe9\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1011 for cells of type $lut.
Using template $paramod$bb07aa4c6c95211b927837b9073769ffabb3aaa5\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000001\LUT=2'01 for cells of type $lut.
Using template $paramod$71b048598aae7f2b81e655c1bee88bee1013148c\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01001111 for cells of type $lut.
Using template $paramod$7843e8c123bb8acf2cb35298776a29dcf1524827\$lut for cells of type $lut.
Using template $paramod$b4f15f202f50520dbc381cd0880ac94f830f05a8\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01011100 for cells of type $lut.
Using template $paramod$a20b0c093af372402eecf32644de5f0208303079\$lut for cells of type $lut.
Using template $paramod$2e7a95e82db1d690ae9ba5d10f68b175fa2cb467\$lut for cells of type $lut.
Using template $paramod$d4fae2c0d9ad2966369cd4e39b81c71bcd1327c9\$lut for cells of type $lut.
Using template $paramod$c4c148354f86d2131dbfed31e2e01cbbb5aefda7\$lut for cells of type $lut.
Using template $paramod$f6718da5409ec8636fab31113c774a3123f56b0b\$lut for cells of type $lut.
Using template $paramod$2f5933953e311dffe5861a53a77e08849a1c7767\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11101001 for cells of type $lut.
Using template $paramod$444dc65d62c26ac5c920b1ef08094df1b8d6a003\$lut for cells of type $lut.
Using template $paramod$6e46ec5a196ba1a24b8e69ab094cadc07c13ac1f\$lut for cells of type $lut.
Using template $paramod$a15fd389a2f54cb7b94707b25934d226e68d9e2e\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00011111 for cells of type $lut.
Using template $paramod$7fcc2f13195f27c397064377984d87a90c06749d\$lut for cells of type $lut.
Using template $paramod$bab3258ad21cb83a958fbc51f2a3a88704f4353a\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00011100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01101001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11010011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01000010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01101000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01000011 for cells of type $lut.
Using template $paramod$cde3aa23c1efa60a470cf0f0281347d6ba585afa\$lut for cells of type $lut.
Using template $paramod$f63fe32f78d5f3c5de711945c592c8c5ec2303ae\$lut for cells of type $lut.
Using template $paramod$ae9b8abdb4f811ce37985dd5106af9cd21223954\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11110001 for cells of type $lut.
Using template $paramod$df0b68f8e63b2deb6710e23abd8b8ff0796d4897\$lut for cells of type $lut.
Using template $paramod$89ecea64a21f1d46300084f3bd1ea75b5999f12a\$lut for cells of type $lut.
Using template $paramod$2167383712a3ef5a7aa9a279cd8db29e1fc2db5f\$lut for cells of type $lut.
Using template $paramod$c471af5667a682bd131a5b479e58e470d1b2b7cd\$lut for cells of type $lut.
Using template $paramod$baa939b0bd5b3e0c8760492528669bd58f640542\$lut for cells of type $lut.
Using template $paramod$fb5ee0bdef1c4e74aaf1fd8efae98b46a2f5e564\$lut for cells of type $lut.
Using template $paramod$2c4c7dfdf674b9c90d6c2cae622d527a6d7d0c22\$lut for cells of type $lut.
Using template $paramod$79b411f0e36eb10e8beffb4e431d9be926923a10\$lut for cells of type $lut.
Using template $paramod$1307f430048519f43ab1ac47bdca16ced42e5270\$lut for cells of type $lut.
Using template $paramod$8c24dc0cdd336b7fb88bbf7eed45cec5cbae862b\$lut for cells of type $lut.
Using template $paramod$5766b753e513aa2393ffc25ef94ebc79dc098484\$lut for cells of type $lut.
Using template $paramod$4d80b2350afbf957388ad464d6a1930002dd1b04\$lut for cells of type $lut.
No more expansions possible.
<suppressed ~5101 debug messages>
Removed 0 unused cells and 7177 unused wires.

16.45. Executing AUTONAME pass.
Renamed 107000 objects in module top (86 iterations).
<suppressed ~6109 debug messages>

16.46. Executing HIERARCHY pass (managing design hierarchy).

16.46.1. Analyzing design hierarchy..
Top module:  \top

16.46.2. Analyzing design hierarchy..
Top module:  \top
Removed 0 unused modules.

16.47. Printing statistics.

=== top ===

   Number of wires:               5448
   Number of wire bits:          16240
   Number of public wires:        5448
   Number of public wire bits:   16240
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               4539
     SB_CARRY                      498
     SB_DFF                          9
     SB_DFFE                        25
     SB_DFFESR                     947
     SB_DFFESS                      19
     SB_DFFSR                       81
     SB_DFFSS                        6
     SB_LUT4                      2953
     SB_PLL40_PAD                    1

16.48. Executing CHECK pass (checking for obvious problems).
Checking module top...
Found and reported 0 problems.

16.49. Executing JSON backend.

Warnings: 62 unique messages, 70 total
End of script. Logfile hash: 0384ec3350, CPU: user 7.88s system 0.05s, MEM: 114.91 MB peak
Yosys 0.12 (git sha1 2156e20)
Time spent: 24% 30x opt_expr (2 sec), 17% 26x opt_clean (1 sec), ...
