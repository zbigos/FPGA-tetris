
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.12 (git sha1 2156e20)


-- Parsing `src/meta_mem.v' using frontend `verilog' --

1. Executing Verilog-2005 frontend: src/meta_mem.v
Parsing Verilog input from `src/meta_mem.v' to AST representation.
Generating RTLIL representation for module `\memory'.
Successfully finished Verilog frontend.

-- Parsing `src/tetron_T.v' using frontend `verilog' --

2. Executing Verilog-2005 frontend: src/tetron_T.v
Parsing Verilog input from `src/tetron_T.v' to AST representation.
Generating RTLIL representation for module `\tetron_T_shaper'.
Warning: wire '\blk1_voffset' is assigned in a block at src/tetron_T.v:21.13-21.30.
Warning: wire '\blk1_hoffset' is assigned in a block at src/tetron_T.v:22.13-22.30.
Warning: wire '\blk2_voffset' is assigned in a block at src/tetron_T.v:23.13-23.30.
Warning: wire '\blk2_hoffset' is assigned in a block at src/tetron_T.v:24.13-24.30.
Warning: wire '\blk3_voffset' is assigned in a block at src/tetron_T.v:25.13-25.30.
Warning: wire '\blk3_hoffset' is assigned in a block at src/tetron_T.v:26.13-26.30.
Warning: wire '\blk4_voffset' is assigned in a block at src/tetron_T.v:27.13-27.30.
Warning: wire '\blk4_hoffset' is assigned in a block at src/tetron_T.v:28.13-28.30.
Warning: wire '\blk1_voffset' is assigned in a block at src/tetron_T.v:31.17-31.34.
Warning: wire '\blk1_hoffset' is assigned in a block at src/tetron_T.v:32.17-32.34.
Warning: wire '\blk2_voffset' is assigned in a block at src/tetron_T.v:34.17-34.34.
Warning: wire '\blk2_hoffset' is assigned in a block at src/tetron_T.v:35.17-35.34.
Warning: wire '\blk3_voffset' is assigned in a block at src/tetron_T.v:36.17-36.34.
Warning: wire '\blk3_hoffset' is assigned in a block at src/tetron_T.v:37.17-37.35.
Warning: wire '\blk4_voffset' is assigned in a block at src/tetron_T.v:39.17-39.34.
Warning: wire '\blk4_hoffset' is assigned in a block at src/tetron_T.v:40.17-40.34.
Warning: wire '\blk1_voffset' is assigned in a block at src/tetron_T.v:44.17-44.34.
Warning: wire '\blk1_hoffset' is assigned in a block at src/tetron_T.v:45.17-45.34.
Warning: wire '\blk2_voffset' is assigned in a block at src/tetron_T.v:47.17-47.34.
Warning: wire '\blk2_hoffset' is assigned in a block at src/tetron_T.v:48.17-48.34.
Warning: wire '\blk3_voffset' is assigned in a block at src/tetron_T.v:49.17-49.35.
Warning: wire '\blk3_hoffset' is assigned in a block at src/tetron_T.v:50.17-50.34.
Warning: wire '\blk4_voffset' is assigned in a block at src/tetron_T.v:52.17-52.34.
Warning: wire '\blk4_hoffset' is assigned in a block at src/tetron_T.v:53.17-53.34.
Warning: wire '\blk1_voffset' is assigned in a block at src/tetron_T.v:58.17-58.34.
Warning: wire '\blk1_hoffset' is assigned in a block at src/tetron_T.v:59.17-59.34.
Warning: wire '\blk2_voffset' is assigned in a block at src/tetron_T.v:61.17-61.34.
Warning: wire '\blk2_hoffset' is assigned in a block at src/tetron_T.v:62.17-62.34.
Warning: wire '\blk3_voffset' is assigned in a block at src/tetron_T.v:63.17-63.34.
Warning: wire '\blk3_hoffset' is assigned in a block at src/tetron_T.v:64.17-64.35.
Warning: wire '\blk4_voffset' is assigned in a block at src/tetron_T.v:66.17-66.35.
Warning: wire '\blk4_hoffset' is assigned in a block at src/tetron_T.v:67.17-67.34.
Warning: wire '\blk1_voffset' is assigned in a block at src/tetron_T.v:71.17-71.34.
Warning: wire '\blk1_hoffset' is assigned in a block at src/tetron_T.v:72.17-72.34.
Warning: wire '\blk2_voffset' is assigned in a block at src/tetron_T.v:74.17-74.34.
Warning: wire '\blk2_hoffset' is assigned in a block at src/tetron_T.v:75.17-75.34.
Warning: wire '\blk3_voffset' is assigned in a block at src/tetron_T.v:76.17-76.35.
Warning: wire '\blk3_hoffset' is assigned in a block at src/tetron_T.v:77.17-77.34.
Warning: wire '\blk4_voffset' is assigned in a block at src/tetron_T.v:79.17-79.34.
Warning: wire '\blk4_hoffset' is assigned in a block at src/tetron_T.v:80.17-80.35.
Successfully finished Verilog frontend.

-- Parsing `src/tetron_O.v' using frontend `verilog' --

3. Executing Verilog-2005 frontend: src/tetron_O.v
Parsing Verilog input from `src/tetron_O.v' to AST representation.
Generating RTLIL representation for module `\tetron_O_shaper'.
Warning: wire '\blk1_voffset' is assigned in a block at src/tetron_O.v:21.13-21.30.
Warning: wire '\blk1_hoffset' is assigned in a block at src/tetron_O.v:22.13-22.30.
Warning: wire '\blk2_voffset' is assigned in a block at src/tetron_O.v:23.13-23.30.
Warning: wire '\blk2_hoffset' is assigned in a block at src/tetron_O.v:24.13-24.30.
Warning: wire '\blk3_voffset' is assigned in a block at src/tetron_O.v:25.13-25.30.
Warning: wire '\blk3_hoffset' is assigned in a block at src/tetron_O.v:26.13-26.30.
Warning: wire '\blk4_voffset' is assigned in a block at src/tetron_O.v:27.13-27.30.
Warning: wire '\blk4_hoffset' is assigned in a block at src/tetron_O.v:28.13-28.30.
Warning: wire '\blk1_voffset' is assigned in a block at src/tetron_O.v:30.13-30.30.
Warning: wire '\blk1_hoffset' is assigned in a block at src/tetron_O.v:31.13-31.30.
Warning: wire '\blk2_voffset' is assigned in a block at src/tetron_O.v:33.13-33.30.
Warning: wire '\blk2_hoffset' is assigned in a block at src/tetron_O.v:34.13-34.30.
Warning: wire '\blk3_voffset' is assigned in a block at src/tetron_O.v:35.13-35.30.
Warning: wire '\blk3_hoffset' is assigned in a block at src/tetron_O.v:36.13-36.30.
Warning: wire '\blk4_voffset' is assigned in a block at src/tetron_O.v:37.13-37.30.
Warning: wire '\blk4_hoffset' is assigned in a block at src/tetron_O.v:38.13-38.30.
Successfully finished Verilog frontend.

-- Parsing `src/tetron_Lb.v' using frontend `verilog' --

4. Executing Verilog-2005 frontend: src/tetron_Lb.v
Parsing Verilog input from `src/tetron_Lb.v' to AST representation.
Generating RTLIL representation for module `\tetron_Lb_shaper'.
Warning: wire '\blk1_voffset' is assigned in a block at src/tetron_Lb.v:21.13-21.30.
Warning: wire '\blk1_hoffset' is assigned in a block at src/tetron_Lb.v:22.13-22.30.
Warning: wire '\blk2_voffset' is assigned in a block at src/tetron_Lb.v:23.13-23.30.
Warning: wire '\blk2_hoffset' is assigned in a block at src/tetron_Lb.v:24.13-24.30.
Warning: wire '\blk3_voffset' is assigned in a block at src/tetron_Lb.v:25.13-25.30.
Warning: wire '\blk3_hoffset' is assigned in a block at src/tetron_Lb.v:26.13-26.30.
Warning: wire '\blk4_voffset' is assigned in a block at src/tetron_Lb.v:27.13-27.30.
Warning: wire '\blk4_hoffset' is assigned in a block at src/tetron_Lb.v:28.13-28.30.
Warning: wire '\blk1_voffset' is assigned in a block at src/tetron_Lb.v:31.17-31.34.
Warning: wire '\blk1_hoffset' is assigned in a block at src/tetron_Lb.v:32.17-32.34.
Warning: wire '\blk2_voffset' is assigned in a block at src/tetron_Lb.v:34.17-34.34.
Warning: wire '\blk2_hoffset' is assigned in a block at src/tetron_Lb.v:35.17-35.34.
Warning: wire '\blk3_voffset' is assigned in a block at src/tetron_Lb.v:36.17-36.34.
Warning: wire '\blk3_hoffset' is assigned in a block at src/tetron_Lb.v:37.17-37.35.
Warning: wire '\blk4_voffset' is assigned in a block at src/tetron_Lb.v:39.17-39.34.
Warning: wire '\blk4_hoffset' is assigned in a block at src/tetron_Lb.v:40.17-40.35.
Warning: wire '\blk1_voffset' is assigned in a block at src/tetron_Lb.v:44.17-44.34.
Warning: wire '\blk1_hoffset' is assigned in a block at src/tetron_Lb.v:45.17-45.34.
Warning: wire '\blk2_voffset' is assigned in a block at src/tetron_Lb.v:47.17-47.34.
Warning: wire '\blk2_hoffset' is assigned in a block at src/tetron_Lb.v:48.17-48.34.
Warning: wire '\blk3_voffset' is assigned in a block at src/tetron_Lb.v:49.17-49.35.
Warning: wire '\blk3_hoffset' is assigned in a block at src/tetron_Lb.v:50.17-50.34.
Warning: wire '\blk4_voffset' is assigned in a block at src/tetron_Lb.v:52.17-52.35.
Warning: wire '\blk4_hoffset' is assigned in a block at src/tetron_Lb.v:53.17-53.35.
Warning: wire '\blk1_voffset' is assigned in a block at src/tetron_Lb.v:58.17-58.34.
Warning: wire '\blk1_hoffset' is assigned in a block at src/tetron_Lb.v:59.17-59.34.
Warning: wire '\blk2_voffset' is assigned in a block at src/tetron_Lb.v:61.17-61.34.
Warning: wire '\blk2_hoffset' is assigned in a block at src/tetron_Lb.v:62.17-62.34.
Warning: wire '\blk3_voffset' is assigned in a block at src/tetron_Lb.v:63.17-63.34.
Warning: wire '\blk3_hoffset' is assigned in a block at src/tetron_Lb.v:64.17-64.35.
Warning: wire '\blk4_voffset' is assigned in a block at src/tetron_Lb.v:66.17-66.35.
Warning: wire '\blk4_hoffset' is assigned in a block at src/tetron_Lb.v:67.17-67.34.
Warning: wire '\blk1_voffset' is assigned in a block at src/tetron_Lb.v:71.17-71.34.
Warning: wire '\blk1_hoffset' is assigned in a block at src/tetron_Lb.v:72.17-72.34.
Warning: wire '\blk2_voffset' is assigned in a block at src/tetron_Lb.v:74.17-74.34.
Warning: wire '\blk2_hoffset' is assigned in a block at src/tetron_Lb.v:75.17-75.34.
Warning: wire '\blk3_voffset' is assigned in a block at src/tetron_Lb.v:76.17-76.35.
Warning: wire '\blk3_hoffset' is assigned in a block at src/tetron_Lb.v:77.17-77.34.
Warning: wire '\blk4_voffset' is assigned in a block at src/tetron_Lb.v:79.17-79.34.
Warning: wire '\blk4_hoffset' is assigned in a block at src/tetron_Lb.v:80.17-80.34.
Successfully finished Verilog frontend.

-- Parsing `src/tetron_La.v' using frontend `verilog' --

5. Executing Verilog-2005 frontend: src/tetron_La.v
Parsing Verilog input from `src/tetron_La.v' to AST representation.
Generating RTLIL representation for module `\tetron_La_shaper'.
Warning: wire '\blk1_voffset' is assigned in a block at src/tetron_La.v:21.13-21.30.
Warning: wire '\blk1_hoffset' is assigned in a block at src/tetron_La.v:22.13-22.30.
Warning: wire '\blk2_voffset' is assigned in a block at src/tetron_La.v:23.13-23.30.
Warning: wire '\blk2_hoffset' is assigned in a block at src/tetron_La.v:24.13-24.30.
Warning: wire '\blk3_voffset' is assigned in a block at src/tetron_La.v:25.13-25.30.
Warning: wire '\blk3_hoffset' is assigned in a block at src/tetron_La.v:26.13-26.30.
Warning: wire '\blk4_voffset' is assigned in a block at src/tetron_La.v:27.13-27.30.
Warning: wire '\blk4_hoffset' is assigned in a block at src/tetron_La.v:28.13-28.30.
Warning: wire '\blk1_voffset' is assigned in a block at src/tetron_La.v:31.17-31.34.
Warning: wire '\blk1_hoffset' is assigned in a block at src/tetron_La.v:32.17-32.34.
Warning: wire '\blk2_voffset' is assigned in a block at src/tetron_La.v:34.17-34.34.
Warning: wire '\blk2_hoffset' is assigned in a block at src/tetron_La.v:35.17-35.34.
Warning: wire '\blk3_voffset' is assigned in a block at src/tetron_La.v:36.17-36.34.
Warning: wire '\blk3_hoffset' is assigned in a block at src/tetron_La.v:37.17-37.35.
Warning: wire '\blk4_voffset' is assigned in a block at src/tetron_La.v:39.17-39.35.
Warning: wire '\blk4_hoffset' is assigned in a block at src/tetron_La.v:40.17-40.35.
Warning: wire '\blk1_voffset' is assigned in a block at src/tetron_La.v:44.17-44.34.
Warning: wire '\blk1_hoffset' is assigned in a block at src/tetron_La.v:45.17-45.34.
Warning: wire '\blk2_voffset' is assigned in a block at src/tetron_La.v:47.17-47.34.
Warning: wire '\blk2_hoffset' is assigned in a block at src/tetron_La.v:48.17-48.34.
Warning: wire '\blk3_voffset' is assigned in a block at src/tetron_La.v:49.17-49.35.
Warning: wire '\blk3_hoffset' is assigned in a block at src/tetron_La.v:50.17-50.34.
Warning: wire '\blk4_voffset' is assigned in a block at src/tetron_La.v:52.17-52.35.
Warning: wire '\blk4_hoffset' is assigned in a block at src/tetron_La.v:53.17-53.34.
Warning: wire '\blk1_voffset' is assigned in a block at src/tetron_La.v:58.17-58.34.
Warning: wire '\blk1_hoffset' is assigned in a block at src/tetron_La.v:59.17-59.34.
Warning: wire '\blk2_voffset' is assigned in a block at src/tetron_La.v:61.17-61.34.
Warning: wire '\blk2_hoffset' is assigned in a block at src/tetron_La.v:62.17-62.34.
Warning: wire '\blk3_voffset' is assigned in a block at src/tetron_La.v:63.17-63.34.
Warning: wire '\blk3_hoffset' is assigned in a block at src/tetron_La.v:64.17-64.35.
Warning: wire '\blk4_voffset' is assigned in a block at src/tetron_La.v:66.17-66.34.
Warning: wire '\blk4_hoffset' is assigned in a block at src/tetron_La.v:67.17-67.34.
Warning: wire '\blk1_voffset' is assigned in a block at src/tetron_La.v:71.17-71.34.
Warning: wire '\blk1_hoffset' is assigned in a block at src/tetron_La.v:72.17-72.34.
Warning: wire '\blk2_voffset' is assigned in a block at src/tetron_La.v:74.17-74.34.
Warning: wire '\blk2_hoffset' is assigned in a block at src/tetron_La.v:75.17-75.34.
Warning: wire '\blk3_voffset' is assigned in a block at src/tetron_La.v:76.17-76.35.
Warning: wire '\blk3_hoffset' is assigned in a block at src/tetron_La.v:77.17-77.34.
Warning: wire '\blk4_voffset' is assigned in a block at src/tetron_La.v:79.17-79.34.
Warning: wire '\blk4_hoffset' is assigned in a block at src/tetron_La.v:80.17-80.35.
Successfully finished Verilog frontend.

-- Parsing `src/shifter.v' using frontend `verilog' --

6. Executing Verilog-2005 frontend: src/shifter.v
Parsing Verilog input from `src/shifter.v' to AST representation.
Generating RTLIL representation for module `\shifter'.
Warning: wire '\debugled' is assigned in a block at src/shifter.v:53.9-53.35.
Successfully finished Verilog frontend.

-- Parsing `src/meta_memrow.v' using frontend `verilog' --

7. Executing Verilog-2005 frontend: src/meta_memrow.v
Parsing Verilog input from `src/meta_memrow.v' to AST representation.
Generating RTLIL representation for module `\memcell_row'.
Successfully finished Verilog frontend.

-- Parsing `src/meta_memcell.v' using frontend `verilog' --

8. Executing Verilog-2005 frontend: src/meta_memcell.v
Parsing Verilog input from `src/meta_memcell.v' to AST representation.
Generating RTLIL representation for module `\memcell'.
Successfully finished Verilog frontend.

-- Parsing `src/vga_core.v' using frontend `verilog' --

9. Executing Verilog-2005 frontend: src/vga_core.v
Parsing Verilog input from `src/vga_core.v' to AST representation.
Generating RTLIL representation for module `\VGAcore'.
Warning: reg '\r' is assigned in a continuous assignment at src/vga_core.v:60.12-60.50.
Warning: reg '\b' is assigned in a continuous assignment at src/vga_core.v:61.12-61.50.
Warning: reg '\g' is assigned in a continuous assignment at src/vga_core.v:62.12-62.50.
Successfully finished Verilog frontend.

-- Parsing `src/timer.v' using frontend `verilog' --

10. Executing Verilog-2005 frontend: src/timer.v
Parsing Verilog input from `src/timer.v' to AST representation.
Generating RTLIL representation for module `\timer'.
Successfully finished Verilog frontend.

-- Parsing `src/volatile_cell_storage.v' using frontend `verilog' --

11. Executing Verilog-2005 frontend: src/volatile_cell_storage.v
Parsing Verilog input from `src/volatile_cell_storage.v' to AST representation.
Generating RTLIL representation for module `\cellstorage'.
Warning: reg '\P1blk_v' is assigned in a continuous assignment at src/volatile_cell_storage.v:58.12-58.127.
Warning: reg '\P2blk_v' is assigned in a continuous assignment at src/volatile_cell_storage.v:59.12-59.127.
Warning: reg '\P3blk_v' is assigned in a continuous assignment at src/volatile_cell_storage.v:60.12-60.127.
Warning: reg '\P4blk_v' is assigned in a continuous assignment at src/volatile_cell_storage.v:61.12-61.127.
Warning: reg '\P1blk_h' is assigned in a continuous assignment at src/volatile_cell_storage.v:63.12-63.127.
Warning: reg '\P2blk_h' is assigned in a continuous assignment at src/volatile_cell_storage.v:64.12-64.127.
Warning: reg '\P3blk_h' is assigned in a continuous assignment at src/volatile_cell_storage.v:65.12-65.127.
Warning: reg '\P4blk_h' is assigned in a continuous assignment at src/volatile_cell_storage.v:66.12-66.127.
Successfully finished Verilog frontend.

-- Parsing `src/vga_pll.v' using frontend `verilog' --

12. Executing Verilog-2005 frontend: src/vga_pll.v
Parsing Verilog input from `src/vga_pll.v' to AST representation.
Generating RTLIL representation for module `\vga_pll'.
Successfully finished Verilog frontend.

-- Parsing `src/tetron_I.v' using frontend `verilog' --

13. Executing Verilog-2005 frontend: src/tetron_I.v
Parsing Verilog input from `src/tetron_I.v' to AST representation.
Generating RTLIL representation for module `\tetron_I_shaper'.
Warning: wire '\blk1_voffset' is assigned in a block at src/tetron_I.v:21.13-21.30.
Warning: wire '\blk1_hoffset' is assigned in a block at src/tetron_I.v:22.13-22.30.
Warning: wire '\blk2_voffset' is assigned in a block at src/tetron_I.v:23.13-23.30.
Warning: wire '\blk2_hoffset' is assigned in a block at src/tetron_I.v:24.13-24.30.
Warning: wire '\blk3_voffset' is assigned in a block at src/tetron_I.v:25.13-25.30.
Warning: wire '\blk3_hoffset' is assigned in a block at src/tetron_I.v:26.13-26.30.
Warning: wire '\blk4_voffset' is assigned in a block at src/tetron_I.v:27.13-27.30.
Warning: wire '\blk4_hoffset' is assigned in a block at src/tetron_I.v:28.13-28.30.
Warning: wire '\blk1_voffset' is assigned in a block at src/tetron_I.v:31.17-31.34.
Warning: wire '\blk1_hoffset' is assigned in a block at src/tetron_I.v:32.17-32.34.
Warning: wire '\blk2_voffset' is assigned in a block at src/tetron_I.v:33.17-33.34.
Warning: wire '\blk2_hoffset' is assigned in a block at src/tetron_I.v:34.17-34.35.
Warning: wire '\blk3_voffset' is assigned in a block at src/tetron_I.v:35.17-35.34.
Warning: wire '\blk3_hoffset' is assigned in a block at src/tetron_I.v:36.17-36.34.
Warning: wire '\blk4_voffset' is assigned in a block at src/tetron_I.v:37.17-37.34.
Warning: wire '\blk4_hoffset' is assigned in a block at src/tetron_I.v:38.17-38.34.
Warning: wire '\blk1_voffset' is assigned in a block at src/tetron_I.v:42.17-42.34.
Warning: wire '\blk1_hoffset' is assigned in a block at src/tetron_I.v:43.17-43.34.
Warning: wire '\blk2_voffset' is assigned in a block at src/tetron_I.v:44.17-44.35.
Warning: wire '\blk2_hoffset' is assigned in a block at src/tetron_I.v:45.17-45.34.
Warning: wire '\blk3_voffset' is assigned in a block at src/tetron_I.v:46.17-46.34.
Warning: wire '\blk3_hoffset' is assigned in a block at src/tetron_I.v:47.17-47.34.
Warning: wire '\blk4_voffset' is assigned in a block at src/tetron_I.v:48.17-48.34.
Warning: wire '\blk4_hoffset' is assigned in a block at src/tetron_I.v:49.17-49.34.
Warning: wire '\blk1_voffset' is assigned in a block at src/tetron_I.v:53.17-53.34.
Warning: wire '\blk1_hoffset' is assigned in a block at src/tetron_I.v:54.17-54.34.
Warning: wire '\blk2_voffset' is assigned in a block at src/tetron_I.v:55.17-55.34.
Warning: wire '\blk2_hoffset' is assigned in a block at src/tetron_I.v:56.17-56.35.
Warning: wire '\blk3_voffset' is assigned in a block at src/tetron_I.v:57.17-57.34.
Warning: wire '\blk3_hoffset' is assigned in a block at src/tetron_I.v:58.17-58.34.
Warning: wire '\blk4_voffset' is assigned in a block at src/tetron_I.v:59.17-59.34.
Warning: wire '\blk4_hoffset' is assigned in a block at src/tetron_I.v:60.17-60.34.
Warning: wire '\blk1_voffset' is assigned in a block at src/tetron_I.v:64.17-64.34.
Warning: wire '\blk1_hoffset' is assigned in a block at src/tetron_I.v:65.17-65.34.
Warning: wire '\blk2_voffset' is assigned in a block at src/tetron_I.v:66.17-66.35.
Warning: wire '\blk2_hoffset' is assigned in a block at src/tetron_I.v:67.17-67.34.
Warning: wire '\blk3_voffset' is assigned in a block at src/tetron_I.v:68.17-68.34.
Warning: wire '\blk3_hoffset' is assigned in a block at src/tetron_I.v:69.17-69.34.
Warning: wire '\blk4_voffset' is assigned in a block at src/tetron_I.v:70.17-70.34.
Warning: wire '\blk4_hoffset' is assigned in a block at src/tetron_I.v:71.17-71.34.
Successfully finished Verilog frontend.

-- Parsing `src/top.v' using frontend `verilog' --

14. Executing Verilog-2005 frontend: src/top.v
Parsing Verilog input from `src/top.v' to AST representation.
Generating RTLIL representation for module `\top'.
Successfully finished Verilog frontend.

-- Parsing `src/gmanager.v' using frontend `verilog' --

15. Executing Verilog-2005 frontend: src/gmanager.v
Parsing Verilog input from `src/gmanager.v' to AST representation.
Generating RTLIL representation for module `\gmanager'.
Successfully finished Verilog frontend.

-- Parsing `src/shader.v' using frontend `verilog' --

16. Executing Verilog-2005 frontend: src/shader.v
Parsing Verilog input from `src/shader.v' to AST representation.
Generating RTLIL representation for module `\shader'.
Successfully finished Verilog frontend.

-- Parsing `src/mod24.v' using frontend `verilog' --

17. Executing Verilog-2005 frontend: src/mod24.v
Parsing Verilog input from `src/mod24.v' to AST representation.
Generating RTLIL representation for module `\blknum_horizontal'.
Generating RTLIL representation for module `\offsetmap'.
Generating RTLIL representation for module `\blkoffset_horizontal'.
Successfully finished Verilog frontend.

-- Parsing `src/color_lut.v' using frontend `verilog' --

18. Executing Verilog-2005 frontend: src/color_lut.v
Parsing Verilog input from `src/color_lut.v' to AST representation.
Generating RTLIL representation for module `\color_lut'.
Successfully finished Verilog frontend.

-- Parsing `src/blockmemory.v' using frontend `verilog' --

19. Executing Verilog-2005 frontend: src/blockmemory.v
Parsing Verilog input from `src/blockmemory.v' to AST representation.
Generating RTLIL representation for module `\blkmemory'.
Successfully finished Verilog frontend.

-- Running command `synth_ice40 -top top -json fpga/vga_tetris.json' --

20. Executing SYNTH_ICE40 pass.

20.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Generating RTLIL representation for module `\ICESTORM_RAM'.
Successfully finished Verilog frontend.

20.2. Executing HIERARCHY pass (managing design hierarchy).

20.2.1. Analyzing design hierarchy..
Top module:  \top
Used module:     \VGAcore
Used module:     \gmanager
Used module:         \color_lut
Used module:         \shader
Used module:         \blkoffset_horizontal
Used module:             \offsetmap
Used module:         \blknum_horizontal
Used module:     \cellstorage
Used module:         \tetron_T_shaper
Used module:         \tetron_Lb_shaper
Used module:         \tetron_La_shaper
Used module:         \tetron_O_shaper
Used module:         \tetron_I_shaper
Used module:     \blkmemory
Used module:         \memory
Used module:             \memcell_row
Used module:                 \memcell
Used module:         \shifter
Used module:     \vga_pll
Used module:     \timer
Reprocessing module cellstorage because instantiated module tetron_I_shaper has become available.
Generating RTLIL representation for module `\cellstorage'.
Warning: reg '\P1blk_v' is assigned in a continuous assignment at src/volatile_cell_storage.v:58.12-58.127.
Warning: reg '\P2blk_v' is assigned in a continuous assignment at src/volatile_cell_storage.v:59.12-59.127.
Warning: reg '\P3blk_v' is assigned in a continuous assignment at src/volatile_cell_storage.v:60.12-60.127.
Warning: reg '\P4blk_v' is assigned in a continuous assignment at src/volatile_cell_storage.v:61.12-61.127.
Warning: reg '\P1blk_h' is assigned in a continuous assignment at src/volatile_cell_storage.v:63.12-63.127.
Warning: reg '\P2blk_h' is assigned in a continuous assignment at src/volatile_cell_storage.v:64.12-64.127.
Warning: reg '\P3blk_h' is assigned in a continuous assignment at src/volatile_cell_storage.v:65.12-65.127.
Warning: reg '\P4blk_h' is assigned in a continuous assignment at src/volatile_cell_storage.v:66.12-66.127.

20.2.2. Analyzing design hierarchy..
Top module:  \top
Used module:     \VGAcore
Used module:     \gmanager
Used module:         \color_lut
Used module:         \shader
Used module:         \blkoffset_horizontal
Used module:             \offsetmap
Used module:         \blknum_horizontal
Used module:     \cellstorage
Used module:         \tetron_T_shaper
Used module:         \tetron_Lb_shaper
Used module:         \tetron_La_shaper
Used module:         \tetron_O_shaper
Used module:         \tetron_I_shaper
Used module:     \blkmemory
Used module:         \memory
Used module:             \memcell_row
Used module:                 \memcell
Used module:         \shifter
Used module:     \vga_pll
Used module:     \timer

20.2.3. Analyzing design hierarchy..
Top module:  \top
Used module:     \VGAcore
Used module:     \gmanager
Used module:         \color_lut
Used module:         \shader
Used module:         \blkoffset_horizontal
Used module:             \offsetmap
Used module:         \blknum_horizontal
Used module:     \cellstorage
Used module:         \tetron_T_shaper
Used module:         \tetron_Lb_shaper
Used module:         \tetron_La_shaper
Used module:         \tetron_O_shaper
Used module:         \tetron_I_shaper
Used module:     \blkmemory
Used module:         \memory
Used module:             \memcell_row
Used module:                 \memcell
Used module:         \shifter
Used module:     \vga_pll
Used module:     \timer
Removed 0 unused modules.
Warning: Resizing cell port blkmemory.mem.hitbox_checker_3_y from 5 bits to 6 bits.
Warning: Resizing cell port blkmemory.mem.hitbox_checker_3_x from 5 bits to 6 bits.
Warning: Resizing cell port blkmemory.mem.hitbox_checker_2_y from 5 bits to 6 bits.
Warning: Resizing cell port blkmemory.mem.hitbox_checker_2_x from 5 bits to 6 bits.
Warning: Resizing cell port blkmemory.mem.hitbox_checker_1_y from 5 bits to 6 bits.
Warning: Resizing cell port blkmemory.mem.hitbox_checker_1_x from 5 bits to 6 bits.
Warning: Resizing cell port blkmemory.mem.hitbox_checker_0_y from 5 bits to 6 bits.
Warning: Resizing cell port blkmemory.mem.hitbox_checker_0_x from 5 bits to 6 bits.
Warning: Resizing cell port blkmemory.mem.color_requestor_y from 5 bits to 6 bits.
Warning: Resizing cell port blkmemory.mem.color_requestor_x from 5 bits to 6 bits.
Warning: Resizing cell port gmanager.hh.blkid from 5 bits to 6 bits.

20.3. Executing PROC pass (convert processes to netlists).

20.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

20.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 5 switch rules as full_case in process $proc$src/volatile_cell_storage.v:130$1459 in module cellstorage.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1386$1234 in module SB_DFFNES.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1328$1227 in module SB_DFFNESS.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1251$1223 in module SB_DFFNER.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1193$1216 in module SB_DFFNESR.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1122$1213 in module SB_DFFNS.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1072$1210 in module SB_DFFNSS.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1001$1207 in module SB_DFFNR.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:951$1204 in module SB_DFFNSR.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:789$1196 in module SB_DFFES.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:731$1189 in module SB_DFFESS.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:654$1185 in module SB_DFFER.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:596$1178 in module SB_DFFESR.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:525$1175 in module SB_DFFS.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:475$1172 in module SB_DFFSS.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:404$1169 in module SB_DFFR.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:354$1166 in module SB_DFFSR.
Marked 6 switch rules as full_case in process $proc$src/blockmemory.v:96$962 in module blkmemory.
Marked 1 switch rules as full_case in process $proc$src/color_lut.v:8$945 in module color_lut.
Marked 2 switch rules as full_case in process $proc$src/gmanager.v:69$713 in module gmanager.
Marked 1 switch rules as full_case in process $proc$src/tetron_I.v:19$691 in module tetron_I_shaper.
Marked 2 switch rules as full_case in process $proc$src/timer.v:10$564 in module timer.
Marked 1 switch rules as full_case in process $proc$src/vga_core.v:64$548 in module VGAcore.
Marked 2 switch rules as full_case in process $proc$src/meta_memcell.v:22$542 in module memcell.
Marked 1 switch rules as full_case in process $proc$src/tetron_La.v:19$409 in module tetron_La_shaper.
Marked 1 switch rules as full_case in process $proc$src/tetron_Lb.v:19$403 in module tetron_Lb_shaper.
Marked 1 switch rules as full_case in process $proc$src/tetron_O.v:19$401 in module tetron_O_shaper.
Marked 1 switch rules as full_case in process $proc$src/tetron_T.v:19$395 in module tetron_T_shaper.
Removed a total of 0 dead cases.

20.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 26 redundant assignments.
Promoted 116 assignments to connections.

20.3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\SB_DFFNES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1237'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1233'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1226'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1222'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1215'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1212'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1209'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1206'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1203'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFN.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1201'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1199'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1195'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1188'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1184'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1177'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1174'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1171'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1168'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1165'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFF.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1163'.
  Set init value: \Q = 1'0
Found init rule in `\top.$proc$src/top.v:30$699'.
  Set init value: \resetn_gen = 4'0000

20.3.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \S in `\SB_DFFNES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1386$1234'.
Found async reset \R in `\SB_DFFNER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1251$1223'.
Found async reset \S in `\SB_DFFNS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1122$1213'.
Found async reset \R in `\SB_DFFNR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1001$1207'.
Found async reset \S in `\SB_DFFES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:789$1196'.
Found async reset \R in `\SB_DFFER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:654$1185'.
Found async reset \S in `\SB_DFFS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:525$1175'.
Found async reset \R in `\SB_DFFR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:404$1169'.

20.3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1505'.
Creating decoders for process `\cellstorage.$proc$src/volatile_cell_storage.v:130$1459'.
     1/19: $0\buttdebounceR[5:0]
     2/19: $0\buttdebounceT[5:0]
     3/19: $0\buttdebounceL[5:0]
     4/19: $0\state[7:0]
     5/19: $0\process_decline[0:0]
     6/19: $0\process_steal[0:0]
     7/19: $0\postdecline_cool[0:0]
     8/19: $0\cooldown[0:0]
     9/19: $0\movement_available[0:0]
    10/19: $0\tetron_type[3:0]
    11/19: $0\keep_tetron_rotation[2:0]
    12/19: $0\keep_tetron_h[4:0]
    13/19: $0\keep_tetron_v[4:0]
    14/19: $0\tetron_h[4:0]
    15/19: $0\tetron_v[4:0]
    16/19: $0\volatile_blk_color[2:0]
    17/19: $0\movement_intent[0:0]
    18/19: $0\movement_request[0:0]
    19/19: $0\tetron_rotation[2:0]
Creating decoders for process `\SB_DFFNES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1237'.
Creating decoders for process `\SB_DFFNES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1386$1234'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1233'.
Creating decoders for process `\SB_DFFNESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1328$1227'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1226'.
Creating decoders for process `\SB_DFFNER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1251$1223'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1222'.
Creating decoders for process `\SB_DFFNESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1193$1216'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1215'.
Creating decoders for process `\SB_DFFNS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1122$1213'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1212'.
Creating decoders for process `\SB_DFFNSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1072$1210'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1209'.
Creating decoders for process `\SB_DFFNR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1001$1207'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1206'.
Creating decoders for process `\SB_DFFNSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:951$1204'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1203'.
Creating decoders for process `\SB_DFFNE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:906$1202'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFN.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1201'.
Creating decoders for process `\SB_DFFN.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:868$1200'.
Creating decoders for process `\SB_DFFES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1199'.
Creating decoders for process `\SB_DFFES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:789$1196'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1195'.
Creating decoders for process `\SB_DFFESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:731$1189'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1188'.
Creating decoders for process `\SB_DFFER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:654$1185'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1184'.
Creating decoders for process `\SB_DFFESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:596$1178'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1177'.
Creating decoders for process `\SB_DFFS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:525$1175'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1174'.
Creating decoders for process `\SB_DFFSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:475$1172'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1171'.
Creating decoders for process `\SB_DFFR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:404$1169'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1168'.
Creating decoders for process `\SB_DFFSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:354$1166'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1165'.
Creating decoders for process `\SB_DFFE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:309$1164'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFF.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1163'.
Creating decoders for process `\SB_DFF.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:271$1162'.
Creating decoders for process `\blkmemory.$proc$src/blockmemory.v:96$962'.
     1/12: $0\perq[3:0]
     2/12: $0\resetperiod_state[20:0]
     3/12: $0\resetperiod[0:0]
     4/12: $0\stealstatus[3:0]
     5/12: $0\mm_colorsetter_value[2:0]
     6/12: $0\mm_colorsetter_commit[0:0]
     7/12: $0\mm_colosetter_y[5:0]
     8/12: $0\mm_colosetter_x[5:0]
     9/12: $0\proposed_memval[2:0]
    10/12: $0\movement_steal[0:0]
    11/12: $0\movement_commit[0:0]
    12/12: $0\movement_declined[0:0]
Creating decoders for process `\color_lut.$proc$src/color_lut.v:8$945'.
     1/1: $0\color[11:0]
Creating decoders for process `\blknum_horizontal.$proc$src/mod24.v:0$795'.
Creating decoders for process `\gmanager.$proc$src/gmanager.v:69$713'.
     1/4: $2\pixstream[11:0]
     2/4: $2\ipixstream[11:0]
     3/4: $1\ipixstream[11:0]
     4/4: $1\pixstream[11:0]
Creating decoders for process `\top.$proc$src/top.v:30$699'.
Creating decoders for process `\top.$proc$src/top.v:34$697'.
Creating decoders for process `\tetron_I_shaper.$proc$src/tetron_I.v:19$691'.
     1/8: $0\blk4_hoffset[4:0]
     2/8: $0\blk4_voffset[4:0]
     3/8: $0\blk3_hoffset[4:0]
     4/8: $0\blk3_voffset[4:0]
     5/8: $0\blk2_hoffset[4:0]
     6/8: $0\blk2_voffset[4:0]
     7/8: $0\blk1_hoffset[4:0]
     8/8: $0\blk1_voffset[4:0]
Creating decoders for process `\timer.$proc$src/timer.v:10$564'.
     1/2: $0\counter[24:0]
     2/2: $0\trigger[0:0]
Creating decoders for process `\VGAcore.$proc$src/vga_core.v:64$548'.
     1/11: $0\proposed_b[3:0]
     2/11: $0\proposed_g[3:0]
     3/11: $0\proposed_r[3:0]
     4/11: $0\hscan_pos[9:0]
     5/11: $0\v_drawing_pixels[0:0]
     6/11: $0\h_drawing_pixels[0:0]
     7/11: $0\vscan_pos[9:0]
     8/11: $0\vreadwire[9:0]
     9/11: $0\hreadwire[9:0]
    10/11: $0\v_sync[0:0]
    11/11: $0\h_sync[0:0]
Creating decoders for process `\memcell.$proc$src/meta_memcell.v:22$542'.
     1/1: $0\priv_mem[2:0]
Creating decoders for process `\shifter.$proc$src/shifter.v:28$429'.
Creating decoders for process `\tetron_La_shaper.$proc$src/tetron_La.v:19$409'.
     1/8: $0\blk4_hoffset[4:0]
     2/8: $0\blk4_voffset[4:0]
     3/8: $0\blk3_hoffset[4:0]
     4/8: $0\blk3_voffset[4:0]
     5/8: $0\blk2_hoffset[4:0]
     6/8: $0\blk2_voffset[4:0]
     7/8: $0\blk1_hoffset[4:0]
     8/8: $0\blk1_voffset[4:0]
Creating decoders for process `\tetron_Lb_shaper.$proc$src/tetron_Lb.v:19$403'.
     1/8: $0\blk4_hoffset[4:0]
     2/8: $0\blk4_voffset[4:0]
     3/8: $0\blk3_hoffset[4:0]
     4/8: $0\blk3_voffset[4:0]
     5/8: $0\blk2_hoffset[4:0]
     6/8: $0\blk2_voffset[4:0]
     7/8: $0\blk1_hoffset[4:0]
     8/8: $0\blk1_voffset[4:0]
Creating decoders for process `\tetron_O_shaper.$proc$src/tetron_O.v:19$401'.
     1/8: $0\blk4_hoffset[4:0]
     2/8: $0\blk4_voffset[4:0]
     3/8: $0\blk3_hoffset[4:0]
     4/8: $0\blk3_voffset[4:0]
     5/8: $0\blk2_hoffset[4:0]
     6/8: $0\blk2_voffset[4:0]
     7/8: $0\blk1_hoffset[4:0]
     8/8: $0\blk1_voffset[4:0]
Creating decoders for process `\tetron_T_shaper.$proc$src/tetron_T.v:19$395'.
     1/8: $0\blk4_hoffset[4:0]
     2/8: $0\blk4_voffset[4:0]
     3/8: $0\blk3_hoffset[4:0]
     4/8: $0\blk3_voffset[4:0]
     5/8: $0\blk2_hoffset[4:0]
     6/8: $0\blk2_voffset[4:0]
     7/8: $0\blk1_hoffset[4:0]
     8/8: $0\blk1_voffset[4:0]

20.3.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\cellstorage.\itetron_blk_h[0]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1505'.
No latch inferred for signal `\cellstorage.\itetron_blk_h[1]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1505'.
No latch inferred for signal `\cellstorage.\itetron_blk_h[2]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1505'.
No latch inferred for signal `\cellstorage.\itetron_blk_h[3]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1505'.
No latch inferred for signal `\cellstorage.\itetron_blk_v[0]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1505'.
No latch inferred for signal `\cellstorage.\itetron_blk_v[1]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1505'.
No latch inferred for signal `\cellstorage.\itetron_blk_v[2]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1505'.
No latch inferred for signal `\cellstorage.\itetron_blk_v[3]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1505'.
No latch inferred for signal `\cellstorage.\otetron_blk_h[0]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1505'.
No latch inferred for signal `\cellstorage.\otetron_blk_h[1]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1505'.
No latch inferred for signal `\cellstorage.\otetron_blk_h[2]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1505'.
No latch inferred for signal `\cellstorage.\otetron_blk_h[3]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1505'.
No latch inferred for signal `\cellstorage.\otetron_blk_v[0]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1505'.
No latch inferred for signal `\cellstorage.\otetron_blk_v[1]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1505'.
No latch inferred for signal `\cellstorage.\otetron_blk_v[2]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1505'.
No latch inferred for signal `\cellstorage.\otetron_blk_v[3]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1505'.
No latch inferred for signal `\cellstorage.\latetron_blk_h[0]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1505'.
No latch inferred for signal `\cellstorage.\latetron_blk_h[1]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1505'.
No latch inferred for signal `\cellstorage.\latetron_blk_h[2]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1505'.
No latch inferred for signal `\cellstorage.\latetron_blk_h[3]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1505'.
No latch inferred for signal `\cellstorage.\latetron_blk_v[0]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1505'.
No latch inferred for signal `\cellstorage.\latetron_blk_v[1]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1505'.
No latch inferred for signal `\cellstorage.\latetron_blk_v[2]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1505'.
No latch inferred for signal `\cellstorage.\latetron_blk_v[3]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1505'.
No latch inferred for signal `\cellstorage.\lbtetron_blk_h[0]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1505'.
No latch inferred for signal `\cellstorage.\lbtetron_blk_h[1]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1505'.
No latch inferred for signal `\cellstorage.\lbtetron_blk_h[2]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1505'.
No latch inferred for signal `\cellstorage.\lbtetron_blk_h[3]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1505'.
No latch inferred for signal `\cellstorage.\lbtetron_blk_v[0]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1505'.
No latch inferred for signal `\cellstorage.\lbtetron_blk_v[1]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1505'.
No latch inferred for signal `\cellstorage.\lbtetron_blk_v[2]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1505'.
No latch inferred for signal `\cellstorage.\lbtetron_blk_v[3]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1505'.
No latch inferred for signal `\cellstorage.\ttetron_blk_h[0]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1505'.
No latch inferred for signal `\cellstorage.\ttetron_blk_h[1]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1505'.
No latch inferred for signal `\cellstorage.\ttetron_blk_h[2]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1505'.
No latch inferred for signal `\cellstorage.\ttetron_blk_h[3]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1505'.
No latch inferred for signal `\cellstorage.\ttetron_blk_v[0]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1505'.
No latch inferred for signal `\cellstorage.\ttetron_blk_v[1]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1505'.
No latch inferred for signal `\cellstorage.\ttetron_blk_v[2]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1505'.
No latch inferred for signal `\cellstorage.\ttetron_blk_v[3]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1505'.
No latch inferred for signal `\color_lut.\color' from process `\color_lut.$proc$src/color_lut.v:8$945'.
No latch inferred for signal `\blknum_horizontal.\locators[0]' from process `\blknum_horizontal.$proc$src/mod24.v:0$795'.
No latch inferred for signal `\blknum_horizontal.\locators[1]' from process `\blknum_horizontal.$proc$src/mod24.v:0$795'.
No latch inferred for signal `\blknum_horizontal.\locators[2]' from process `\blknum_horizontal.$proc$src/mod24.v:0$795'.
No latch inferred for signal `\blknum_horizontal.\locators[3]' from process `\blknum_horizontal.$proc$src/mod24.v:0$795'.
No latch inferred for signal `\blknum_horizontal.\locators[4]' from process `\blknum_horizontal.$proc$src/mod24.v:0$795'.
No latch inferred for signal `\blknum_horizontal.\locators[5]' from process `\blknum_horizontal.$proc$src/mod24.v:0$795'.
No latch inferred for signal `\blknum_horizontal.\locators[6]' from process `\blknum_horizontal.$proc$src/mod24.v:0$795'.
No latch inferred for signal `\blknum_horizontal.\locators[7]' from process `\blknum_horizontal.$proc$src/mod24.v:0$795'.
No latch inferred for signal `\blknum_horizontal.\locators[8]' from process `\blknum_horizontal.$proc$src/mod24.v:0$795'.
No latch inferred for signal `\blknum_horizontal.\locators[9]' from process `\blknum_horizontal.$proc$src/mod24.v:0$795'.
No latch inferred for signal `\blknum_horizontal.\locators[10]' from process `\blknum_horizontal.$proc$src/mod24.v:0$795'.
No latch inferred for signal `\blknum_horizontal.\locators[11]' from process `\blknum_horizontal.$proc$src/mod24.v:0$795'.
No latch inferred for signal `\blknum_horizontal.\locators[12]' from process `\blknum_horizontal.$proc$src/mod24.v:0$795'.
No latch inferred for signal `\blknum_horizontal.\locators[13]' from process `\blknum_horizontal.$proc$src/mod24.v:0$795'.
No latch inferred for signal `\blknum_horizontal.\locators[14]' from process `\blknum_horizontal.$proc$src/mod24.v:0$795'.
No latch inferred for signal `\blknum_horizontal.\locators[15]' from process `\blknum_horizontal.$proc$src/mod24.v:0$795'.
No latch inferred for signal `\blknum_horizontal.\locators[16]' from process `\blknum_horizontal.$proc$src/mod24.v:0$795'.
No latch inferred for signal `\blknum_horizontal.\locators[17]' from process `\blknum_horizontal.$proc$src/mod24.v:0$795'.
No latch inferred for signal `\blknum_horizontal.\locators[18]' from process `\blknum_horizontal.$proc$src/mod24.v:0$795'.
No latch inferred for signal `\blknum_horizontal.\locators[19]' from process `\blknum_horizontal.$proc$src/mod24.v:0$795'.
No latch inferred for signal `\blknum_horizontal.\locators[20]' from process `\blknum_horizontal.$proc$src/mod24.v:0$795'.
No latch inferred for signal `\blknum_horizontal.\locators[21]' from process `\blknum_horizontal.$proc$src/mod24.v:0$795'.
No latch inferred for signal `\blknum_horizontal.\locators[22]' from process `\blknum_horizontal.$proc$src/mod24.v:0$795'.
No latch inferred for signal `\blknum_horizontal.\locators[23]' from process `\blknum_horizontal.$proc$src/mod24.v:0$795'.

20.3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\cellstorage.\tetron_rotation' using process `\cellstorage.$proc$src/volatile_cell_storage.v:130$1459'.
  created $dff cell `$procdff$2475' with positive edge clock.
Creating register for signal `\cellstorage.\movement_request' using process `\cellstorage.$proc$src/volatile_cell_storage.v:130$1459'.
  created $dff cell `$procdff$2476' with positive edge clock.
Creating register for signal `\cellstorage.\movement_intent' using process `\cellstorage.$proc$src/volatile_cell_storage.v:130$1459'.
  created $dff cell `$procdff$2477' with positive edge clock.
Creating register for signal `\cellstorage.\volatile_blk_color' using process `\cellstorage.$proc$src/volatile_cell_storage.v:130$1459'.
  created $dff cell `$procdff$2478' with positive edge clock.
Creating register for signal `\cellstorage.\tetron_v' using process `\cellstorage.$proc$src/volatile_cell_storage.v:130$1459'.
  created $dff cell `$procdff$2479' with positive edge clock.
Creating register for signal `\cellstorage.\tetron_h' using process `\cellstorage.$proc$src/volatile_cell_storage.v:130$1459'.
  created $dff cell `$procdff$2480' with positive edge clock.
Creating register for signal `\cellstorage.\keep_tetron_v' using process `\cellstorage.$proc$src/volatile_cell_storage.v:130$1459'.
  created $dff cell `$procdff$2481' with positive edge clock.
Creating register for signal `\cellstorage.\keep_tetron_h' using process `\cellstorage.$proc$src/volatile_cell_storage.v:130$1459'.
  created $dff cell `$procdff$2482' with positive edge clock.
Creating register for signal `\cellstorage.\keep_tetron_rotation' using process `\cellstorage.$proc$src/volatile_cell_storage.v:130$1459'.
  created $dff cell `$procdff$2483' with positive edge clock.
Creating register for signal `\cellstorage.\tetron_type' using process `\cellstorage.$proc$src/volatile_cell_storage.v:130$1459'.
  created $dff cell `$procdff$2484' with positive edge clock.
Creating register for signal `\cellstorage.\movement_available' using process `\cellstorage.$proc$src/volatile_cell_storage.v:130$1459'.
  created $dff cell `$procdff$2485' with positive edge clock.
Creating register for signal `\cellstorage.\cooldown' using process `\cellstorage.$proc$src/volatile_cell_storage.v:130$1459'.
  created $dff cell `$procdff$2486' with positive edge clock.
Creating register for signal `\cellstorage.\postdecline_cool' using process `\cellstorage.$proc$src/volatile_cell_storage.v:130$1459'.
  created $dff cell `$procdff$2487' with positive edge clock.
Creating register for signal `\cellstorage.\process_steal' using process `\cellstorage.$proc$src/volatile_cell_storage.v:130$1459'.
  created $dff cell `$procdff$2488' with positive edge clock.
Creating register for signal `\cellstorage.\state' using process `\cellstorage.$proc$src/volatile_cell_storage.v:130$1459'.
  created $dff cell `$procdff$2489' with positive edge clock.
Creating register for signal `\cellstorage.\buttdebounceL' using process `\cellstorage.$proc$src/volatile_cell_storage.v:130$1459'.
  created $dff cell `$procdff$2490' with positive edge clock.
Creating register for signal `\cellstorage.\buttdebounceR' using process `\cellstorage.$proc$src/volatile_cell_storage.v:130$1459'.
  created $dff cell `$procdff$2491' with positive edge clock.
Creating register for signal `\cellstorage.\buttdebounceT' using process `\cellstorage.$proc$src/volatile_cell_storage.v:130$1459'.
  created $dff cell `$procdff$2492' with positive edge clock.
Creating register for signal `\cellstorage.\process_decline' using process `\cellstorage.$proc$src/volatile_cell_storage.v:130$1459'.
  created $dff cell `$procdff$2493' with positive edge clock.
Creating register for signal `\SB_DFFNES.\Q' using process `\SB_DFFNES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1386$1234'.
  created $adff cell `$procdff$2494' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESS.\Q' using process `\SB_DFFNESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1328$1227'.
  created $dff cell `$procdff$2495' with negative edge clock.
Creating register for signal `\SB_DFFNER.\Q' using process `\SB_DFFNER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1251$1223'.
  created $adff cell `$procdff$2496' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESR.\Q' using process `\SB_DFFNESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1193$1216'.
  created $dff cell `$procdff$2497' with negative edge clock.
Creating register for signal `\SB_DFFNS.\Q' using process `\SB_DFFNS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1122$1213'.
  created $adff cell `$procdff$2498' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSS.\Q' using process `\SB_DFFNSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1072$1210'.
  created $dff cell `$procdff$2499' with negative edge clock.
Creating register for signal `\SB_DFFNR.\Q' using process `\SB_DFFNR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1001$1207'.
  created $adff cell `$procdff$2500' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSR.\Q' using process `\SB_DFFNSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:951$1204'.
  created $dff cell `$procdff$2501' with negative edge clock.
Creating register for signal `\SB_DFFNE.\Q' using process `\SB_DFFNE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:906$1202'.
  created $dff cell `$procdff$2502' with negative edge clock.
Creating register for signal `\SB_DFFN.\Q' using process `\SB_DFFN.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:868$1200'.
  created $dff cell `$procdff$2503' with negative edge clock.
Creating register for signal `\SB_DFFES.\Q' using process `\SB_DFFES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:789$1196'.
  created $adff cell `$procdff$2504' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESS.\Q' using process `\SB_DFFESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:731$1189'.
  created $dff cell `$procdff$2505' with positive edge clock.
Creating register for signal `\SB_DFFER.\Q' using process `\SB_DFFER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:654$1185'.
  created $adff cell `$procdff$2506' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESR.\Q' using process `\SB_DFFESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:596$1178'.
  created $dff cell `$procdff$2507' with positive edge clock.
Creating register for signal `\SB_DFFS.\Q' using process `\SB_DFFS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:525$1175'.
  created $adff cell `$procdff$2508' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSS.\Q' using process `\SB_DFFSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:475$1172'.
  created $dff cell `$procdff$2509' with positive edge clock.
Creating register for signal `\SB_DFFR.\Q' using process `\SB_DFFR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:404$1169'.
  created $adff cell `$procdff$2510' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSR.\Q' using process `\SB_DFFSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:354$1166'.
  created $dff cell `$procdff$2511' with positive edge clock.
Creating register for signal `\SB_DFFE.\Q' using process `\SB_DFFE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:309$1164'.
  created $dff cell `$procdff$2512' with positive edge clock.
Creating register for signal `\SB_DFF.\Q' using process `\SB_DFF.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:271$1162'.
  created $dff cell `$procdff$2513' with positive edge clock.
Creating register for signal `\blkmemory.\movement_declined' using process `\blkmemory.$proc$src/blockmemory.v:96$962'.
  created $dff cell `$procdff$2514' with positive edge clock.
Creating register for signal `\blkmemory.\movement_commit' using process `\blkmemory.$proc$src/blockmemory.v:96$962'.
  created $dff cell `$procdff$2515' with positive edge clock.
Creating register for signal `\blkmemory.\movement_steal' using process `\blkmemory.$proc$src/blockmemory.v:96$962'.
  created $dff cell `$procdff$2516' with positive edge clock.
Creating register for signal `\blkmemory.\proposed_memval' using process `\blkmemory.$proc$src/blockmemory.v:96$962'.
  created $dff cell `$procdff$2517' with positive edge clock.
Creating register for signal `\blkmemory.\mm_colosetter_x' using process `\blkmemory.$proc$src/blockmemory.v:96$962'.
  created $dff cell `$procdff$2518' with positive edge clock.
Creating register for signal `\blkmemory.\mm_colosetter_y' using process `\blkmemory.$proc$src/blockmemory.v:96$962'.
  created $dff cell `$procdff$2519' with positive edge clock.
Creating register for signal `\blkmemory.\mm_colorsetter_commit' using process `\blkmemory.$proc$src/blockmemory.v:96$962'.
  created $dff cell `$procdff$2520' with positive edge clock.
Creating register for signal `\blkmemory.\mm_colorsetter_value' using process `\blkmemory.$proc$src/blockmemory.v:96$962'.
  created $dff cell `$procdff$2521' with positive edge clock.
Creating register for signal `\blkmemory.\stealstatus' using process `\blkmemory.$proc$src/blockmemory.v:96$962'.
  created $dff cell `$procdff$2522' with positive edge clock.
Creating register for signal `\blkmemory.\resetperiod' using process `\blkmemory.$proc$src/blockmemory.v:96$962'.
  created $dff cell `$procdff$2523' with positive edge clock.
Creating register for signal `\blkmemory.\resetperiod_state' using process `\blkmemory.$proc$src/blockmemory.v:96$962'.
  created $dff cell `$procdff$2524' with positive edge clock.
Creating register for signal `\blkmemory.\perq' using process `\blkmemory.$proc$src/blockmemory.v:96$962'.
  created $dff cell `$procdff$2525' with positive edge clock.
Creating register for signal `\gmanager.\pixstream' using process `\gmanager.$proc$src/gmanager.v:69$713'.
  created $dff cell `$procdff$2526' with positive edge clock.
Creating register for signal `\gmanager.\ipixstream' using process `\gmanager.$proc$src/gmanager.v:69$713'.
  created $dff cell `$procdff$2527' with positive edge clock.
Creating register for signal `\top.\reset' using process `\top.$proc$src/top.v:34$697'.
  created $dff cell `$procdff$2528' with positive edge clock.
Creating register for signal `\top.\resetn_gen' using process `\top.$proc$src/top.v:34$697'.
  created $dff cell `$procdff$2529' with positive edge clock.
Creating register for signal `\tetron_I_shaper.\blk1_voffset' using process `\tetron_I_shaper.$proc$src/tetron_I.v:19$691'.
  created $dff cell `$procdff$2530' with positive edge clock.
Creating register for signal `\tetron_I_shaper.\blk1_hoffset' using process `\tetron_I_shaper.$proc$src/tetron_I.v:19$691'.
  created $dff cell `$procdff$2531' with positive edge clock.
Creating register for signal `\tetron_I_shaper.\blk2_voffset' using process `\tetron_I_shaper.$proc$src/tetron_I.v:19$691'.
  created $dff cell `$procdff$2532' with positive edge clock.
Creating register for signal `\tetron_I_shaper.\blk2_hoffset' using process `\tetron_I_shaper.$proc$src/tetron_I.v:19$691'.
  created $dff cell `$procdff$2533' with positive edge clock.
Creating register for signal `\tetron_I_shaper.\blk3_voffset' using process `\tetron_I_shaper.$proc$src/tetron_I.v:19$691'.
  created $dff cell `$procdff$2534' with positive edge clock.
Creating register for signal `\tetron_I_shaper.\blk3_hoffset' using process `\tetron_I_shaper.$proc$src/tetron_I.v:19$691'.
  created $dff cell `$procdff$2535' with positive edge clock.
Creating register for signal `\tetron_I_shaper.\blk4_voffset' using process `\tetron_I_shaper.$proc$src/tetron_I.v:19$691'.
  created $dff cell `$procdff$2536' with positive edge clock.
Creating register for signal `\tetron_I_shaper.\blk4_hoffset' using process `\tetron_I_shaper.$proc$src/tetron_I.v:19$691'.
  created $dff cell `$procdff$2537' with positive edge clock.
Creating register for signal `\timer.\trigger' using process `\timer.$proc$src/timer.v:10$564'.
  created $dff cell `$procdff$2538' with positive edge clock.
Creating register for signal `\timer.\counter' using process `\timer.$proc$src/timer.v:10$564'.
  created $dff cell `$procdff$2539' with positive edge clock.
Creating register for signal `\VGAcore.\h_sync' using process `\VGAcore.$proc$src/vga_core.v:64$548'.
  created $dff cell `$procdff$2540' with positive edge clock.
Creating register for signal `\VGAcore.\v_sync' using process `\VGAcore.$proc$src/vga_core.v:64$548'.
  created $dff cell `$procdff$2541' with positive edge clock.
Creating register for signal `\VGAcore.\hreadwire' using process `\VGAcore.$proc$src/vga_core.v:64$548'.
  created $dff cell `$procdff$2542' with positive edge clock.
Creating register for signal `\VGAcore.\vreadwire' using process `\VGAcore.$proc$src/vga_core.v:64$548'.
  created $dff cell `$procdff$2543' with positive edge clock.
Creating register for signal `\VGAcore.\hscan_pos' using process `\VGAcore.$proc$src/vga_core.v:64$548'.
  created $dff cell `$procdff$2544' with positive edge clock.
Creating register for signal `\VGAcore.\vscan_pos' using process `\VGAcore.$proc$src/vga_core.v:64$548'.
  created $dff cell `$procdff$2545' with positive edge clock.
Creating register for signal `\VGAcore.\proposed_r' using process `\VGAcore.$proc$src/vga_core.v:64$548'.
  created $dff cell `$procdff$2546' with positive edge clock.
Creating register for signal `\VGAcore.\proposed_b' using process `\VGAcore.$proc$src/vga_core.v:64$548'.
  created $dff cell `$procdff$2547' with positive edge clock.
Creating register for signal `\VGAcore.\proposed_g' using process `\VGAcore.$proc$src/vga_core.v:64$548'.
  created $dff cell `$procdff$2548' with positive edge clock.
Creating register for signal `\VGAcore.\h_drawing_pixels' using process `\VGAcore.$proc$src/vga_core.v:64$548'.
  created $dff cell `$procdff$2549' with positive edge clock.
Creating register for signal `\VGAcore.\v_drawing_pixels' using process `\VGAcore.$proc$src/vga_core.v:64$548'.
  created $dff cell `$procdff$2550' with positive edge clock.
Creating register for signal `\memcell.\priv_mem' using process `\memcell.$proc$src/meta_memcell.v:22$542'.
  created $dff cell `$procdff$2551' with positive edge clock.
Creating register for signal `\shifter.\rowshift' using process `\shifter.$proc$src/shifter.v:28$429'.
  created $dff cell `$procdff$2552' with positive edge clock.
Creating register for signal `\shifter.\debugled' using process `\shifter.$proc$src/shifter.v:28$429'.
  created $dff cell `$procdff$2553' with positive edge clock.
Creating register for signal `\shifter.\totp' using process `\shifter.$proc$src/shifter.v:28$429'.
  created $dff cell `$procdff$2554' with positive edge clock.
Creating register for signal `\tetron_La_shaper.\blk1_voffset' using process `\tetron_La_shaper.$proc$src/tetron_La.v:19$409'.
  created $dff cell `$procdff$2555' with positive edge clock.
Creating register for signal `\tetron_La_shaper.\blk1_hoffset' using process `\tetron_La_shaper.$proc$src/tetron_La.v:19$409'.
  created $dff cell `$procdff$2556' with positive edge clock.
Creating register for signal `\tetron_La_shaper.\blk2_voffset' using process `\tetron_La_shaper.$proc$src/tetron_La.v:19$409'.
  created $dff cell `$procdff$2557' with positive edge clock.
Creating register for signal `\tetron_La_shaper.\blk2_hoffset' using process `\tetron_La_shaper.$proc$src/tetron_La.v:19$409'.
  created $dff cell `$procdff$2558' with positive edge clock.
Creating register for signal `\tetron_La_shaper.\blk3_voffset' using process `\tetron_La_shaper.$proc$src/tetron_La.v:19$409'.
  created $dff cell `$procdff$2559' with positive edge clock.
Creating register for signal `\tetron_La_shaper.\blk3_hoffset' using process `\tetron_La_shaper.$proc$src/tetron_La.v:19$409'.
  created $dff cell `$procdff$2560' with positive edge clock.
Creating register for signal `\tetron_La_shaper.\blk4_voffset' using process `\tetron_La_shaper.$proc$src/tetron_La.v:19$409'.
  created $dff cell `$procdff$2561' with positive edge clock.
Creating register for signal `\tetron_La_shaper.\blk4_hoffset' using process `\tetron_La_shaper.$proc$src/tetron_La.v:19$409'.
  created $dff cell `$procdff$2562' with positive edge clock.
Creating register for signal `\tetron_Lb_shaper.\blk1_voffset' using process `\tetron_Lb_shaper.$proc$src/tetron_Lb.v:19$403'.
  created $dff cell `$procdff$2563' with positive edge clock.
Creating register for signal `\tetron_Lb_shaper.\blk1_hoffset' using process `\tetron_Lb_shaper.$proc$src/tetron_Lb.v:19$403'.
  created $dff cell `$procdff$2564' with positive edge clock.
Creating register for signal `\tetron_Lb_shaper.\blk2_voffset' using process `\tetron_Lb_shaper.$proc$src/tetron_Lb.v:19$403'.
  created $dff cell `$procdff$2565' with positive edge clock.
Creating register for signal `\tetron_Lb_shaper.\blk2_hoffset' using process `\tetron_Lb_shaper.$proc$src/tetron_Lb.v:19$403'.
  created $dff cell `$procdff$2566' with positive edge clock.
Creating register for signal `\tetron_Lb_shaper.\blk3_voffset' using process `\tetron_Lb_shaper.$proc$src/tetron_Lb.v:19$403'.
  created $dff cell `$procdff$2567' with positive edge clock.
Creating register for signal `\tetron_Lb_shaper.\blk3_hoffset' using process `\tetron_Lb_shaper.$proc$src/tetron_Lb.v:19$403'.
  created $dff cell `$procdff$2568' with positive edge clock.
Creating register for signal `\tetron_Lb_shaper.\blk4_voffset' using process `\tetron_Lb_shaper.$proc$src/tetron_Lb.v:19$403'.
  created $dff cell `$procdff$2569' with positive edge clock.
Creating register for signal `\tetron_Lb_shaper.\blk4_hoffset' using process `\tetron_Lb_shaper.$proc$src/tetron_Lb.v:19$403'.
  created $dff cell `$procdff$2570' with positive edge clock.
Creating register for signal `\tetron_O_shaper.\blk1_voffset' using process `\tetron_O_shaper.$proc$src/tetron_O.v:19$401'.
  created $dff cell `$procdff$2571' with positive edge clock.
Creating register for signal `\tetron_O_shaper.\blk1_hoffset' using process `\tetron_O_shaper.$proc$src/tetron_O.v:19$401'.
  created $dff cell `$procdff$2572' with positive edge clock.
Creating register for signal `\tetron_O_shaper.\blk2_voffset' using process `\tetron_O_shaper.$proc$src/tetron_O.v:19$401'.
  created $dff cell `$procdff$2573' with positive edge clock.
Creating register for signal `\tetron_O_shaper.\blk2_hoffset' using process `\tetron_O_shaper.$proc$src/tetron_O.v:19$401'.
  created $dff cell `$procdff$2574' with positive edge clock.
Creating register for signal `\tetron_O_shaper.\blk3_voffset' using process `\tetron_O_shaper.$proc$src/tetron_O.v:19$401'.
  created $dff cell `$procdff$2575' with positive edge clock.
Creating register for signal `\tetron_O_shaper.\blk3_hoffset' using process `\tetron_O_shaper.$proc$src/tetron_O.v:19$401'.
  created $dff cell `$procdff$2576' with positive edge clock.
Creating register for signal `\tetron_O_shaper.\blk4_voffset' using process `\tetron_O_shaper.$proc$src/tetron_O.v:19$401'.
  created $dff cell `$procdff$2577' with positive edge clock.
Creating register for signal `\tetron_O_shaper.\blk4_hoffset' using process `\tetron_O_shaper.$proc$src/tetron_O.v:19$401'.
  created $dff cell `$procdff$2578' with positive edge clock.
Creating register for signal `\tetron_T_shaper.\blk1_voffset' using process `\tetron_T_shaper.$proc$src/tetron_T.v:19$395'.
  created $dff cell `$procdff$2579' with positive edge clock.
Creating register for signal `\tetron_T_shaper.\blk1_hoffset' using process `\tetron_T_shaper.$proc$src/tetron_T.v:19$395'.
  created $dff cell `$procdff$2580' with positive edge clock.
Creating register for signal `\tetron_T_shaper.\blk2_voffset' using process `\tetron_T_shaper.$proc$src/tetron_T.v:19$395'.
  created $dff cell `$procdff$2581' with positive edge clock.
Creating register for signal `\tetron_T_shaper.\blk2_hoffset' using process `\tetron_T_shaper.$proc$src/tetron_T.v:19$395'.
  created $dff cell `$procdff$2582' with positive edge clock.
Creating register for signal `\tetron_T_shaper.\blk3_voffset' using process `\tetron_T_shaper.$proc$src/tetron_T.v:19$395'.
  created $dff cell `$procdff$2583' with positive edge clock.
Creating register for signal `\tetron_T_shaper.\blk3_hoffset' using process `\tetron_T_shaper.$proc$src/tetron_T.v:19$395'.
  created $dff cell `$procdff$2584' with positive edge clock.
Creating register for signal `\tetron_T_shaper.\blk4_voffset' using process `\tetron_T_shaper.$proc$src/tetron_T.v:19$395'.
  created $dff cell `$procdff$2585' with positive edge clock.
Creating register for signal `\tetron_T_shaper.\blk4_hoffset' using process `\tetron_T_shaper.$proc$src/tetron_T.v:19$395'.
  created $dff cell `$procdff$2586' with positive edge clock.

20.3.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

20.3.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `cellstorage.$proc$src/volatile_cell_storage.v:0$1505'.
Found and cleaned up 12 empty switches in `\cellstorage.$proc$src/volatile_cell_storage.v:130$1459'.
Removing empty process `cellstorage.$proc$src/volatile_cell_storage.v:130$1459'.
Removing empty process `SB_DFFNES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1237'.
Found and cleaned up 1 empty switch in `\SB_DFFNES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1386$1234'.
Removing empty process `SB_DFFNES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1386$1234'.
Removing empty process `SB_DFFNESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1233'.
Found and cleaned up 2 empty switches in `\SB_DFFNESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1328$1227'.
Removing empty process `SB_DFFNESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1328$1227'.
Removing empty process `SB_DFFNER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1226'.
Found and cleaned up 1 empty switch in `\SB_DFFNER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1251$1223'.
Removing empty process `SB_DFFNER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1251$1223'.
Removing empty process `SB_DFFNESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1222'.
Found and cleaned up 2 empty switches in `\SB_DFFNESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1193$1216'.
Removing empty process `SB_DFFNESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1193$1216'.
Removing empty process `SB_DFFNS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1215'.
Removing empty process `SB_DFFNS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1122$1213'.
Removing empty process `SB_DFFNSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1212'.
Found and cleaned up 1 empty switch in `\SB_DFFNSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1072$1210'.
Removing empty process `SB_DFFNSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1072$1210'.
Removing empty process `SB_DFFNR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1209'.
Removing empty process `SB_DFFNR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1001$1207'.
Removing empty process `SB_DFFNSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1206'.
Found and cleaned up 1 empty switch in `\SB_DFFNSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:951$1204'.
Removing empty process `SB_DFFNSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:951$1204'.
Removing empty process `SB_DFFNE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1203'.
Found and cleaned up 1 empty switch in `\SB_DFFNE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:906$1202'.
Removing empty process `SB_DFFNE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:906$1202'.
Removing empty process `SB_DFFN.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1201'.
Removing empty process `SB_DFFN.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:868$1200'.
Removing empty process `SB_DFFES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1199'.
Found and cleaned up 1 empty switch in `\SB_DFFES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:789$1196'.
Removing empty process `SB_DFFES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:789$1196'.
Removing empty process `SB_DFFESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1195'.
Found and cleaned up 2 empty switches in `\SB_DFFESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:731$1189'.
Removing empty process `SB_DFFESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:731$1189'.
Removing empty process `SB_DFFER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1188'.
Found and cleaned up 1 empty switch in `\SB_DFFER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:654$1185'.
Removing empty process `SB_DFFER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:654$1185'.
Removing empty process `SB_DFFESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1184'.
Found and cleaned up 2 empty switches in `\SB_DFFESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:596$1178'.
Removing empty process `SB_DFFESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:596$1178'.
Removing empty process `SB_DFFS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1177'.
Removing empty process `SB_DFFS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:525$1175'.
Removing empty process `SB_DFFSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1174'.
Found and cleaned up 1 empty switch in `\SB_DFFSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:475$1172'.
Removing empty process `SB_DFFSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:475$1172'.
Removing empty process `SB_DFFR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1171'.
Removing empty process `SB_DFFR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:404$1169'.
Removing empty process `SB_DFFSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1168'.
Found and cleaned up 1 empty switch in `\SB_DFFSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:354$1166'.
Removing empty process `SB_DFFSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:354$1166'.
Removing empty process `SB_DFFE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1165'.
Found and cleaned up 1 empty switch in `\SB_DFFE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:309$1164'.
Removing empty process `SB_DFFE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:309$1164'.
Removing empty process `SB_DFF.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1163'.
Removing empty process `SB_DFF.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:271$1162'.
Found and cleaned up 18 empty switches in `\blkmemory.$proc$src/blockmemory.v:96$962'.
Removing empty process `blkmemory.$proc$src/blockmemory.v:96$962'.
Found and cleaned up 1 empty switch in `\color_lut.$proc$src/color_lut.v:8$945'.
Removing empty process `color_lut.$proc$src/color_lut.v:8$945'.
Removing empty process `blknum_horizontal.$proc$src/mod24.v:0$795'.
Found and cleaned up 3 empty switches in `\gmanager.$proc$src/gmanager.v:69$713'.
Removing empty process `gmanager.$proc$src/gmanager.v:69$713'.
Removing empty process `top.$proc$src/top.v:30$699'.
Removing empty process `top.$proc$src/top.v:34$697'.
Found and cleaned up 5 empty switches in `\tetron_I_shaper.$proc$src/tetron_I.v:19$691'.
Removing empty process `tetron_I_shaper.$proc$src/tetron_I.v:19$691'.
Found and cleaned up 2 empty switches in `\timer.$proc$src/timer.v:10$564'.
Removing empty process `timer.$proc$src/timer.v:10$564'.
Found and cleaned up 3 empty switches in `\VGAcore.$proc$src/vga_core.v:64$548'.
Removing empty process `VGAcore.$proc$src/vga_core.v:64$548'.
Found and cleaned up 3 empty switches in `\memcell.$proc$src/meta_memcell.v:22$542'.
Removing empty process `memcell.$proc$src/meta_memcell.v:22$542'.
Removing empty process `shifter.$proc$src/shifter.v:28$429'.
Found and cleaned up 5 empty switches in `\tetron_La_shaper.$proc$src/tetron_La.v:19$409'.
Removing empty process `tetron_La_shaper.$proc$src/tetron_La.v:19$409'.
Found and cleaned up 5 empty switches in `\tetron_Lb_shaper.$proc$src/tetron_Lb.v:19$403'.
Removing empty process `tetron_Lb_shaper.$proc$src/tetron_Lb.v:19$403'.
Found and cleaned up 1 empty switch in `\tetron_O_shaper.$proc$src/tetron_O.v:19$401'.
Removing empty process `tetron_O_shaper.$proc$src/tetron_O.v:19$401'.
Found and cleaned up 5 empty switches in `\tetron_T_shaper.$proc$src/tetron_T.v:19$395'.
Removing empty process `tetron_T_shaper.$proc$src/tetron_T.v:19$395'.
Cleaned up 81 empty switches.

20.3.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module cellstorage.
<suppressed ~21 debug messages>
Optimizing module blkmemory.
<suppressed ~15 debug messages>
Optimizing module color_lut.
<suppressed ~1 debug messages>
Optimizing module blkoffset_horizontal.
Optimizing module offsetmap.
<suppressed ~1 debug messages>
Optimizing module blknum_horizontal.
<suppressed ~1 debug messages>
Optimizing module shader.
<suppressed ~1 debug messages>
Optimizing module gmanager.
<suppressed ~5 debug messages>
Optimizing module top.
Optimizing module tetron_I_shaper.
<suppressed ~9 debug messages>
Optimizing module vga_pll.
Optimizing module timer.
<suppressed ~2 debug messages>
Optimizing module VGAcore.
<suppressed ~11 debug messages>
Optimizing module memcell.
<suppressed ~2 debug messages>
Optimizing module memcell_row.
<suppressed ~14 debug messages>
Optimizing module shifter.
<suppressed ~15 debug messages>
Optimizing module tetron_La_shaper.
<suppressed ~9 debug messages>
Optimizing module tetron_Lb_shaper.
<suppressed ~9 debug messages>
Optimizing module tetron_O_shaper.
<suppressed ~4 debug messages>
Optimizing module tetron_T_shaper.
<suppressed ~9 debug messages>
Optimizing module memory.
<suppressed ~48 debug messages>

20.4. Executing FLATTEN pass (flatten design).
Deleting now unused module cellstorage.
Deleting now unused module blkmemory.
Deleting now unused module color_lut.
Deleting now unused module blkoffset_horizontal.
Deleting now unused module offsetmap.
Deleting now unused module blknum_horizontal.
Deleting now unused module shader.
Deleting now unused module gmanager.
Deleting now unused module tetron_I_shaper.
Deleting now unused module vga_pll.
Deleting now unused module timer.
Deleting now unused module VGAcore.
Deleting now unused module memcell.
Deleting now unused module memcell_row.
Deleting now unused module shifter.
Deleting now unused module tetron_La_shaper.
Deleting now unused module tetron_Lb_shaper.
Deleting now unused module tetron_O_shaper.
Deleting now unused module tetron_T_shaper.
Deleting now unused module memory.
<suppressed ~51 debug messages>

20.5. Executing TRIBUF pass.

20.6. Executing DEMINOUT pass (demote inout ports to input or output).

20.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~73 debug messages>

20.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 287 unused cells and 2990 unused wires.
<suppressed ~324 debug messages>

20.9. Executing CHECK pass (checking for obvious problems).
Checking module top...
Warning: Wire top.\led2 is used but has no driver.
Warning: Wire top.\memory.mem.rowfull_stat [21] is used but has no driver.
Warning: Wire top.\memory.mem.rowfull_stat [22] is used but has no driver.
Found and reported 3 problems.

20.10. Executing OPT pass (performing simple optimizations).

20.10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~1 debug messages>

20.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~1545 debug messages>
Removed a total of 515 cells.

20.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $flatten\memory.$procmux$1791: \memory.resetperiod -> 1'0
      Replacing known input bits on port A of cell $flatten\memory.$procmux$1789: \memory.resetperiod -> 1'1
      Replacing known input bits on port A of cell $flatten\vcell.$procmux$1567: \vcell.movement_available -> 1'1
      Replacing known input bits on port A of cell $flatten\vcell.$procmux$1560: \vcell.movement_available -> 1'0
  Analyzing evaluation results.
    dead port 2/2 on $mux $flatten\game_manager.$procmux$2025.
    dead port 2/2 on $mux $flatten\game_manager.$procmux$2028.
    dead port 2/2 on $mux $flatten\game_manager.$procmux$2034.
Removed 3 multiplexer ports.
<suppressed ~732 debug messages>

20.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

20.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~18 debug messages>
Removed a total of 6 cells.

20.10.6. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $flatten\vcell.\oshaper.$procdff$2571 ($dff) from module top.
Setting constant 0-bit at position 1 on $flatten\vcell.\oshaper.$procdff$2571 ($dff) from module top.
Setting constant 0-bit at position 2 on $flatten\vcell.\oshaper.$procdff$2571 ($dff) from module top.
Setting constant 0-bit at position 3 on $flatten\vcell.\oshaper.$procdff$2571 ($dff) from module top.
Setting constant 0-bit at position 4 on $flatten\vcell.\oshaper.$procdff$2571 ($dff) from module top.

20.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 553 unused wires.
<suppressed ~35 debug messages>

20.10.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~4 debug messages>

20.10.9. Rerunning OPT passes. (Maybe there is more to do..)

20.10.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~729 debug messages>

20.10.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

20.10.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

20.10.13. Executing OPT_DFF pass (perform DFF optimizations).

20.10.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 4 unused wires.
<suppressed ~5 debug messages>

20.10.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

20.10.16. Rerunning OPT passes. (Maybe there is more to do..)

20.10.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~729 debug messages>

20.10.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

20.10.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

20.10.20. Executing OPT_DFF pass (perform DFF optimizations).

20.10.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

20.10.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

20.10.23. Finished OPT passes. (There is nothing left to do.)

20.11. Executing FSM pass (extract and optimize FSM).

20.11.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking top.game_manager.ipixstream as FSM state register:
    Users of register don't seem to benefit from recoding.
Found FSM state register top.memory.stealstatus.
Not marking top.vcell.ishaper.blk1_hoffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.ishaper.blk1_voffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.ishaper.blk2_hoffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.ishaper.blk2_voffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.ishaper.blk3_hoffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.ishaper.blk3_voffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.ishaper.blk4_hoffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.ishaper.blk4_voffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.lashaper.blk1_hoffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.lashaper.blk1_voffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.lashaper.blk2_hoffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.lashaper.blk2_voffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.lashaper.blk3_hoffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.lashaper.blk3_voffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.lashaper.blk4_hoffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.lashaper.blk4_voffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.lbshaper.blk1_hoffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.lbshaper.blk1_voffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.lbshaper.blk2_hoffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.lbshaper.blk2_voffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.lbshaper.blk3_hoffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.lbshaper.blk3_voffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.lbshaper.blk4_hoffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.lbshaper.blk4_voffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.oshaper.blk2_voffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.tshaper.blk1_hoffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.tshaper.blk1_voffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.tshaper.blk2_hoffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.tshaper.blk2_voffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.tshaper.blk3_hoffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.tshaper.blk3_voffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.tshaper.blk4_hoffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.tshaper.blk4_voffset as FSM state register:
    Users of register don't seem to benefit from recoding.

20.11.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\memory.stealstatus' from module `\top'.
  found $dff cell for state register: $flatten\memory.$procdff$2522
  root of input selection tree: $flatten\memory.$0\stealstatus[3:0]
  found reset state: 4'0000 (guessed from mux tree)
  found ctrl input: \reset
  found state code: 4'0000
  found ctrl input: \memory.resetperiod
  found ctrl input: $flatten\memory.$gt$src/blockmemory.v:142$980_Y
  found ctrl input: $flatten\memory.$and$src/blockmemory.v:133$978_Y
  found ctrl input: $flatten\memory.$eq$src/blockmemory.v:133$977_Y
  found ctrl input: $flatten\memory.$eq$src/blockmemory.v:143$981_Y
  found ctrl input: $flatten\memory.$procmux$1817_CMP
  found ctrl input: \vcell.movement_intent
  found ctrl input: $flatten\memory.$eq$src/blockmemory.v:181$991_Y
  found ctrl input: $flatten\memory.$eq$src/blockmemory.v:173$989_Y
  found ctrl input: $flatten\memory.$eq$src/blockmemory.v:165$987_Y
  found ctrl input: $flatten\memory.$eq$src/blockmemory.v:157$985_Y
  found ctrl input: $flatten\memory.$eq$src/blockmemory.v:149$983_Y
  found state code: 4'0001
  found state code: 4'0010
  found state code: 4'0011
  found state code: 4'0100
  found state code: 4'0101
  found ctrl output: $flatten\memory.$eq$src/blockmemory.v:186$992_Y
  found ctrl output: $flatten\memory.$eq$src/blockmemory.v:181$991_Y
  found ctrl output: $flatten\memory.$eq$src/blockmemory.v:173$989_Y
  found ctrl output: $flatten\memory.$eq$src/blockmemory.v:165$987_Y
  found ctrl output: $flatten\memory.$eq$src/blockmemory.v:157$985_Y
  found ctrl output: $flatten\memory.$eq$src/blockmemory.v:149$983_Y
  ctrl inputs: { \vcell.movement_intent \memory.resetperiod $flatten\memory.$eq$src/blockmemory.v:133$977_Y $flatten\memory.$and$src/blockmemory.v:133$978_Y $flatten\memory.$gt$src/blockmemory.v:142$980_Y $flatten\memory.$eq$src/blockmemory.v:143$981_Y $flatten\memory.$procmux$1817_CMP \reset }
  ctrl outputs: { $flatten\memory.$0\stealstatus[3:0] $flatten\memory.$eq$src/blockmemory.v:149$983_Y $flatten\memory.$eq$src/blockmemory.v:157$985_Y $flatten\memory.$eq$src/blockmemory.v:165$987_Y $flatten\memory.$eq$src/blockmemory.v:173$989_Y $flatten\memory.$eq$src/blockmemory.v:181$991_Y $flatten\memory.$eq$src/blockmemory.v:186$992_Y }
  transition:     4'0000 8'-------0 ->     4'0000 10'0000100000
  transition:     4'0000 8'-0000--1 ->     4'0000 10'0000100000
  transition:     4'0000 8'-0100--1 ->     4'0000 10'0000100000
  transition:     4'0000 8'-0-10--1 ->     4'0000 10'0000100000
  transition:     4'0000 8'-00010-1 ->     4'0000 10'0000100000
  transition:     4'0000 8'-01010-1 ->     4'0000 10'0000100000
  transition:     4'0000 8'-0-110-1 ->     4'0000 10'0000100000
  transition:     4'0000 8'-0001101 ->     4'0000 10'0000100000
  transition:     4'0000 8'-0101101 ->     4'0000 10'0000100000
  transition:     4'0000 8'-0-11101 ->     4'0000 10'0000100000
  transition:     4'0000 8'00--1111 ->     4'0001 10'0001100000
  transition:     4'0000 8'10001111 ->     4'0000 10'0000100000
  transition:     4'0000 8'10101111 ->     4'0000 10'0000100000
  transition:     4'0000 8'10-11111 ->     4'0000 10'0000100000
  transition:     4'0000 8'-1-----1 ->     4'0000 10'0000100000
  transition:     4'0100 8'-------0 ->     4'0000 10'0000000010
  transition:     4'0100 8'-0000--1 ->     4'0100 10'0100000010
  transition:     4'0100 8'-0100--1 ->     4'0000 10'0000000010
  transition:     4'0100 8'-0-10--1 ->     4'0100 10'0100000010
  transition:     4'0100 8'-00010-1 ->     4'0100 10'0100000010
  transition:     4'0100 8'-01010-1 ->     4'0000 10'0000000010
  transition:     4'0100 8'-0-110-1 ->     4'0100 10'0100000010
  transition:     4'0100 8'-0001101 ->     4'0100 10'0100000010
  transition:     4'0100 8'-0101101 ->     4'0000 10'0000000010
  transition:     4'0100 8'-0-11101 ->     4'0100 10'0100000010
  transition:     4'0100 8'00--1111 ->     4'0101 10'0101000010
  transition:     4'0100 8'10001111 ->     4'0100 10'0100000010
  transition:     4'0100 8'10101111 ->     4'0000 10'0000000010
  transition:     4'0100 8'10-11111 ->     4'0100 10'0100000010
  transition:     4'0100 8'-1-----1 ->     4'0100 10'0100000010
  transition:     4'0010 8'-------0 ->     4'0000 10'0000001000
  transition:     4'0010 8'-0000--1 ->     4'0010 10'0010001000
  transition:     4'0010 8'-0100--1 ->     4'0000 10'0000001000
  transition:     4'0010 8'-0-10--1 ->     4'0010 10'0010001000
  transition:     4'0010 8'-00010-1 ->     4'0010 10'0010001000
  transition:     4'0010 8'-01010-1 ->     4'0000 10'0000001000
  transition:     4'0010 8'-0-110-1 ->     4'0010 10'0010001000
  transition:     4'0010 8'-0001101 ->     4'0010 10'0010001000
  transition:     4'0010 8'-0101101 ->     4'0000 10'0000001000
  transition:     4'0010 8'-0-11101 ->     4'0010 10'0010001000
  transition:     4'0010 8'00--1111 ->     4'0011 10'0011001000
  transition:     4'0010 8'10001111 ->     4'0010 10'0010001000
  transition:     4'0010 8'10101111 ->     4'0000 10'0000001000
  transition:     4'0010 8'10-11111 ->     4'0010 10'0010001000
  transition:     4'0010 8'-1-----1 ->     4'0010 10'0010001000
  transition:     4'0001 8'-------0 ->     4'0000 10'0000010000
  transition:     4'0001 8'-0000--1 ->     4'0001 10'0001010000
  transition:     4'0001 8'-0100--1 ->     4'0000 10'0000010000
  transition:     4'0001 8'-0-10--1 ->     4'0001 10'0001010000
  transition:     4'0001 8'-00010-1 ->     4'0001 10'0001010000
  transition:     4'0001 8'-01010-1 ->     4'0000 10'0000010000
  transition:     4'0001 8'-0-110-1 ->     4'0001 10'0001010000
  transition:     4'0001 8'-0001101 ->     4'0001 10'0001010000
  transition:     4'0001 8'-0101101 ->     4'0000 10'0000010000
  transition:     4'0001 8'-0-11101 ->     4'0001 10'0001010000
  transition:     4'0001 8'00--1111 ->     4'0010 10'0010010000
  transition:     4'0001 8'10001111 ->     4'0001 10'0001010000
  transition:     4'0001 8'10101111 ->     4'0000 10'0000010000
  transition:     4'0001 8'10-11111 ->     4'0001 10'0001010000
  transition:     4'0001 8'-1-----1 ->     4'0001 10'0001010000
  transition:     4'0101 8'-------0 ->     4'0000 10'0000000001
  transition:     4'0101 8'-0000--1 ->     4'0101 10'0101000001
  transition:     4'0101 8'-0100--1 ->     4'0000 10'0000000001
  transition:     4'0101 8'-0-10--1 ->     4'0101 10'0101000001
  transition:     4'0101 8'-00010-1 ->     4'0101 10'0101000001
  transition:     4'0101 8'-01010-1 ->     4'0000 10'0000000001
  transition:     4'0101 8'-0-110-1 ->     4'0101 10'0101000001
  transition:     4'0101 8'-0001101 ->     4'0101 10'0101000001
  transition:     4'0101 8'-0101101 ->     4'0000 10'0000000001
  transition:     4'0101 8'-0-11101 ->     4'0101 10'0101000001
  transition:     4'0101 8'00001111 ->     4'0101 10'0101000001
  transition:     4'0101 8'00101111 ->     4'0000 10'0000000001
  transition:     4'0101 8'00-11111 ->     4'0101 10'0101000001
  transition:     4'0101 8'10001111 ->     4'0101 10'0101000001
  transition:     4'0101 8'10101111 ->     4'0000 10'0000000001
  transition:     4'0101 8'10-11111 ->     4'0101 10'0101000001
  transition:     4'0101 8'-1-----1 ->     4'0101 10'0101000001
  transition:     4'0011 8'-------0 ->     4'0000 10'0000000100
  transition:     4'0011 8'-0000--1 ->     4'0011 10'0011000100
  transition:     4'0011 8'-0100--1 ->     4'0000 10'0000000100
  transition:     4'0011 8'-0-10--1 ->     4'0011 10'0011000100
  transition:     4'0011 8'-00010-1 ->     4'0011 10'0011000100
  transition:     4'0011 8'-01010-1 ->     4'0000 10'0000000100
  transition:     4'0011 8'-0-110-1 ->     4'0011 10'0011000100
  transition:     4'0011 8'-0001101 ->     4'0011 10'0011000100
  transition:     4'0011 8'-0101101 ->     4'0000 10'0000000100
  transition:     4'0011 8'-0-11101 ->     4'0011 10'0011000100
  transition:     4'0011 8'00--1111 ->     4'0100 10'0100000100
  transition:     4'0011 8'10001111 ->     4'0011 10'0011000100
  transition:     4'0011 8'10101111 ->     4'0000 10'0000000100
  transition:     4'0011 8'10-11111 ->     4'0011 10'0011000100
  transition:     4'0011 8'-1-----1 ->     4'0011 10'0011000100

20.11.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\memory.stealstatus$2587' from module `\top'.
  Merging pattern 8'-0001101 and 8'-0101101 from group (0 0 10'0000100000).
  Merging pattern 8'-0101101 and 8'-0001101 from group (0 0 10'0000100000).
  Merging pattern 8'10001111 and 8'10101111 from group (0 0 10'0000100000).
  Merging pattern 8'10101111 and 8'10001111 from group (0 0 10'0000100000).
  Merging pattern 8'-00010-1 and 8'-01010-1 from group (0 0 10'0000100000).
  Merging pattern 8'-01010-1 and 8'-00010-1 from group (0 0 10'0000100000).
  Merging pattern 8'-0000--1 and 8'-0100--1 from group (0 0 10'0000100000).
  Merging pattern 8'-0100--1 and 8'-0000--1 from group (0 0 10'0000100000).
  Merging pattern 8'-0-01101 and 8'-0-11101 from group (0 0 10'0000100000).
  Merging pattern 8'-0-11101 and 8'-0-01101 from group (0 0 10'0000100000).
  Merging pattern 8'10-01111 and 8'10-11111 from group (0 0 10'0000100000).
  Merging pattern 8'10-11111 and 8'10-01111 from group (0 0 10'0000100000).
  Merging pattern 8'-0-010-1 and 8'-0-110-1 from group (0 0 10'0000100000).
  Merging pattern 8'-0-110-1 and 8'-0-010-1 from group (0 0 10'0000100000).
  Merging pattern 8'-0-00--1 and 8'-0-10--1 from group (0 0 10'0000100000).
  Merging pattern 8'-0-10--1 and 8'-0-00--1 from group (0 0 10'0000100000).
  Merging pattern 8'00101111 and 8'10101111 from group (4 0 10'0000000001).
  Merging pattern 8'10101111 and 8'00101111 from group (4 0 10'0000000001).
  Merging pattern 8'-0101101 and 8'-0101111 from group (4 0 10'0000000001).
  Merging pattern 8'-0101111 and 8'-0101101 from group (4 0 10'0000000001).
  Merging pattern 8'-01010-1 and 8'-01011-1 from group (4 0 10'0000000001).
  Merging pattern 8'-01011-1 and 8'-01010-1 from group (4 0 10'0000000001).
  Merging pattern 8'-0100--1 and 8'-0101--1 from group (4 0 10'0000000001).
  Merging pattern 8'-0101--1 and 8'-0100--1 from group (4 0 10'0000000001).
  Merging pattern 8'00001111 and 8'10001111 from group (4 4 10'0101000001).
  Merging pattern 8'10001111 and 8'00001111 from group (4 4 10'0101000001).
  Merging pattern 8'00-11111 and 8'10-11111 from group (4 4 10'0101000001).
  Merging pattern 8'10-11111 and 8'00-11111 from group (4 4 10'0101000001).
  Merging pattern 8'-0001101 and 8'-0001111 from group (4 4 10'0101000001).
  Merging pattern 8'-0-11101 and 8'-0-11111 from group (4 4 10'0101000001).
  Merging pattern 8'-0001111 and 8'-0001101 from group (4 4 10'0101000001).
  Merging pattern 8'-0-11111 and 8'-0-11101 from group (4 4 10'0101000001).
  Merging pattern 8'-00010-1 and 8'-00011-1 from group (4 4 10'0101000001).
  Merging pattern 8'-0-110-1 and 8'-0-111-1 from group (4 4 10'0101000001).
  Merging pattern 8'-00011-1 and 8'-00010-1 from group (4 4 10'0101000001).
  Merging pattern 8'-0-111-1 and 8'-0-110-1 from group (4 4 10'0101000001).
  Merging pattern 8'-0000--1 and 8'-0001--1 from group (4 4 10'0101000001).
  Merging pattern 8'-0-10--1 and 8'-0-11--1 from group (4 4 10'0101000001).
  Merging pattern 8'-0001--1 and 8'-0000--1 from group (4 4 10'0101000001).
  Merging pattern 8'-0-11--1 and 8'-0-10--1 from group (4 4 10'0101000001).

20.11.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 20 unused cells and 20 unused wires.
<suppressed ~21 debug messages>

20.11.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\memory.stealstatus$2587' from module `\top'.
  Removing unused output signal $flatten\memory.$0\stealstatus[3:0] [0].
  Removing unused output signal $flatten\memory.$0\stealstatus[3:0] [1].
  Removing unused output signal $flatten\memory.$0\stealstatus[3:0] [2].
  Removing unused output signal $flatten\memory.$0\stealstatus[3:0] [3].

20.11.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\memory.stealstatus$2587' from module `\top' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  0000 -> -----1
  0100 -> ----1-
  0010 -> ---1--
  0001 -> --1---
  0101 -> -1----
  0011 -> 1-----

20.11.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\memory.stealstatus$2587' from module `top':
-------------------------------------

  Information on FSM $fsm$\memory.stealstatus$2587 (\memory.stealstatus):

  Number of input signals:    8
  Number of output signals:   6
  Number of state bits:       6

  Input signals:
    0: \reset
    1: $flatten\memory.$procmux$1817_CMP
    2: $flatten\memory.$eq$src/blockmemory.v:143$981_Y
    3: $flatten\memory.$gt$src/blockmemory.v:142$980_Y
    4: $flatten\memory.$and$src/blockmemory.v:133$978_Y
    5: $flatten\memory.$eq$src/blockmemory.v:133$977_Y
    6: \memory.resetperiod
    7: \vcell.movement_intent

  Output signals:
    0: $flatten\memory.$eq$src/blockmemory.v:186$992_Y
    1: $flatten\memory.$eq$src/blockmemory.v:181$991_Y
    2: $flatten\memory.$eq$src/blockmemory.v:173$989_Y
    3: $flatten\memory.$eq$src/blockmemory.v:165$987_Y
    4: $flatten\memory.$eq$src/blockmemory.v:157$985_Y
    5: $flatten\memory.$eq$src/blockmemory.v:149$983_Y

  State encoding:
    0:   6'-----1  <RESET STATE>
    1:   6'----1-
    2:   6'---1--
    3:   6'--1---
    4:   6'-1----
    5:   6'1-----

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 8'-------0   ->     0 6'100000
      1:     0 8'-0--1101   ->     0 6'100000
      2:     0 8'10--1111   ->     0 6'100000
      3:     0 8'-0--10-1   ->     0 6'100000
      4:     0 8'-0--0--1   ->     0 6'100000
      5:     0 8'-1-----1   ->     0 6'100000
      6:     0 8'00--1111   ->     3 6'100000
      7:     1 8'-------0   ->     0 6'000010
      8:     1 8'-0101101   ->     0 6'000010
      9:     1 8'10101111   ->     0 6'000010
     10:     1 8'-01010-1   ->     0 6'000010
     11:     1 8'-0100--1   ->     0 6'000010
     12:     1 8'-0001101   ->     1 6'000010
     13:     1 8'-0-11101   ->     1 6'000010
     14:     1 8'10001111   ->     1 6'000010
     15:     1 8'10-11111   ->     1 6'000010
     16:     1 8'-00010-1   ->     1 6'000010
     17:     1 8'-0-110-1   ->     1 6'000010
     18:     1 8'-0000--1   ->     1 6'000010
     19:     1 8'-0-10--1   ->     1 6'000010
     20:     1 8'-1-----1   ->     1 6'000010
     21:     1 8'00--1111   ->     4 6'000010
     22:     2 8'-------0   ->     0 6'001000
     23:     2 8'-0101101   ->     0 6'001000
     24:     2 8'10101111   ->     0 6'001000
     25:     2 8'-01010-1   ->     0 6'001000
     26:     2 8'-0100--1   ->     0 6'001000
     27:     2 8'-0001101   ->     2 6'001000
     28:     2 8'-0-11101   ->     2 6'001000
     29:     2 8'10001111   ->     2 6'001000
     30:     2 8'10-11111   ->     2 6'001000
     31:     2 8'-00010-1   ->     2 6'001000
     32:     2 8'-0-110-1   ->     2 6'001000
     33:     2 8'-0000--1   ->     2 6'001000
     34:     2 8'-0-10--1   ->     2 6'001000
     35:     2 8'-1-----1   ->     2 6'001000
     36:     2 8'00--1111   ->     5 6'001000
     37:     3 8'-------0   ->     0 6'010000
     38:     3 8'-0101101   ->     0 6'010000
     39:     3 8'10101111   ->     0 6'010000
     40:     3 8'-01010-1   ->     0 6'010000
     41:     3 8'-0100--1   ->     0 6'010000
     42:     3 8'00--1111   ->     2 6'010000
     43:     3 8'-0001101   ->     3 6'010000
     44:     3 8'-0-11101   ->     3 6'010000
     45:     3 8'10001111   ->     3 6'010000
     46:     3 8'10-11111   ->     3 6'010000
     47:     3 8'-00010-1   ->     3 6'010000
     48:     3 8'-0-110-1   ->     3 6'010000
     49:     3 8'-0000--1   ->     3 6'010000
     50:     3 8'-0-10--1   ->     3 6'010000
     51:     3 8'-1-----1   ->     3 6'010000
     52:     4 8'-------0   ->     0 6'000001
     53:     4 8'-010---1   ->     0 6'000001
     54:     4 8'-000---1   ->     4 6'000001
     55:     4 8'-0-1---1   ->     4 6'000001
     56:     4 8'-1-----1   ->     4 6'000001
     57:     5 8'-------0   ->     0 6'000100
     58:     5 8'-0101101   ->     0 6'000100
     59:     5 8'10101111   ->     0 6'000100
     60:     5 8'-01010-1   ->     0 6'000100
     61:     5 8'-0100--1   ->     0 6'000100
     62:     5 8'00--1111   ->     1 6'000100
     63:     5 8'-0001101   ->     5 6'000100
     64:     5 8'-0-11101   ->     5 6'000100
     65:     5 8'10001111   ->     5 6'000100
     66:     5 8'10-11111   ->     5 6'000100
     67:     5 8'-00010-1   ->     5 6'000100
     68:     5 8'-0-110-1   ->     5 6'000100
     69:     5 8'-0000--1   ->     5 6'000100
     70:     5 8'-0-10--1   ->     5 6'000100
     71:     5 8'-1-----1   ->     5 6'000100

-------------------------------------

20.11.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\memory.stealstatus$2587' from module `\top'.

20.12. Executing OPT pass (performing simple optimizations).

20.12.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~1 debug messages>

20.12.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~99 debug messages>
Removed a total of 33 cells.

20.12.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~727 debug messages>

20.12.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

20.12.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

20.12.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $flatten\vcell.\tshaper.$procdff$2586 ($dff) from module top (D = $flatten\vcell.\tshaper.$procmux$2393_Y, Q = \vcell.tshaper.blk4_hoffset, rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$2815 ($sdff) from module top (D = $flatten\vcell.\tshaper.$procmux$2393_Y, Q = \vcell.tshaper.blk4_hoffset).
Adding SRST signal on $flatten\vcell.\tshaper.$procdff$2585 ($dff) from module top (D = $flatten\vcell.\tshaper.$procmux$2402_Y, Q = \vcell.tshaper.blk4_voffset, rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$2819 ($sdff) from module top (D = $flatten\vcell.\tshaper.$procmux$2402_Y, Q = \vcell.tshaper.blk4_voffset).
Adding SRST signal on $flatten\vcell.\tshaper.$procdff$2584 ($dff) from module top (D = $flatten\vcell.\tshaper.$procmux$2413_Y, Q = \vcell.tshaper.blk3_hoffset, rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$2827 ($sdff) from module top (D = $flatten\vcell.\tshaper.$procmux$2413_Y, Q = \vcell.tshaper.blk3_hoffset).
Adding SRST signal on $flatten\vcell.\tshaper.$procdff$2583 ($dff) from module top (D = $flatten\vcell.\tshaper.$procmux$2426_Y, Q = \vcell.tshaper.blk3_voffset, rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$2835 ($sdff) from module top (D = $flatten\vcell.\tshaper.$procmux$2426_Y, Q = \vcell.tshaper.blk3_voffset).
Adding SRST signal on $flatten\vcell.\tshaper.$procdff$2582 ($dff) from module top (D = $flatten\vcell.\tshaper.$procmux$2431_Y [4:1], Q = \vcell.tshaper.blk2_hoffset [4:1], rval = 4'0000).
Adding SRST signal on $flatten\vcell.\tshaper.$procdff$2582 ($dff) from module top (D = $flatten\vcell.\tshaper.$procmux$2435_Y [0], Q = \vcell.tshaper.blk2_hoffset [0], rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$2844 ($sdff) from module top (D = $flatten\vcell.\tshaper.$procmux$2435_Y [0], Q = \vcell.tshaper.blk2_hoffset [0]).
Adding EN signal on $auto$ff.cc:262:slice$2839 ($sdff) from module top (D = 4'0000, Q = \vcell.tshaper.blk2_hoffset [4:1]).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$2852 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$2852 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$2852 ($sdffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$2852 ($sdffe) from module top.
Adding SRST signal on $flatten\vcell.\tshaper.$procdff$2581 ($dff) from module top (D = $flatten\vcell.\tshaper.$procmux$2448_Y [0], Q = \vcell.tshaper.blk2_voffset [0], rval = 1'0).
Adding SRST signal on $flatten\vcell.\tshaper.$procdff$2581 ($dff) from module top (D = $flatten\vcell.\tshaper.$procmux$2442_Y [4:1], Q = \vcell.tshaper.blk2_voffset [4:1], rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$2854 ($sdff) from module top (D = 4'0000, Q = \vcell.tshaper.blk2_voffset [4:1]).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$2859 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$2859 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$2859 ($sdffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$2859 ($sdffe) from module top.
Adding EN signal on $auto$ff.cc:262:slice$2853 ($sdff) from module top (D = $flatten\vcell.\tshaper.$procmux$2448_Y [0], Q = \vcell.tshaper.blk2_voffset [0]).
Adding SRST signal on $flatten\vcell.\tshaper.$procdff$2580 ($dff) from module top (D = $flatten\vcell.\tshaper.$procmux$2453_Y, Q = \vcell.tshaper.blk1_hoffset, rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$2863 ($sdff) from module top (D = 5'00000, Q = \vcell.tshaper.blk1_hoffset).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$2868 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$2868 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$2868 ($sdffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$2868 ($sdffe) from module top.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$2868 ($sdffe) from module top.
Adding SRST signal on $flatten\vcell.\tshaper.$procdff$2579 ($dff) from module top (D = $flatten\vcell.\tshaper.$procmux$2464_Y, Q = \vcell.tshaper.blk1_voffset, rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$2869 ($sdff) from module top (D = 5'00000, Q = \vcell.tshaper.blk1_voffset).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$2874 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$2874 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$2874 ($sdffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$2874 ($sdffe) from module top.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$2874 ($sdffe) from module top.
Adding SRST signal on $flatten\vcell.\lbshaper.$procdff$2570 ($dff) from module top (D = $flatten\vcell.\lbshaper.$procmux$2285_Y [0], Q = \vcell.lbshaper.blk4_hoffset [0], rval = 1'0).
Adding SRST signal on $flatten\vcell.\lbshaper.$procdff$2570 ($dff) from module top (D = $flatten\vcell.\lbshaper.$procmux$2281_Y [4:1], Q = \vcell.lbshaper.blk4_hoffset [4:1], rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$2876 ($sdff) from module top (D = $flatten\vcell.\lbshaper.$procmux$2281_Y [4:1], Q = \vcell.lbshaper.blk4_hoffset [4:1]).
Adding EN signal on $auto$ff.cc:262:slice$2875 ($sdff) from module top (D = $flatten\vcell.\lbshaper.$procmux$2285_Y [0], Q = \vcell.lbshaper.blk4_hoffset [0]).
Adding SRST signal on $flatten\vcell.\lbshaper.$procdff$2569 ($dff) from module top (D = $flatten\vcell.\lbshaper.$procmux$2296_Y [0], Q = \vcell.lbshaper.blk4_voffset [0], rval = 1'0).
Adding SRST signal on $flatten\vcell.\lbshaper.$procdff$2569 ($dff) from module top (D = $flatten\vcell.\lbshaper.$procmux$2294_Y [4:1], Q = \vcell.lbshaper.blk4_voffset [4:1], rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$2888 ($sdff) from module top (D = $flatten\vcell.\lbshaper.$procmux$2294_Y [4:1], Q = \vcell.lbshaper.blk4_voffset [4:1]).
Adding EN signal on $auto$ff.cc:262:slice$2887 ($sdff) from module top (D = $flatten\vcell.\lbshaper.$procmux$2296_Y [0], Q = \vcell.lbshaper.blk4_voffset [0]).
Adding SRST signal on $flatten\vcell.\lbshaper.$procdff$2568 ($dff) from module top (D = $flatten\vcell.\lbshaper.$procmux$2305_Y, Q = \vcell.lbshaper.blk3_hoffset, rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$2899 ($sdff) from module top (D = $flatten\vcell.\lbshaper.$procmux$2305_Y, Q = \vcell.lbshaper.blk3_hoffset).
Adding SRST signal on $flatten\vcell.\lbshaper.$procdff$2567 ($dff) from module top (D = $flatten\vcell.\lbshaper.$procmux$2318_Y, Q = \vcell.lbshaper.blk3_voffset, rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$2907 ($sdff) from module top (D = $flatten\vcell.\lbshaper.$procmux$2318_Y, Q = \vcell.lbshaper.blk3_voffset).
Adding SRST signal on $flatten\vcell.\lbshaper.$procdff$2566 ($dff) from module top (D = $flatten\vcell.\lbshaper.$procmux$2323_Y [4:1], Q = \vcell.lbshaper.blk2_hoffset [4:1], rval = 4'0000).
Adding SRST signal on $flatten\vcell.\lbshaper.$procdff$2566 ($dff) from module top (D = $flatten\vcell.\lbshaper.$procmux$2327_Y [0], Q = \vcell.lbshaper.blk2_hoffset [0], rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$2916 ($sdff) from module top (D = $flatten\vcell.\lbshaper.$procmux$2327_Y [0], Q = \vcell.lbshaper.blk2_hoffset [0]).
Adding EN signal on $auto$ff.cc:262:slice$2911 ($sdff) from module top (D = 4'0000, Q = \vcell.lbshaper.blk2_hoffset [4:1]).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$2924 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$2924 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$2924 ($sdffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$2924 ($sdffe) from module top.
Adding SRST signal on $flatten\vcell.\lbshaper.$procdff$2565 ($dff) from module top (D = $flatten\vcell.\lbshaper.$procmux$2340_Y [0], Q = \vcell.lbshaper.blk2_voffset [0], rval = 1'0).
Adding SRST signal on $flatten\vcell.\lbshaper.$procdff$2565 ($dff) from module top (D = $flatten\vcell.\lbshaper.$procmux$2334_Y [4:1], Q = \vcell.lbshaper.blk2_voffset [4:1], rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$2926 ($sdff) from module top (D = 4'0000, Q = \vcell.lbshaper.blk2_voffset [4:1]).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$2931 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$2931 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$2931 ($sdffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$2931 ($sdffe) from module top.
Adding EN signal on $auto$ff.cc:262:slice$2925 ($sdff) from module top (D = $flatten\vcell.\lbshaper.$procmux$2340_Y [0], Q = \vcell.lbshaper.blk2_voffset [0]).
Adding SRST signal on $flatten\vcell.\lbshaper.$procdff$2564 ($dff) from module top (D = $flatten\vcell.\lbshaper.$procmux$2345_Y, Q = \vcell.lbshaper.blk1_hoffset, rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$2935 ($sdff) from module top (D = 5'00000, Q = \vcell.lbshaper.blk1_hoffset).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$2940 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$2940 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$2940 ($sdffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$2940 ($sdffe) from module top.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$2940 ($sdffe) from module top.
Adding SRST signal on $flatten\vcell.\lbshaper.$procdff$2563 ($dff) from module top (D = $flatten\vcell.\lbshaper.$procmux$2356_Y, Q = \vcell.lbshaper.blk1_voffset, rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$2941 ($sdff) from module top (D = 5'00000, Q = \vcell.lbshaper.blk1_voffset).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$2946 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$2946 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$2946 ($sdffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$2946 ($sdffe) from module top.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$2946 ($sdffe) from module top.
Adding SRST signal on $flatten\vcell.\lashaper.$procdff$2562 ($dff) from module top (D = $flatten\vcell.\lashaper.$procmux$2197_Y, Q = \vcell.lashaper.blk4_hoffset, rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$2947 ($sdff) from module top (D = $flatten\vcell.\lashaper.$procmux$2197_Y, Q = \vcell.lashaper.blk4_hoffset).
Adding SRST signal on $flatten\vcell.\lashaper.$procdff$2561 ($dff) from module top (D = $flatten\vcell.\lashaper.$procmux$2208_Y [0], Q = \vcell.lashaper.blk4_voffset [0], rval = 1'0).
Adding SRST signal on $flatten\vcell.\lashaper.$procdff$2561 ($dff) from module top (D = $flatten\vcell.\lashaper.$procmux$2204_Y [4:1], Q = \vcell.lashaper.blk4_voffset [4:1], rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$2952 ($sdff) from module top (D = $flatten\vcell.\lashaper.$procmux$2204_Y [4:1], Q = \vcell.lashaper.blk4_voffset [4:1]).
Adding EN signal on $auto$ff.cc:262:slice$2951 ($sdff) from module top (D = $flatten\vcell.\lashaper.$procmux$2208_Y [0], Q = \vcell.lashaper.blk4_voffset [0]).
Adding SRST signal on $flatten\vcell.\lashaper.$procdff$2560 ($dff) from module top (D = $flatten\vcell.\lashaper.$procmux$2217_Y, Q = \vcell.lashaper.blk3_hoffset, rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$2963 ($sdff) from module top (D = $flatten\vcell.\lashaper.$procmux$2217_Y, Q = \vcell.lashaper.blk3_hoffset).
Adding SRST signal on $flatten\vcell.\lashaper.$procdff$2559 ($dff) from module top (D = $flatten\vcell.\lashaper.$procmux$2230_Y, Q = \vcell.lashaper.blk3_voffset, rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$2971 ($sdff) from module top (D = $flatten\vcell.\lashaper.$procmux$2230_Y, Q = \vcell.lashaper.blk3_voffset).
Adding SRST signal on $flatten\vcell.\lashaper.$procdff$2558 ($dff) from module top (D = $flatten\vcell.\lashaper.$procmux$2235_Y [4:1], Q = \vcell.lashaper.blk2_hoffset [4:1], rval = 4'0000).
Adding SRST signal on $flatten\vcell.\lashaper.$procdff$2558 ($dff) from module top (D = $flatten\vcell.\lashaper.$procmux$2239_Y [0], Q = \vcell.lashaper.blk2_hoffset [0], rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$2980 ($sdff) from module top (D = $flatten\vcell.\lashaper.$procmux$2239_Y [0], Q = \vcell.lashaper.blk2_hoffset [0]).
Adding EN signal on $auto$ff.cc:262:slice$2975 ($sdff) from module top (D = 4'0000, Q = \vcell.lashaper.blk2_hoffset [4:1]).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$2988 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$2988 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$2988 ($sdffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$2988 ($sdffe) from module top.
Adding SRST signal on $flatten\vcell.\lashaper.$procdff$2557 ($dff) from module top (D = $flatten\vcell.\lashaper.$procmux$2252_Y [0], Q = \vcell.lashaper.blk2_voffset [0], rval = 1'0).
Adding SRST signal on $flatten\vcell.\lashaper.$procdff$2557 ($dff) from module top (D = $flatten\vcell.\lashaper.$procmux$2246_Y [4:1], Q = \vcell.lashaper.blk2_voffset [4:1], rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$2990 ($sdff) from module top (D = 4'0000, Q = \vcell.lashaper.blk2_voffset [4:1]).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$2995 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$2995 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$2995 ($sdffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$2995 ($sdffe) from module top.
Adding EN signal on $auto$ff.cc:262:slice$2989 ($sdff) from module top (D = $flatten\vcell.\lashaper.$procmux$2252_Y [0], Q = \vcell.lashaper.blk2_voffset [0]).
Adding SRST signal on $flatten\vcell.\lashaper.$procdff$2556 ($dff) from module top (D = $flatten\vcell.\lashaper.$procmux$2257_Y, Q = \vcell.lashaper.blk1_hoffset, rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$2999 ($sdff) from module top (D = 5'00000, Q = \vcell.lashaper.blk1_hoffset).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$3004 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$3004 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$3004 ($sdffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$3004 ($sdffe) from module top.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$3004 ($sdffe) from module top.
Adding SRST signal on $flatten\vcell.\lashaper.$procdff$2555 ($dff) from module top (D = $flatten\vcell.\lashaper.$procmux$2268_Y, Q = \vcell.lashaper.blk1_voffset, rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$3005 ($sdff) from module top (D = 5'00000, Q = \vcell.lashaper.blk1_voffset).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$3010 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$3010 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$3010 ($sdffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$3010 ($sdffe) from module top.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$3010 ($sdffe) from module top.
Adding SRST signal on $flatten\vcell.\ishaper.$procdff$2537 ($dff) from module top (D = $flatten\vcell.\ishaper.$procmux$2050_Y [0], Q = \vcell.ishaper.blk4_hoffset [0], rval = 1'0).
Adding SRST signal on $flatten\vcell.\ishaper.$procdff$2537 ($dff) from module top (D = $flatten\vcell.\ishaper.$procmux$2044_Y [4:2], Q = \vcell.ishaper.blk4_hoffset [4:2], rval = 3'000).
Adding SRST signal on $flatten\vcell.\ishaper.$procdff$2537 ($dff) from module top (D = $flatten\vcell.\ishaper.$procmux$2048_Y [1], Q = \vcell.ishaper.blk4_hoffset [1], rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$3017 ($sdff) from module top (D = $flatten\vcell.\ishaper.$procmux$2048_Y [1], Q = \vcell.ishaper.blk4_hoffset [1]).
Adding EN signal on $auto$ff.cc:262:slice$3012 ($sdff) from module top (D = 3'000, Q = \vcell.ishaper.blk4_hoffset [4:2]).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$3025 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$3025 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$3025 ($sdffe) from module top.
Adding EN signal on $auto$ff.cc:262:slice$3011 ($sdff) from module top (D = $flatten\vcell.\ishaper.$procmux$2050_Y [0], Q = \vcell.ishaper.blk4_hoffset [0]).
Adding SRST signal on $flatten\vcell.\ishaper.$procdff$2536 ($dff) from module top (D = $flatten\vcell.\ishaper.$procmux$2061_Y [1], Q = \vcell.ishaper.blk4_voffset [1], rval = 1'0).
Adding SRST signal on $flatten\vcell.\ishaper.$procdff$2536 ($dff) from module top (D = $flatten\vcell.\ishaper.$procmux$2055_Y [4:2], Q = \vcell.ishaper.blk4_voffset [4:2], rval = 3'000).
Adding SRST signal on $flatten\vcell.\ishaper.$procdff$2536 ($dff) from module top (D = $flatten\vcell.\ishaper.$procmux$2059_Y [0], Q = \vcell.ishaper.blk4_voffset [0], rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$3035 ($sdff) from module top (D = $flatten\vcell.\ishaper.$procmux$2059_Y [0], Q = \vcell.ishaper.blk4_voffset [0]).
Adding EN signal on $auto$ff.cc:262:slice$3030 ($sdff) from module top (D = 3'000, Q = \vcell.ishaper.blk4_voffset [4:2]).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$3043 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$3043 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$3043 ($sdffe) from module top.
Adding EN signal on $auto$ff.cc:262:slice$3029 ($sdff) from module top (D = $flatten\vcell.\ishaper.$procmux$2061_Y [1], Q = \vcell.ishaper.blk4_voffset [1]).
Adding SRST signal on $flatten\vcell.\ishaper.$procdff$2535 ($dff) from module top (D = $flatten\vcell.\ishaper.$procmux$2072_Y [0], Q = \vcell.ishaper.blk3_hoffset [0], rval = 1'0).
Adding SRST signal on $flatten\vcell.\ishaper.$procdff$2535 ($dff) from module top (D = $flatten\vcell.\ishaper.$procmux$2066_Y [4:1], Q = \vcell.ishaper.blk3_hoffset [4:1], rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$3048 ($sdff) from module top (D = 4'0000, Q = \vcell.ishaper.blk3_hoffset [4:1]).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$3053 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$3053 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$3053 ($sdffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$3053 ($sdffe) from module top.
Adding EN signal on $auto$ff.cc:262:slice$3047 ($sdff) from module top (D = $flatten\vcell.\ishaper.$procmux$2072_Y [0], Q = \vcell.ishaper.blk3_hoffset [0]).
Adding SRST signal on $flatten\vcell.\ishaper.$procdff$2534 ($dff) from module top (D = $flatten\vcell.\ishaper.$procmux$2083_Y [0], Q = \vcell.ishaper.blk3_voffset [0], rval = 1'0).
Adding SRST signal on $flatten\vcell.\ishaper.$procdff$2534 ($dff) from module top (D = $flatten\vcell.\ishaper.$procmux$2077_Y [4:1], Q = \vcell.ishaper.blk3_voffset [4:1], rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$3058 ($sdff) from module top (D = 4'0000, Q = \vcell.ishaper.blk3_voffset [4:1]).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$3063 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$3063 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$3063 ($sdffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$3063 ($sdffe) from module top.
Adding EN signal on $auto$ff.cc:262:slice$3057 ($sdff) from module top (D = $flatten\vcell.\ishaper.$procmux$2083_Y [0], Q = \vcell.ishaper.blk3_voffset [0]).
Adding SRST signal on $flatten\vcell.\ishaper.$procdff$2533 ($dff) from module top (D = $flatten\vcell.\ishaper.$procmux$2094_Y [0], Q = \vcell.ishaper.blk2_hoffset [0], rval = 1'0).
Adding SRST signal on $flatten\vcell.\ishaper.$procdff$2533 ($dff) from module top (D = $flatten\vcell.\ishaper.$procmux$2092_Y [4:1], Q = \vcell.ishaper.blk2_hoffset [4:1], rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$3068 ($sdff) from module top (D = $flatten\vcell.\ishaper.$procmux$2092_Y [4:1], Q = \vcell.ishaper.blk2_hoffset [4:1]).
Adding EN signal on $auto$ff.cc:262:slice$3067 ($sdff) from module top (D = $flatten\vcell.\ishaper.$procmux$2094_Y [0], Q = \vcell.ishaper.blk2_hoffset [0]).
Adding SRST signal on $flatten\vcell.\ishaper.$procdff$2532 ($dff) from module top (D = $flatten\vcell.\ishaper.$procmux$2105_Y, Q = \vcell.ishaper.blk2_voffset, rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$3079 ($sdff) from module top (D = $flatten\vcell.\ishaper.$procmux$2105_Y, Q = \vcell.ishaper.blk2_voffset).
Adding SRST signal on $flatten\vcell.\ishaper.$procdff$2531 ($dff) from module top (D = $flatten\vcell.\ishaper.$procmux$2116_Y [0], Q = \vcell.ishaper.blk1_hoffset [0], rval = 1'0).
Adding SRST signal on $flatten\vcell.\ishaper.$procdff$2531 ($dff) from module top (D = $flatten\vcell.\ishaper.$procmux$2110_Y [4:1], Q = \vcell.ishaper.blk1_hoffset [4:1], rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$3084 ($sdff) from module top (D = 4'0000, Q = \vcell.ishaper.blk1_hoffset [4:1]).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$3089 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$3089 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$3089 ($sdffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$3089 ($sdffe) from module top.
Adding EN signal on $auto$ff.cc:262:slice$3083 ($sdff) from module top (D = $flatten\vcell.\ishaper.$procmux$2116_Y [0], Q = \vcell.ishaper.blk1_hoffset [0]).
Adding SRST signal on $flatten\vcell.\ishaper.$procdff$2530 ($dff) from module top (D = $flatten\vcell.\ishaper.$procmux$2121_Y [4:1], Q = \vcell.ishaper.blk1_voffset [4:1], rval = 4'0000).
Adding SRST signal on $flatten\vcell.\ishaper.$procdff$2530 ($dff) from module top (D = $flatten\vcell.\ishaper.$procmux$2125_Y [0], Q = \vcell.ishaper.blk1_voffset [0], rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$3098 ($sdff) from module top (D = $flatten\vcell.\ishaper.$procmux$2125_Y [0], Q = \vcell.ishaper.blk1_voffset [0]).
Adding EN signal on $auto$ff.cc:262:slice$3093 ($sdff) from module top (D = 4'0000, Q = \vcell.ishaper.blk1_voffset [4:1]).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$3106 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$3106 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$3106 ($sdffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$3106 ($sdffe) from module top.
Adding SRST signal on $flatten\vcell.$procdff$2493 ($dff) from module top (D = $flatten\vcell.$procmux$1523_Y, Q = \vcell.process_decline, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$3107 ($sdff) from module top (D = $flatten\vcell.$procmux$1520_Y, Q = \vcell.process_decline).
Adding SRST signal on $flatten\vcell.$procdff$2492 ($dff) from module top (D = { \butt2 \vcell.buttdebounceT [5:1] }, Q = \vcell.buttdebounceT, rval = 6'000000).
Adding SRST signal on $flatten\vcell.$procdff$2491 ($dff) from module top (D = { \butt3 \vcell.buttdebounceR [5:1] }, Q = \vcell.buttdebounceR, rval = 6'000000).
Adding SRST signal on $flatten\vcell.$procdff$2490 ($dff) from module top (D = { \butt1 \vcell.buttdebounceL [5:1] }, Q = \vcell.buttdebounceL, rval = 6'000000).
Adding SRST signal on $flatten\vcell.$procdff$2489 ($dff) from module top (D = { \vcell.state [6:0] $flatten\vcell.$xor$src/volatile_cell_storage.v:157$1463_Y }, Q = \vcell.state, rval = 8'11110000).
Adding SRST signal on $flatten\vcell.$procdff$2488 ($dff) from module top (D = $flatten\vcell.$procmux$1533_Y, Q = \vcell.process_steal, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$3119 ($sdff) from module top (D = $flatten\vcell.$procmux$1530_Y, Q = \vcell.process_steal).
Adding SRST signal on $flatten\vcell.$procdff$2486 ($dff) from module top (D = $flatten\vcell.$procmux$1555_Y, Q = \vcell.cooldown, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$3127 ($sdff) from module top (D = $flatten\vcell.$procmux$1550_Y, Q = \vcell.cooldown).
Adding SRST signal on $flatten\vcell.$procdff$2485 ($dff) from module top (D = $flatten\vcell.$procmux$1578_Y, Q = \vcell.movement_available, rval = 1'1).
Adding SRST signal on $flatten\vcell.$procdff$2484 ($dff) from module top (D = $flatten\vcell.$procmux$1586_Y, Q = \vcell.tetron_type, rval = 4'0100).
Adding EN signal on $auto$ff.cc:262:slice$3136 ($sdff) from module top (D = $flatten\vcell.$mod$src/volatile_cell_storage.v:220$1499_Y [3:0], Q = \vcell.tetron_type).
Adding SRST signal on $flatten\vcell.$procdff$2483 ($dff) from module top (D = $flatten\vcell.$procmux$1596_Y, Q = \vcell.keep_tetron_rotation, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3142 ($sdff) from module top (D = $flatten\vcell.$procmux$1593_Y, Q = \vcell.keep_tetron_rotation).
Adding SRST signal on $flatten\vcell.$procdff$2482 ($dff) from module top (D = $flatten\vcell.$procmux$1604_Y, Q = \vcell.keep_tetron_h, rval = 5'00101).
Adding EN signal on $auto$ff.cc:262:slice$3150 ($sdff) from module top (D = \vcell.tetron_h, Q = \vcell.keep_tetron_h).
Adding SRST signal on $flatten\vcell.$procdff$2481 ($dff) from module top (D = $flatten\vcell.$procmux$1612_Y, Q = \vcell.keep_tetron_v, rval = 5'00101).
Adding EN signal on $auto$ff.cc:262:slice$3156 ($sdff) from module top (D = \vcell.tetron_v, Q = \vcell.keep_tetron_v).
Adding SRST signal on $flatten\vcell.$procdff$2480 ($dff) from module top (D = $flatten\vcell.$procmux$1625_Y, Q = \vcell.tetron_h, rval = 5'00101).
Adding EN signal on $auto$ff.cc:262:slice$3162 ($sdff) from module top (D = $flatten\vcell.$procmux$1625_Y, Q = \vcell.tetron_h).
Adding SRST signal on $flatten\vcell.$procdff$2479 ($dff) from module top (D = $flatten\vcell.$procmux$1644_Y, Q = \vcell.tetron_v, rval = 5'00101).
Adding EN signal on $auto$ff.cc:262:slice$3170 ($sdff) from module top (D = $flatten\vcell.$procmux$1644_Y, Q = \vcell.tetron_v).
Adding SRST signal on $flatten\vcell.$procdff$2478 ($dff) from module top (D = $flatten\vcell.$procmux$1652_Y, Q = \vcell.volatile_blk_color, rval = 3'100).
Adding EN signal on $auto$ff.cc:262:slice$3180 ($sdff) from module top (D = $flatten\vcell.$ternary$src/volatile_cell_storage.v:219$1498_Y, Q = \vcell.volatile_blk_color).
Adding SRST signal on $flatten\vcell.$procdff$2477 ($dff) from module top (D = $flatten\vcell.$procmux$1669_Y, Q = \vcell.movement_intent, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$3186 ($sdff) from module top (D = $flatten\vcell.$procmux$1667_Y, Q = \vcell.movement_intent).
Adding SRST signal on $flatten\vcell.$procdff$2476 ($dff) from module top (D = $flatten\vcell.$procmux$1692_Y, Q = \vcell.movement_request, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$3192 ($sdff) from module top (D = $flatten\vcell.$procmux$1692_Y, Q = \vcell.movement_request).
Adding SRST signal on $flatten\vcell.$procdff$2475 ($dff) from module top (D = $flatten\vcell.$procmux$1713_Y, Q = \vcell.tetron_rotation, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3200 ($sdff) from module top (D = $flatten\vcell.$procmux$1713_Y, Q = \vcell.tetron_rotation).
Adding SRST signal on $flatten\t.$procdff$2539 ($dff) from module top (D = $flatten\t.$add$src/timer.v:18$567_Y, Q = \t.counter, rval = 25'0000000000000000000000000).
Adding EN signal on $flatten\t.$procdff$2538 ($dff) from module top (D = $flatten\t.$procmux$2139_Y, Q = \t.trigger).
Adding SRST signal on $flatten\memory.\mem.\row_9.\cell_9.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_9.\cell_9.$procmux$2186_Y, Q = \memory.mem.row_9.cell_9.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3220 ($sdff) from module top (D = $flatten\memory.\mem.\row_9.\cell_9.$procmux$2186_Y, Q = \memory.mem.row_9.cell_9.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_9.\cell_8.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_9.\cell_8.$procmux$2186_Y, Q = \memory.mem.row_9.cell_8.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3224 ($sdff) from module top (D = $flatten\memory.\mem.\row_9.\cell_8.$procmux$2186_Y, Q = \memory.mem.row_9.cell_8.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_9.\cell_7.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_9.\cell_7.$procmux$2186_Y, Q = \memory.mem.row_9.cell_7.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3228 ($sdff) from module top (D = $flatten\memory.\mem.\row_9.\cell_7.$procmux$2186_Y, Q = \memory.mem.row_9.cell_7.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_9.\cell_6.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_9.\cell_6.$procmux$2186_Y, Q = \memory.mem.row_9.cell_6.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3232 ($sdff) from module top (D = $flatten\memory.\mem.\row_9.\cell_6.$procmux$2186_Y, Q = \memory.mem.row_9.cell_6.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_9.\cell_5.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_9.\cell_5.$procmux$2186_Y, Q = \memory.mem.row_9.cell_5.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3236 ($sdff) from module top (D = $flatten\memory.\mem.\row_9.\cell_5.$procmux$2186_Y, Q = \memory.mem.row_9.cell_5.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_9.\cell_4.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_9.\cell_4.$procmux$2186_Y, Q = \memory.mem.row_9.cell_4.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3240 ($sdff) from module top (D = $flatten\memory.\mem.\row_9.\cell_4.$procmux$2186_Y, Q = \memory.mem.row_9.cell_4.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_9.\cell_3.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_9.\cell_3.$procmux$2186_Y, Q = \memory.mem.row_9.cell_3.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3244 ($sdff) from module top (D = $flatten\memory.\mem.\row_9.\cell_3.$procmux$2186_Y, Q = \memory.mem.row_9.cell_3.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_9.\cell_2.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_9.\cell_2.$procmux$2186_Y, Q = \memory.mem.row_9.cell_2.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3248 ($sdff) from module top (D = $flatten\memory.\mem.\row_9.\cell_2.$procmux$2186_Y, Q = \memory.mem.row_9.cell_2.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_9.\cell_11.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_9.\cell_11.$procmux$2186_Y, Q = \memory.mem.row_9.cell_11.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3252 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_9.cell_11.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_9.\cell_10.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_9.\cell_10.$procmux$2186_Y, Q = \memory.mem.row_9.cell_10.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3254 ($sdff) from module top (D = $flatten\memory.\mem.\row_9.\cell_10.$procmux$2186_Y, Q = \memory.mem.row_9.cell_10.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_9.\cell_1.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_9.\cell_1.$procmux$2186_Y, Q = \memory.mem.row_9.cell_1.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3258 ($sdff) from module top (D = $flatten\memory.\mem.\row_9.\cell_1.$procmux$2186_Y, Q = \memory.mem.row_9.cell_1.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_9.\cell_0.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_9.\cell_0.$procmux$2186_Y, Q = \memory.mem.row_9.cell_0.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3262 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_9.cell_0.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_8.\cell_9.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_8.\cell_9.$procmux$2186_Y, Q = \memory.mem.row_8.cell_9.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3264 ($sdff) from module top (D = $flatten\memory.\mem.\row_8.\cell_9.$procmux$2186_Y, Q = \memory.mem.row_8.cell_9.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_8.\cell_8.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_8.\cell_8.$procmux$2186_Y, Q = \memory.mem.row_8.cell_8.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3268 ($sdff) from module top (D = $flatten\memory.\mem.\row_8.\cell_8.$procmux$2186_Y, Q = \memory.mem.row_8.cell_8.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_8.\cell_7.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_8.\cell_7.$procmux$2186_Y, Q = \memory.mem.row_8.cell_7.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3272 ($sdff) from module top (D = $flatten\memory.\mem.\row_8.\cell_7.$procmux$2186_Y, Q = \memory.mem.row_8.cell_7.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_8.\cell_6.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_8.\cell_6.$procmux$2186_Y, Q = \memory.mem.row_8.cell_6.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3276 ($sdff) from module top (D = $flatten\memory.\mem.\row_8.\cell_6.$procmux$2186_Y, Q = \memory.mem.row_8.cell_6.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_8.\cell_5.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_8.\cell_5.$procmux$2186_Y, Q = \memory.mem.row_8.cell_5.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3280 ($sdff) from module top (D = $flatten\memory.\mem.\row_8.\cell_5.$procmux$2186_Y, Q = \memory.mem.row_8.cell_5.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_8.\cell_4.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_8.\cell_4.$procmux$2186_Y, Q = \memory.mem.row_8.cell_4.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3284 ($sdff) from module top (D = $flatten\memory.\mem.\row_8.\cell_4.$procmux$2186_Y, Q = \memory.mem.row_8.cell_4.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_8.\cell_3.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_8.\cell_3.$procmux$2186_Y, Q = \memory.mem.row_8.cell_3.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3288 ($sdff) from module top (D = $flatten\memory.\mem.\row_8.\cell_3.$procmux$2186_Y, Q = \memory.mem.row_8.cell_3.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_8.\cell_2.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_8.\cell_2.$procmux$2186_Y, Q = \memory.mem.row_8.cell_2.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3292 ($sdff) from module top (D = $flatten\memory.\mem.\row_8.\cell_2.$procmux$2186_Y, Q = \memory.mem.row_8.cell_2.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_8.\cell_11.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_8.\cell_11.$procmux$2186_Y, Q = \memory.mem.row_8.cell_11.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3296 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_8.cell_11.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_8.\cell_10.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_8.\cell_10.$procmux$2186_Y, Q = \memory.mem.row_8.cell_10.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3298 ($sdff) from module top (D = $flatten\memory.\mem.\row_8.\cell_10.$procmux$2186_Y, Q = \memory.mem.row_8.cell_10.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_8.\cell_1.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_8.\cell_1.$procmux$2186_Y, Q = \memory.mem.row_8.cell_1.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3302 ($sdff) from module top (D = $flatten\memory.\mem.\row_8.\cell_1.$procmux$2186_Y, Q = \memory.mem.row_8.cell_1.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_8.\cell_0.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_8.\cell_0.$procmux$2186_Y, Q = \memory.mem.row_8.cell_0.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3306 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_8.cell_0.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_7.\cell_9.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_7.\cell_9.$procmux$2186_Y, Q = \memory.mem.row_7.cell_9.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3308 ($sdff) from module top (D = $flatten\memory.\mem.\row_7.\cell_9.$procmux$2186_Y, Q = \memory.mem.row_7.cell_9.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_7.\cell_8.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_7.\cell_8.$procmux$2186_Y, Q = \memory.mem.row_7.cell_8.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3312 ($sdff) from module top (D = $flatten\memory.\mem.\row_7.\cell_8.$procmux$2186_Y, Q = \memory.mem.row_7.cell_8.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_7.\cell_7.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_7.\cell_7.$procmux$2186_Y, Q = \memory.mem.row_7.cell_7.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3316 ($sdff) from module top (D = $flatten\memory.\mem.\row_7.\cell_7.$procmux$2186_Y, Q = \memory.mem.row_7.cell_7.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_7.\cell_6.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_7.\cell_6.$procmux$2186_Y, Q = \memory.mem.row_7.cell_6.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3320 ($sdff) from module top (D = $flatten\memory.\mem.\row_7.\cell_6.$procmux$2186_Y, Q = \memory.mem.row_7.cell_6.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_7.\cell_5.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_7.\cell_5.$procmux$2186_Y, Q = \memory.mem.row_7.cell_5.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3324 ($sdff) from module top (D = $flatten\memory.\mem.\row_7.\cell_5.$procmux$2186_Y, Q = \memory.mem.row_7.cell_5.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_7.\cell_4.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_7.\cell_4.$procmux$2186_Y, Q = \memory.mem.row_7.cell_4.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3328 ($sdff) from module top (D = $flatten\memory.\mem.\row_7.\cell_4.$procmux$2186_Y, Q = \memory.mem.row_7.cell_4.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_7.\cell_3.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_7.\cell_3.$procmux$2186_Y, Q = \memory.mem.row_7.cell_3.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3332 ($sdff) from module top (D = $flatten\memory.\mem.\row_7.\cell_3.$procmux$2186_Y, Q = \memory.mem.row_7.cell_3.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_7.\cell_2.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_7.\cell_2.$procmux$2186_Y, Q = \memory.mem.row_7.cell_2.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3336 ($sdff) from module top (D = $flatten\memory.\mem.\row_7.\cell_2.$procmux$2186_Y, Q = \memory.mem.row_7.cell_2.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_7.\cell_11.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_7.\cell_11.$procmux$2186_Y, Q = \memory.mem.row_7.cell_11.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3340 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_7.cell_11.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_7.\cell_10.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_7.\cell_10.$procmux$2186_Y, Q = \memory.mem.row_7.cell_10.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3342 ($sdff) from module top (D = $flatten\memory.\mem.\row_7.\cell_10.$procmux$2186_Y, Q = \memory.mem.row_7.cell_10.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_7.\cell_1.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_7.\cell_1.$procmux$2186_Y, Q = \memory.mem.row_7.cell_1.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3346 ($sdff) from module top (D = $flatten\memory.\mem.\row_7.\cell_1.$procmux$2186_Y, Q = \memory.mem.row_7.cell_1.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_7.\cell_0.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_7.\cell_0.$procmux$2186_Y, Q = \memory.mem.row_7.cell_0.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3350 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_7.cell_0.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_6.\cell_9.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_6.\cell_9.$procmux$2186_Y, Q = \memory.mem.row_6.cell_9.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3352 ($sdff) from module top (D = $flatten\memory.\mem.\row_6.\cell_9.$procmux$2186_Y, Q = \memory.mem.row_6.cell_9.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_6.\cell_8.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_6.\cell_8.$procmux$2186_Y, Q = \memory.mem.row_6.cell_8.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3356 ($sdff) from module top (D = $flatten\memory.\mem.\row_6.\cell_8.$procmux$2186_Y, Q = \memory.mem.row_6.cell_8.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_6.\cell_7.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_6.\cell_7.$procmux$2186_Y, Q = \memory.mem.row_6.cell_7.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3360 ($sdff) from module top (D = $flatten\memory.\mem.\row_6.\cell_7.$procmux$2186_Y, Q = \memory.mem.row_6.cell_7.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_6.\cell_6.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_6.\cell_6.$procmux$2186_Y, Q = \memory.mem.row_6.cell_6.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3364 ($sdff) from module top (D = $flatten\memory.\mem.\row_6.\cell_6.$procmux$2186_Y, Q = \memory.mem.row_6.cell_6.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_6.\cell_5.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_6.\cell_5.$procmux$2186_Y, Q = \memory.mem.row_6.cell_5.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3368 ($sdff) from module top (D = $flatten\memory.\mem.\row_6.\cell_5.$procmux$2186_Y, Q = \memory.mem.row_6.cell_5.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_6.\cell_4.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_6.\cell_4.$procmux$2186_Y, Q = \memory.mem.row_6.cell_4.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3372 ($sdff) from module top (D = $flatten\memory.\mem.\row_6.\cell_4.$procmux$2186_Y, Q = \memory.mem.row_6.cell_4.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_6.\cell_3.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_6.\cell_3.$procmux$2186_Y, Q = \memory.mem.row_6.cell_3.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3376 ($sdff) from module top (D = $flatten\memory.\mem.\row_6.\cell_3.$procmux$2186_Y, Q = \memory.mem.row_6.cell_3.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_6.\cell_2.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_6.\cell_2.$procmux$2186_Y, Q = \memory.mem.row_6.cell_2.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3380 ($sdff) from module top (D = $flatten\memory.\mem.\row_6.\cell_2.$procmux$2186_Y, Q = \memory.mem.row_6.cell_2.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_6.\cell_11.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_6.\cell_11.$procmux$2186_Y, Q = \memory.mem.row_6.cell_11.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3384 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_6.cell_11.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_6.\cell_10.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_6.\cell_10.$procmux$2186_Y, Q = \memory.mem.row_6.cell_10.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3386 ($sdff) from module top (D = $flatten\memory.\mem.\row_6.\cell_10.$procmux$2186_Y, Q = \memory.mem.row_6.cell_10.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_6.\cell_1.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_6.\cell_1.$procmux$2186_Y, Q = \memory.mem.row_6.cell_1.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3390 ($sdff) from module top (D = $flatten\memory.\mem.\row_6.\cell_1.$procmux$2186_Y, Q = \memory.mem.row_6.cell_1.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_6.\cell_0.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_6.\cell_0.$procmux$2186_Y, Q = \memory.mem.row_6.cell_0.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3394 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_6.cell_0.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_5.\cell_9.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_5.\cell_9.$procmux$2186_Y, Q = \memory.mem.row_5.cell_9.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3396 ($sdff) from module top (D = $flatten\memory.\mem.\row_5.\cell_9.$procmux$2186_Y, Q = \memory.mem.row_5.cell_9.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_5.\cell_8.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_5.\cell_8.$procmux$2186_Y, Q = \memory.mem.row_5.cell_8.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3400 ($sdff) from module top (D = $flatten\memory.\mem.\row_5.\cell_8.$procmux$2186_Y, Q = \memory.mem.row_5.cell_8.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_5.\cell_7.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_5.\cell_7.$procmux$2186_Y, Q = \memory.mem.row_5.cell_7.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3404 ($sdff) from module top (D = $flatten\memory.\mem.\row_5.\cell_7.$procmux$2186_Y, Q = \memory.mem.row_5.cell_7.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_5.\cell_6.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_5.\cell_6.$procmux$2186_Y, Q = \memory.mem.row_5.cell_6.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3408 ($sdff) from module top (D = $flatten\memory.\mem.\row_5.\cell_6.$procmux$2186_Y, Q = \memory.mem.row_5.cell_6.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_5.\cell_5.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_5.\cell_5.$procmux$2186_Y, Q = \memory.mem.row_5.cell_5.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3412 ($sdff) from module top (D = $flatten\memory.\mem.\row_5.\cell_5.$procmux$2186_Y, Q = \memory.mem.row_5.cell_5.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_5.\cell_4.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_5.\cell_4.$procmux$2186_Y, Q = \memory.mem.row_5.cell_4.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3416 ($sdff) from module top (D = $flatten\memory.\mem.\row_5.\cell_4.$procmux$2186_Y, Q = \memory.mem.row_5.cell_4.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_5.\cell_3.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_5.\cell_3.$procmux$2186_Y, Q = \memory.mem.row_5.cell_3.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3420 ($sdff) from module top (D = $flatten\memory.\mem.\row_5.\cell_3.$procmux$2186_Y, Q = \memory.mem.row_5.cell_3.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_5.\cell_2.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_5.\cell_2.$procmux$2186_Y, Q = \memory.mem.row_5.cell_2.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3424 ($sdff) from module top (D = $flatten\memory.\mem.\row_5.\cell_2.$procmux$2186_Y, Q = \memory.mem.row_5.cell_2.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_5.\cell_11.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_5.\cell_11.$procmux$2186_Y, Q = \memory.mem.row_5.cell_11.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3428 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_5.cell_11.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_5.\cell_10.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_5.\cell_10.$procmux$2186_Y, Q = \memory.mem.row_5.cell_10.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3430 ($sdff) from module top (D = $flatten\memory.\mem.\row_5.\cell_10.$procmux$2186_Y, Q = \memory.mem.row_5.cell_10.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_5.\cell_1.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_5.\cell_1.$procmux$2186_Y, Q = \memory.mem.row_5.cell_1.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3434 ($sdff) from module top (D = $flatten\memory.\mem.\row_5.\cell_1.$procmux$2186_Y, Q = \memory.mem.row_5.cell_1.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_5.\cell_0.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_5.\cell_0.$procmux$2186_Y, Q = \memory.mem.row_5.cell_0.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3438 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_5.cell_0.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_4.\cell_9.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_4.\cell_9.$procmux$2186_Y, Q = \memory.mem.row_4.cell_9.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3440 ($sdff) from module top (D = $flatten\memory.\mem.\row_4.\cell_9.$procmux$2186_Y, Q = \memory.mem.row_4.cell_9.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_4.\cell_8.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_4.\cell_8.$procmux$2186_Y, Q = \memory.mem.row_4.cell_8.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3444 ($sdff) from module top (D = $flatten\memory.\mem.\row_4.\cell_8.$procmux$2186_Y, Q = \memory.mem.row_4.cell_8.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_4.\cell_7.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_4.\cell_7.$procmux$2186_Y, Q = \memory.mem.row_4.cell_7.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3448 ($sdff) from module top (D = $flatten\memory.\mem.\row_4.\cell_7.$procmux$2186_Y, Q = \memory.mem.row_4.cell_7.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_4.\cell_6.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_4.\cell_6.$procmux$2186_Y, Q = \memory.mem.row_4.cell_6.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3452 ($sdff) from module top (D = $flatten\memory.\mem.\row_4.\cell_6.$procmux$2186_Y, Q = \memory.mem.row_4.cell_6.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_4.\cell_5.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_4.\cell_5.$procmux$2186_Y, Q = \memory.mem.row_4.cell_5.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3456 ($sdff) from module top (D = $flatten\memory.\mem.\row_4.\cell_5.$procmux$2186_Y, Q = \memory.mem.row_4.cell_5.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_4.\cell_4.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_4.\cell_4.$procmux$2186_Y, Q = \memory.mem.row_4.cell_4.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3460 ($sdff) from module top (D = $flatten\memory.\mem.\row_4.\cell_4.$procmux$2186_Y, Q = \memory.mem.row_4.cell_4.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_4.\cell_3.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_4.\cell_3.$procmux$2186_Y, Q = \memory.mem.row_4.cell_3.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3464 ($sdff) from module top (D = $flatten\memory.\mem.\row_4.\cell_3.$procmux$2186_Y, Q = \memory.mem.row_4.cell_3.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_4.\cell_2.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_4.\cell_2.$procmux$2186_Y, Q = \memory.mem.row_4.cell_2.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3468 ($sdff) from module top (D = $flatten\memory.\mem.\row_4.\cell_2.$procmux$2186_Y, Q = \memory.mem.row_4.cell_2.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_4.\cell_11.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_4.\cell_11.$procmux$2186_Y, Q = \memory.mem.row_4.cell_11.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3472 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_4.cell_11.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_4.\cell_10.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_4.\cell_10.$procmux$2186_Y, Q = \memory.mem.row_4.cell_10.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3474 ($sdff) from module top (D = $flatten\memory.\mem.\row_4.\cell_10.$procmux$2186_Y, Q = \memory.mem.row_4.cell_10.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_4.\cell_1.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_4.\cell_1.$procmux$2186_Y, Q = \memory.mem.row_4.cell_1.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3478 ($sdff) from module top (D = $flatten\memory.\mem.\row_4.\cell_1.$procmux$2186_Y, Q = \memory.mem.row_4.cell_1.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_4.\cell_0.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_4.\cell_0.$procmux$2186_Y, Q = \memory.mem.row_4.cell_0.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3482 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_4.cell_0.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_3.\cell_9.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_3.\cell_9.$procmux$2186_Y, Q = \memory.mem.row_3.cell_9.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3484 ($sdff) from module top (D = $flatten\memory.\mem.\row_3.\cell_9.$procmux$2186_Y, Q = \memory.mem.row_3.cell_9.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_3.\cell_8.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_3.\cell_8.$procmux$2186_Y, Q = \memory.mem.row_3.cell_8.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3488 ($sdff) from module top (D = $flatten\memory.\mem.\row_3.\cell_8.$procmux$2186_Y, Q = \memory.mem.row_3.cell_8.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_3.\cell_7.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_3.\cell_7.$procmux$2186_Y, Q = \memory.mem.row_3.cell_7.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3492 ($sdff) from module top (D = $flatten\memory.\mem.\row_3.\cell_7.$procmux$2186_Y, Q = \memory.mem.row_3.cell_7.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_3.\cell_6.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_3.\cell_6.$procmux$2186_Y, Q = \memory.mem.row_3.cell_6.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3496 ($sdff) from module top (D = $flatten\memory.\mem.\row_3.\cell_6.$procmux$2186_Y, Q = \memory.mem.row_3.cell_6.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_3.\cell_5.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_3.\cell_5.$procmux$2186_Y, Q = \memory.mem.row_3.cell_5.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3500 ($sdff) from module top (D = $flatten\memory.\mem.\row_3.\cell_5.$procmux$2186_Y, Q = \memory.mem.row_3.cell_5.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_3.\cell_4.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_3.\cell_4.$procmux$2186_Y, Q = \memory.mem.row_3.cell_4.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3504 ($sdff) from module top (D = $flatten\memory.\mem.\row_3.\cell_4.$procmux$2186_Y, Q = \memory.mem.row_3.cell_4.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_3.\cell_3.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_3.\cell_3.$procmux$2186_Y, Q = \memory.mem.row_3.cell_3.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3508 ($sdff) from module top (D = $flatten\memory.\mem.\row_3.\cell_3.$procmux$2186_Y, Q = \memory.mem.row_3.cell_3.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_3.\cell_2.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_3.\cell_2.$procmux$2186_Y, Q = \memory.mem.row_3.cell_2.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3512 ($sdff) from module top (D = $flatten\memory.\mem.\row_3.\cell_2.$procmux$2186_Y, Q = \memory.mem.row_3.cell_2.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_3.\cell_11.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_3.\cell_11.$procmux$2186_Y, Q = \memory.mem.row_3.cell_11.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3516 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_3.cell_11.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_3.\cell_10.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_3.\cell_10.$procmux$2186_Y, Q = \memory.mem.row_3.cell_10.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3518 ($sdff) from module top (D = $flatten\memory.\mem.\row_3.\cell_10.$procmux$2186_Y, Q = \memory.mem.row_3.cell_10.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_3.\cell_1.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_3.\cell_1.$procmux$2186_Y, Q = \memory.mem.row_3.cell_1.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3522 ($sdff) from module top (D = $flatten\memory.\mem.\row_3.\cell_1.$procmux$2186_Y, Q = \memory.mem.row_3.cell_1.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_3.\cell_0.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_3.\cell_0.$procmux$2186_Y, Q = \memory.mem.row_3.cell_0.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3526 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_3.cell_0.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_20.\cell_9.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_20.\cell_9.$procmux$2186_Y, Q = \memory.mem.row_20.cell_9.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3528 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_20.cell_9.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_20.\cell_8.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_20.\cell_8.$procmux$2186_Y, Q = \memory.mem.row_20.cell_8.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3530 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_20.cell_8.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_20.\cell_7.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_20.\cell_7.$procmux$2186_Y, Q = \memory.mem.row_20.cell_7.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3532 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_20.cell_7.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_20.\cell_6.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_20.\cell_6.$procmux$2186_Y, Q = \memory.mem.row_20.cell_6.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3534 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_20.cell_6.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_20.\cell_5.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_20.\cell_5.$procmux$2186_Y, Q = \memory.mem.row_20.cell_5.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3536 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_20.cell_5.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_20.\cell_4.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_20.\cell_4.$procmux$2186_Y, Q = \memory.mem.row_20.cell_4.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3538 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_20.cell_4.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_20.\cell_3.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_20.\cell_3.$procmux$2186_Y, Q = \memory.mem.row_20.cell_3.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3540 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_20.cell_3.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_20.\cell_2.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_20.\cell_2.$procmux$2186_Y, Q = \memory.mem.row_20.cell_2.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3542 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_20.cell_2.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_20.\cell_11.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_20.\cell_11.$procmux$2186_Y, Q = \memory.mem.row_20.cell_11.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3544 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_20.cell_11.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_20.\cell_10.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_20.\cell_10.$procmux$2186_Y, Q = \memory.mem.row_20.cell_10.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3546 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_20.cell_10.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_20.\cell_1.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_20.\cell_1.$procmux$2186_Y, Q = \memory.mem.row_20.cell_1.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3548 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_20.cell_1.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_20.\cell_0.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_20.\cell_0.$procmux$2186_Y, Q = \memory.mem.row_20.cell_0.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3550 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_20.cell_0.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_2.\cell_9.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_2.\cell_9.$procmux$2186_Y, Q = \memory.mem.row_2.cell_9.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3552 ($sdff) from module top (D = $flatten\memory.\mem.\row_2.\cell_9.$procmux$2186_Y, Q = \memory.mem.row_2.cell_9.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_2.\cell_8.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_2.\cell_8.$procmux$2186_Y, Q = \memory.mem.row_2.cell_8.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3556 ($sdff) from module top (D = $flatten\memory.\mem.\row_2.\cell_8.$procmux$2186_Y, Q = \memory.mem.row_2.cell_8.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_2.\cell_7.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_2.\cell_7.$procmux$2186_Y, Q = \memory.mem.row_2.cell_7.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3560 ($sdff) from module top (D = $flatten\memory.\mem.\row_2.\cell_7.$procmux$2186_Y, Q = \memory.mem.row_2.cell_7.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_2.\cell_6.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_2.\cell_6.$procmux$2186_Y, Q = \memory.mem.row_2.cell_6.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3564 ($sdff) from module top (D = $flatten\memory.\mem.\row_2.\cell_6.$procmux$2186_Y, Q = \memory.mem.row_2.cell_6.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_2.\cell_5.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_2.\cell_5.$procmux$2186_Y, Q = \memory.mem.row_2.cell_5.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3568 ($sdff) from module top (D = $flatten\memory.\mem.\row_2.\cell_5.$procmux$2186_Y, Q = \memory.mem.row_2.cell_5.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_2.\cell_4.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_2.\cell_4.$procmux$2186_Y, Q = \memory.mem.row_2.cell_4.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3572 ($sdff) from module top (D = $flatten\memory.\mem.\row_2.\cell_4.$procmux$2186_Y, Q = \memory.mem.row_2.cell_4.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_2.\cell_3.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_2.\cell_3.$procmux$2186_Y, Q = \memory.mem.row_2.cell_3.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3576 ($sdff) from module top (D = $flatten\memory.\mem.\row_2.\cell_3.$procmux$2186_Y, Q = \memory.mem.row_2.cell_3.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_2.\cell_2.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_2.\cell_2.$procmux$2186_Y, Q = \memory.mem.row_2.cell_2.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3580 ($sdff) from module top (D = $flatten\memory.\mem.\row_2.\cell_2.$procmux$2186_Y, Q = \memory.mem.row_2.cell_2.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_2.\cell_11.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_2.\cell_11.$procmux$2186_Y, Q = \memory.mem.row_2.cell_11.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3584 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_2.cell_11.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_2.\cell_10.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_2.\cell_10.$procmux$2186_Y, Q = \memory.mem.row_2.cell_10.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3586 ($sdff) from module top (D = $flatten\memory.\mem.\row_2.\cell_10.$procmux$2186_Y, Q = \memory.mem.row_2.cell_10.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_2.\cell_1.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_2.\cell_1.$procmux$2186_Y, Q = \memory.mem.row_2.cell_1.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3590 ($sdff) from module top (D = $flatten\memory.\mem.\row_2.\cell_1.$procmux$2186_Y, Q = \memory.mem.row_2.cell_1.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_2.\cell_0.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_2.\cell_0.$procmux$2186_Y, Q = \memory.mem.row_2.cell_0.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3594 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_2.cell_0.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_19.\cell_9.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_19.\cell_9.$procmux$2186_Y, Q = \memory.mem.row_19.cell_9.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3596 ($sdff) from module top (D = $flatten\memory.\mem.\row_19.\cell_9.$procmux$2186_Y, Q = \memory.mem.row_19.cell_9.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_19.\cell_8.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_19.\cell_8.$procmux$2186_Y, Q = \memory.mem.row_19.cell_8.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3600 ($sdff) from module top (D = $flatten\memory.\mem.\row_19.\cell_8.$procmux$2186_Y, Q = \memory.mem.row_19.cell_8.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_19.\cell_7.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_19.\cell_7.$procmux$2186_Y, Q = \memory.mem.row_19.cell_7.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3604 ($sdff) from module top (D = $flatten\memory.\mem.\row_19.\cell_7.$procmux$2186_Y, Q = \memory.mem.row_19.cell_7.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_19.\cell_6.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_19.\cell_6.$procmux$2186_Y, Q = \memory.mem.row_19.cell_6.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3608 ($sdff) from module top (D = $flatten\memory.\mem.\row_19.\cell_6.$procmux$2186_Y, Q = \memory.mem.row_19.cell_6.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_19.\cell_5.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_19.\cell_5.$procmux$2186_Y, Q = \memory.mem.row_19.cell_5.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3612 ($sdff) from module top (D = $flatten\memory.\mem.\row_19.\cell_5.$procmux$2186_Y, Q = \memory.mem.row_19.cell_5.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_19.\cell_4.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_19.\cell_4.$procmux$2186_Y, Q = \memory.mem.row_19.cell_4.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3616 ($sdff) from module top (D = $flatten\memory.\mem.\row_19.\cell_4.$procmux$2186_Y, Q = \memory.mem.row_19.cell_4.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_19.\cell_3.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_19.\cell_3.$procmux$2186_Y, Q = \memory.mem.row_19.cell_3.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3620 ($sdff) from module top (D = $flatten\memory.\mem.\row_19.\cell_3.$procmux$2186_Y, Q = \memory.mem.row_19.cell_3.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_19.\cell_2.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_19.\cell_2.$procmux$2186_Y, Q = \memory.mem.row_19.cell_2.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3624 ($sdff) from module top (D = $flatten\memory.\mem.\row_19.\cell_2.$procmux$2186_Y, Q = \memory.mem.row_19.cell_2.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_19.\cell_11.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_19.\cell_11.$procmux$2186_Y, Q = \memory.mem.row_19.cell_11.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3628 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_19.cell_11.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_19.\cell_10.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_19.\cell_10.$procmux$2186_Y, Q = \memory.mem.row_19.cell_10.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3630 ($sdff) from module top (D = $flatten\memory.\mem.\row_19.\cell_10.$procmux$2186_Y, Q = \memory.mem.row_19.cell_10.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_19.\cell_1.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_19.\cell_1.$procmux$2186_Y, Q = \memory.mem.row_19.cell_1.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3634 ($sdff) from module top (D = $flatten\memory.\mem.\row_19.\cell_1.$procmux$2186_Y, Q = \memory.mem.row_19.cell_1.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_19.\cell_0.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_19.\cell_0.$procmux$2186_Y, Q = \memory.mem.row_19.cell_0.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3638 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_19.cell_0.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_18.\cell_9.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_18.\cell_9.$procmux$2186_Y, Q = \memory.mem.row_18.cell_9.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3640 ($sdff) from module top (D = $flatten\memory.\mem.\row_18.\cell_9.$procmux$2186_Y, Q = \memory.mem.row_18.cell_9.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_18.\cell_8.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_18.\cell_8.$procmux$2186_Y, Q = \memory.mem.row_18.cell_8.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3644 ($sdff) from module top (D = $flatten\memory.\mem.\row_18.\cell_8.$procmux$2186_Y, Q = \memory.mem.row_18.cell_8.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_18.\cell_7.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_18.\cell_7.$procmux$2186_Y, Q = \memory.mem.row_18.cell_7.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3648 ($sdff) from module top (D = $flatten\memory.\mem.\row_18.\cell_7.$procmux$2186_Y, Q = \memory.mem.row_18.cell_7.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_18.\cell_6.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_18.\cell_6.$procmux$2186_Y, Q = \memory.mem.row_18.cell_6.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3652 ($sdff) from module top (D = $flatten\memory.\mem.\row_18.\cell_6.$procmux$2186_Y, Q = \memory.mem.row_18.cell_6.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_18.\cell_5.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_18.\cell_5.$procmux$2186_Y, Q = \memory.mem.row_18.cell_5.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3656 ($sdff) from module top (D = $flatten\memory.\mem.\row_18.\cell_5.$procmux$2186_Y, Q = \memory.mem.row_18.cell_5.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_18.\cell_4.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_18.\cell_4.$procmux$2186_Y, Q = \memory.mem.row_18.cell_4.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3660 ($sdff) from module top (D = $flatten\memory.\mem.\row_18.\cell_4.$procmux$2186_Y, Q = \memory.mem.row_18.cell_4.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_18.\cell_3.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_18.\cell_3.$procmux$2186_Y, Q = \memory.mem.row_18.cell_3.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3664 ($sdff) from module top (D = $flatten\memory.\mem.\row_18.\cell_3.$procmux$2186_Y, Q = \memory.mem.row_18.cell_3.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_18.\cell_2.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_18.\cell_2.$procmux$2186_Y, Q = \memory.mem.row_18.cell_2.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3668 ($sdff) from module top (D = $flatten\memory.\mem.\row_18.\cell_2.$procmux$2186_Y, Q = \memory.mem.row_18.cell_2.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_18.\cell_11.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_18.\cell_11.$procmux$2186_Y, Q = \memory.mem.row_18.cell_11.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3672 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_18.cell_11.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_18.\cell_10.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_18.\cell_10.$procmux$2186_Y, Q = \memory.mem.row_18.cell_10.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3674 ($sdff) from module top (D = $flatten\memory.\mem.\row_18.\cell_10.$procmux$2186_Y, Q = \memory.mem.row_18.cell_10.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_18.\cell_1.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_18.\cell_1.$procmux$2186_Y, Q = \memory.mem.row_18.cell_1.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3678 ($sdff) from module top (D = $flatten\memory.\mem.\row_18.\cell_1.$procmux$2186_Y, Q = \memory.mem.row_18.cell_1.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_18.\cell_0.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_18.\cell_0.$procmux$2186_Y, Q = \memory.mem.row_18.cell_0.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3682 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_18.cell_0.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_17.\cell_9.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_17.\cell_9.$procmux$2186_Y, Q = \memory.mem.row_17.cell_9.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3684 ($sdff) from module top (D = $flatten\memory.\mem.\row_17.\cell_9.$procmux$2186_Y, Q = \memory.mem.row_17.cell_9.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_17.\cell_8.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_17.\cell_8.$procmux$2186_Y, Q = \memory.mem.row_17.cell_8.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3688 ($sdff) from module top (D = $flatten\memory.\mem.\row_17.\cell_8.$procmux$2186_Y, Q = \memory.mem.row_17.cell_8.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_17.\cell_7.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_17.\cell_7.$procmux$2186_Y, Q = \memory.mem.row_17.cell_7.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3692 ($sdff) from module top (D = $flatten\memory.\mem.\row_17.\cell_7.$procmux$2186_Y, Q = \memory.mem.row_17.cell_7.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_17.\cell_6.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_17.\cell_6.$procmux$2186_Y, Q = \memory.mem.row_17.cell_6.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3696 ($sdff) from module top (D = $flatten\memory.\mem.\row_17.\cell_6.$procmux$2186_Y, Q = \memory.mem.row_17.cell_6.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_17.\cell_5.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_17.\cell_5.$procmux$2186_Y, Q = \memory.mem.row_17.cell_5.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3700 ($sdff) from module top (D = $flatten\memory.\mem.\row_17.\cell_5.$procmux$2186_Y, Q = \memory.mem.row_17.cell_5.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_17.\cell_4.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_17.\cell_4.$procmux$2186_Y, Q = \memory.mem.row_17.cell_4.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3704 ($sdff) from module top (D = $flatten\memory.\mem.\row_17.\cell_4.$procmux$2186_Y, Q = \memory.mem.row_17.cell_4.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_17.\cell_3.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_17.\cell_3.$procmux$2186_Y, Q = \memory.mem.row_17.cell_3.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3708 ($sdff) from module top (D = $flatten\memory.\mem.\row_17.\cell_3.$procmux$2186_Y, Q = \memory.mem.row_17.cell_3.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_17.\cell_2.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_17.\cell_2.$procmux$2186_Y, Q = \memory.mem.row_17.cell_2.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3712 ($sdff) from module top (D = $flatten\memory.\mem.\row_17.\cell_2.$procmux$2186_Y, Q = \memory.mem.row_17.cell_2.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_17.\cell_11.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_17.\cell_11.$procmux$2186_Y, Q = \memory.mem.row_17.cell_11.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3716 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_17.cell_11.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_17.\cell_10.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_17.\cell_10.$procmux$2186_Y, Q = \memory.mem.row_17.cell_10.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3718 ($sdff) from module top (D = $flatten\memory.\mem.\row_17.\cell_10.$procmux$2186_Y, Q = \memory.mem.row_17.cell_10.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_17.\cell_1.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_17.\cell_1.$procmux$2186_Y, Q = \memory.mem.row_17.cell_1.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3722 ($sdff) from module top (D = $flatten\memory.\mem.\row_17.\cell_1.$procmux$2186_Y, Q = \memory.mem.row_17.cell_1.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_17.\cell_0.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_17.\cell_0.$procmux$2186_Y, Q = \memory.mem.row_17.cell_0.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3726 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_17.cell_0.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_16.\cell_9.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_16.\cell_9.$procmux$2186_Y, Q = \memory.mem.row_16.cell_9.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3728 ($sdff) from module top (D = $flatten\memory.\mem.\row_16.\cell_9.$procmux$2186_Y, Q = \memory.mem.row_16.cell_9.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_16.\cell_8.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_16.\cell_8.$procmux$2186_Y, Q = \memory.mem.row_16.cell_8.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3732 ($sdff) from module top (D = $flatten\memory.\mem.\row_16.\cell_8.$procmux$2186_Y, Q = \memory.mem.row_16.cell_8.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_16.\cell_7.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_16.\cell_7.$procmux$2186_Y, Q = \memory.mem.row_16.cell_7.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3736 ($sdff) from module top (D = $flatten\memory.\mem.\row_16.\cell_7.$procmux$2186_Y, Q = \memory.mem.row_16.cell_7.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_16.\cell_6.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_16.\cell_6.$procmux$2186_Y, Q = \memory.mem.row_16.cell_6.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3740 ($sdff) from module top (D = $flatten\memory.\mem.\row_16.\cell_6.$procmux$2186_Y, Q = \memory.mem.row_16.cell_6.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_16.\cell_5.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_16.\cell_5.$procmux$2186_Y, Q = \memory.mem.row_16.cell_5.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3744 ($sdff) from module top (D = $flatten\memory.\mem.\row_16.\cell_5.$procmux$2186_Y, Q = \memory.mem.row_16.cell_5.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_16.\cell_4.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_16.\cell_4.$procmux$2186_Y, Q = \memory.mem.row_16.cell_4.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3748 ($sdff) from module top (D = $flatten\memory.\mem.\row_16.\cell_4.$procmux$2186_Y, Q = \memory.mem.row_16.cell_4.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_16.\cell_3.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_16.\cell_3.$procmux$2186_Y, Q = \memory.mem.row_16.cell_3.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3752 ($sdff) from module top (D = $flatten\memory.\mem.\row_16.\cell_3.$procmux$2186_Y, Q = \memory.mem.row_16.cell_3.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_16.\cell_2.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_16.\cell_2.$procmux$2186_Y, Q = \memory.mem.row_16.cell_2.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3756 ($sdff) from module top (D = $flatten\memory.\mem.\row_16.\cell_2.$procmux$2186_Y, Q = \memory.mem.row_16.cell_2.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_16.\cell_11.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_16.\cell_11.$procmux$2186_Y, Q = \memory.mem.row_16.cell_11.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3760 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_16.cell_11.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_16.\cell_10.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_16.\cell_10.$procmux$2186_Y, Q = \memory.mem.row_16.cell_10.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3762 ($sdff) from module top (D = $flatten\memory.\mem.\row_16.\cell_10.$procmux$2186_Y, Q = \memory.mem.row_16.cell_10.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_16.\cell_1.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_16.\cell_1.$procmux$2186_Y, Q = \memory.mem.row_16.cell_1.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3766 ($sdff) from module top (D = $flatten\memory.\mem.\row_16.\cell_1.$procmux$2186_Y, Q = \memory.mem.row_16.cell_1.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_16.\cell_0.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_16.\cell_0.$procmux$2186_Y, Q = \memory.mem.row_16.cell_0.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3770 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_16.cell_0.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_15.\cell_9.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_15.\cell_9.$procmux$2186_Y, Q = \memory.mem.row_15.cell_9.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3772 ($sdff) from module top (D = $flatten\memory.\mem.\row_15.\cell_9.$procmux$2186_Y, Q = \memory.mem.row_15.cell_9.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_15.\cell_8.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_15.\cell_8.$procmux$2186_Y, Q = \memory.mem.row_15.cell_8.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3776 ($sdff) from module top (D = $flatten\memory.\mem.\row_15.\cell_8.$procmux$2186_Y, Q = \memory.mem.row_15.cell_8.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_15.\cell_7.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_15.\cell_7.$procmux$2186_Y, Q = \memory.mem.row_15.cell_7.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3780 ($sdff) from module top (D = $flatten\memory.\mem.\row_15.\cell_7.$procmux$2186_Y, Q = \memory.mem.row_15.cell_7.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_15.\cell_6.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_15.\cell_6.$procmux$2186_Y, Q = \memory.mem.row_15.cell_6.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3784 ($sdff) from module top (D = $flatten\memory.\mem.\row_15.\cell_6.$procmux$2186_Y, Q = \memory.mem.row_15.cell_6.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_15.\cell_5.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_15.\cell_5.$procmux$2186_Y, Q = \memory.mem.row_15.cell_5.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3788 ($sdff) from module top (D = $flatten\memory.\mem.\row_15.\cell_5.$procmux$2186_Y, Q = \memory.mem.row_15.cell_5.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_15.\cell_4.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_15.\cell_4.$procmux$2186_Y, Q = \memory.mem.row_15.cell_4.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3792 ($sdff) from module top (D = $flatten\memory.\mem.\row_15.\cell_4.$procmux$2186_Y, Q = \memory.mem.row_15.cell_4.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_15.\cell_3.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_15.\cell_3.$procmux$2186_Y, Q = \memory.mem.row_15.cell_3.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3796 ($sdff) from module top (D = $flatten\memory.\mem.\row_15.\cell_3.$procmux$2186_Y, Q = \memory.mem.row_15.cell_3.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_15.\cell_2.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_15.\cell_2.$procmux$2186_Y, Q = \memory.mem.row_15.cell_2.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3800 ($sdff) from module top (D = $flatten\memory.\mem.\row_15.\cell_2.$procmux$2186_Y, Q = \memory.mem.row_15.cell_2.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_15.\cell_11.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_15.\cell_11.$procmux$2186_Y, Q = \memory.mem.row_15.cell_11.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3804 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_15.cell_11.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_15.\cell_10.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_15.\cell_10.$procmux$2186_Y, Q = \memory.mem.row_15.cell_10.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3806 ($sdff) from module top (D = $flatten\memory.\mem.\row_15.\cell_10.$procmux$2186_Y, Q = \memory.mem.row_15.cell_10.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_15.\cell_1.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_15.\cell_1.$procmux$2186_Y, Q = \memory.mem.row_15.cell_1.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3810 ($sdff) from module top (D = $flatten\memory.\mem.\row_15.\cell_1.$procmux$2186_Y, Q = \memory.mem.row_15.cell_1.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_15.\cell_0.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_15.\cell_0.$procmux$2186_Y, Q = \memory.mem.row_15.cell_0.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3814 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_15.cell_0.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_14.\cell_9.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_14.\cell_9.$procmux$2186_Y, Q = \memory.mem.row_14.cell_9.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3816 ($sdff) from module top (D = $flatten\memory.\mem.\row_14.\cell_9.$procmux$2186_Y, Q = \memory.mem.row_14.cell_9.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_14.\cell_8.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_14.\cell_8.$procmux$2186_Y, Q = \memory.mem.row_14.cell_8.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3820 ($sdff) from module top (D = $flatten\memory.\mem.\row_14.\cell_8.$procmux$2186_Y, Q = \memory.mem.row_14.cell_8.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_14.\cell_7.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_14.\cell_7.$procmux$2186_Y, Q = \memory.mem.row_14.cell_7.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3824 ($sdff) from module top (D = $flatten\memory.\mem.\row_14.\cell_7.$procmux$2186_Y, Q = \memory.mem.row_14.cell_7.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_14.\cell_6.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_14.\cell_6.$procmux$2186_Y, Q = \memory.mem.row_14.cell_6.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3828 ($sdff) from module top (D = $flatten\memory.\mem.\row_14.\cell_6.$procmux$2186_Y, Q = \memory.mem.row_14.cell_6.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_14.\cell_5.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_14.\cell_5.$procmux$2186_Y, Q = \memory.mem.row_14.cell_5.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3832 ($sdff) from module top (D = $flatten\memory.\mem.\row_14.\cell_5.$procmux$2186_Y, Q = \memory.mem.row_14.cell_5.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_14.\cell_4.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_14.\cell_4.$procmux$2186_Y, Q = \memory.mem.row_14.cell_4.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3836 ($sdff) from module top (D = $flatten\memory.\mem.\row_14.\cell_4.$procmux$2186_Y, Q = \memory.mem.row_14.cell_4.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_14.\cell_3.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_14.\cell_3.$procmux$2186_Y, Q = \memory.mem.row_14.cell_3.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3840 ($sdff) from module top (D = $flatten\memory.\mem.\row_14.\cell_3.$procmux$2186_Y, Q = \memory.mem.row_14.cell_3.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_14.\cell_2.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_14.\cell_2.$procmux$2186_Y, Q = \memory.mem.row_14.cell_2.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3844 ($sdff) from module top (D = $flatten\memory.\mem.\row_14.\cell_2.$procmux$2186_Y, Q = \memory.mem.row_14.cell_2.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_14.\cell_11.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_14.\cell_11.$procmux$2186_Y, Q = \memory.mem.row_14.cell_11.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3848 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_14.cell_11.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_14.\cell_10.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_14.\cell_10.$procmux$2186_Y, Q = \memory.mem.row_14.cell_10.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3850 ($sdff) from module top (D = $flatten\memory.\mem.\row_14.\cell_10.$procmux$2186_Y, Q = \memory.mem.row_14.cell_10.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_14.\cell_1.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_14.\cell_1.$procmux$2186_Y, Q = \memory.mem.row_14.cell_1.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3854 ($sdff) from module top (D = $flatten\memory.\mem.\row_14.\cell_1.$procmux$2186_Y, Q = \memory.mem.row_14.cell_1.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_14.\cell_0.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_14.\cell_0.$procmux$2186_Y, Q = \memory.mem.row_14.cell_0.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3858 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_14.cell_0.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_13.\cell_9.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_13.\cell_9.$procmux$2186_Y, Q = \memory.mem.row_13.cell_9.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3860 ($sdff) from module top (D = $flatten\memory.\mem.\row_13.\cell_9.$procmux$2186_Y, Q = \memory.mem.row_13.cell_9.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_13.\cell_8.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_13.\cell_8.$procmux$2186_Y, Q = \memory.mem.row_13.cell_8.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3864 ($sdff) from module top (D = $flatten\memory.\mem.\row_13.\cell_8.$procmux$2186_Y, Q = \memory.mem.row_13.cell_8.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_13.\cell_7.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_13.\cell_7.$procmux$2186_Y, Q = \memory.mem.row_13.cell_7.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3868 ($sdff) from module top (D = $flatten\memory.\mem.\row_13.\cell_7.$procmux$2186_Y, Q = \memory.mem.row_13.cell_7.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_13.\cell_6.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_13.\cell_6.$procmux$2186_Y, Q = \memory.mem.row_13.cell_6.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3872 ($sdff) from module top (D = $flatten\memory.\mem.\row_13.\cell_6.$procmux$2186_Y, Q = \memory.mem.row_13.cell_6.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_13.\cell_5.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_13.\cell_5.$procmux$2186_Y, Q = \memory.mem.row_13.cell_5.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3876 ($sdff) from module top (D = $flatten\memory.\mem.\row_13.\cell_5.$procmux$2186_Y, Q = \memory.mem.row_13.cell_5.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_13.\cell_4.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_13.\cell_4.$procmux$2186_Y, Q = \memory.mem.row_13.cell_4.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3880 ($sdff) from module top (D = $flatten\memory.\mem.\row_13.\cell_4.$procmux$2186_Y, Q = \memory.mem.row_13.cell_4.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_13.\cell_3.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_13.\cell_3.$procmux$2186_Y, Q = \memory.mem.row_13.cell_3.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3884 ($sdff) from module top (D = $flatten\memory.\mem.\row_13.\cell_3.$procmux$2186_Y, Q = \memory.mem.row_13.cell_3.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_13.\cell_2.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_13.\cell_2.$procmux$2186_Y, Q = \memory.mem.row_13.cell_2.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3888 ($sdff) from module top (D = $flatten\memory.\mem.\row_13.\cell_2.$procmux$2186_Y, Q = \memory.mem.row_13.cell_2.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_13.\cell_11.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_13.\cell_11.$procmux$2186_Y, Q = \memory.mem.row_13.cell_11.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3892 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_13.cell_11.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_13.\cell_10.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_13.\cell_10.$procmux$2186_Y, Q = \memory.mem.row_13.cell_10.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3894 ($sdff) from module top (D = $flatten\memory.\mem.\row_13.\cell_10.$procmux$2186_Y, Q = \memory.mem.row_13.cell_10.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_13.\cell_1.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_13.\cell_1.$procmux$2186_Y, Q = \memory.mem.row_13.cell_1.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3898 ($sdff) from module top (D = $flatten\memory.\mem.\row_13.\cell_1.$procmux$2186_Y, Q = \memory.mem.row_13.cell_1.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_13.\cell_0.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_13.\cell_0.$procmux$2186_Y, Q = \memory.mem.row_13.cell_0.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3902 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_13.cell_0.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_12.\cell_9.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_12.\cell_9.$procmux$2186_Y, Q = \memory.mem.row_12.cell_9.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3904 ($sdff) from module top (D = $flatten\memory.\mem.\row_12.\cell_9.$procmux$2186_Y, Q = \memory.mem.row_12.cell_9.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_12.\cell_8.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_12.\cell_8.$procmux$2186_Y, Q = \memory.mem.row_12.cell_8.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3908 ($sdff) from module top (D = $flatten\memory.\mem.\row_12.\cell_8.$procmux$2186_Y, Q = \memory.mem.row_12.cell_8.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_12.\cell_7.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_12.\cell_7.$procmux$2186_Y, Q = \memory.mem.row_12.cell_7.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3912 ($sdff) from module top (D = $flatten\memory.\mem.\row_12.\cell_7.$procmux$2186_Y, Q = \memory.mem.row_12.cell_7.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_12.\cell_6.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_12.\cell_6.$procmux$2186_Y, Q = \memory.mem.row_12.cell_6.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3916 ($sdff) from module top (D = $flatten\memory.\mem.\row_12.\cell_6.$procmux$2186_Y, Q = \memory.mem.row_12.cell_6.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_12.\cell_5.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_12.\cell_5.$procmux$2186_Y, Q = \memory.mem.row_12.cell_5.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3920 ($sdff) from module top (D = $flatten\memory.\mem.\row_12.\cell_5.$procmux$2186_Y, Q = \memory.mem.row_12.cell_5.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_12.\cell_4.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_12.\cell_4.$procmux$2186_Y, Q = \memory.mem.row_12.cell_4.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3924 ($sdff) from module top (D = $flatten\memory.\mem.\row_12.\cell_4.$procmux$2186_Y, Q = \memory.mem.row_12.cell_4.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_12.\cell_3.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_12.\cell_3.$procmux$2186_Y, Q = \memory.mem.row_12.cell_3.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3928 ($sdff) from module top (D = $flatten\memory.\mem.\row_12.\cell_3.$procmux$2186_Y, Q = \memory.mem.row_12.cell_3.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_12.\cell_2.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_12.\cell_2.$procmux$2186_Y, Q = \memory.mem.row_12.cell_2.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3932 ($sdff) from module top (D = $flatten\memory.\mem.\row_12.\cell_2.$procmux$2186_Y, Q = \memory.mem.row_12.cell_2.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_12.\cell_11.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_12.\cell_11.$procmux$2186_Y, Q = \memory.mem.row_12.cell_11.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3936 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_12.cell_11.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_12.\cell_10.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_12.\cell_10.$procmux$2186_Y, Q = \memory.mem.row_12.cell_10.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3938 ($sdff) from module top (D = $flatten\memory.\mem.\row_12.\cell_10.$procmux$2186_Y, Q = \memory.mem.row_12.cell_10.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_12.\cell_1.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_12.\cell_1.$procmux$2186_Y, Q = \memory.mem.row_12.cell_1.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3942 ($sdff) from module top (D = $flatten\memory.\mem.\row_12.\cell_1.$procmux$2186_Y, Q = \memory.mem.row_12.cell_1.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_12.\cell_0.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_12.\cell_0.$procmux$2186_Y, Q = \memory.mem.row_12.cell_0.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3946 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_12.cell_0.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_11.\cell_9.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_11.\cell_9.$procmux$2186_Y, Q = \memory.mem.row_11.cell_9.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3948 ($sdff) from module top (D = $flatten\memory.\mem.\row_11.\cell_9.$procmux$2186_Y, Q = \memory.mem.row_11.cell_9.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_11.\cell_8.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_11.\cell_8.$procmux$2186_Y, Q = \memory.mem.row_11.cell_8.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3952 ($sdff) from module top (D = $flatten\memory.\mem.\row_11.\cell_8.$procmux$2186_Y, Q = \memory.mem.row_11.cell_8.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_11.\cell_7.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_11.\cell_7.$procmux$2186_Y, Q = \memory.mem.row_11.cell_7.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3956 ($sdff) from module top (D = $flatten\memory.\mem.\row_11.\cell_7.$procmux$2186_Y, Q = \memory.mem.row_11.cell_7.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_11.\cell_6.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_11.\cell_6.$procmux$2186_Y, Q = \memory.mem.row_11.cell_6.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3960 ($sdff) from module top (D = $flatten\memory.\mem.\row_11.\cell_6.$procmux$2186_Y, Q = \memory.mem.row_11.cell_6.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_11.\cell_5.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_11.\cell_5.$procmux$2186_Y, Q = \memory.mem.row_11.cell_5.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3964 ($sdff) from module top (D = $flatten\memory.\mem.\row_11.\cell_5.$procmux$2186_Y, Q = \memory.mem.row_11.cell_5.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_11.\cell_4.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_11.\cell_4.$procmux$2186_Y, Q = \memory.mem.row_11.cell_4.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3968 ($sdff) from module top (D = $flatten\memory.\mem.\row_11.\cell_4.$procmux$2186_Y, Q = \memory.mem.row_11.cell_4.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_11.\cell_3.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_11.\cell_3.$procmux$2186_Y, Q = \memory.mem.row_11.cell_3.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3972 ($sdff) from module top (D = $flatten\memory.\mem.\row_11.\cell_3.$procmux$2186_Y, Q = \memory.mem.row_11.cell_3.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_11.\cell_2.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_11.\cell_2.$procmux$2186_Y, Q = \memory.mem.row_11.cell_2.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3976 ($sdff) from module top (D = $flatten\memory.\mem.\row_11.\cell_2.$procmux$2186_Y, Q = \memory.mem.row_11.cell_2.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_11.\cell_11.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_11.\cell_11.$procmux$2186_Y, Q = \memory.mem.row_11.cell_11.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3980 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_11.cell_11.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_11.\cell_10.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_11.\cell_10.$procmux$2186_Y, Q = \memory.mem.row_11.cell_10.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3982 ($sdff) from module top (D = $flatten\memory.\mem.\row_11.\cell_10.$procmux$2186_Y, Q = \memory.mem.row_11.cell_10.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_11.\cell_1.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_11.\cell_1.$procmux$2186_Y, Q = \memory.mem.row_11.cell_1.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3986 ($sdff) from module top (D = $flatten\memory.\mem.\row_11.\cell_1.$procmux$2186_Y, Q = \memory.mem.row_11.cell_1.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_11.\cell_0.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_11.\cell_0.$procmux$2186_Y, Q = \memory.mem.row_11.cell_0.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3990 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_11.cell_0.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_10.\cell_9.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_10.\cell_9.$procmux$2186_Y, Q = \memory.mem.row_10.cell_9.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3992 ($sdff) from module top (D = $flatten\memory.\mem.\row_10.\cell_9.$procmux$2186_Y, Q = \memory.mem.row_10.cell_9.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_10.\cell_8.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_10.\cell_8.$procmux$2186_Y, Q = \memory.mem.row_10.cell_8.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$3996 ($sdff) from module top (D = $flatten\memory.\mem.\row_10.\cell_8.$procmux$2186_Y, Q = \memory.mem.row_10.cell_8.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_10.\cell_7.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_10.\cell_7.$procmux$2186_Y, Q = \memory.mem.row_10.cell_7.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4000 ($sdff) from module top (D = $flatten\memory.\mem.\row_10.\cell_7.$procmux$2186_Y, Q = \memory.mem.row_10.cell_7.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_10.\cell_6.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_10.\cell_6.$procmux$2186_Y, Q = \memory.mem.row_10.cell_6.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4004 ($sdff) from module top (D = $flatten\memory.\mem.\row_10.\cell_6.$procmux$2186_Y, Q = \memory.mem.row_10.cell_6.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_10.\cell_5.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_10.\cell_5.$procmux$2186_Y, Q = \memory.mem.row_10.cell_5.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4008 ($sdff) from module top (D = $flatten\memory.\mem.\row_10.\cell_5.$procmux$2186_Y, Q = \memory.mem.row_10.cell_5.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_10.\cell_4.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_10.\cell_4.$procmux$2186_Y, Q = \memory.mem.row_10.cell_4.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4012 ($sdff) from module top (D = $flatten\memory.\mem.\row_10.\cell_4.$procmux$2186_Y, Q = \memory.mem.row_10.cell_4.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_10.\cell_3.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_10.\cell_3.$procmux$2186_Y, Q = \memory.mem.row_10.cell_3.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4016 ($sdff) from module top (D = $flatten\memory.\mem.\row_10.\cell_3.$procmux$2186_Y, Q = \memory.mem.row_10.cell_3.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_10.\cell_2.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_10.\cell_2.$procmux$2186_Y, Q = \memory.mem.row_10.cell_2.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4020 ($sdff) from module top (D = $flatten\memory.\mem.\row_10.\cell_2.$procmux$2186_Y, Q = \memory.mem.row_10.cell_2.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_10.\cell_11.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_10.\cell_11.$procmux$2186_Y, Q = \memory.mem.row_10.cell_11.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4024 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_10.cell_11.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_10.\cell_10.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_10.\cell_10.$procmux$2186_Y, Q = \memory.mem.row_10.cell_10.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4026 ($sdff) from module top (D = $flatten\memory.\mem.\row_10.\cell_10.$procmux$2186_Y, Q = \memory.mem.row_10.cell_10.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_10.\cell_1.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_10.\cell_1.$procmux$2186_Y, Q = \memory.mem.row_10.cell_1.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4030 ($sdff) from module top (D = $flatten\memory.\mem.\row_10.\cell_1.$procmux$2186_Y, Q = \memory.mem.row_10.cell_1.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_10.\cell_0.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_10.\cell_0.$procmux$2186_Y, Q = \memory.mem.row_10.cell_0.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4034 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_10.cell_0.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_1.\cell_9.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_1.\cell_9.$procmux$2186_Y, Q = \memory.mem.row_1.cell_9.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4036 ($sdff) from module top (D = $flatten\memory.\mem.\row_1.\cell_9.$procmux$2186_Y, Q = \memory.mem.row_1.cell_9.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_1.\cell_8.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_1.\cell_8.$procmux$2186_Y, Q = \memory.mem.row_1.cell_8.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4040 ($sdff) from module top (D = $flatten\memory.\mem.\row_1.\cell_8.$procmux$2186_Y, Q = \memory.mem.row_1.cell_8.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_1.\cell_7.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_1.\cell_7.$procmux$2186_Y, Q = \memory.mem.row_1.cell_7.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4044 ($sdff) from module top (D = $flatten\memory.\mem.\row_1.\cell_7.$procmux$2186_Y, Q = \memory.mem.row_1.cell_7.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_1.\cell_6.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_1.\cell_6.$procmux$2186_Y, Q = \memory.mem.row_1.cell_6.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4048 ($sdff) from module top (D = $flatten\memory.\mem.\row_1.\cell_6.$procmux$2186_Y, Q = \memory.mem.row_1.cell_6.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_1.\cell_5.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_1.\cell_5.$procmux$2186_Y, Q = \memory.mem.row_1.cell_5.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4052 ($sdff) from module top (D = $flatten\memory.\mem.\row_1.\cell_5.$procmux$2186_Y, Q = \memory.mem.row_1.cell_5.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_1.\cell_4.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_1.\cell_4.$procmux$2186_Y, Q = \memory.mem.row_1.cell_4.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4056 ($sdff) from module top (D = $flatten\memory.\mem.\row_1.\cell_4.$procmux$2186_Y, Q = \memory.mem.row_1.cell_4.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_1.\cell_3.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_1.\cell_3.$procmux$2186_Y, Q = \memory.mem.row_1.cell_3.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4060 ($sdff) from module top (D = $flatten\memory.\mem.\row_1.\cell_3.$procmux$2186_Y, Q = \memory.mem.row_1.cell_3.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_1.\cell_2.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_1.\cell_2.$procmux$2186_Y, Q = \memory.mem.row_1.cell_2.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4064 ($sdff) from module top (D = $flatten\memory.\mem.\row_1.\cell_2.$procmux$2186_Y, Q = \memory.mem.row_1.cell_2.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_1.\cell_11.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_1.\cell_11.$procmux$2186_Y, Q = \memory.mem.row_1.cell_11.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4068 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_1.cell_11.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_1.\cell_10.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_1.\cell_10.$procmux$2186_Y, Q = \memory.mem.row_1.cell_10.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4070 ($sdff) from module top (D = $flatten\memory.\mem.\row_1.\cell_10.$procmux$2186_Y, Q = \memory.mem.row_1.cell_10.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_1.\cell_1.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_1.\cell_1.$procmux$2186_Y, Q = \memory.mem.row_1.cell_1.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4074 ($sdff) from module top (D = $flatten\memory.\mem.\row_1.\cell_1.$procmux$2186_Y, Q = \memory.mem.row_1.cell_1.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_1.\cell_0.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_1.\cell_0.$procmux$2186_Y, Q = \memory.mem.row_1.cell_0.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4078 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_1.cell_0.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_0.\cell_9.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_0.\cell_9.$procmux$2186_Y, Q = \memory.mem.row_0.cell_9.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4080 ($sdff) from module top (D = $flatten\memory.\mem.\row_0.\cell_9.$procmux$2186_Y, Q = \memory.mem.row_0.cell_9.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_0.\cell_8.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_0.\cell_8.$procmux$2186_Y, Q = \memory.mem.row_0.cell_8.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4084 ($sdff) from module top (D = $flatten\memory.\mem.\row_0.\cell_8.$procmux$2186_Y, Q = \memory.mem.row_0.cell_8.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_0.\cell_7.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_0.\cell_7.$procmux$2186_Y, Q = \memory.mem.row_0.cell_7.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4088 ($sdff) from module top (D = $flatten\memory.\mem.\row_0.\cell_7.$procmux$2186_Y, Q = \memory.mem.row_0.cell_7.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_0.\cell_6.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_0.\cell_6.$procmux$2186_Y, Q = \memory.mem.row_0.cell_6.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4092 ($sdff) from module top (D = $flatten\memory.\mem.\row_0.\cell_6.$procmux$2186_Y, Q = \memory.mem.row_0.cell_6.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_0.\cell_5.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_0.\cell_5.$procmux$2186_Y, Q = \memory.mem.row_0.cell_5.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4096 ($sdff) from module top (D = $flatten\memory.\mem.\row_0.\cell_5.$procmux$2186_Y, Q = \memory.mem.row_0.cell_5.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_0.\cell_4.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_0.\cell_4.$procmux$2186_Y, Q = \memory.mem.row_0.cell_4.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4100 ($sdff) from module top (D = $flatten\memory.\mem.\row_0.\cell_4.$procmux$2186_Y, Q = \memory.mem.row_0.cell_4.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_0.\cell_3.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_0.\cell_3.$procmux$2186_Y, Q = \memory.mem.row_0.cell_3.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4104 ($sdff) from module top (D = $flatten\memory.\mem.\row_0.\cell_3.$procmux$2186_Y, Q = \memory.mem.row_0.cell_3.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_0.\cell_2.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_0.\cell_2.$procmux$2186_Y, Q = \memory.mem.row_0.cell_2.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4108 ($sdff) from module top (D = $flatten\memory.\mem.\row_0.\cell_2.$procmux$2186_Y, Q = \memory.mem.row_0.cell_2.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_0.\cell_11.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_0.\cell_11.$procmux$2186_Y, Q = \memory.mem.row_0.cell_11.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4112 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_0.cell_11.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_0.\cell_10.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_0.\cell_10.$procmux$2186_Y, Q = \memory.mem.row_0.cell_10.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4114 ($sdff) from module top (D = $flatten\memory.\mem.\row_0.\cell_10.$procmux$2186_Y, Q = \memory.mem.row_0.cell_10.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_0.\cell_1.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_0.\cell_1.$procmux$2186_Y, Q = \memory.mem.row_0.cell_1.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4118 ($sdff) from module top (D = $flatten\memory.\mem.\row_0.\cell_1.$procmux$2186_Y, Q = \memory.mem.row_0.cell_1.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_0.\cell_0.$procdff$2551 ($dff) from module top (D = $flatten\memory.\mem.\row_0.\cell_0.$procmux$2186_Y, Q = \memory.mem.row_0.cell_0.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4122 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_0.cell_0.priv_mem).
Adding SRST signal on $flatten\memory.$procdff$2525 ($dff) from module top (D = $flatten\memory.$procmux$1771_Y, Q = \memory.perq, rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$4124 ($sdff) from module top (D = $flatten\memory.$procmux$1768_Y, Q = \memory.perq).
Adding SRST signal on $flatten\memory.$procdff$2524 ($dff) from module top (D = $flatten\memory.$procmux$1783_Y, Q = \memory.resetperiod_state, rval = 21'000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$4132 ($sdff) from module top (D = $flatten\memory.$procmux$1781_Y, Q = \memory.resetperiod_state).
Adding SRST signal on $flatten\memory.$procdff$2523 ($dff) from module top (D = $flatten\memory.$procmux$1791_Y, Q = \memory.resetperiod, rval = 1'1).
Adding SRST signal on $flatten\memory.$procdff$2521 ($dff) from module top (D = $flatten\memory.$procmux$1848_Y, Q = \memory.mm_colorsetter_value, rval = 3'110).
Adding EN signal on $auto$ff.cc:262:slice$4139 ($sdff) from module top (D = $flatten\memory.$procmux$1836_Y, Q = \memory.mm_colorsetter_value).
Adding SRST signal on $flatten\memory.$procdff$2520 ($dff) from module top (D = $flatten\memory.$procmux$1877_Y, Q = \memory.mm_colorsetter_commit, rval = 1'1).
Adding EN signal on $auto$ff.cc:262:slice$4149 ($sdff) from module top (D = $flatten\memory.$procmux$1877_Y, Q = \memory.mm_colorsetter_commit).
Adding SRST signal on $flatten\memory.$procdff$2519 ($dff) from module top (D = $flatten\memory.$procmux$1908_Y, Q = \memory.mm_colosetter_y, rval = 6'000000).
Adding EN signal on $auto$ff.cc:262:slice$4165 ($sdff) from module top (D = $flatten\memory.$procmux$1908_Y, Q = \memory.mm_colosetter_y).
Adding SRST signal on $flatten\memory.$procdff$2518 ($dff) from module top (D = $flatten\memory.$procmux$1939_Y, Q = \memory.mm_colosetter_x, rval = 6'000000).
Adding EN signal on $auto$ff.cc:262:slice$4181 ($sdff) from module top (D = $flatten\memory.$procmux$1939_Y, Q = \memory.mm_colosetter_x).
Adding SRST signal on $flatten\memory.$procdff$2517 ($dff) from module top (D = $flatten\memory.$procmux$1945_Y, Q = \memory.proposed_memval, rval = 3'111).
Adding EN signal on $auto$ff.cc:262:slice$4197 ($sdff) from module top (D = \memory.memvalwire, Q = \memory.proposed_memval).
Adding SRST signal on $flatten\memory.$procdff$2516 ($dff) from module top (D = $flatten\memory.$procmux$1969_Y, Q = \memory.movement_steal, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$4199 ($sdff) from module top (D = $flatten\memory.$procmux$1966_Y, Q = \memory.movement_steal).
Adding SRST signal on $flatten\memory.$procdff$2515 ($dff) from module top (D = $flatten\memory.$procmux$1988_Y, Q = \memory.movement_commit, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$4201 ($sdff) from module top (D = $flatten\memory.$procmux$1985_Y, Q = \memory.movement_commit).
Adding SRST signal on $flatten\memory.$procdff$2514 ($dff) from module top (D = $flatten\memory.$procmux$2010_Y, Q = \memory.movement_declined, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$4203 ($sdff) from module top (D = $flatten\memory.$procmux$2007_Y, Q = \memory.movement_declined).
Adding SRST signal on $flatten\game_manager.$procdff$2527 ($dff) from module top (D = $flatten\game_manager.$2\ipixstream[11:0], Q = \game_manager.ipixstream, rval = 12'000000000000).
Adding EN signal on $auto$ff.cc:262:slice$4205 ($sdff) from module top (D = \game_manager.texture_lookup, Q = \game_manager.ipixstream).
Adding SRST signal on $flatten\game_manager.$procdff$2526 ($dff) from module top (D = $flatten\game_manager.$procmux$2039_Y [3:0], Q = \game_manager.pixstream [3:0], rval = 4'0000).
Adding SRST signal on $flatten\game_manager.$procdff$2526 ($dff) from module top (D = \game_manager.shaded [11:4], Q = \game_manager.pixstream [11:4], rval = 8'00000000).
Adding EN signal on $flatten\core.$procdff$2550 ($dff) from module top (D = $flatten\core.$lt$src/vga_core.v:82$552_Y, Q = \core.v_drawing_pixels).
Adding EN signal on $flatten\core.$procdff$2549 ($dff) from module top (D = $flatten\core.$lt$src/vga_core.v:81$551_Y, Q = \core.h_drawing_pixels).
Adding SRST signal on $flatten\core.$procdff$2548 ($dff) from module top (D = \game_manager.pixstream [7:4], Q = \core.proposed_g, rval = 4'0000).
Adding SRST signal on $flatten\core.$procdff$2547 ($dff) from module top (D = \game_manager.pixstream [11:8], Q = \core.proposed_b, rval = 4'0000).
Adding SRST signal on $flatten\core.$procdff$2546 ($dff) from module top (D = \game_manager.pixstream [3:0], Q = \core.proposed_r, rval = 4'0000).
Adding SRST signal on $flatten\core.$procdff$2545 ($dff) from module top (D = $flatten\core.$procmux$2164_Y, Q = \core.vscan_pos, rval = 10'0000000000).
Adding EN signal on $auto$ff.cc:262:slice$4216 ($sdff) from module top (D = $flatten\core.$add$src/vga_core.v:89$562_Y, Q = \core.vscan_pos).
Adding SRST signal on $flatten\core.$procdff$2544 ($dff) from module top (D = $flatten\core.$add$src/vga_core.v:79$550_Y, Q = \core.hscan_pos, rval = 10'0000000000).
Adding EN signal on $flatten\core.$procdff$2543 ($dff) from module top (D = \core.vscan_pos, Q = \core.vreadwire).
Adding EN signal on $flatten\core.$procdff$2542 ($dff) from module top (D = \core.hscan_pos, Q = \core.hreadwire).
Adding EN signal on $flatten\core.$procdff$2541 ($dff) from module top (D = $flatten\core.$logic_not$src/vga_core.v:85$560_Y, Q = \core.v_sync).
Adding EN signal on $flatten\core.$procdff$2540 ($dff) from module top (D = $flatten\core.$logic_not$src/vga_core.v:84$556_Y, Q = \core.h_sync).

20.12.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 478 unused cells and 520 unused wires.
<suppressed ~479 debug messages>

20.12.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~253 debug messages>

20.12.9. Rerunning OPT passes. (Maybe there is more to do..)

20.12.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~656 debug messages>

20.12.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

20.12.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~414 debug messages>
Removed a total of 138 cells.

20.12.13. Executing OPT_DFF pass (perform DFF optimizations).

20.12.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 144 unused wires.
<suppressed ~7 debug messages>

20.12.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

20.12.16. Rerunning OPT passes. (Maybe there is more to do..)

20.12.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~654 debug messages>

20.12.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

20.12.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

20.12.20. Executing OPT_DFF pass (perform DFF optimizations).

20.12.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

20.12.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

20.12.23. Finished OPT passes. (There is nothing left to do.)

20.13. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 25) from port B of cell top.$flatten\t.$eq$src/timer.v:14$566 ($eq).
Removed top 3 bits (of 4) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$2762 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$2766 ($eq).
Removed top 1 bits (of 6) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$2779 ($eq).
Removed top 3 bits (of 7) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$2775 ($eq).
Removed top 3 bits (of 6) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$2795 ($eq).
Removed top 2 bits (of 6) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$2791 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$2807 ($eq).
Removed top 4 bits (of 5) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$2803 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$2799 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$2604 ($eq).
Removed top 1 bits (of 7) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$2602 ($eq).
Removed top 5 bits (of 6) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:350$7 ($eq).
Removed top 4 bits (of 6) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:395$11 ($eq).
Removed top 4 bits (of 6) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:440$15 ($eq).
Removed top 3 bits (of 6) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:485$19 ($eq).
Removed top 3 bits (of 6) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:530$23 ($eq).
Removed top 3 bits (of 6) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:575$27 ($eq).
Removed top 3 bits (of 6) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:620$31 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1247$377 ($eq).
Removed top 2 bits (of 6) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:665$35 ($eq).
Removed top 2 bits (of 6) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:710$39 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1247$374 ($eq).
Removed top 2 bits (of 6) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:755$43 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1247$371 ($eq).
Removed top 2 bits (of 6) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:800$47 ($eq).
Removed top 2 bits (of 6) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:845$51 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1247$368 ($eq).
Removed top 2 bits (of 6) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:890$55 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1247$365 ($eq).
Removed top 2 bits (of 6) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:935$59 ($eq).
Removed top 2 bits (of 6) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:980$63 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1247$362 ($eq).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1025$67 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1247$359 ($eq).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1070$71 ($eq).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1115$75 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1247$356 ($eq).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1160$79 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1247$353 ($eq).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1205$83 ($eq).
Removed top 4 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1240$87 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1240$93 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1240$99 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1240$105 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1240$111 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1240$117 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1240$123 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1240$129 ($eq).
Removed top 4 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1244$149 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1244$152 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1244$155 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1244$158 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1244$161 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1244$164 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1244$167 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1244$170 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1244$173 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1244$176 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1244$179 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1244$182 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1244$185 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1244$188 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1244$191 ($eq).
Removed top 4 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1245$211 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1245$214 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1245$217 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1245$220 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1245$223 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1245$226 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1245$229 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1245$232 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1245$235 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1245$238 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1245$241 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1245$244 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1245$247 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1245$250 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1245$253 ($eq).
Removed top 4 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1246$273 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1246$276 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1246$279 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1246$282 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1246$285 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1246$288 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1246$291 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1246$294 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1246$297 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1246$300 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1246$303 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1246$306 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1246$309 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1246$312 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1246$315 ($eq).
Removed top 4 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1247$335 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1247$338 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1247$341 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1247$344 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1247$347 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1247$350 ($eq).
Removed cell top.$flatten\memory.\mem.\row_0.\cell_1.$procmux$2183 ($mux).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:173$530 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:160$527 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:147$524 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:186$533 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:134$521 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:199$536 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:121$518 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:108$515 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:95$512 ($eq).
Removed top 4 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:82$509 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:212$539 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:59$502 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:59$499 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:59$496 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:59$493 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:59$490 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:59$487 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:59$484 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:59$481 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:59$478 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:59$475 ($eq).
Removed top 4 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:59$472 ($eq).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_0.$shiftx$src/meta_memrow.v:0$469 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_0.$shiftx$src/meta_memrow.v:0$468 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_0.$shiftx$src/meta_memrow.v:0$467 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_0.$shiftx$src/meta_memrow.v:0$466 ($shiftx).
Removed cell top.$flatten\memory.\mem.\row_1.\cell_8.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_1.\cell_10.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_1.\cell_7.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_1.\cell_6.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_1.\cell_5.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_1.\cell_4.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_1.\cell_3.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_1.\cell_9.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_1.\cell_2.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_1.\cell_1.$procmux$2183 ($mux).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_1.$shiftx$src/meta_memrow.v:0$469 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_1.$shiftx$src/meta_memrow.v:0$468 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_1.$shiftx$src/meta_memrow.v:0$467 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_1.$shiftx$src/meta_memrow.v:0$466 ($shiftx).
Removed cell top.$flatten\memory.\mem.\row_2.\cell_8.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_2.\cell_10.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_2.\cell_7.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_2.\cell_6.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_2.\cell_5.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_2.\cell_4.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_2.\cell_3.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_2.\cell_9.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_2.\cell_2.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_2.\cell_1.$procmux$2183 ($mux).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_2.$shiftx$src/meta_memrow.v:0$469 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_2.$shiftx$src/meta_memrow.v:0$468 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_2.$shiftx$src/meta_memrow.v:0$467 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_2.$shiftx$src/meta_memrow.v:0$466 ($shiftx).
Removed cell top.$flatten\memory.\mem.\row_3.\cell_8.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_3.\cell_10.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_3.\cell_7.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_3.\cell_6.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_3.\cell_5.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_3.\cell_4.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_3.\cell_3.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_3.\cell_9.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_3.\cell_2.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_3.\cell_1.$procmux$2183 ($mux).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_3.$shiftx$src/meta_memrow.v:0$469 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_3.$shiftx$src/meta_memrow.v:0$468 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_3.$shiftx$src/meta_memrow.v:0$467 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_3.$shiftx$src/meta_memrow.v:0$466 ($shiftx).
Removed cell top.$flatten\memory.\mem.\row_4.\cell_8.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_4.\cell_10.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_4.\cell_7.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_4.\cell_6.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_4.\cell_5.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_4.\cell_4.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_4.\cell_3.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_4.\cell_9.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_4.\cell_2.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_4.\cell_1.$procmux$2183 ($mux).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_4.$shiftx$src/meta_memrow.v:0$469 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_4.$shiftx$src/meta_memrow.v:0$468 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_4.$shiftx$src/meta_memrow.v:0$467 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_4.$shiftx$src/meta_memrow.v:0$466 ($shiftx).
Removed cell top.$flatten\memory.\mem.\row_5.\cell_8.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_5.\cell_10.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_5.\cell_7.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_5.\cell_6.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_5.\cell_5.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_5.\cell_4.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_5.\cell_3.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_5.\cell_9.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_5.\cell_2.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_5.\cell_1.$procmux$2183 ($mux).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_5.$shiftx$src/meta_memrow.v:0$469 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_5.$shiftx$src/meta_memrow.v:0$468 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_5.$shiftx$src/meta_memrow.v:0$467 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_5.$shiftx$src/meta_memrow.v:0$466 ($shiftx).
Removed cell top.$flatten\memory.\mem.\row_6.\cell_8.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_6.\cell_10.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_6.\cell_7.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_6.\cell_6.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_6.\cell_5.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_6.\cell_4.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_6.\cell_3.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_6.\cell_9.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_6.\cell_2.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_6.\cell_1.$procmux$2183 ($mux).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_6.$shiftx$src/meta_memrow.v:0$469 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_6.$shiftx$src/meta_memrow.v:0$468 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_6.$shiftx$src/meta_memrow.v:0$467 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_6.$shiftx$src/meta_memrow.v:0$466 ($shiftx).
Removed cell top.$flatten\memory.\mem.\row_7.\cell_8.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_7.\cell_10.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_7.\cell_7.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_7.\cell_6.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_7.\cell_5.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_7.\cell_4.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_7.\cell_3.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_7.\cell_9.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_7.\cell_2.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_7.\cell_1.$procmux$2183 ($mux).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_7.$shiftx$src/meta_memrow.v:0$469 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_7.$shiftx$src/meta_memrow.v:0$468 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_7.$shiftx$src/meta_memrow.v:0$467 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_7.$shiftx$src/meta_memrow.v:0$466 ($shiftx).
Removed cell top.$flatten\memory.\mem.\row_8.\cell_8.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_8.\cell_10.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_8.\cell_7.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_8.\cell_6.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_8.\cell_5.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_8.\cell_4.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_8.\cell_3.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_8.\cell_9.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_8.\cell_2.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_8.\cell_1.$procmux$2183 ($mux).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_8.$shiftx$src/meta_memrow.v:0$469 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_8.$shiftx$src/meta_memrow.v:0$468 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_8.$shiftx$src/meta_memrow.v:0$467 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_8.$shiftx$src/meta_memrow.v:0$466 ($shiftx).
Removed cell top.$flatten\memory.\mem.\row_9.\cell_8.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_9.\cell_10.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_9.\cell_7.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_9.\cell_6.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_9.\cell_5.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_9.\cell_4.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_9.\cell_3.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_9.\cell_9.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_9.\cell_2.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_9.\cell_1.$procmux$2183 ($mux).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_9.$shiftx$src/meta_memrow.v:0$469 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_9.$shiftx$src/meta_memrow.v:0$468 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_9.$shiftx$src/meta_memrow.v:0$467 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_9.$shiftx$src/meta_memrow.v:0$466 ($shiftx).
Removed cell top.$flatten\memory.\mem.\row_10.\cell_8.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_10.\cell_10.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_10.\cell_7.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_10.\cell_6.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_10.\cell_5.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_10.\cell_4.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_10.\cell_3.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_10.\cell_9.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_10.\cell_2.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_10.\cell_1.$procmux$2183 ($mux).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_10.$shiftx$src/meta_memrow.v:0$469 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_10.$shiftx$src/meta_memrow.v:0$468 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_10.$shiftx$src/meta_memrow.v:0$467 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_10.$shiftx$src/meta_memrow.v:0$466 ($shiftx).
Removed cell top.$flatten\memory.\mem.\row_11.\cell_8.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_11.\cell_10.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_11.\cell_7.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_11.\cell_6.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_11.\cell_5.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_11.\cell_4.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_11.\cell_3.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_11.\cell_9.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_11.\cell_2.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_11.\cell_1.$procmux$2183 ($mux).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_11.$shiftx$src/meta_memrow.v:0$469 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_11.$shiftx$src/meta_memrow.v:0$468 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_11.$shiftx$src/meta_memrow.v:0$467 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_11.$shiftx$src/meta_memrow.v:0$466 ($shiftx).
Removed cell top.$flatten\memory.\mem.\row_12.\cell_8.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_12.\cell_10.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_12.\cell_7.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_12.\cell_6.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_12.\cell_5.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_12.\cell_4.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_12.\cell_3.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_12.\cell_9.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_12.\cell_2.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_12.\cell_1.$procmux$2183 ($mux).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_12.$shiftx$src/meta_memrow.v:0$469 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_12.$shiftx$src/meta_memrow.v:0$468 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_12.$shiftx$src/meta_memrow.v:0$467 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_12.$shiftx$src/meta_memrow.v:0$466 ($shiftx).
Removed cell top.$flatten\memory.\mem.\row_13.\cell_8.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_13.\cell_10.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_13.\cell_7.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_13.\cell_6.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_13.\cell_5.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_13.\cell_4.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_13.\cell_3.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_13.\cell_9.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_13.\cell_2.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_13.\cell_1.$procmux$2183 ($mux).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_13.$shiftx$src/meta_memrow.v:0$469 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_13.$shiftx$src/meta_memrow.v:0$468 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_13.$shiftx$src/meta_memrow.v:0$467 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_13.$shiftx$src/meta_memrow.v:0$466 ($shiftx).
Removed cell top.$flatten\memory.\mem.\row_14.\cell_8.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_14.\cell_10.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_14.\cell_7.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_14.\cell_6.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_14.\cell_5.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_14.\cell_4.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_14.\cell_3.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_14.\cell_9.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_14.\cell_2.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_14.\cell_1.$procmux$2183 ($mux).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_14.$shiftx$src/meta_memrow.v:0$469 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_14.$shiftx$src/meta_memrow.v:0$468 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_14.$shiftx$src/meta_memrow.v:0$467 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_14.$shiftx$src/meta_memrow.v:0$466 ($shiftx).
Removed cell top.$flatten\memory.\mem.\row_15.\cell_8.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_15.\cell_10.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_15.\cell_7.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_15.\cell_6.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_15.\cell_5.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_15.\cell_4.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_15.\cell_3.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_15.\cell_9.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_15.\cell_2.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_15.\cell_1.$procmux$2183 ($mux).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_15.$shiftx$src/meta_memrow.v:0$469 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_15.$shiftx$src/meta_memrow.v:0$468 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_15.$shiftx$src/meta_memrow.v:0$467 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_15.$shiftx$src/meta_memrow.v:0$466 ($shiftx).
Removed cell top.$flatten\memory.\mem.\row_16.\cell_8.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_16.\cell_10.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_16.\cell_7.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_16.\cell_6.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_16.\cell_5.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_16.\cell_4.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_16.\cell_3.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_16.\cell_9.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_16.\cell_2.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_16.\cell_1.$procmux$2183 ($mux).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_16.$shiftx$src/meta_memrow.v:0$469 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_16.$shiftx$src/meta_memrow.v:0$468 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_16.$shiftx$src/meta_memrow.v:0$467 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_16.$shiftx$src/meta_memrow.v:0$466 ($shiftx).
Removed cell top.$flatten\memory.\mem.\row_17.\cell_8.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_17.\cell_10.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_17.\cell_7.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_17.\cell_6.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_17.\cell_5.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_17.\cell_4.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_17.\cell_3.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_17.\cell_9.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_17.\cell_2.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_17.\cell_1.$procmux$2183 ($mux).
Removed top 6 bits (of 9) from port B of cell top.$auto$opt_dff.cc:198:make_patterns_logic$4170 ($ne).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_17.$shiftx$src/meta_memrow.v:0$469 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_17.$shiftx$src/meta_memrow.v:0$468 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_17.$shiftx$src/meta_memrow.v:0$467 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_17.$shiftx$src/meta_memrow.v:0$466 ($shiftx).
Removed cell top.$flatten\memory.\mem.\row_18.\cell_8.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_18.\cell_10.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_18.\cell_7.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_18.\cell_6.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_18.\cell_5.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_18.\cell_4.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_18.\cell_3.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_18.\cell_9.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_18.\cell_2.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_18.\cell_1.$procmux$2183 ($mux).
Removed top 7 bits (of 10) from port B of cell top.$auto$opt_dff.cc:198:make_patterns_logic$4154 ($ne).
Removed top 1 bits (of 4) from port B of cell top.$auto$opt_dff.cc:198:make_patterns_logic$4152 ($ne).
Removed top 1 bits (of 3) from port B of cell top.$auto$opt_dff.cc:198:make_patterns_logic$4158 ($ne).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_18.$shiftx$src/meta_memrow.v:0$469 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_18.$shiftx$src/meta_memrow.v:0$468 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_18.$shiftx$src/meta_memrow.v:0$467 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_18.$shiftx$src/meta_memrow.v:0$466 ($shiftx).
Removed cell top.$flatten\memory.\mem.\row_19.\cell_8.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_19.\cell_10.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_19.\cell_7.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_19.\cell_6.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_19.\cell_5.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_19.\cell_4.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_19.\cell_3.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_19.\cell_9.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_19.\cell_2.$procmux$2183 ($mux).
Removed cell top.$flatten\memory.\mem.\row_19.\cell_1.$procmux$2183 ($mux).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_19.$shiftx$src/meta_memrow.v:0$469 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_19.$shiftx$src/meta_memrow.v:0$468 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_19.$shiftx$src/meta_memrow.v:0$467 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_19.$shiftx$src/meta_memrow.v:0$466 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_20.$shiftx$src/meta_memrow.v:0$469 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_20.$shiftx$src/meta_memrow.v:0$468 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_20.$shiftx$src/meta_memrow.v:0$467 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_20.$shiftx$src/meta_memrow.v:0$466 ($shiftx).
Removed top 1 bits (of 6) from port A of cell top.$flatten\memory.\sh.$le$src/shifter.v:52$464 ($le).
Removed top 1 bits (of 6) from mux cell top.$flatten\memory.\sh.$ternary$src/shifter.v:23$419 ($mux).
Removed top 1 bits (of 6) from mux cell top.$flatten\memory.\sh.$ternary$src/shifter.v:23$420 ($mux).
Removed top 1 bits (of 6) from mux cell top.$flatten\memory.\sh.$ternary$src/shifter.v:23$421 ($mux).
Removed top 1 bits (of 6) from mux cell top.$flatten\memory.\sh.$ternary$src/shifter.v:23$422 ($mux).
Removed top 1 bits (of 6) from port A of cell top.$flatten\memory.\sh.$le$src/shifter.v:51$463 ($le).
Removed top 1 bits (of 6) from port A of cell top.$flatten\memory.\sh.$le$src/shifter.v:50$462 ($le).
Removed top 1 bits (of 6) from port A of cell top.$flatten\memory.\sh.$le$src/shifter.v:49$461 ($le).
Removed top 1 bits (of 6) from mux cell top.$flatten\memory.\sh.$ternary$src/shifter.v:25$426 ($mux).
Removed top 1 bits (of 6) from mux cell top.$flatten\memory.\sh.$ternary$src/shifter.v:25$427 ($mux).
Removed top 1 bits (of 6) from port A of cell top.$flatten\memory.\sh.$le$src/shifter.v:48$460 ($le).
Removed top 1 bits (of 6) from port A of cell top.$flatten\memory.\sh.$le$src/shifter.v:47$459 ($le).
Removed top 1 bits (of 6) from port A of cell top.$flatten\memory.\sh.$le$src/shifter.v:46$458 ($le).
Removed top 2 bits (of 6) from port A of cell top.$flatten\memory.\sh.$le$src/shifter.v:45$457 ($le).
Removed top 1 bits (of 6) from port A of cell top.$flatten\memory.\sh.$gt$src/shifter.v:29$434 ($gt).
Removed top 5 bits (of 6) from port B of cell top.$flatten\memory.\sh.$gt$src/shifter.v:29$434 ($gt).
Removed top 1 bits (of 6) from port A of cell top.$flatten\memory.\sh.$gt$src/shifter.v:29$435 ($gt).
Removed top 5 bits (of 6) from port B of cell top.$flatten\memory.\sh.$gt$src/shifter.v:29$435 ($gt).
Removed top 1 bits (of 6) from mux cell top.$flatten\memory.\sh.$ternary$src/shifter.v:29$436 ($mux).
Removed top 1 bits (of 6) from mux cell top.$flatten\memory.\sh.$ternary$src/shifter.v:29$437 ($mux).
Removed top 2 bits (of 6) from port A of cell top.$flatten\memory.\sh.$le$src/shifter.v:44$456 ($le).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\sh.$le$src/shifter.v:44$456 ($le).
Removed top 2 bits (of 6) from port A of cell top.$flatten\memory.\sh.$le$src/shifter.v:43$455 ($le).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\sh.$le$src/shifter.v:43$455 ($le).
Removed top 2 bits (of 6) from port A of cell top.$flatten\memory.\sh.$le$src/shifter.v:42$454 ($le).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\sh.$le$src/shifter.v:42$454 ($le).
Removed top 2 bits (of 6) from port A of cell top.$flatten\memory.\sh.$le$src/shifter.v:41$453 ($le).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\sh.$le$src/shifter.v:41$453 ($le).
Removed top 5 bits (of 6) from port A of cell top.$flatten\memory.\sh.$le$src/shifter.v:30$442 ($le).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\sh.$le$src/shifter.v:30$442 ($le).
Removed top 5 bits (of 6) from port A of cell top.$flatten\memory.\sh.$le$src/shifter.v:31$443 ($le).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\sh.$le$src/shifter.v:31$443 ($le).
Removed top 4 bits (of 6) from port A of cell top.$flatten\memory.\sh.$le$src/shifter.v:32$444 ($le).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\sh.$le$src/shifter.v:32$444 ($le).
Removed top 4 bits (of 6) from port A of cell top.$flatten\memory.\sh.$le$src/shifter.v:33$445 ($le).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\sh.$le$src/shifter.v:33$445 ($le).
Removed top 3 bits (of 6) from port A of cell top.$flatten\memory.\sh.$le$src/shifter.v:34$446 ($le).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\sh.$le$src/shifter.v:34$446 ($le).
Removed top 3 bits (of 6) from port A of cell top.$flatten\memory.\sh.$le$src/shifter.v:35$447 ($le).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\sh.$le$src/shifter.v:35$447 ($le).
Removed top 3 bits (of 6) from port A of cell top.$flatten\memory.\sh.$le$src/shifter.v:36$448 ($le).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\sh.$le$src/shifter.v:36$448 ($le).
Removed top 3 bits (of 6) from port A of cell top.$flatten\memory.\sh.$le$src/shifter.v:37$449 ($le).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\sh.$le$src/shifter.v:37$449 ($le).
Removed top 2 bits (of 6) from port A of cell top.$flatten\memory.\sh.$le$src/shifter.v:38$450 ($le).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\sh.$le$src/shifter.v:38$450 ($le).
Removed top 2 bits (of 6) from port A of cell top.$flatten\memory.\sh.$le$src/shifter.v:39$451 ($le).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\sh.$le$src/shifter.v:39$451 ($le).
Removed top 2 bits (of 6) from port A of cell top.$flatten\memory.\sh.$le$src/shifter.v:40$452 ($le).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\sh.$le$src/shifter.v:40$452 ($le).
Removed cell top.$flatten\memory.$procmux$1933 ($mux).
Removed cell top.$flatten\memory.$procmux$1930 ($mux).
Removed cell top.$flatten\memory.$procmux$1928 ($mux).
Removed cell top.$flatten\memory.$procmux$1926 ($mux).
Removed cell top.$flatten\memory.$procmux$1924 ($mux).
Removed cell top.$flatten\memory.$procmux$1915 ($mux).
Removed cell top.$flatten\memory.$procmux$1902 ($mux).
Removed cell top.$flatten\memory.$procmux$1899 ($mux).
Removed cell top.$flatten\memory.$procmux$1897 ($mux).
Removed cell top.$flatten\memory.$procmux$1895 ($mux).
Removed cell top.$flatten\memory.$procmux$1893 ($mux).
Removed cell top.$flatten\memory.$procmux$1884 ($mux).
Removed cell top.$flatten\memory.$procmux$1875 ($mux).
Removed cell top.$flatten\memory.$procmux$1872 ($mux).
Removed cell top.$flatten\memory.$procmux$1870 ($mux).
Removed cell top.$flatten\memory.$procmux$1868 ($mux).
Removed cell top.$flatten\memory.$procmux$1866 ($mux).
Removed cell top.$flatten\memory.$procmux$1855 ($mux).
Removed cell top.$flatten\memory.$procmux$1830 ($mux).
Removed top 1 bits (of 4) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$2626 ($eq).
Removed top 2 bits (of 3) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$2622 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$2620 ($eq).
Removed cell top.$flatten\memory.$procmux$1777 ($mux).
Removed cell top.$flatten\memory.$procmux$1763 ($mux).
Removed top 31 bits (of 32) from port B of cell top.$flatten\memory.$sub$src/blockmemory.v:176$990 ($sub).
Removed top 26 bits (of 32) from port Y of cell top.$flatten\memory.$sub$src/blockmemory.v:176$990 ($sub).
Removed top 31 bits (of 32) from port B of cell top.$flatten\memory.$sub$src/blockmemory.v:168$988 ($sub).
Removed top 26 bits (of 32) from port Y of cell top.$flatten\memory.$sub$src/blockmemory.v:168$988 ($sub).
Removed top 1 bits (of 4) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$2616 ($eq).
Removed top 31 bits (of 32) from port B of cell top.$flatten\memory.$sub$src/blockmemory.v:160$986 ($sub).
Removed top 26 bits (of 32) from port Y of cell top.$flatten\memory.$sub$src/blockmemory.v:160$986 ($sub).
Removed top 31 bits (of 32) from port B of cell top.$flatten\memory.$sub$src/blockmemory.v:152$984 ($sub).
Removed top 26 bits (of 32) from port Y of cell top.$flatten\memory.$sub$src/blockmemory.v:152$984 ($sub).
Removed top 1 bits (of 6) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$2614 ($eq).
Removed top 3 bits (of 4) from port B of cell top.$flatten\memory.$eq$src/blockmemory.v:143$981 ($eq).
Removed top 31 bits (of 32) from port B of cell top.$flatten\memory.$gt$src/blockmemory.v:142$980 ($gt).
Removed top 26 bits (of 32) from port B of cell top.$flatten\memory.$ge$src/blockmemory.v:127$976 ($ge).
Removed top 26 bits (of 32) from port B of cell top.$flatten\memory.$sub$src/blockmemory.v:123$974 ($sub).
Removed top 26 bits (of 32) from port Y of cell top.$flatten\memory.$sub$src/blockmemory.v:123$974 ($sub).
Removed top 26 bits (of 32) from port B of cell top.$flatten\memory.$lt$src/blockmemory.v:122$972 ($lt).
Removed top 26 bits (of 32) from port B of cell top.$flatten\memory.$ge$src/blockmemory.v:122$971 ($ge).
Removed top 27 bits (of 32) from port B of cell top.$flatten\memory.$sub$src/blockmemory.v:119$969 ($sub).
Removed top 26 bits (of 32) from port Y of cell top.$flatten\memory.$sub$src/blockmemory.v:119$969 ($sub).
Removed top 26 bits (of 32) from port B of cell top.$flatten\memory.$lt$src/blockmemory.v:117$967 ($lt).
Removed top 27 bits (of 32) from port B of cell top.$flatten\memory.$ge$src/blockmemory.v:117$966 ($ge).
Removed top 27 bits (of 32) from port B of cell top.$flatten\memory.$lt$src/blockmemory.v:112$964 ($lt).
Removed cell top.$flatten\vcell.\lbshaper.$procmux$2290 ($mux).
Removed top 4 bits (of 5) from mux cell top.$flatten\vcell.\lbshaper.$procmux$2296 ($mux).
Removed top 4 bits (of 5) from mux cell top.$flatten\vcell.\lashaper.$procmux$2208 ($mux).
Removed top 4 bits (of 5) from mux cell top.$flatten\vcell.\lashaper.$procmux$2252 ($mux).
Removed top 4 bits (of 5) from mux cell top.$flatten\vcell.\oshaper.$procmux$2370 ($mux).
Removed top 4 bits (of 5) from FF cell top.$flatten\vcell.\oshaper.$procdff$2573 ($dff).
Removed top 2 bits (of 3) from port B of cell top.$flatten\vcell.\ishaper.$eq$src/tetron_I.v:41$694 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$flatten\vcell.\ishaper.$eq$src/tetron_I.v:52$695 ($eq).
Removed cell top.$flatten\vcell.\ishaper.$procmux$2044 ($mux).
Removed top 3 bits (of 5) from mux cell top.$flatten\vcell.\ishaper.$procmux$2046 ($mux).
Removed top 3 bits (of 5) from mux cell top.$flatten\vcell.\ishaper.$procmux$2048 ($mux).
Removed top 4 bits (of 5) from mux cell top.$flatten\vcell.\ishaper.$procmux$2050 ($mux).
Removed cell top.$flatten\vcell.\ishaper.$procmux$2055 ($mux).
Removed top 3 bits (of 5) from mux cell top.$flatten\vcell.\ishaper.$procmux$2057 ($mux).
Removed top 3 bits (of 5) from mux cell top.$flatten\vcell.\ishaper.$procmux$2059 ($mux).
Removed top 3 bits (of 5) from mux cell top.$flatten\vcell.\ishaper.$procmux$2061 ($mux).
Removed cell top.$flatten\vcell.\ishaper.$procmux$2066 ($mux).
Removed top 4 bits (of 5) from mux cell top.$flatten\vcell.\ishaper.$procmux$2068 ($mux).
Removed top 4 bits (of 5) from mux cell top.$flatten\vcell.\ishaper.$procmux$2070 ($mux).
Removed top 4 bits (of 5) from mux cell top.$flatten\vcell.\ishaper.$procmux$2072 ($mux).
Removed cell top.$flatten\vcell.\ishaper.$procmux$2077 ($mux).
Removed top 4 bits (of 5) from mux cell top.$flatten\vcell.\ishaper.$procmux$2079 ($mux).
Removed top 4 bits (of 5) from mux cell top.$flatten\vcell.\ishaper.$procmux$2081 ($mux).
Removed top 4 bits (of 5) from mux cell top.$flatten\vcell.\ishaper.$procmux$2083 ($mux).
Removed cell top.$flatten\vcell.\ishaper.$procmux$2088 ($mux).
Removed top 4 bits (of 5) from mux cell top.$flatten\vcell.\ishaper.$procmux$2094 ($mux).
Removed cell top.$flatten\vcell.\ishaper.$procmux$2099 ($mux).
Removed cell top.$flatten\vcell.\ishaper.$procmux$2112 ($mux).
Removed cell top.$flatten\vcell.\ishaper.$procmux$2114 ($mux).
Removed top 4 bits (of 5) from mux cell top.$flatten\vcell.\ishaper.$procmux$2116 ($mux).
Removed top 4 bits (of 5) from mux cell top.$flatten\vcell.\ishaper.$procmux$2125 ($mux).
Removed cell top.$flatten\vcell.$procmux$1711 ($mux).
Removed cell top.$flatten\vcell.$procmux$1708 ($mux).
Removed cell top.$flatten\vcell.$procmux$1705 ($mux).
Removed cell top.$flatten\vcell.$procmux$1702 ($mux).
Removed cell top.$flatten\vcell.$procmux$1697 ($mux).
Removed cell top.$flatten\vcell.$procmux$1674 ($mux).
Removed cell top.$flatten\vcell.$procmux$1642 ($mux).
Removed cell top.$flatten\vcell.$procmux$1636 ($mux).
Removed cell top.$flatten\vcell.$procmux$1630 ($mux).
Removed cell top.$flatten\vcell.$procmux$1623 ($mux).
Removed cell top.$flatten\vcell.$procmux$1617 ($mux).
Removed cell top.$flatten\vcell.$procmux$1591 ($mux).
Removed cell top.$flatten\vcell.$procmux$1542 ($mux).
Removed cell top.$flatten\vcell.$procmux$1528 ($mux).
Removed cell top.$flatten\vcell.$procmux$1518 ($mux).
Removed top 1 bits (of 3) from port B of cell top.$flatten\vcell.$eq$src/volatile_cell_storage.v:100$1503 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$flatten\vcell.$eq$src/volatile_cell_storage.v:90$1502 ($eq).
Removed top 2 bits (of 3) from port B of cell top.$flatten\vcell.$eq$src/volatile_cell_storage.v:80$1501 ($eq).
Removed top 28 bits (of 32) from port Y of cell top.$flatten\vcell.$mod$src/volatile_cell_storage.v:220$1499 ($and).
Removed top 4 bits (of 8) from port A of cell top.$flatten\vcell.$mod$src/volatile_cell_storage.v:220$1499 ($and).
Removed top 1 bits (of 3) from port B of cell top.$flatten\vcell.$eq$src/volatile_cell_storage.v:179$1479 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$flatten\vcell.$add$src/volatile_cell_storage.v:66$1454 ($add).
Removed top 4 bits (of 5) from port B of cell top.$flatten\vcell.$add$src/volatile_cell_storage.v:65$1450 ($add).
Removed top 4 bits (of 5) from port B of cell top.$flatten\vcell.$add$src/volatile_cell_storage.v:65$1449 ($add).
Removed top 4 bits (of 5) from port B of cell top.$flatten\vcell.$add$src/volatile_cell_storage.v:64$1448 ($add).
Removed top 4 bits (of 5) from port B of cell top.$flatten\vcell.$add$src/volatile_cell_storage.v:64$1447 ($add).
Removed top 4 bits (of 5) from port B of cell top.$flatten\vcell.$add$src/volatile_cell_storage.v:64$1446 ($add).
Removed top 4 bits (of 5) from port B of cell top.$flatten\vcell.$add$src/volatile_cell_storage.v:64$1445 ($add).
Removed top 4 bits (of 5) from port B of cell top.$flatten\vcell.$add$src/volatile_cell_storage.v:63$1439 ($add).
Removed top 4 bits (of 5) from port B of cell top.$flatten\vcell.$add$src/volatile_cell_storage.v:61$1435 ($add).
Removed top 3 bits (of 5) from port B of cell top.$flatten\vcell.$add$src/volatile_cell_storage.v:61$1434 ($add).
Removed top 4 bits (of 5) from port B of cell top.$flatten\vcell.$add$src/volatile_cell_storage.v:60$1429 ($add).
Removed top 4 bits (of 5) from port B of cell top.$flatten\vcell.$add$src/volatile_cell_storage.v:59$1428 ($add).
Removed top 4 bits (of 5) from port B of cell top.$flatten\vcell.$add$src/volatile_cell_storage.v:59$1427 ($add).
Removed top 4 bits (of 5) from port B of cell top.$flatten\vcell.$add$src/volatile_cell_storage.v:59$1426 ($add).
Removed top 4 bits (of 5) from port B of cell top.$flatten\vcell.$add$src/volatile_cell_storage.v:59$1425 ($add).
Removed top 4 bits (of 5) from port B of cell top.$flatten\vcell.$add$src/volatile_cell_storage.v:58$1419 ($add).
Removed top 1 bits (of 3) from port B of cell top.$flatten\game_manager.\c.$procmux$2020_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$flatten\game_manager.\c.$procmux$2021_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell top.$flatten\game_manager.\c.$procmux$2022_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell top.$flatten\game_manager.\sh.$eq$src/shader.v:9$719 ($eq).
Removed top 27 bits (of 32) from port B of cell top.$flatten\game_manager.\sh.$ge$src/shader.v:9$721 ($ge).
Removed top 30 bits (of 32) from port B of cell top.$flatten\game_manager.\sh.$gt$src/shader.v:10$723 ($gt).
Removed top 27 bits (of 32) from port B of cell top.$flatten\game_manager.\sh.$lt$src/shader.v:10$724 ($lt).
Removed top 30 bits (of 32) from port B of cell top.$flatten\game_manager.\sh.$gt$src/shader.v:10$726 ($gt).
Removed top 27 bits (of 32) from port B of cell top.$flatten\game_manager.\sh.$lt$src/shader.v:10$728 ($lt).
Removed top 11 bits (of 12) from port Y of cell top.$flatten\game_manager.\sh.$and$src/shader.v:20$736 ($and).
Removed top 11 bits (of 12) from port B of cell top.$flatten\game_manager.\sh.$and$src/shader.v:21$739 ($and).
Removed top 11 bits (of 12) from port Y of cell top.$flatten\game_manager.\sh.$and$src/shader.v:21$739 ($and).
Removed top 4 bits (of 10) from port Y of cell top.$flatten\game_manager.\hh.$sub$src/mod24.v:58$944 ($sub).
Removed top 4 bits (of 10) from port A of cell top.$flatten\game_manager.\hh.$sub$src/mod24.v:58$944 ($sub).
Removed top 4 bits (of 10) from port B of cell top.$flatten\game_manager.\hh.$sub$src/mod24.v:58$944 ($sub).
Removed top 4 bits (of 10) from port Y of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$943 ($or).
Removed top 4 bits (of 10) from port A of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$943 ($or).
Removed top 4 bits (of 10) from port B of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$943 ($or).
Removed top 4 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:43$942 ($mux).
Removed top 4 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:43$941 ($mux).
Removed top 4 bits (of 10) from port Y of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$936 ($or).
Removed top 4 bits (of 10) from port A of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$936 ($or).
Removed top 4 bits (of 10) from port B of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$936 ($or).
Removed top 4 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:42$935 ($mux).
Removed top 6 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:42$934 ($mux).
Removed top 4 bits (of 10) from port Y of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$929 ($or).
Removed top 4 bits (of 10) from port A of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$929 ($or).
Removed top 4 bits (of 10) from port B of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$929 ($or).
Removed top 4 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:41$928 ($mux).
Removed top 5 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:41$927 ($mux).
Removed top 4 bits (of 10) from port Y of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$922 ($or).
Removed top 4 bits (of 10) from port A of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$922 ($or).
Removed top 4 bits (of 10) from port B of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$922 ($or).
Removed top 4 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:40$921 ($mux).
Removed top 4 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:40$920 ($mux).
Removed top 1 bits (of 5) from port B of cell top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:40$917 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:40$916 ($eq).
Removed top 4 bits (of 10) from port Y of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$915 ($or).
Removed top 4 bits (of 10) from port A of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$915 ($or).
Removed top 4 bits (of 10) from port B of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$915 ($or).
Removed top 4 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:39$914 ($mux).
Removed top 4 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:39$913 ($mux).
Removed top 1 bits (of 5) from port B of cell top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:39$910 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:39$909 ($eq).
Removed top 4 bits (of 10) from port Y of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$908 ($or).
Removed top 4 bits (of 10) from port A of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$908 ($or).
Removed top 4 bits (of 10) from port B of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$908 ($or).
Removed top 4 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:38$907 ($mux).
Removed top 6 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:38$906 ($mux).
Removed top 1 bits (of 5) from port B of cell top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:38$903 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:38$902 ($eq).
Removed top 4 bits (of 10) from port Y of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$901 ($or).
Removed top 4 bits (of 10) from port A of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$901 ($or).
Removed top 4 bits (of 10) from port B of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$901 ($or).
Removed top 4 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:37$900 ($mux).
Removed top 5 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:37$899 ($mux).
Removed top 1 bits (of 5) from port B of cell top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:37$896 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:37$895 ($eq).
Removed top 4 bits (of 10) from port Y of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$894 ($or).
Removed top 4 bits (of 10) from port A of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$894 ($or).
Removed top 4 bits (of 10) from port B of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$894 ($or).
Removed top 4 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:36$893 ($mux).
Removed top 4 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:36$892 ($mux).
Removed top 2 bits (of 5) from port B of cell top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:36$889 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:36$888 ($eq).
Removed top 4 bits (of 10) from port Y of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$887 ($or).
Removed top 4 bits (of 10) from port A of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$887 ($or).
Removed top 4 bits (of 10) from port B of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$887 ($or).
Removed top 4 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:35$886 ($mux).
Removed top 4 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:35$885 ($mux).
Removed top 2 bits (of 5) from port B of cell top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:35$882 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:35$881 ($eq).
Removed top 4 bits (of 10) from port Y of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$880 ($or).
Removed top 4 bits (of 10) from port A of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$880 ($or).
Removed top 4 bits (of 10) from port B of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$880 ($or).
Removed top 4 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:34$879 ($mux).
Removed top 6 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:34$878 ($mux).
Removed top 3 bits (of 5) from port B of cell top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:34$875 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:34$874 ($eq).
Removed top 4 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:33$873 ($mux).
Removed top 5 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:33$872 ($mux).
Removed top 4 bits (of 5) from port B of cell top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:33$869 ($eq).
Removed top 4 bits (of 5) from mux cell top.$flatten\game_manager.\h.$ternary$src/mod24.v:18$749 ($mux).
Removed top 3 bits (of 5) from mux cell top.$flatten\game_manager.\h.$ternary$src/mod24.v:18$751 ($mux).
Removed top 4 bits (of 5) from port A of cell top.$flatten\game_manager.\h.$or$src/mod24.v:18$752 ($or).
Removed top 3 bits (of 5) from port B of cell top.$flatten\game_manager.\h.$or$src/mod24.v:18$752 ($or).
Removed top 3 bits (of 5) from port Y of cell top.$flatten\game_manager.\h.$or$src/mod24.v:18$752 ($or).
Removed top 3 bits (of 5) from mux cell top.$flatten\game_manager.\h.$ternary$src/mod24.v:18$753 ($mux).
Removed top 3 bits (of 5) from port A of cell top.$flatten\game_manager.\h.$or$src/mod24.v:18$754 ($or).
Removed top 3 bits (of 5) from port B of cell top.$flatten\game_manager.\h.$or$src/mod24.v:18$754 ($or).
Removed top 3 bits (of 5) from port Y of cell top.$flatten\game_manager.\h.$or$src/mod24.v:18$754 ($or).
Removed top 2 bits (of 5) from mux cell top.$flatten\game_manager.\h.$ternary$src/mod24.v:19$755 ($mux).
Removed top 2 bits (of 5) from mux cell top.$flatten\game_manager.\h.$ternary$src/mod24.v:19$756 ($mux).
Removed top 2 bits (of 5) from port A of cell top.$flatten\game_manager.\h.$or$src/mod24.v:19$757 ($or).
Removed top 2 bits (of 5) from port B of cell top.$flatten\game_manager.\h.$or$src/mod24.v:19$757 ($or).
Removed top 2 bits (of 5) from port Y of cell top.$flatten\game_manager.\h.$or$src/mod24.v:19$757 ($or).
Removed top 2 bits (of 5) from mux cell top.$flatten\game_manager.\h.$ternary$src/mod24.v:19$758 ($mux).
Removed top 2 bits (of 5) from port A of cell top.$flatten\game_manager.\h.$or$src/mod24.v:19$759 ($or).
Removed top 2 bits (of 5) from port B of cell top.$flatten\game_manager.\h.$or$src/mod24.v:19$759 ($or).
Removed top 2 bits (of 5) from port Y of cell top.$flatten\game_manager.\h.$or$src/mod24.v:19$759 ($or).
Removed top 2 bits (of 5) from mux cell top.$flatten\game_manager.\h.$ternary$src/mod24.v:19$760 ($mux).
Removed top 2 bits (of 5) from port A of cell top.$flatten\game_manager.\h.$or$src/mod24.v:19$761 ($or).
Removed top 2 bits (of 5) from port B of cell top.$flatten\game_manager.\h.$or$src/mod24.v:19$761 ($or).
Removed top 2 bits (of 5) from port Y of cell top.$flatten\game_manager.\h.$or$src/mod24.v:19$761 ($or).
Removed top 1 bits (of 5) from mux cell top.$flatten\game_manager.\h.$ternary$src/mod24.v:20$762 ($mux).
Removed top 1 bits (of 5) from mux cell top.$flatten\game_manager.\h.$ternary$src/mod24.v:20$763 ($mux).
Removed top 1 bits (of 5) from port A of cell top.$flatten\game_manager.\h.$or$src/mod24.v:20$764 ($or).
Removed top 1 bits (of 5) from port B of cell top.$flatten\game_manager.\h.$or$src/mod24.v:20$764 ($or).
Removed top 1 bits (of 5) from port Y of cell top.$flatten\game_manager.\h.$or$src/mod24.v:20$764 ($or).
Removed top 1 bits (of 5) from mux cell top.$flatten\game_manager.\h.$ternary$src/mod24.v:20$765 ($mux).
Removed top 1 bits (of 5) from port A of cell top.$flatten\game_manager.\h.$or$src/mod24.v:20$766 ($or).
Removed top 1 bits (of 5) from port B of cell top.$flatten\game_manager.\h.$or$src/mod24.v:20$766 ($or).
Removed top 1 bits (of 5) from port Y of cell top.$flatten\game_manager.\h.$or$src/mod24.v:20$766 ($or).
Removed top 1 bits (of 5) from mux cell top.$flatten\game_manager.\h.$ternary$src/mod24.v:20$767 ($mux).
Removed top 1 bits (of 5) from port A of cell top.$flatten\game_manager.\h.$or$src/mod24.v:20$768 ($or).
Removed top 1 bits (of 5) from port B of cell top.$flatten\game_manager.\h.$or$src/mod24.v:20$768 ($or).
Removed top 1 bits (of 5) from port Y of cell top.$flatten\game_manager.\h.$or$src/mod24.v:20$768 ($or).
Removed top 1 bits (of 5) from mux cell top.$flatten\game_manager.\h.$ternary$src/mod24.v:21$769 ($mux).
Removed top 1 bits (of 5) from mux cell top.$flatten\game_manager.\h.$ternary$src/mod24.v:21$770 ($mux).
Removed top 1 bits (of 5) from port A of cell top.$flatten\game_manager.\h.$or$src/mod24.v:21$771 ($or).
Removed top 1 bits (of 5) from port B of cell top.$flatten\game_manager.\h.$or$src/mod24.v:21$771 ($or).
Removed top 1 bits (of 5) from port Y of cell top.$flatten\game_manager.\h.$or$src/mod24.v:21$771 ($or).
Removed top 1 bits (of 5) from mux cell top.$flatten\game_manager.\h.$ternary$src/mod24.v:21$772 ($mux).
Removed top 1 bits (of 5) from port A of cell top.$flatten\game_manager.\h.$or$src/mod24.v:21$773 ($or).
Removed top 1 bits (of 5) from port B of cell top.$flatten\game_manager.\h.$or$src/mod24.v:21$773 ($or).
Removed top 1 bits (of 5) from port Y of cell top.$flatten\game_manager.\h.$or$src/mod24.v:21$773 ($or).
Removed top 1 bits (of 5) from mux cell top.$flatten\game_manager.\h.$ternary$src/mod24.v:21$774 ($mux).
Removed top 1 bits (of 5) from port A of cell top.$flatten\game_manager.\h.$or$src/mod24.v:21$775 ($or).
Removed top 1 bits (of 5) from port B of cell top.$flatten\game_manager.\h.$or$src/mod24.v:21$775 ($or).
Removed top 1 bits (of 5) from port Y of cell top.$flatten\game_manager.\h.$or$src/mod24.v:21$775 ($or).
Removed top 3 bits (of 5) from port A of cell top.$flatten\game_manager.\h.$or$src/mod24.v:25$790 ($or).
Removed top 2 bits (of 5) from port B of cell top.$flatten\game_manager.\h.$or$src/mod24.v:25$790 ($or).
Removed top 2 bits (of 5) from port Y of cell top.$flatten\game_manager.\h.$or$src/mod24.v:25$790 ($or).
Removed top 2 bits (of 5) from port A of cell top.$flatten\game_manager.\h.$or$src/mod24.v:25$791 ($or).
Removed top 1 bits (of 5) from port B of cell top.$flatten\game_manager.\h.$or$src/mod24.v:25$791 ($or).
Removed top 1 bits (of 5) from port Y of cell top.$flatten\game_manager.\h.$or$src/mod24.v:25$791 ($or).
Removed top 1 bits (of 5) from port A of cell top.$flatten\game_manager.\h.$or$src/mod24.v:25$792 ($or).
Removed top 1 bits (of 5) from port B of cell top.$flatten\game_manager.\h.$or$src/mod24.v:25$792 ($or).
Removed top 1 bits (of 5) from port Y of cell top.$flatten\game_manager.\h.$or$src/mod24.v:25$792 ($or).
Removed top 1 bits (of 5) from port A of cell top.$flatten\game_manager.\h.$or$src/mod24.v:25$793 ($or).
Removed top 27 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$799 ($ge).
Removed top 26 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$800 ($lt).
Removed top 26 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$802 ($ge).
Removed top 25 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$803 ($lt).
Removed top 25 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$805 ($ge).
Removed top 25 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$806 ($lt).
Removed top 25 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$808 ($ge).
Removed top 25 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$809 ($lt).
Removed top 25 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$811 ($ge).
Removed top 24 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$812 ($lt).
Removed top 24 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$814 ($ge).
Removed top 24 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$815 ($lt).
Removed top 24 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$817 ($ge).
Removed top 24 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$818 ($lt).
Removed top 24 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$820 ($ge).
Removed top 24 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$821 ($lt).
Removed top 24 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$823 ($ge).
Removed top 24 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$824 ($lt).
Removed top 24 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$826 ($ge).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$827 ($lt).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$829 ($ge).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$830 ($lt).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$832 ($ge).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$833 ($lt).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$835 ($ge).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$836 ($lt).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$838 ($ge).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$839 ($lt).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$841 ($ge).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$842 ($lt).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$844 ($ge).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$845 ($lt).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$847 ($ge).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$848 ($lt).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$850 ($ge).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$851 ($lt).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$853 ($ge).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$854 ($lt).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$856 ($ge).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$857 ($lt).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$859 ($ge).
Removed top 22 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$860 ($lt).
Removed top 22 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$862 ($ge).
Removed top 22 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$863 ($lt).
Removed top 22 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$865 ($ge).
Removed top 22 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$866 ($lt).
Removed top 8 bits (of 12) from mux cell top.$flatten\game_manager.$procmux$2039 ($mux).
Removed top 31 bits (of 32) from port B of cell top.$flatten\game_manager.\sh.$le$src/shader.v:9$716 ($le).
Removed top 26 bits (of 32) from port B of cell top.$flatten\game_manager.$sub$src/gmanager.v:43$712 ($sub).
Removed top 22 bits (of 32) from port Y of cell top.$flatten\game_manager.$sub$src/gmanager.v:43$712 ($sub).
Removed top 22 bits (of 32) from port B of cell top.$flatten\game_manager.$sub$src/gmanager.v:35$711 ($sub).
Removed top 26 bits (of 32) from port Y of cell top.$flatten\game_manager.$sub$src/gmanager.v:35$711 ($sub).
Removed top 26 bits (of 32) from port A of cell top.$flatten\game_manager.$sub$src/gmanager.v:35$711 ($sub).
Removed top 4 bits (of 10) from port B of cell top.$flatten\game_manager.$sub$src/gmanager.v:35$711 ($sub).
Removed top 26 bits (of 32) from port B of cell top.$flatten\game_manager.$sub$src/gmanager.v:34$707 ($sub).
Removed top 22 bits (of 32) from port Y of cell top.$flatten\game_manager.$sub$src/gmanager.v:34$707 ($sub).
Removed top 22 bits (of 32) from port B of cell top.$flatten\game_manager.$lt$src/gmanager.v:29$705 ($lt).
Removed top 26 bits (of 32) from port B of cell top.$flatten\game_manager.$ge$src/gmanager.v:29$704 ($ge).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.$lt$src/gmanager.v:28$702 ($lt).
Removed top 26 bits (of 32) from port B of cell top.$flatten\game_manager.$ge$src/gmanager.v:28$701 ($ge).
Removed top 23 bits (of 32) from port B of cell top.$flatten\core.$lt$src/vga_core.v:85$558 ($lt).
Removed top 23 bits (of 32) from port B of cell top.$flatten\core.$ge$src/vga_core.v:85$557 ($ge).
Removed top 22 bits (of 32) from port B of cell top.$flatten\core.$lt$src/vga_core.v:84$554 ($lt).
Removed top 22 bits (of 32) from port B of cell top.$flatten\core.$ge$src/vga_core.v:84$553 ($ge).
Removed top 23 bits (of 32) from port B of cell top.$flatten\core.$lt$src/vga_core.v:82$552 ($lt).
Removed top 22 bits (of 32) from port B of cell top.$flatten\core.$lt$src/vga_core.v:81$551 ($lt).
Removed top 4 bits (of 5) from mux cell top.$flatten\vcell.\lashaper.$procmux$2206 ($mux).
Removed top 4 bits (of 5) from mux cell top.$flatten\vcell.\lashaper.$procmux$2250 ($mux).
Removed cell top.$flatten\vcell.\lashaper.$procmux$2204 ($mux).
Removed top 3 bits (of 4) from FF cell top.$auto$ff.cc:262:slice$2957 ($sdffe).
Removed top 8 bits (of 12) from wire top.$flatten\game_manager.$procmux$2039_Y.
Removed top 22 bits (of 32) from wire top.$flatten\game_manager.$sub$src/gmanager.v:34$707_Y.
Removed top 4 bits (of 5) from wire top.$flatten\game_manager.\h.$or$src/mod24.v:18$750_Y.
Removed top 3 bits (of 5) from wire top.$flatten\game_manager.\h.$or$src/mod24.v:18$752_Y.
Removed top 2 bits (of 5) from wire top.$flatten\game_manager.\h.$or$src/mod24.v:19$757_Y.
Removed top 2 bits (of 5) from wire top.$flatten\game_manager.\h.$or$src/mod24.v:19$759_Y.
Removed top 1 bits (of 5) from wire top.$flatten\game_manager.\h.$or$src/mod24.v:20$764_Y.
Removed top 1 bits (of 5) from wire top.$flatten\game_manager.\h.$or$src/mod24.v:20$766_Y.
Removed top 1 bits (of 5) from wire top.$flatten\game_manager.\h.$or$src/mod24.v:21$771_Y.
Removed top 1 bits (of 5) from wire top.$flatten\game_manager.\h.$or$src/mod24.v:21$773_Y.
Removed top 2 bits (of 5) from wire top.$flatten\game_manager.\h.$or$src/mod24.v:25$790_Y.
Removed top 1 bits (of 5) from wire top.$flatten\game_manager.\h.$or$src/mod24.v:25$791_Y.
Removed top 1 bits (of 5) from wire top.$flatten\game_manager.\h.$or$src/mod24.v:25$792_Y.
Removed top 4 bits (of 5) from wire top.$flatten\game_manager.\h.$ternary$src/mod24.v:18$751_Y.
Removed top 3 bits (of 5) from wire top.$flatten\game_manager.\h.$ternary$src/mod24.v:18$753_Y.
Removed top 2 bits (of 5) from wire top.$flatten\game_manager.\h.$ternary$src/mod24.v:19$755_Y.
Removed top 2 bits (of 5) from wire top.$flatten\game_manager.\h.$ternary$src/mod24.v:19$756_Y.
Removed top 2 bits (of 5) from wire top.$flatten\game_manager.\h.$ternary$src/mod24.v:19$758_Y.
Removed top 2 bits (of 5) from wire top.$flatten\game_manager.\h.$ternary$src/mod24.v:19$760_Y.
Removed top 1 bits (of 5) from wire top.$flatten\game_manager.\h.$ternary$src/mod24.v:20$762_Y.
Removed top 2 bits (of 5) from wire top.$flatten\game_manager.\h.$ternary$src/mod24.v:20$763_Y.
Removed top 2 bits (of 5) from wire top.$flatten\game_manager.\h.$ternary$src/mod24.v:20$765_Y.
Removed top 1 bits (of 5) from wire top.$flatten\game_manager.\h.$ternary$src/mod24.v:20$767_Y.
Removed top 1 bits (of 5) from wire top.$flatten\game_manager.\h.$ternary$src/mod24.v:21$769_Y.
Removed top 2 bits (of 5) from wire top.$flatten\game_manager.\h.$ternary$src/mod24.v:21$770_Y.
Removed top 2 bits (of 5) from wire top.$flatten\game_manager.\h.$ternary$src/mod24.v:21$772_Y.
Removed top 1 bits (of 5) from wire top.$flatten\game_manager.\h.$ternary$src/mod24.v:21$774_Y.
Removed top 2 bits (of 5) from wire top.$flatten\game_manager.\h.$ternary$src/mod24.v:23$788_Y.
Removed top 9 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:33$869_Y.
Removed top 9 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:34$875_Y.
Removed top 9 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:35$882_Y.
Removed top 9 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:36$889_Y.
Removed top 9 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:37$896_Y.
Removed top 9 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:38$903_Y.
Removed top 9 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:39$910_Y.
Removed top 9 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:40$917_Y.
Removed top 9 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:41$924_Y.
Removed top 9 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:42$931_Y.
Removed top 9 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:43$938_Y.
Removed top 4 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$880_Y.
Removed top 4 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$894_Y.
Removed top 7 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$901_Y.
Removed top 4 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$908_Y.
Removed top 4 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$915_Y.
Removed top 4 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$922_Y.
Removed top 4 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$929_Y.
Removed top 5 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:33$872_Y.
Removed top 5 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:33$873_Y.
Removed top 6 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:34$878_Y.
Removed top 5 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:34$879_Y.
Removed top 4 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:36$892_Y.
Removed top 5 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:36$893_Y.
Removed top 7 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:38$906_Y.
Removed top 5 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:38$907_Y.
Removed top 5 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:39$913_Y.
Removed top 7 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:39$914_Y.
Removed top 4 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:40$920_Y.
Removed top 7 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:40$921_Y.
Removed top 5 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:41$927_Y.
Removed top 5 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:41$928_Y.
Removed top 11 bits (of 12) from wire top.$flatten\game_manager.\sh.$and$src/shader.v:20$736_Y.
Removed top 11 bits (of 12) from wire top.$flatten\game_manager.\sh.$and$src/shader.v:21$739_Y.
Removed top 11 bits (of 12) from wire top.$flatten\game_manager.\sh.$logic_not$src/shader.v:21$738_Y.
Removed top 26 bits (of 32) from wire top.$flatten\memory.$sub$src/blockmemory.v:119$969_Y.
Removed top 26 bits (of 32) from wire top.$flatten\memory.$sub$src/blockmemory.v:123$974_Y.
Removed top 26 bits (of 32) from wire top.$flatten\memory.$sub$src/blockmemory.v:160$986_Y.
Removed top 26 bits (of 32) from wire top.$flatten\memory.$sub$src/blockmemory.v:168$988_Y.
Removed top 26 bits (of 32) from wire top.$flatten\memory.$sub$src/blockmemory.v:176$990_Y.
Removed top 1 bits (of 6) from wire top.$flatten\memory.\sh.$0\totp[5:0].
Removed top 1 bits (of 6) from wire top.$flatten\memory.\sh.$ternary$src/shifter.v:23$419_Y.
Removed top 1 bits (of 6) from wire top.$flatten\memory.\sh.$ternary$src/shifter.v:23$420_Y.
Removed top 1 bits (of 6) from wire top.$flatten\memory.\sh.$ternary$src/shifter.v:29$436_Y.
Removed top 28 bits (of 32) from wire top.$flatten\vcell.$mod$src/volatile_cell_storage.v:220$1499_Y.
Removed top 3 bits (of 5) from wire top.$flatten\vcell.\ishaper.$procmux$2046_Y.
Removed top 3 bits (of 5) from wire top.$flatten\vcell.\ishaper.$procmux$2048_Y.
Removed top 4 bits (of 5) from wire top.$flatten\vcell.\ishaper.$procmux$2050_Y.
Removed top 3 bits (of 5) from wire top.$flatten\vcell.\ishaper.$procmux$2057_Y.
Removed top 3 bits (of 5) from wire top.$flatten\vcell.\ishaper.$procmux$2059_Y.
Removed top 3 bits (of 5) from wire top.$flatten\vcell.\ishaper.$procmux$2061_Y.
Removed top 4 bits (of 5) from wire top.$flatten\vcell.\ishaper.$procmux$2068_Y.
Removed top 4 bits (of 5) from wire top.$flatten\vcell.\ishaper.$procmux$2070_Y.
Removed top 4 bits (of 5) from wire top.$flatten\vcell.\ishaper.$procmux$2072_Y.
Removed top 4 bits (of 5) from wire top.$flatten\vcell.\ishaper.$procmux$2079_Y.
Removed top 4 bits (of 5) from wire top.$flatten\vcell.\ishaper.$procmux$2081_Y.
Removed top 4 bits (of 5) from wire top.$flatten\vcell.\ishaper.$procmux$2083_Y.
Removed top 4 bits (of 5) from wire top.$flatten\vcell.\ishaper.$procmux$2094_Y.
Removed top 4 bits (of 5) from wire top.$flatten\vcell.\ishaper.$procmux$2116_Y.
Removed top 4 bits (of 5) from wire top.$flatten\vcell.\ishaper.$procmux$2125_Y.
Removed top 4 bits (of 5) from wire top.$flatten\vcell.\lashaper.$procmux$2206_Y.
Removed top 4 bits (of 5) from wire top.$flatten\vcell.\lashaper.$procmux$2208_Y.
Removed top 4 bits (of 5) from wire top.$flatten\vcell.\lashaper.$procmux$2250_Y.
Removed top 4 bits (of 5) from wire top.$flatten\vcell.\lashaper.$procmux$2252_Y.
Removed top 4 bits (of 5) from wire top.$flatten\vcell.\lbshaper.$procmux$2296_Y.
Removed top 4 bits (of 5) from wire top.$flatten\vcell.\oshaper.$0\blk2_hoffset[4:0].

20.14. Executing PEEPOPT pass (run peephole optimizers).

20.15. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 335 unused wires.
<suppressed ~1 debug messages>

20.16. Executing SHARE pass (SAT-based resource sharing).

20.17. Executing TECHMAP pass (map to technology primitives).

20.17.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/usr/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

20.17.2. Continuing TECHMAP pass.
Using template $paramod$63c7f1a5c4d320eda7bf5de8a615386686b975ab\_90_lut_cmp_ for cells of type $gt.
No more expansions possible.
<suppressed ~2380 debug messages>

20.18. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~28 debug messages>

20.19. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 31 unused wires.
<suppressed ~1 debug messages>

20.20. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module top:
  creating $macc model for $flatten\core.$add$src/vga_core.v:79$550 ($add).
  creating $macc model for $flatten\core.$add$src/vga_core.v:89$562 ($add).
  creating $macc model for $flatten\game_manager.$sub$src/gmanager.v:34$707 ($sub).
  creating $macc model for $flatten\game_manager.$sub$src/gmanager.v:35$711 ($sub).
  creating $macc model for $flatten\game_manager.$sub$src/gmanager.v:43$712 ($sub).
  creating $macc model for $flatten\game_manager.\hh.$sub$src/mod24.v:58$944 ($sub).
  creating $macc model for $flatten\memory.$add$src/blockmemory.v:115$965 ($add).
  creating $macc model for $flatten\memory.$sub$src/blockmemory.v:119$969 ($sub).
  creating $macc model for $flatten\memory.$sub$src/blockmemory.v:123$974 ($sub).
  creating $macc model for $flatten\memory.$sub$src/blockmemory.v:152$984 ($sub).
  creating $macc model for $flatten\memory.$sub$src/blockmemory.v:160$986 ($sub).
  creating $macc model for $flatten\memory.$sub$src/blockmemory.v:168$988 ($sub).
  creating $macc model for $flatten\memory.$sub$src/blockmemory.v:176$990 ($sub).
  creating $macc model for $flatten\memory.$sub$src/blockmemory.v:194$993 ($sub).
  creating $macc model for $flatten\t.$add$src/timer.v:18$567 ($add).
  creating $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:161$1464 ($add).
  creating $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:167$1469 ($add).
  creating $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:179$1480 ($add).
  creating $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:58$1419 ($add).
  creating $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:59$1424 ($add).
  creating $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:59$1425 ($add).
  creating $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:59$1426 ($add).
  creating $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:59$1427 ($add).
  creating $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:59$1428 ($add).
  creating $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:60$1429 ($add).
  creating $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:60$1431 ($add).
  creating $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:60$1432 ($add).
  creating $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:60$1433 ($add).
  creating $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:61$1434 ($add).
  creating $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:61$1435 ($add).
  creating $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:61$1436 ($add).
  creating $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:61$1437 ($add).
  creating $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:61$1438 ($add).
  creating $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:63$1439 ($add).
  creating $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:64$1444 ($add).
  creating $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:64$1445 ($add).
  creating $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:64$1446 ($add).
  creating $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:64$1447 ($add).
  creating $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:64$1448 ($add).
  creating $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:65$1449 ($add).
  creating $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:65$1450 ($add).
  creating $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:65$1451 ($add).
  creating $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:65$1452 ($add).
  creating $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:65$1453 ($add).
  creating $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:66$1454 ($add).
  creating $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:66$1456 ($add).
  creating $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:66$1457 ($add).
  creating $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:66$1458 ($add).
  creating $macc model for $flatten\vcell.$sub$src/volatile_cell_storage.v:173$1474 ($sub).
  merging $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:66$1457 into $flatten\vcell.$add$src/volatile_cell_storage.v:66$1458.
  merging $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:66$1456 into $flatten\vcell.$add$src/volatile_cell_storage.v:66$1458.
  merging $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:66$1454 into $flatten\vcell.$add$src/volatile_cell_storage.v:66$1458.
  merging $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:65$1452 into $flatten\vcell.$add$src/volatile_cell_storage.v:65$1453.
  merging $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:65$1451 into $flatten\vcell.$add$src/volatile_cell_storage.v:65$1453.
  merging $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:65$1450 into $flatten\vcell.$add$src/volatile_cell_storage.v:65$1453.
  merging $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:65$1449 into $flatten\vcell.$add$src/volatile_cell_storage.v:65$1453.
  merging $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:64$1447 into $flatten\vcell.$add$src/volatile_cell_storage.v:64$1448.
  merging $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:64$1446 into $flatten\vcell.$add$src/volatile_cell_storage.v:64$1448.
  merging $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:64$1445 into $flatten\vcell.$add$src/volatile_cell_storage.v:64$1448.
  merging $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:64$1444 into $flatten\vcell.$add$src/volatile_cell_storage.v:64$1448.
  merging $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:61$1437 into $flatten\vcell.$add$src/volatile_cell_storage.v:61$1438.
  merging $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:61$1436 into $flatten\vcell.$add$src/volatile_cell_storage.v:61$1438.
  merging $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:61$1435 into $flatten\vcell.$add$src/volatile_cell_storage.v:61$1438.
  merging $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:61$1434 into $flatten\vcell.$add$src/volatile_cell_storage.v:61$1438.
  merging $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:60$1432 into $flatten\vcell.$add$src/volatile_cell_storage.v:60$1433.
  merging $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:60$1431 into $flatten\vcell.$add$src/volatile_cell_storage.v:60$1433.
  merging $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:60$1429 into $flatten\vcell.$add$src/volatile_cell_storage.v:60$1433.
  merging $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:59$1427 into $flatten\vcell.$add$src/volatile_cell_storage.v:59$1428.
  merging $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:59$1426 into $flatten\vcell.$add$src/volatile_cell_storage.v:59$1428.
  merging $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:59$1425 into $flatten\vcell.$add$src/volatile_cell_storage.v:59$1428.
  merging $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:59$1424 into $flatten\vcell.$add$src/volatile_cell_storage.v:59$1428.
  creating $alu model for $macc $flatten\vcell.$add$src/volatile_cell_storage.v:63$1439.
  creating $alu model for $macc $flatten\vcell.$sub$src/volatile_cell_storage.v:173$1474.
  creating $alu model for $macc $flatten\vcell.$add$src/volatile_cell_storage.v:58$1419.
  creating $alu model for $macc $flatten\vcell.$add$src/volatile_cell_storage.v:179$1480.
  creating $alu model for $macc $flatten\vcell.$add$src/volatile_cell_storage.v:167$1469.
  creating $alu model for $macc $flatten\vcell.$add$src/volatile_cell_storage.v:161$1464.
  creating $alu model for $macc $flatten\t.$add$src/timer.v:18$567.
  creating $alu model for $macc $flatten\memory.$sub$src/blockmemory.v:194$993.
  creating $alu model for $macc $flatten\memory.$sub$src/blockmemory.v:176$990.
  creating $alu model for $macc $flatten\memory.$sub$src/blockmemory.v:168$988.
  creating $alu model for $macc $flatten\memory.$sub$src/blockmemory.v:160$986.
  creating $alu model for $macc $flatten\memory.$sub$src/blockmemory.v:152$984.
  creating $alu model for $macc $flatten\memory.$sub$src/blockmemory.v:123$974.
  creating $alu model for $macc $flatten\memory.$sub$src/blockmemory.v:119$969.
  creating $alu model for $macc $flatten\memory.$add$src/blockmemory.v:115$965.
  creating $alu model for $macc $flatten\game_manager.\hh.$sub$src/mod24.v:58$944.
  creating $alu model for $macc $flatten\game_manager.$sub$src/gmanager.v:43$712.
  creating $alu model for $macc $flatten\game_manager.$sub$src/gmanager.v:35$711.
  creating $alu model for $macc $flatten\game_manager.$sub$src/gmanager.v:34$707.
  creating $alu model for $macc $flatten\core.$add$src/vga_core.v:89$562.
  creating $alu model for $macc $flatten\core.$add$src/vga_core.v:79$550.
  creating $macc cell for $flatten\vcell.$add$src/volatile_cell_storage.v:60$1433: $auto$alumacc.cc:365:replace_macc$4328
  creating $macc cell for $flatten\vcell.$add$src/volatile_cell_storage.v:64$1448: $auto$alumacc.cc:365:replace_macc$4329
  creating $macc cell for $flatten\vcell.$add$src/volatile_cell_storage.v:59$1428: $auto$alumacc.cc:365:replace_macc$4330
  creating $macc cell for $flatten\vcell.$add$src/volatile_cell_storage.v:61$1438: $auto$alumacc.cc:365:replace_macc$4331
  creating $macc cell for $flatten\vcell.$add$src/volatile_cell_storage.v:65$1453: $auto$alumacc.cc:365:replace_macc$4332
  creating $macc cell for $flatten\vcell.$add$src/volatile_cell_storage.v:66$1458: $auto$alumacc.cc:365:replace_macc$4333
  creating $alu model for $flatten\core.$ge$src/vga_core.v:84$553 ($ge): new $alu
  creating $alu model for $flatten\core.$ge$src/vga_core.v:85$557 ($ge): new $alu
  creating $alu model for $flatten\core.$lt$src/vga_core.v:81$551 ($lt): new $alu
  creating $alu model for $flatten\core.$lt$src/vga_core.v:82$552 ($lt): new $alu
  creating $alu model for $flatten\core.$lt$src/vga_core.v:84$554 ($lt): new $alu
  creating $alu model for $flatten\core.$lt$src/vga_core.v:85$558 ($lt): new $alu
  creating $alu model for $flatten\game_manager.$ge$src/gmanager.v:28$701 ($ge): new $alu
  creating $alu model for $flatten\game_manager.$ge$src/gmanager.v:29$704 ($ge): new $alu
  creating $alu model for $flatten\game_manager.$lt$src/gmanager.v:28$702 ($lt): new $alu
  creating $alu model for $flatten\game_manager.$lt$src/gmanager.v:29$705 ($lt): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$799 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$802 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$805 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$808 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$811 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$814 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$817 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$820 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$823 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$826 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$829 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$832 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$835 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$838 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$841 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$844 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$847 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$850 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$853 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$856 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$859 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$862 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$865 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$800 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$802.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$803 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$805.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$806 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$808.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$809 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$811.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$812 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$814.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$815 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$817.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$818 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$820.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$821 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$823.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$824 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$826.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$827 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$829.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$830 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$832.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$833 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$835.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$836 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$838.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$839 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$841.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$842 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$844.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$845 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$847.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$848 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$850.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$851 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$853.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$854 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$856.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$857 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$859.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$860 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$862.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$863 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$865.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$866 ($lt): new $alu
  creating $alu model for $flatten\game_manager.\sh.$ge$src/shader.v:9$721 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\sh.$gt$src/shader.v:10$723 ($gt): new $alu
  creating $alu model for $flatten\game_manager.\sh.$gt$src/shader.v:10$726 ($gt): new $alu
  creating $alu model for $flatten\game_manager.\sh.$gt$src/shader.v:12$732 ($gt): new $alu
  creating $alu model for $flatten\game_manager.\sh.$le$src/shader.v:9$716 ($le): new $alu
  creating $alu model for $flatten\game_manager.\sh.$lt$src/shader.v:10$724 ($lt): new $alu
  creating $alu model for $flatten\game_manager.\sh.$lt$src/shader.v:10$728 ($lt): new $alu
  creating $alu model for $flatten\memory.$ge$src/blockmemory.v:117$966 ($ge): new $alu
  creating $alu model for $flatten\memory.$ge$src/blockmemory.v:122$971 ($ge): new $alu
  creating $alu model for $flatten\memory.$ge$src/blockmemory.v:127$976 ($ge): new $alu
  creating $alu model for $flatten\memory.$lt$src/blockmemory.v:112$964 ($lt): merged with $flatten\memory.$ge$src/blockmemory.v:117$966.
  creating $alu model for $flatten\memory.$lt$src/blockmemory.v:117$967 ($lt): merged with $flatten\memory.$ge$src/blockmemory.v:122$971.
  creating $alu model for $flatten\memory.$lt$src/blockmemory.v:122$972 ($lt): merged with $flatten\memory.$ge$src/blockmemory.v:127$976.
  creating $alu model for $flatten\memory.\sh.$gt$src/shifter.v:29$434 ($gt): new $alu
  creating $alu model for $flatten\memory.\sh.$gt$src/shifter.v:29$435 ($gt): new $alu
  creating $alu model for $flatten\memory.\sh.$le$src/shifter.v:30$442 ($le): new $alu
  creating $alu model for $flatten\memory.\sh.$le$src/shifter.v:31$443 ($le): new $alu
  creating $alu model for $flatten\memory.\sh.$le$src/shifter.v:32$444 ($le): new $alu
  creating $alu model for $flatten\memory.\sh.$le$src/shifter.v:33$445 ($le): new $alu
  creating $alu model for $flatten\memory.\sh.$le$src/shifter.v:34$446 ($le): new $alu
  creating $alu model for $flatten\memory.\sh.$le$src/shifter.v:35$447 ($le): new $alu
  creating $alu model for $flatten\memory.\sh.$le$src/shifter.v:36$448 ($le): new $alu
  creating $alu model for $flatten\memory.\sh.$le$src/shifter.v:37$449 ($le): new $alu
  creating $alu model for $flatten\memory.\sh.$le$src/shifter.v:38$450 ($le): new $alu
  creating $alu model for $flatten\memory.\sh.$le$src/shifter.v:39$451 ($le): new $alu
  creating $alu model for $flatten\memory.\sh.$le$src/shifter.v:40$452 ($le): new $alu
  creating $alu model for $flatten\memory.\sh.$le$src/shifter.v:41$453 ($le): new $alu
  creating $alu model for $flatten\memory.\sh.$le$src/shifter.v:42$454 ($le): new $alu
  creating $alu model for $flatten\memory.\sh.$le$src/shifter.v:43$455 ($le): new $alu
  creating $alu model for $flatten\memory.\sh.$le$src/shifter.v:44$456 ($le): new $alu
  creating $alu model for $flatten\memory.\sh.$le$src/shifter.v:45$457 ($le): new $alu
  creating $alu model for $flatten\memory.\sh.$le$src/shifter.v:46$458 ($le): new $alu
  creating $alu model for $flatten\memory.\sh.$le$src/shifter.v:47$459 ($le): new $alu
  creating $alu model for $flatten\memory.\sh.$le$src/shifter.v:48$460 ($le): new $alu
  creating $alu model for $flatten\memory.\sh.$le$src/shifter.v:49$461 ($le): new $alu
  creating $alu model for $flatten\memory.\sh.$le$src/shifter.v:50$462 ($le): new $alu
  creating $alu model for $flatten\memory.\sh.$le$src/shifter.v:51$463 ($le): new $alu
  creating $alu model for $flatten\memory.\sh.$le$src/shifter.v:52$464 ($le): new $alu
  creating $alu cell for $flatten\memory.\sh.$le$src/shifter.v:52$464: $auto$alumacc.cc:485:replace_alu$4403
  creating $alu cell for $flatten\memory.\sh.$le$src/shifter.v:51$463: $auto$alumacc.cc:485:replace_alu$4412
  creating $alu cell for $flatten\memory.\sh.$le$src/shifter.v:50$462: $auto$alumacc.cc:485:replace_alu$4421
  creating $alu cell for $flatten\memory.\sh.$le$src/shifter.v:49$461: $auto$alumacc.cc:485:replace_alu$4430
  creating $alu cell for $flatten\memory.\sh.$le$src/shifter.v:48$460: $auto$alumacc.cc:485:replace_alu$4439
  creating $alu cell for $flatten\memory.\sh.$le$src/shifter.v:47$459: $auto$alumacc.cc:485:replace_alu$4448
  creating $alu cell for $flatten\memory.\sh.$le$src/shifter.v:46$458: $auto$alumacc.cc:485:replace_alu$4457
  creating $alu cell for $flatten\memory.\sh.$le$src/shifter.v:45$457: $auto$alumacc.cc:485:replace_alu$4466
  creating $alu cell for $flatten\memory.\sh.$le$src/shifter.v:44$456: $auto$alumacc.cc:485:replace_alu$4475
  creating $alu cell for $flatten\memory.\sh.$le$src/shifter.v:43$455: $auto$alumacc.cc:485:replace_alu$4484
  creating $alu cell for $flatten\memory.\sh.$le$src/shifter.v:42$454: $auto$alumacc.cc:485:replace_alu$4493
  creating $alu cell for $flatten\memory.\sh.$le$src/shifter.v:41$453: $auto$alumacc.cc:485:replace_alu$4502
  creating $alu cell for $flatten\memory.\sh.$le$src/shifter.v:40$452: $auto$alumacc.cc:485:replace_alu$4511
  creating $alu cell for $flatten\memory.\sh.$le$src/shifter.v:39$451: $auto$alumacc.cc:485:replace_alu$4520
  creating $alu cell for $flatten\memory.\sh.$le$src/shifter.v:38$450: $auto$alumacc.cc:485:replace_alu$4529
  creating $alu cell for $flatten\memory.\sh.$le$src/shifter.v:37$449: $auto$alumacc.cc:485:replace_alu$4538
  creating $alu cell for $flatten\memory.\sh.$le$src/shifter.v:36$448: $auto$alumacc.cc:485:replace_alu$4547
  creating $alu cell for $flatten\memory.\sh.$le$src/shifter.v:35$447: $auto$alumacc.cc:485:replace_alu$4556
  creating $alu cell for $flatten\memory.\sh.$le$src/shifter.v:34$446: $auto$alumacc.cc:485:replace_alu$4565
  creating $alu cell for $flatten\memory.\sh.$le$src/shifter.v:33$445: $auto$alumacc.cc:485:replace_alu$4574
  creating $alu cell for $flatten\memory.\sh.$le$src/shifter.v:32$444: $auto$alumacc.cc:485:replace_alu$4583
  creating $alu cell for $flatten\memory.\sh.$le$src/shifter.v:31$443: $auto$alumacc.cc:485:replace_alu$4592
  creating $alu cell for $flatten\memory.\sh.$le$src/shifter.v:30$442: $auto$alumacc.cc:485:replace_alu$4601
  creating $alu cell for $flatten\memory.\sh.$gt$src/shifter.v:29$435: $auto$alumacc.cc:485:replace_alu$4610
  creating $alu cell for $flatten\memory.\sh.$gt$src/shifter.v:29$434: $auto$alumacc.cc:485:replace_alu$4615
  creating $alu cell for $flatten\memory.$ge$src/blockmemory.v:127$976, $flatten\memory.$lt$src/blockmemory.v:122$972: $auto$alumacc.cc:485:replace_alu$4620
  creating $alu cell for $flatten\memory.$ge$src/blockmemory.v:122$971, $flatten\memory.$lt$src/blockmemory.v:117$967: $auto$alumacc.cc:485:replace_alu$4633
  creating $alu cell for $flatten\memory.$ge$src/blockmemory.v:117$966, $flatten\memory.$lt$src/blockmemory.v:112$964: $auto$alumacc.cc:485:replace_alu$4646
  creating $alu cell for $flatten\game_manager.\sh.$lt$src/shader.v:10$728: $auto$alumacc.cc:485:replace_alu$4659
  creating $alu cell for $flatten\game_manager.\sh.$lt$src/shader.v:10$724: $auto$alumacc.cc:485:replace_alu$4670
  creating $alu cell for $flatten\game_manager.\sh.$le$src/shader.v:9$716: $auto$alumacc.cc:485:replace_alu$4681
  creating $alu cell for $flatten\game_manager.\sh.$gt$src/shader.v:12$732: $auto$alumacc.cc:485:replace_alu$4694
  creating $alu cell for $flatten\game_manager.\sh.$gt$src/shader.v:10$726: $auto$alumacc.cc:485:replace_alu$4699
  creating $alu cell for $flatten\game_manager.\sh.$gt$src/shader.v:10$723: $auto$alumacc.cc:485:replace_alu$4704
  creating $alu cell for $flatten\game_manager.\sh.$ge$src/shader.v:9$721: $auto$alumacc.cc:485:replace_alu$4709
  creating $alu cell for $flatten\game_manager.\h.$lt$src/mod24.v:15$866: $auto$alumacc.cc:485:replace_alu$4718
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$865, $flatten\game_manager.\h.$lt$src/mod24.v:15$863: $auto$alumacc.cc:485:replace_alu$4723
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$862, $flatten\game_manager.\h.$lt$src/mod24.v:15$860: $auto$alumacc.cc:485:replace_alu$4736
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$859, $flatten\game_manager.\h.$lt$src/mod24.v:15$857: $auto$alumacc.cc:485:replace_alu$4749
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$856, $flatten\game_manager.\h.$lt$src/mod24.v:15$854: $auto$alumacc.cc:485:replace_alu$4762
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$853, $flatten\game_manager.\h.$lt$src/mod24.v:15$851: $auto$alumacc.cc:485:replace_alu$4775
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$850, $flatten\game_manager.\h.$lt$src/mod24.v:15$848: $auto$alumacc.cc:485:replace_alu$4788
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$847, $flatten\game_manager.\h.$lt$src/mod24.v:15$845: $auto$alumacc.cc:485:replace_alu$4801
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$844, $flatten\game_manager.\h.$lt$src/mod24.v:15$842: $auto$alumacc.cc:485:replace_alu$4814
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$841, $flatten\game_manager.\h.$lt$src/mod24.v:15$839: $auto$alumacc.cc:485:replace_alu$4827
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$838, $flatten\game_manager.\h.$lt$src/mod24.v:15$836: $auto$alumacc.cc:485:replace_alu$4840
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$835, $flatten\game_manager.\h.$lt$src/mod24.v:15$833: $auto$alumacc.cc:485:replace_alu$4853
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$832, $flatten\game_manager.\h.$lt$src/mod24.v:15$830: $auto$alumacc.cc:485:replace_alu$4866
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$829, $flatten\game_manager.\h.$lt$src/mod24.v:15$827: $auto$alumacc.cc:485:replace_alu$4879
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$826, $flatten\game_manager.\h.$lt$src/mod24.v:15$824: $auto$alumacc.cc:485:replace_alu$4892
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$823, $flatten\game_manager.\h.$lt$src/mod24.v:15$821: $auto$alumacc.cc:485:replace_alu$4905
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$820, $flatten\game_manager.\h.$lt$src/mod24.v:15$818: $auto$alumacc.cc:485:replace_alu$4918
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$817, $flatten\game_manager.\h.$lt$src/mod24.v:15$815: $auto$alumacc.cc:485:replace_alu$4931
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$814, $flatten\game_manager.\h.$lt$src/mod24.v:15$812: $auto$alumacc.cc:485:replace_alu$4944
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$811, $flatten\game_manager.\h.$lt$src/mod24.v:15$809: $auto$alumacc.cc:485:replace_alu$4957
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$808, $flatten\game_manager.\h.$lt$src/mod24.v:15$806: $auto$alumacc.cc:485:replace_alu$4970
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$805, $flatten\game_manager.\h.$lt$src/mod24.v:15$803: $auto$alumacc.cc:485:replace_alu$4983
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$802, $flatten\game_manager.\h.$lt$src/mod24.v:15$800: $auto$alumacc.cc:485:replace_alu$4996
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$799: $auto$alumacc.cc:485:replace_alu$5009
  creating $alu cell for $flatten\game_manager.$lt$src/gmanager.v:29$705: $auto$alumacc.cc:485:replace_alu$5018
  creating $alu cell for $flatten\game_manager.$lt$src/gmanager.v:28$702: $auto$alumacc.cc:485:replace_alu$5023
  creating $alu cell for $flatten\game_manager.$ge$src/gmanager.v:29$704: $auto$alumacc.cc:485:replace_alu$5034
  creating $alu cell for $flatten\game_manager.$ge$src/gmanager.v:28$701: $auto$alumacc.cc:485:replace_alu$5043
  creating $alu cell for $flatten\core.$lt$src/vga_core.v:85$558: $auto$alumacc.cc:485:replace_alu$5052
  creating $alu cell for $flatten\core.$lt$src/vga_core.v:84$554: $auto$alumacc.cc:485:replace_alu$5063
  creating $alu cell for $flatten\core.$lt$src/vga_core.v:82$552: $auto$alumacc.cc:485:replace_alu$5068
  creating $alu cell for $flatten\core.$lt$src/vga_core.v:81$551: $auto$alumacc.cc:485:replace_alu$5079
  creating $alu cell for $flatten\core.$ge$src/vga_core.v:85$557: $auto$alumacc.cc:485:replace_alu$5084
  creating $alu cell for $flatten\core.$ge$src/vga_core.v:84$553: $auto$alumacc.cc:485:replace_alu$5093
  creating $alu cell for $flatten\core.$add$src/vga_core.v:79$550: $auto$alumacc.cc:485:replace_alu$5106
  creating $alu cell for $flatten\core.$add$src/vga_core.v:89$562: $auto$alumacc.cc:485:replace_alu$5109
  creating $alu cell for $flatten\game_manager.$sub$src/gmanager.v:34$707: $auto$alumacc.cc:485:replace_alu$5112
  creating $alu cell for $flatten\game_manager.$sub$src/gmanager.v:35$711: $auto$alumacc.cc:485:replace_alu$5115
  creating $alu cell for $flatten\game_manager.$sub$src/gmanager.v:43$712: $auto$alumacc.cc:485:replace_alu$5118
  creating $alu cell for $flatten\game_manager.\hh.$sub$src/mod24.v:58$944: $auto$alumacc.cc:485:replace_alu$5121
  creating $alu cell for $flatten\memory.$add$src/blockmemory.v:115$965: $auto$alumacc.cc:485:replace_alu$5124
  creating $alu cell for $flatten\memory.$sub$src/blockmemory.v:119$969: $auto$alumacc.cc:485:replace_alu$5127
  creating $alu cell for $flatten\memory.$sub$src/blockmemory.v:123$974: $auto$alumacc.cc:485:replace_alu$5130
  creating $alu cell for $flatten\memory.$sub$src/blockmemory.v:152$984: $auto$alumacc.cc:485:replace_alu$5133
  creating $alu cell for $flatten\memory.$sub$src/blockmemory.v:160$986: $auto$alumacc.cc:485:replace_alu$5136
  creating $alu cell for $flatten\memory.$sub$src/blockmemory.v:168$988: $auto$alumacc.cc:485:replace_alu$5139
  creating $alu cell for $flatten\memory.$sub$src/blockmemory.v:176$990: $auto$alumacc.cc:485:replace_alu$5142
  creating $alu cell for $flatten\memory.$sub$src/blockmemory.v:194$993: $auto$alumacc.cc:485:replace_alu$5145
  creating $alu cell for $flatten\t.$add$src/timer.v:18$567: $auto$alumacc.cc:485:replace_alu$5148
  creating $alu cell for $flatten\vcell.$add$src/volatile_cell_storage.v:161$1464: $auto$alumacc.cc:485:replace_alu$5151
  creating $alu cell for $flatten\vcell.$add$src/volatile_cell_storage.v:167$1469: $auto$alumacc.cc:485:replace_alu$5154
  creating $alu cell for $flatten\vcell.$add$src/volatile_cell_storage.v:179$1480: $auto$alumacc.cc:485:replace_alu$5157
  creating $alu cell for $flatten\vcell.$add$src/volatile_cell_storage.v:58$1419: $auto$alumacc.cc:485:replace_alu$5160
  creating $alu cell for $flatten\vcell.$sub$src/volatile_cell_storage.v:173$1474: $auto$alumacc.cc:485:replace_alu$5163
  creating $alu cell for $flatten\vcell.$add$src/volatile_cell_storage.v:63$1439: $auto$alumacc.cc:485:replace_alu$5166
  created 90 $alu and 6 $macc cells.

20.21. Executing OPT pass (performing simple optimizations).

20.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~3 debug messages>

20.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~30 debug messages>
Removed a total of 10 cells.

20.21.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~643 debug messages>

20.21.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

20.21.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

20.21.6. Executing OPT_DFF pass (perform DFF optimizations).

20.21.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 24 unused cells and 108 unused wires.
<suppressed ~25 debug messages>

20.21.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

20.21.9. Rerunning OPT passes. (Maybe there is more to do..)

20.21.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~643 debug messages>

20.21.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

20.21.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

20.21.13. Executing OPT_DFF pass (perform DFF optimizations).

20.21.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

20.21.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

20.21.16. Finished OPT passes. (There is nothing left to do.)

20.22. Executing MEMORY pass.

20.22.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

20.22.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

20.22.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

20.22.4. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

20.22.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

20.22.6. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

20.22.7. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

20.22.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

20.22.9. Executing MEMORY_COLLECT pass (generating $mem cells).

20.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

20.24. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).

20.25. Executing TECHMAP pass (map to technology primitives).

20.25.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/brams_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M0'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M123'.
Successfully finished Verilog frontend.

20.25.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~5 debug messages>

20.26. Executing ICE40_BRAMINIT pass.

20.27. Executing OPT pass (performing simple optimizations).

20.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~156 debug messages>

20.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~135 debug messages>
Removed a total of 45 cells.

20.27.3. Executing OPT_DFF pass (perform DFF optimizations).

20.27.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 20 unused cells and 105 unused wires.
<suppressed ~21 debug messages>

20.27.5. Finished fast OPT passes.

20.28. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

20.29. Executing OPT pass (performing simple optimizations).

20.29.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

20.29.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

20.29.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~635 debug messages>

20.29.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    Consolidated identical input bits for $pmux cell $flatten\game_manager.\c.$procmux$2015:
      Old ports: A=12'011001100110, B=84'111111110000000011111111110000001100000011110000000000001111111100000000000001111111, Y=\game_manager.texture_lookup
      New ports: A=11'01100100110, B=77'11111110000000011111111100000110000001110000000000011111111000000000000111111, Y={ \game_manager.texture_lookup [11:7] \game_manager.texture_lookup [5:0] }
      New connections: \game_manager.texture_lookup [6] = \game_manager.texture_lookup [5]
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:18$751:
      Old ports: A=2'00, B=2'10, Y={ $auto$opt_expr.cc:205:group_cell_inputs$5238 $auto$wreduce.cc:454:run$4244 [0] }
      New ports: A=1'0, B=1'1, Y=$auto$opt_expr.cc:205:group_cell_inputs$5238
      New connections: $auto$wreduce.cc:454:run$4244 [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:18$753:
      Old ports: A=2'00, B=2'11, Y=$auto$wreduce.cc:454:run$4245 [1:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$4245 [0]
      New connections: $auto$wreduce.cc:454:run$4245 [1] = $auto$wreduce.cc:454:run$4245 [0]
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:19$755:
      Old ports: A=3'000, B=3'100, Y=$auto$wreduce.cc:454:run$4246 [2:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$4246 [2]
      New connections: $auto$wreduce.cc:454:run$4246 [1:0] = 2'00
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:19$756:
      Old ports: A=3'000, B=3'101, Y=$auto$wreduce.cc:454:run$4247 [2:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$4247 [0]
      New connections: $auto$wreduce.cc:454:run$4247 [2:1] = { $auto$wreduce.cc:454:run$4247 [0] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:19$758:
      Old ports: A=3'000, B=3'110, Y=$auto$wreduce.cc:454:run$4248 [2:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$4248 [1]
      New connections: { $auto$wreduce.cc:454:run$4248 [2] $auto$wreduce.cc:454:run$4248 [0] } = { $auto$wreduce.cc:454:run$4248 [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:19$760:
      Old ports: A=3'000, B=3'111, Y=$auto$wreduce.cc:454:run$4249 [2:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$4249 [0]
      New connections: $auto$wreduce.cc:454:run$4249 [2:1] = { $auto$wreduce.cc:454:run$4249 [0] $auto$wreduce.cc:454:run$4249 [0] }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:20$762:
      Old ports: A=4'0000, B=4'1000, Y=$auto$wreduce.cc:454:run$4250 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$4250 [3]
      New connections: $auto$wreduce.cc:454:run$4250 [2:0] = 3'000
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:20$763:
      Old ports: A=4'0000, B=4'1001, Y=$auto$wreduce.cc:454:run$4251 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$4251 [0]
      New connections: $auto$wreduce.cc:454:run$4251 [3:1] = { $auto$wreduce.cc:454:run$4251 [0] 2'00 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:20$765:
      Old ports: A=4'0000, B=4'1010, Y=$auto$wreduce.cc:454:run$4252 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$4252 [1]
      New connections: { $auto$wreduce.cc:454:run$4252 [3:2] $auto$wreduce.cc:454:run$4252 [0] } = { $auto$wreduce.cc:454:run$4252 [1] 2'00 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:20$767:
      Old ports: A=4'0000, B=4'1011, Y=$auto$wreduce.cc:454:run$4253 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$4253 [0]
      New connections: $auto$wreduce.cc:454:run$4253 [3:1] = { $auto$wreduce.cc:454:run$4253 [0] 1'0 $auto$wreduce.cc:454:run$4253 [0] }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:21$769:
      Old ports: A=4'0000, B=4'1100, Y=$auto$wreduce.cc:454:run$4254 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$4254 [2]
      New connections: { $auto$wreduce.cc:454:run$4254 [3] $auto$wreduce.cc:454:run$4254 [1:0] } = { $auto$wreduce.cc:454:run$4254 [2] 2'00 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:21$770:
      Old ports: A=4'0000, B=4'1101, Y=$auto$wreduce.cc:454:run$4255 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$4255 [0]
      New connections: $auto$wreduce.cc:454:run$4255 [3:1] = { $auto$wreduce.cc:454:run$4255 [0] $auto$wreduce.cc:454:run$4255 [0] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:21$772:
      Old ports: A=4'0000, B=4'1110, Y=$auto$wreduce.cc:454:run$4256 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$4256 [1]
      New connections: { $auto$wreduce.cc:454:run$4256 [3:2] $auto$wreduce.cc:454:run$4256 [0] } = { $auto$wreduce.cc:454:run$4256 [1] $auto$wreduce.cc:454:run$4256 [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:21$774:
      Old ports: A=4'0000, B=4'1111, Y=$auto$wreduce.cc:454:run$4257 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$4257 [0]
      New connections: $auto$wreduce.cc:454:run$4257 [3:1] = { $auto$wreduce.cc:454:run$4257 [0] $auto$wreduce.cc:454:run$4257 [0] $auto$wreduce.cc:454:run$4257 [0] }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:22$776:
      Old ports: A=5'00000, B=5'10000, Y=$flatten\game_manager.\h.$ternary$src/mod24.v:22$776_Y
      New ports: A=1'0, B=1'1, Y=$flatten\game_manager.\h.$ternary$src/mod24.v:22$776_Y [4]
      New connections: $flatten\game_manager.\h.$ternary$src/mod24.v:22$776_Y [3:0] = 4'0000
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:22$777:
      Old ports: A=5'00000, B=5'10001, Y=$flatten\game_manager.\h.$ternary$src/mod24.v:22$777_Y
      New ports: A=1'0, B=1'1, Y=$flatten\game_manager.\h.$ternary$src/mod24.v:22$777_Y [0]
      New connections: $flatten\game_manager.\h.$ternary$src/mod24.v:22$777_Y [4:1] = { $flatten\game_manager.\h.$ternary$src/mod24.v:22$777_Y [0] 3'000 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:22$779:
      Old ports: A=5'00000, B=5'10010, Y=$flatten\game_manager.\h.$ternary$src/mod24.v:22$779_Y
      New ports: A=1'0, B=1'1, Y=$flatten\game_manager.\h.$ternary$src/mod24.v:22$779_Y [1]
      New connections: { $flatten\game_manager.\h.$ternary$src/mod24.v:22$779_Y [4:2] $flatten\game_manager.\h.$ternary$src/mod24.v:22$779_Y [0] } = { $flatten\game_manager.\h.$ternary$src/mod24.v:22$779_Y [1] 3'000 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:22$781:
      Old ports: A=5'00000, B=5'10011, Y=$flatten\game_manager.\h.$ternary$src/mod24.v:22$781_Y
      New ports: A=1'0, B=1'1, Y=$flatten\game_manager.\h.$ternary$src/mod24.v:22$781_Y [0]
      New connections: $flatten\game_manager.\h.$ternary$src/mod24.v:22$781_Y [4:1] = { $flatten\game_manager.\h.$ternary$src/mod24.v:22$781_Y [0] 2'00 $flatten\game_manager.\h.$ternary$src/mod24.v:22$781_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:23$783:
      Old ports: A=5'00000, B=5'10100, Y=$flatten\game_manager.\h.$ternary$src/mod24.v:23$783_Y
      New ports: A=1'0, B=1'1, Y=$flatten\game_manager.\h.$ternary$src/mod24.v:23$783_Y [2]
      New connections: { $flatten\game_manager.\h.$ternary$src/mod24.v:23$783_Y [4:3] $flatten\game_manager.\h.$ternary$src/mod24.v:23$783_Y [1:0] } = { $flatten\game_manager.\h.$ternary$src/mod24.v:23$783_Y [2] 3'000 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:23$784:
      Old ports: A=5'00000, B=5'10101, Y=$flatten\game_manager.\h.$ternary$src/mod24.v:23$784_Y
      New ports: A=1'0, B=1'1, Y=$flatten\game_manager.\h.$ternary$src/mod24.v:23$784_Y [0]
      New connections: $flatten\game_manager.\h.$ternary$src/mod24.v:23$784_Y [4:1] = { $flatten\game_manager.\h.$ternary$src/mod24.v:23$784_Y [0] 1'0 $flatten\game_manager.\h.$ternary$src/mod24.v:23$784_Y [0] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:23$786:
      Old ports: A=5'00000, B=5'10110, Y=$flatten\game_manager.\h.$ternary$src/mod24.v:23$786_Y
      New ports: A=1'0, B=1'1, Y=$flatten\game_manager.\h.$ternary$src/mod24.v:23$786_Y [1]
      New connections: { $flatten\game_manager.\h.$ternary$src/mod24.v:23$786_Y [4:2] $flatten\game_manager.\h.$ternary$src/mod24.v:23$786_Y [0] } = { $flatten\game_manager.\h.$ternary$src/mod24.v:23$786_Y [1] 1'0 $flatten\game_manager.\h.$ternary$src/mod24.v:23$786_Y [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:23$788:
      Old ports: A=5'00000, B=5'10111, Y=$auto$wreduce.cc:454:run$4258
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$4258 [0]
      New connections: $auto$wreduce.cc:454:run$4258 [4:1] = { $auto$wreduce.cc:454:run$4258 [0] 1'0 $auto$wreduce.cc:454:run$4258 [0] $auto$wreduce.cc:454:run$4258 [0] }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:33$872:
      Old ports: A=5'00000, B=5'11000, Y=$auto$wreduce.cc:454:run$4277 [4:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$4277 [3]
      New connections: { $auto$wreduce.cc:454:run$4277 [4] $auto$wreduce.cc:454:run$4277 [2:0] } = { $auto$wreduce.cc:454:run$4277 [3] 3'000 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:33$873:
      Old ports: A={ 1'0 $auto$wreduce.cc:454:run$4277 [4:0] }, B=6'000000, Y=$auto$wreduce.cc:454:run$4278 [5:0]
      New ports: A=$auto$wreduce.cc:454:run$4277 [4:0], B=5'00000, Y=$auto$wreduce.cc:454:run$4278 [4:0]
      New connections: $auto$wreduce.cc:454:run$4278 [5] = 1'0
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:34$878:
      Old ports: A=4'0000, B=4'1000, Y=$auto$wreduce.cc:454:run$4279 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$4279 [3]
      New connections: $auto$wreduce.cc:454:run$4279 [2:0] = 3'000
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:34$879:
      Old ports: A={ 2'00 $auto$wreduce.cc:454:run$4279 [3:0] }, B=6'110000, Y=$auto$wreduce.cc:454:run$4280 [5:0]
      New ports: A={ 1'0 $auto$wreduce.cc:454:run$4279 [3:0] }, B=5'10000, Y=$auto$wreduce.cc:454:run$4280 [4:0]
      New connections: $auto$wreduce.cc:454:run$4280 [5] = $auto$wreduce.cc:454:run$4280 [4]
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:35$885:
      Old ports: A=6'000000, B=6'111000, Y=$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:35$885_Y [5:0]
      New ports: A=1'0, B=1'1, Y=$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:35$885_Y [3]
      New connections: { $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:35$885_Y [5:4] $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:35$885_Y [2:0] } = { $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:35$885_Y [3] $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:35$885_Y [3] 3'000 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:36$892:
      Old ports: A=6'000000, B=6'101000, Y=$auto$wreduce.cc:454:run$4281 [5:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$4281 [3]
      New connections: { $auto$wreduce.cc:454:run$4281 [5:4] $auto$wreduce.cc:454:run$4281 [2:0] } = { $auto$wreduce.cc:454:run$4281 [3] 4'0000 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:37$899:
      Old ports: A=5'00000, B=5'11000, Y=$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:37$899_Y [4:0]
      New ports: A=1'0, B=1'1, Y=$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:37$899_Y [3]
      New connections: { $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:37$899_Y [4] $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:37$899_Y [2:0] } = { $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:37$899_Y [3] 3'000 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:37$900:
      Old ports: A={ 1'0 $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:37$899_Y [4:0] }, B=6'000000, Y=$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:37$900_Y [5:0]
      New ports: A=$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:37$899_Y [4:0], B=5'00000, Y=$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:37$900_Y [4:0]
      New connections: $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:37$900_Y [5] = 1'0
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:38$906:
      Old ports: A=4'0000, B=4'1000, Y=$auto$wreduce.cc:454:run$4283 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$4283 [3]
      New connections: $auto$wreduce.cc:454:run$4283 [2:0] = 3'000
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:38$907:
      Old ports: A={ 2'00 $auto$wreduce.cc:454:run$4283 [3:0] }, B=6'110000, Y=$auto$wreduce.cc:454:run$4284 [5:0]
      New ports: A={ 1'0 $auto$wreduce.cc:454:run$4283 [3:0] }, B=5'10000, Y=$auto$wreduce.cc:454:run$4284 [4:0]
      New connections: $auto$wreduce.cc:454:run$4284 [5] = $auto$wreduce.cc:454:run$4284 [4]
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:39$913:
      Old ports: A=6'000000, B=6'111000, Y=$auto$wreduce.cc:454:run$4285 [5:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$4285 [3]
      New connections: { $auto$wreduce.cc:454:run$4285 [5:4] $auto$wreduce.cc:454:run$4285 [2:0] } = { $auto$wreduce.cc:454:run$4285 [3] $auto$wreduce.cc:454:run$4285 [3] 3'000 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:40$920:
      Old ports: A=6'000000, B=6'101000, Y=$auto$wreduce.cc:454:run$4287 [5:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$4287 [3]
      New connections: { $auto$wreduce.cc:454:run$4287 [5:4] $auto$wreduce.cc:454:run$4287 [2:0] } = { $auto$wreduce.cc:454:run$4287 [3] 4'0000 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:41$927:
      Old ports: A=5'00000, B=5'11000, Y=$auto$wreduce.cc:454:run$4289 [4:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$4289 [3]
      New connections: { $auto$wreduce.cc:454:run$4289 [4] $auto$wreduce.cc:454:run$4289 [2:0] } = { $auto$wreduce.cc:454:run$4289 [3] 3'000 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:41$928:
      Old ports: A={ 1'0 $auto$wreduce.cc:454:run$4289 [4:0] }, B=6'000000, Y=$auto$wreduce.cc:454:run$4290 [5:0]
      New ports: A=$auto$wreduce.cc:454:run$4289 [4:0], B=5'00000, Y=$auto$wreduce.cc:454:run$4290 [4:0]
      New connections: $auto$wreduce.cc:454:run$4290 [5] = 1'0
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:42$934:
      Old ports: A=4'0000, B=4'1000, Y=$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:42$934_Y [3:0]
      New ports: A=1'0, B=1'1, Y=$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:42$934_Y [3]
      New connections: $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:42$934_Y [2:0] = 3'000
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:42$935:
      Old ports: A={ 2'00 $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:42$934_Y [3:0] }, B=6'110000, Y=$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:42$935_Y [5:0]
      New ports: A={ 1'0 $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:42$934_Y [3:0] }, B=5'10000, Y=$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:42$935_Y [4:0]
      New connections: $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:42$935_Y [5] = $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:42$935_Y [4]
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:43$941:
      Old ports: A=6'000000, B=6'111000, Y=$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:43$941_Y [5:0]
      New ports: A=1'0, B=1'1, Y=$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:43$941_Y [3]
      New connections: { $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:43$941_Y [5:4] $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:43$941_Y [2:0] } = { $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:43$941_Y [3] $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:43$941_Y [3] 3'000 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\sh.$ternary$src/shader.v:20$742:
      Old ports: A=12'000000000000, B={ \game_manager.ipixstream [11] 3'000 \game_manager.ipixstream [7] 3'000 \game_manager.ipixstream [3] 3'000 }, Y=$flatten\game_manager.\sh.$ternary$src/shader.v:20$742_Y
      New ports: A=3'000, B={ \game_manager.ipixstream [11] \game_manager.ipixstream [7] \game_manager.ipixstream [3] }, Y={ $flatten\game_manager.\sh.$ternary$src/shader.v:20$742_Y [11] $flatten\game_manager.\sh.$ternary$src/shader.v:20$742_Y [7] $flatten\game_manager.\sh.$ternary$src/shader.v:20$742_Y [3] }
      New connections: { $flatten\game_manager.\sh.$ternary$src/shader.v:20$742_Y [10:8] $flatten\game_manager.\sh.$ternary$src/shader.v:20$742_Y [6:4] $flatten\game_manager.\sh.$ternary$src/shader.v:20$742_Y [2:0] } = 9'000000000
    Consolidated identical input bits for $mux cell $flatten\memory.$procmux$1917:
      Old ports: A={ 1'0 \memory.P1blk_v }, B={ 1'0 \memory.P2blk_v }, Y=$flatten\memory.$procmux$1917_Y
      New ports: A=\memory.P1blk_v, B=\memory.P2blk_v, Y=$flatten\memory.$procmux$1917_Y [4:0]
      New connections: $flatten\memory.$procmux$1917_Y [5] = 1'0
    Consolidated identical input bits for $mux cell $flatten\memory.\sh.$ternary$src/shifter.v:23$419:
      Old ports: A=5'00000, B=5'10100, Y=$auto$wreduce.cc:454:run$4300 [4:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$4300 [2]
      New connections: { $auto$wreduce.cc:454:run$4300 [4:3] $auto$wreduce.cc:454:run$4300 [1:0] } = { $auto$wreduce.cc:454:run$4300 [2] 3'000 }
    Consolidated identical input bits for $mux cell $flatten\vcell.\ishaper.$procmux$2046:
      Old ports: A=2'10, B=2'00, Y=$auto$wreduce.cc:454:run$4304 [1:0]
      New ports: A=1'1, B=1'0, Y=$auto$wreduce.cc:454:run$4304 [1]
      New connections: $auto$wreduce.cc:454:run$4304 [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\vcell.\ishaper.$procmux$2057:
      Old ports: A=2'00, B=2'10, Y=$auto$wreduce.cc:454:run$4307 [1:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$4307 [1]
      New connections: $auto$wreduce.cc:454:run$4307 [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\vcell.\ishaper.$procmux$2090:
      Old ports: A=5'11111, B=5'00000, Y=$flatten\vcell.\ishaper.$procmux$2090_Y
      New ports: A=1'1, B=1'0, Y=$flatten\vcell.\ishaper.$procmux$2090_Y [0]
      New connections: $flatten\vcell.\ishaper.$procmux$2090_Y [4:1] = { $flatten\vcell.\ishaper.$procmux$2090_Y [0] $flatten\vcell.\ishaper.$procmux$2090_Y [0] $flatten\vcell.\ishaper.$procmux$2090_Y [0] $flatten\vcell.\ishaper.$procmux$2090_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\vcell.\ishaper.$procmux$2101:
      Old ports: A=5'00000, B=5'11111, Y=$flatten\vcell.\ishaper.$procmux$2101_Y
      New ports: A=1'0, B=1'1, Y=$flatten\vcell.\ishaper.$procmux$2101_Y [0]
      New connections: $flatten\vcell.\ishaper.$procmux$2101_Y [4:1] = { $flatten\vcell.\ishaper.$procmux$2101_Y [0] $flatten\vcell.\ishaper.$procmux$2101_Y [0] $flatten\vcell.\ishaper.$procmux$2101_Y [0] $flatten\vcell.\ishaper.$procmux$2101_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\vcell.\lashaper.$procmux$2193:
      Old ports: A=5'11111, B=5'00001, Y=$flatten\vcell.\lashaper.$procmux$2193_Y
      New ports: A=1'1, B=1'0, Y=$flatten\vcell.\lashaper.$procmux$2193_Y [1]
      New connections: { $flatten\vcell.\lashaper.$procmux$2193_Y [4:2] $flatten\vcell.\lashaper.$procmux$2193_Y [0] } = { $flatten\vcell.\lashaper.$procmux$2193_Y [1] $flatten\vcell.\lashaper.$procmux$2193_Y [1] $flatten\vcell.\lashaper.$procmux$2193_Y [1] 1'1 }
    Consolidated identical input bits for $mux cell $flatten\vcell.\lbshaper.$procmux$2292:
      Old ports: A=5'00001, B=5'11111, Y=$flatten\vcell.\lbshaper.$procmux$2292_Y
      New ports: A=1'0, B=1'1, Y=$flatten\vcell.\lbshaper.$procmux$2292_Y [1]
      New connections: { $flatten\vcell.\lbshaper.$procmux$2292_Y [4:2] $flatten\vcell.\lbshaper.$procmux$2292_Y [0] } = { $flatten\vcell.\lbshaper.$procmux$2292_Y [1] $flatten\vcell.\lbshaper.$procmux$2292_Y [1] $flatten\vcell.\lbshaper.$procmux$2292_Y [1] 1'1 }
    Consolidated identical input bits for $mux cell $flatten\vcell.\tshaper.$procmux$2389:
      Old ports: A=5'00000, B=5'00001, Y=$flatten\vcell.\tshaper.$procmux$2389_Y
      New ports: A=1'0, B=1'1, Y=$flatten\vcell.\tshaper.$procmux$2389_Y [0]
      New connections: $flatten\vcell.\tshaper.$procmux$2389_Y [4:1] = 4'0000
    Consolidated identical input bits for $mux cell $flatten\vcell.\tshaper.$procmux$2400:
      Old ports: A=5'00001, B=5'00000, Y=$flatten\vcell.\tshaper.$procmux$2400_Y
      New ports: A=1'1, B=1'0, Y=$flatten\vcell.\tshaper.$procmux$2400_Y [0]
      New connections: $flatten\vcell.\tshaper.$procmux$2400_Y [4:1] = 4'0000
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:33$873:
      Old ports: A=$auto$wreduce.cc:454:run$4277 [4:0], B=5'00000, Y=$auto$wreduce.cc:454:run$4278 [4:0]
      New ports: A=$auto$wreduce.cc:454:run$4277 [3], B=1'0, Y=$auto$wreduce.cc:454:run$4278 [3]
      New connections: { $auto$wreduce.cc:454:run$4278 [4] $auto$wreduce.cc:454:run$4278 [2:0] } = { $auto$wreduce.cc:454:run$4278 [3] 3'000 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:34$879:
      Old ports: A={ 1'0 $auto$wreduce.cc:454:run$4279 [3:0] }, B=5'10000, Y=$auto$wreduce.cc:454:run$4280 [4:0]
      New ports: A={ 1'0 $auto$wreduce.cc:454:run$4279 [3] }, B=2'10, Y=$auto$wreduce.cc:454:run$4280 [4:3]
      New connections: $auto$wreduce.cc:454:run$4280 [2:0] = 3'000
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:35$886:
      Old ports: A=$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:35$885_Y [5:0], B=6'100000, Y=$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:35$886_Y [5:0]
      New ports: A={ $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:35$885_Y [3] $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:35$885_Y [3] }, B=2'10, Y={ $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:35$886_Y [5] $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:35$886_Y [3] }
      New connections: { $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:35$886_Y [4] $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:35$886_Y [2:0] } = { $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:35$886_Y [3] 3'000 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:36$893:
      Old ports: A=$auto$wreduce.cc:454:run$4281 [5:0], B=6'010000, Y=$auto$wreduce.cc:454:run$4282 [5:0]
      New ports: A={ 1'0 $auto$wreduce.cc:454:run$4281 [3] }, B=2'10, Y=$auto$wreduce.cc:454:run$4282 [4:3]
      New connections: { $auto$wreduce.cc:454:run$4282 [5] $auto$wreduce.cc:454:run$4282 [2:0] } = { $auto$wreduce.cc:454:run$4282 [3] 3'000 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:37$900:
      Old ports: A=$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:37$899_Y [4:0], B=5'00000, Y=$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:37$900_Y [4:0]
      New ports: A=$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:37$899_Y [3], B=1'0, Y=$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:37$900_Y [3]
      New connections: { $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:37$900_Y [4] $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:37$900_Y [2:0] } = { $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:37$900_Y [3] 3'000 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:38$907:
      Old ports: A={ 1'0 $auto$wreduce.cc:454:run$4283 [3:0] }, B=5'10000, Y=$auto$wreduce.cc:454:run$4284 [4:0]
      New ports: A={ 1'0 $auto$wreduce.cc:454:run$4283 [3] }, B=2'10, Y=$auto$wreduce.cc:454:run$4284 [4:3]
      New connections: $auto$wreduce.cc:454:run$4284 [2:0] = 3'000
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:39$914:
      Old ports: A=$auto$wreduce.cc:454:run$4285 [5:0], B=6'100000, Y=$auto$wreduce.cc:454:run$4286 [5:0]
      New ports: A={ $auto$wreduce.cc:454:run$4285 [3] $auto$wreduce.cc:454:run$4285 [3] }, B=2'10, Y={ $auto$wreduce.cc:454:run$4286 [5] $auto$wreduce.cc:454:run$4286 [3] }
      New connections: { $auto$wreduce.cc:454:run$4286 [4] $auto$wreduce.cc:454:run$4286 [2:0] } = { $auto$wreduce.cc:454:run$4286 [3] 3'000 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:40$921:
      Old ports: A=$auto$wreduce.cc:454:run$4287 [5:0], B=6'010000, Y=$auto$wreduce.cc:454:run$4288 [5:0]
      New ports: A={ 1'0 $auto$wreduce.cc:454:run$4287 [3] }, B=2'10, Y=$auto$wreduce.cc:454:run$4288 [4:3]
      New connections: { $auto$wreduce.cc:454:run$4288 [5] $auto$wreduce.cc:454:run$4288 [2:0] } = { $auto$wreduce.cc:454:run$4288 [3] 3'000 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:41$928:
      Old ports: A=$auto$wreduce.cc:454:run$4289 [4:0], B=5'00000, Y=$auto$wreduce.cc:454:run$4290 [4:0]
      New ports: A=$auto$wreduce.cc:454:run$4289 [3], B=1'0, Y=$auto$wreduce.cc:454:run$4290 [3]
      New connections: { $auto$wreduce.cc:454:run$4290 [4] $auto$wreduce.cc:454:run$4290 [2:0] } = { $auto$wreduce.cc:454:run$4290 [3] 3'000 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:42$935:
      Old ports: A={ 1'0 $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:42$934_Y [3:0] }, B=5'10000, Y=$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:42$935_Y [4:0]
      New ports: A={ 1'0 $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:42$934_Y [3] }, B=2'10, Y=$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:42$935_Y [4:3]
      New connections: $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:42$935_Y [2:0] = 3'000
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:43$942:
      Old ports: A=$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:43$941_Y [5:0], B=6'100000, Y=$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:43$942_Y [5:0]
      New ports: A={ $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:43$941_Y [3] $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:43$941_Y [3] }, B=2'10, Y={ $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:43$942_Y [5] $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:43$942_Y [3] }
      New connections: { $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:43$942_Y [4] $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:43$942_Y [2:0] } = { $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:43$942_Y [3] 3'000 }
    Consolidated identical input bits for $mux cell $flatten\memory.$procmux$1919:
      Old ports: A=$flatten\memory.$procmux$1917_Y, B={ 1'0 \memory.P3blk_v }, Y=$flatten\memory.$procmux$1919_Y
      New ports: A=$flatten\memory.$procmux$1917_Y [4:0], B=\memory.P3blk_v, Y=$flatten\memory.$procmux$1919_Y [4:0]
      New connections: $flatten\memory.$procmux$1919_Y [5] = 1'0
    Consolidated identical input bits for $mux cell $flatten\memory.\sh.$ternary$src/shifter.v:23$420:
      Old ports: A=$auto$wreduce.cc:454:run$4300 [4:0], B=5'10011, Y=$auto$wreduce.cc:454:run$4301 [4:0]
      New ports: A={ $auto$wreduce.cc:454:run$4300 [2] $auto$wreduce.cc:454:run$4300 [2] 1'0 }, B=3'101, Y={ $auto$wreduce.cc:454:run$4301 [4] $auto$wreduce.cc:454:run$4301 [2] $auto$wreduce.cc:454:run$4301 [0] }
      New connections: { $auto$wreduce.cc:454:run$4301 [3] $auto$wreduce.cc:454:run$4301 [1] } = { 1'0 $auto$wreduce.cc:454:run$4301 [0] }
    Consolidated identical input bits for $mux cell $flatten\vcell.\ishaper.$procmux$2048:
      Old ports: A=$auto$wreduce.cc:454:run$4304 [1:0], B=2'10, Y=$auto$wreduce.cc:454:run$4305 [1:0]
      New ports: A=$auto$wreduce.cc:454:run$4304 [1], B=1'1, Y=$auto$wreduce.cc:454:run$4305 [1]
      New connections: $auto$wreduce.cc:454:run$4305 [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\vcell.\ishaper.$procmux$2092:
      Old ports: A=$flatten\vcell.\ishaper.$procmux$2090_Y, B=5'11111, Y=$flatten\vcell.\ishaper.$procmux$2092_Y
      New ports: A=$flatten\vcell.\ishaper.$procmux$2090_Y [0], B=1'1, Y=$flatten\vcell.\ishaper.$procmux$2092_Y [0]
      New connections: $flatten\vcell.\ishaper.$procmux$2092_Y [4:1] = { $flatten\vcell.\ishaper.$procmux$2092_Y [0] $flatten\vcell.\ishaper.$procmux$2092_Y [0] $flatten\vcell.\ishaper.$procmux$2092_Y [0] $flatten\vcell.\ishaper.$procmux$2092_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\vcell.\ishaper.$procmux$2103:
      Old ports: A=$flatten\vcell.\ishaper.$procmux$2101_Y, B=5'00001, Y=$flatten\vcell.\ishaper.$procmux$2103_Y
      New ports: A={ $flatten\vcell.\ishaper.$procmux$2101_Y [0] $flatten\vcell.\ishaper.$procmux$2101_Y [0] }, B=2'01, Y=$flatten\vcell.\ishaper.$procmux$2103_Y [1:0]
      New connections: $flatten\vcell.\ishaper.$procmux$2103_Y [4:2] = { $flatten\vcell.\ishaper.$procmux$2103_Y [1] $flatten\vcell.\ishaper.$procmux$2103_Y [1] $flatten\vcell.\ishaper.$procmux$2103_Y [1] }
    Consolidated identical input bits for $mux cell $flatten\vcell.\lashaper.$procmux$2195:
      Old ports: A=$flatten\vcell.\lashaper.$procmux$2193_Y, B=5'00001, Y=$flatten\vcell.\lashaper.$procmux$2195_Y
      New ports: A=$flatten\vcell.\lashaper.$procmux$2193_Y [1], B=1'0, Y=$flatten\vcell.\lashaper.$procmux$2195_Y [1]
      New connections: { $flatten\vcell.\lashaper.$procmux$2195_Y [4:2] $flatten\vcell.\lashaper.$procmux$2195_Y [0] } = { $flatten\vcell.\lashaper.$procmux$2195_Y [1] $flatten\vcell.\lashaper.$procmux$2195_Y [1] $flatten\vcell.\lashaper.$procmux$2195_Y [1] 1'1 }
    Consolidated identical input bits for $mux cell $flatten\vcell.\lashaper.$procmux$2228:
      Old ports: A=$flatten\vcell.\ishaper.$procmux$2101_Y, B=5'00000, Y=$flatten\vcell.\lashaper.$procmux$2228_Y
      New ports: A=$flatten\vcell.\ishaper.$procmux$2101_Y [0], B=1'0, Y=$flatten\vcell.\lashaper.$procmux$2228_Y [0]
      New connections: $flatten\vcell.\lashaper.$procmux$2228_Y [4:1] = { $flatten\vcell.\lashaper.$procmux$2228_Y [0] $flatten\vcell.\lashaper.$procmux$2228_Y [0] $flatten\vcell.\lashaper.$procmux$2228_Y [0] $flatten\vcell.\lashaper.$procmux$2228_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\vcell.\lbshaper.$procmux$2294:
      Old ports: A=$flatten\vcell.\lbshaper.$procmux$2292_Y, B=5'11111, Y=$flatten\vcell.\lbshaper.$procmux$2294_Y
      New ports: A=$flatten\vcell.\lbshaper.$procmux$2292_Y [1], B=1'1, Y=$flatten\vcell.\lbshaper.$procmux$2294_Y [1]
      New connections: { $flatten\vcell.\lbshaper.$procmux$2294_Y [4:2] $flatten\vcell.\lbshaper.$procmux$2294_Y [0] } = { $flatten\vcell.\lbshaper.$procmux$2294_Y [1] $flatten\vcell.\lbshaper.$procmux$2294_Y [1] $flatten\vcell.\lbshaper.$procmux$2294_Y [1] 1'1 }
    Consolidated identical input bits for $mux cell $flatten\vcell.\tshaper.$procmux$2391:
      Old ports: A=$flatten\vcell.\tshaper.$procmux$2389_Y, B=5'00000, Y=$flatten\vcell.\tshaper.$procmux$2391_Y
      New ports: A=$flatten\vcell.\tshaper.$procmux$2389_Y [0], B=1'0, Y=$flatten\vcell.\tshaper.$procmux$2391_Y [0]
      New connections: $flatten\vcell.\tshaper.$procmux$2391_Y [4:1] = 4'0000
    Consolidated identical input bits for $mux cell $flatten\vcell.\tshaper.$procmux$2402:
      Old ports: A=$flatten\vcell.\tshaper.$procmux$2400_Y, B=5'11111, Y=$flatten\vcell.\tshaper.$procmux$2402_Y
      New ports: A={ 1'0 $flatten\vcell.\tshaper.$procmux$2400_Y [0] }, B=2'11, Y=$flatten\vcell.\tshaper.$procmux$2402_Y [1:0]
      New connections: $flatten\vcell.\tshaper.$procmux$2402_Y [4:2] = { $flatten\vcell.\tshaper.$procmux$2402_Y [1] $flatten\vcell.\tshaper.$procmux$2402_Y [1] $flatten\vcell.\tshaper.$procmux$2402_Y [1] }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\memory.$procmux$1921:
      Old ports: A=$flatten\memory.$procmux$1919_Y, B={ 1'0 \memory.P4blk_v }, Y=$flatten\memory.$procmux$1921_Y
      New ports: A=$flatten\memory.$procmux$1919_Y [4:0], B=\memory.P4blk_v, Y=$flatten\memory.$procmux$1921_Y [4:0]
      New connections: $flatten\memory.$procmux$1921_Y [5] = 1'0
    Consolidated identical input bits for $mux cell $flatten\memory.\sh.$ternary$src/shifter.v:23$421:
      Old ports: A=$auto$wreduce.cc:454:run$4301 [4:0], B=5'10010, Y=$flatten\memory.\sh.$ternary$src/shifter.v:23$421_Y [4:0]
      New ports: A={ $auto$wreduce.cc:454:run$4301 [4] $auto$wreduce.cc:454:run$4301 [2] $auto$wreduce.cc:454:run$4301 [0] $auto$wreduce.cc:454:run$4301 [0] }, B=4'1010, Y={ $flatten\memory.\sh.$ternary$src/shifter.v:23$421_Y [4] $flatten\memory.\sh.$ternary$src/shifter.v:23$421_Y [2:0] }
      New connections: $flatten\memory.\sh.$ternary$src/shifter.v:23$421_Y [3] = 1'0
    Consolidated identical input bits for $mux cell $flatten\vcell.\ishaper.$procmux$2105:
      Old ports: A=$flatten\vcell.\ishaper.$procmux$2103_Y, B=5'11111, Y=$flatten\vcell.\ishaper.$procmux$2105_Y
      New ports: A=$flatten\vcell.\ishaper.$procmux$2103_Y [1:0], B=2'11, Y=$flatten\vcell.\ishaper.$procmux$2105_Y [1:0]
      New connections: $flatten\vcell.\ishaper.$procmux$2105_Y [4:2] = { $flatten\vcell.\ishaper.$procmux$2105_Y [1] $flatten\vcell.\ishaper.$procmux$2105_Y [1] $flatten\vcell.\ishaper.$procmux$2105_Y [1] }
    Consolidated identical input bits for $mux cell $flatten\vcell.\lashaper.$procmux$2197:
      Old ports: A=$flatten\vcell.\lashaper.$procmux$2195_Y, B=5'11111, Y=$flatten\vcell.\lashaper.$procmux$2197_Y
      New ports: A=$flatten\vcell.\lashaper.$procmux$2195_Y [1], B=1'1, Y=$flatten\vcell.\lashaper.$procmux$2197_Y [1]
      New connections: { $flatten\vcell.\lashaper.$procmux$2197_Y [4:2] $flatten\vcell.\lashaper.$procmux$2197_Y [0] } = { $flatten\vcell.\lashaper.$procmux$2197_Y [1] $flatten\vcell.\lashaper.$procmux$2197_Y [1] $flatten\vcell.\lashaper.$procmux$2197_Y [1] 1'1 }
    Consolidated identical input bits for $mux cell $flatten\vcell.\lashaper.$procmux$2230:
      Old ports: A=$flatten\vcell.\lashaper.$procmux$2228_Y, B=5'11111, Y=$flatten\vcell.\lashaper.$procmux$2230_Y
      New ports: A=$flatten\vcell.\lashaper.$procmux$2228_Y [0], B=1'1, Y=$flatten\vcell.\lashaper.$procmux$2230_Y [0]
      New connections: $flatten\vcell.\lashaper.$procmux$2230_Y [4:1] = { $flatten\vcell.\lashaper.$procmux$2230_Y [0] $flatten\vcell.\lashaper.$procmux$2230_Y [0] $flatten\vcell.\lashaper.$procmux$2230_Y [0] $flatten\vcell.\lashaper.$procmux$2230_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\vcell.\lbshaper.$procmux$2296:
      Old ports: A=$flatten\vcell.\lbshaper.$procmux$2294_Y [0], B=1'1, Y=$auto$wreduce.cc:454:run$4323 [0]
      New ports: A={ }, B={ }, Y={ }
      New connections: $auto$wreduce.cc:454:run$4323 [0] = 1'1
    New ctrl vector for $mux cell $flatten\vcell.\lbshaper.$procmux$2296: { }
    Consolidated identical input bits for $mux cell $flatten\vcell.\tshaper.$procmux$2393:
      Old ports: A=$flatten\vcell.\tshaper.$procmux$2391_Y, B=5'11111, Y=$flatten\vcell.\tshaper.$procmux$2393_Y
      New ports: A={ 1'0 $flatten\vcell.\tshaper.$procmux$2391_Y [0] }, B=2'11, Y=$flatten\vcell.\tshaper.$procmux$2393_Y [1:0]
      New connections: $flatten\vcell.\tshaper.$procmux$2393_Y [4:2] = { $flatten\vcell.\tshaper.$procmux$2393_Y [1] $flatten\vcell.\tshaper.$procmux$2393_Y [1] $flatten\vcell.\tshaper.$procmux$2393_Y [1] }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\memory.\sh.$ternary$src/shifter.v:23$422:
      Old ports: A=$flatten\memory.\sh.$ternary$src/shifter.v:23$421_Y [4:0], B=5'10001, Y=\memory.sh.point5 [4:0]
      New ports: A={ $flatten\memory.\sh.$ternary$src/shifter.v:23$421_Y [4] $flatten\memory.\sh.$ternary$src/shifter.v:23$421_Y [2:0] }, B=4'1001, Y={ \memory.sh.point5 [4] \memory.sh.point5 [2:0] }
      New connections: \memory.sh.point5 [3] = 1'0
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\memory.\sh.$ternary$src/shifter.v:29$437:
      Old ports: A=\memory.sh.point5 [4:0], B=5'00000, Y={ $auto$wreduce.cc:454:run$4299 [4] $auto$alumacc.cc:501:replace_alu$4467 [3:2] $auto$alumacc.cc:501:replace_alu$4431 [1] $auto$alumacc.cc:501:replace_alu$4413 [0] }
      New ports: A={ \memory.sh.point5 [4] \memory.sh.point5 [2:0] }, B=4'0000, Y={ $auto$wreduce.cc:454:run$4299 [4] $auto$alumacc.cc:501:replace_alu$4467 [2] $auto$alumacc.cc:501:replace_alu$4431 [1] $auto$alumacc.cc:501:replace_alu$4413 [0] }
      New connections: $auto$alumacc.cc:501:replace_alu$4467 [3] = 1'0
  Optimizing cells in module \top.
    New input vector for $reduce_and cell $auto$alumacc.cc:75:get_eq$4471: 1'0
  Optimizing cells in module \top.
Performed a total of 83 changes.

20.29.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~39 debug messages>
Removed a total of 13 cells.

20.29.6. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$3137 ($sdffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$3137 ($sdffe) from module top.

20.29.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 13 unused wires.
<suppressed ~1 debug messages>

20.29.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~207 debug messages>

20.29.9. Rerunning OPT passes. (Maybe there is more to do..)

20.29.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~633 debug messages>

20.29.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

20.29.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~72 debug messages>
Removed a total of 20 cells.

20.29.13. Executing OPT_DFF pass (perform DFF optimizations).
Handling always-active SRST on $auto$ff.cc:262:slice$2957 ($sdffe) from module top (changing to const D).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$2957 ($sdffe) from module top.
Handling always-active SRST on $auto$ff.cc:262:slice$2948 ($sdffe) from module top (changing to const D).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$2948 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$2948 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$2948 ($sdffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$2948 ($sdffe) from module top.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$2948 ($sdffe) from module top.
Handling always-active SRST on $auto$ff.cc:262:slice$2932 ($sdffe) from module top (changing to const D).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$2932 ($sdffe) from module top.
Handling always-active SRST on $auto$ff.cc:262:slice$2921 ($sdffe) from module top (changing to const D).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$2921 ($sdffe) from module top.
Handling always-active SRST on $auto$ff.cc:262:slice$2908 ($sdffe) from module top (changing to const D).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$2908 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$2908 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$2908 ($sdffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$2908 ($sdffe) from module top.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$2908 ($sdffe) from module top.
Handling always-active SRST on $auto$ff.cc:262:slice$2904 ($sdffe) from module top (changing to const D).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$2904 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$2904 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$2904 ($sdffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$2904 ($sdffe) from module top.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$2904 ($sdffe) from module top.
Handling always-active SRST on $auto$ff.cc:262:slice$2893 ($sdffe) from module top (changing to const D).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$2893 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$2893 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$2893 ($sdffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$2893 ($sdffe) from module top.
Handling always-active SRST on $auto$ff.cc:262:slice$2884 ($sdffe) from module top (changing to const D).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$2884 ($sdffe) from module top.
Handling always-active SRST on $auto$ff.cc:262:slice$2881 ($sdffe) from module top (changing to const D).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$2881 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$2881 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$2881 ($sdffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$2881 ($sdffe) from module top.

20.29.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 4 unused cells and 96 unused wires.
<suppressed ~5 debug messages>

20.29.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

20.29.16. Rerunning OPT passes. (Maybe there is more to do..)

20.29.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~631 debug messages>

20.29.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

20.29.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

20.29.20. Executing OPT_DFF pass (perform DFF optimizations).

20.29.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

20.29.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

20.29.23. Finished OPT passes. (There is nothing left to do.)

20.30. Executing ICE40_WRAPCARRY pass (wrap carries).

20.31. Executing TECHMAP pass (map to technology primitives).

20.31.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

20.31.2. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/arith_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

20.31.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $sdff.
Using template $paramod$672a140277c71df8314410f22acc08d55222c3c7\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $or.
Using template $paramod$e04283ca12514baf3d204c6994bec8f178dd89f8\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $sdffe.
Using extmapper simplemap for cells of type $ne.
Using template $paramod$740b056ede97228d3eae64ea2fdc81f0a33e0fe7\_80_ice40_alu for cells of type $alu.
Using template $paramod$fc972a7a46956c1788f3cb5257b53c8f1df2d0cc\_90_alu for cells of type $alu.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod$constmap:59d930a2422782b39b85cd49134a384b3d87fce0$paramod$524f4122ef6340492631f8c3d6d495706ea733a6\_90_shift_shiftx for cells of type $shiftx.
Using template $paramod$83dd457849c736323edf2edb15923eb27f99c683\_80_ice40_alu for cells of type $alu.
Using template $paramod$1a3a0c35c4a4896fbfd612699525c057298e72d2\_80_ice40_alu for cells of type $alu.
Using template $paramod$d1615bf4e5e328245ffd1550e5fe105901cda77b\_90_alu for cells of type $alu.
Using template $paramod$78e969f2586efcf3a5b0b0440bcca0db83d5cca2\_80_ice40_alu for cells of type $alu.
Using template $paramod$d9d6055bedde760961c6356c4015e2f0000ae9c2\_80_ice40_alu for cells of type $alu.
Using template $paramod$7e708ae28ab761f11d0fb59d3ffc72f6a4baf5d9\_90_alu for cells of type $alu.
Using template $paramod$6b90a16b6f3b57b9c9d958838204f952a01dc262\_80_ice40_alu for cells of type $alu.
Using template $paramod$3ac6e4268d0279df14823f25676acf685165517e\_80_ice40_alu for cells of type $alu.
Using template $paramod$7af24cf7f572852703f08ef7a936c59efa2c57af\_80_ice40_alu for cells of type $alu.
Using template $paramod$03eba0cdd46566f6651a3011e0b5671fa6b5e494\_80_ice40_alu for cells of type $alu.
Using template $paramod$f85408ed1aa3d09e465edae8a7bf590332ae9f7b\_80_ice40_alu for cells of type $alu.
Using template $paramod$c6885379b74fbbf6906b35106e386e521d86cbb2\_80_ice40_alu for cells of type $alu.
Using template $paramod$8742280fdebca84e1c87f2a86ed84f62d558f4cc\_80_ice40_alu for cells of type $alu.
Using template $paramod$332fab4e157f868977379756d21fa99887c3c6c4\_80_ice40_alu for cells of type $alu.
Using template $paramod$420fbc8134b4c458452de534da94701c18f4eecd\_80_ice40_alu for cells of type $alu.
Using template $paramod$00298f3f8094950cb9a5ff2fda48d0d8bde8806c\_80_ice40_alu for cells of type $alu.
Using template $paramod$76faf6aa397909704a3ca45dba523dfa58393e7e\_80_ice40_alu for cells of type $alu.
Using template $paramod$a40b3a69ab2154dca9743e30e1e84efb03b892b4\_80_ice40_alu for cells of type $alu.
Using template $paramod$df9553132937e7736c5a38f2f1f29abeed1637af\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $logic_and.
Using template $paramod$3ef7d3dd227da7627a99c5e5a6a4deb817573e39\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $xor.
Using extmapper maccmap for cells of type $macc.
  add \vcell.tetron_h (5 bits, unsigned)
  add \vcell.tshaper.blk4_hoffset (5 bits, unsigned)
  add 5'00000 (5 bits, unsigned)
  add 5'00000 (5 bits, unsigned)
  add \vcell.ishaper.blk4_hoffset [1:0] (2 bits, unsigned)
  add \vcell.tetron_v (5 bits, unsigned)
  add \vcell.ishaper.blk2_voffset (5 bits, unsigned)
  add bits { \vcell.oshaper.blk2_voffset [0] 2'00 \vcell.tshaper.blk2_voffset [0] } (4 bits)
  packed 1 (1) bits / 1 words into adder tree
  add \vcell.tetron_h (5 bits, unsigned)
  add \vcell.tshaper.blk3_hoffset (5 bits, unsigned)
  add 5'00000 (5 bits, unsigned)
  add 5'00000 (5 bits, unsigned)
  add bits { \vcell.ishaper.blk3_hoffset [0] \vcell.oshaper.blk2_voffset [0] } (2 bits)
  packed 1 (1) bits / 1 words into adder tree
  add \vcell.tetron_h (5 bits, unsigned)
  add { \vcell.ishaper.blk2_hoffset [4:1] \vcell.ishaper.blk3_hoffset [0] } (5 bits, unsigned)
  add bits { \vcell.oshaper.blk2_voffset [0] 2'00 \vcell.tshaper.blk2_hoffset [0] } (4 bits)
  packed 1 (1) bits / 1 words into adder tree
  add \vcell.tetron_v (5 bits, unsigned)
  add \vcell.tshaper.blk4_voffset (5 bits, unsigned)
  add 5'00000 (5 bits, unsigned)
  add 5'00000 (5 bits, unsigned)
  add \vcell.ishaper.blk4_voffset [1:0] (2 bits, unsigned)
  add bits \vcell.oshaper.blk2_voffset [0] (1 bits)
  packed 1 (1) bits / 1 words into adder tree
Using template $paramod$dc04b7d98e503a7bab16fce2df70e6e2c5ca34d6\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $lut.
  add \vcell.tetron_v (5 bits, unsigned)
  add \vcell.tshaper.blk3_voffset (5 bits, unsigned)
  add 5'00000 (5 bits, unsigned)
  add 5'00000 (5 bits, unsigned)
  add bits \vcell.ishaper.blk3_voffset [0] (1 bits)
  packed 1 (1) bits / 1 words into adder tree
Using template $paramod$6e0a31ebf2a4e7bcebad5866b2b441901654250d\_90_pmux for cells of type $pmux.
Using template $paramod$3e96e356bb68fcbd4f9c12f6d97ec8513d1af8c6\_80_ice40_alu for cells of type $alu.
Using template $paramod$93b49458bab1c00eb32aff458c583f46ff61e60f\_80_ice40_alu for cells of type $alu.
Using template $paramod$b18e16801adf491a64caa0542270798e5d4ac6b6\_80_ice40_alu for cells of type $alu.
Using template $paramod$d902cfcd8f5bceb817669b134f968d68db216af4\_80_ice40_alu for cells of type $alu.
Using template $paramod$9c32b45917accb56be6667e7eba7742d064d7fbb\_80_ice40_alu for cells of type $alu.
Using template $paramod$2d591d76303cd5065d50f216288bb81e81f2927d\_80_ice40_alu for cells of type $alu.
Using template $paramod$78648aff6d035ceca1e51be5292d8e9748cdc2be\_80_ice40_alu for cells of type $alu.
Using template $paramod$49641a5ace7a8dbedd31c417f5a1b54fcecf6c7d\_80_ice40_alu for cells of type $alu.
Using template $paramod$dbcdc7e8aa1a4080cea2deda6fdc8772064f4d90\_80_ice40_alu for cells of type $alu.
Using template $paramod$754650b284649a026620fc6856e5b6886cbfe794\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_fa\WIDTH=32'00000000000000000000000000000101 for cells of type $fa.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000001 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
No more expansions possible.
<suppressed ~4961 debug messages>

20.32. Executing OPT pass (performing simple optimizations).

20.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~3922 debug messages>

20.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~4560 debug messages>
Removed a total of 1520 cells.

20.32.3. Executing OPT_DFF pass (perform DFF optimizations).

20.32.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 3213 unused cells and 4200 unused wires.
<suppressed ~3216 debug messages>

20.32.5. Finished fast OPT passes.

20.33. Executing ICE40_OPT pass (performing simple optimizations).

20.33.1. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4403.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$4403.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4403.slice[3].carry: CO=$auto$alumacc.cc:485:replace_alu$4403.C [3]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4403.slice[5].carry: CO=$auto$alumacc.cc:485:replace_alu$4403.C [5]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4412.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$4403.BB [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4412.slice[2].carry: CO=$auto$alumacc.cc:485:replace_alu$4412.C [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4412.slice[4].carry: CO=$auto$alumacc.cc:485:replace_alu$4412.C [4]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4421.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$4403.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4421.slice[3].carry: CO=$auto$alumacc.cc:485:replace_alu$4421.C [3]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4421.slice[5].carry: CO=$auto$alumacc.cc:485:replace_alu$4421.C [5]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4430.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$4403.BB [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4430.slice[1].carry: CO=$auto$alumacc.cc:485:replace_alu$4430.C [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4430.slice[3].carry: CO=$auto$alumacc.cc:485:replace_alu$4430.C [3]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4439.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$4403.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4439.slice[3].carry: CO=$auto$alumacc.cc:485:replace_alu$4439.C [3]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4439.slice[5].carry: CO=$auto$alumacc.cc:485:replace_alu$4439.C [5]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4448.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$4403.BB [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4448.slice[2].carry: CO=$auto$alumacc.cc:485:replace_alu$4448.C [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4448.slice[4].carry: CO=$auto$alumacc.cc:485:replace_alu$4448.C [4]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4457.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$4403.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4457.slice[3].carry: CO=$auto$alumacc.cc:485:replace_alu$4457.C [3]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4457.slice[5].carry: CO=$auto$alumacc.cc:485:replace_alu$4457.C [5]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4547.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$4403.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4547.slice[3].carry: CO=$auto$alumacc.cc:485:replace_alu$4547.C [3]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4556.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$4403.BB [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4556.slice[2].carry: CO=$auto$alumacc.cc:485:replace_alu$4556.C [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4565.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$4403.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4565.slice[3].carry: CO=$auto$alumacc.cc:485:replace_alu$4565.C [3]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4574.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$4403.BB [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4574.slice[1].carry: CO=$auto$alumacc.cc:485:replace_alu$4574.C [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4583.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$4403.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4583.slice[3].carry: CO=$auto$alumacc.cc:485:replace_alu$4583.C [3]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4592.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$4403.BB [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4592.slice[2].carry: CO=$auto$alumacc.cc:485:replace_alu$4592.C [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4601.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$4403.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4601.slice[3].carry: CO=$auto$alumacc.cc:485:replace_alu$4601.C [3]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4615.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$4615.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4615.slice[3].carry: CO=$auto$alumacc.cc:485:replace_alu$4615.C [3]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4620.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$4620.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4633.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$4620.BB [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4646.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$4620.BB [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4659.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$4659.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4670.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$4670.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4681.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$4670.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4699.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$4659.BB [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4704.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$4670.BB [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4709.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$4670.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4718.slice[0].carry: CO=\game_manager.h.pposition [6]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4723.slice[0].carry: CO=\game_manager.h.pposition [3]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4736.slice[0].carry: CO=\game_manager.h.pposition [4]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4749.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$4694.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4762.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$4694.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4775.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$4694.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4788.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$4694.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4801.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$4694.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4814.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$4694.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4827.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$4694.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4840.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$4694.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4853.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$4694.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4866.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$4694.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4879.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$4694.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4892.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$4694.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4905.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$4694.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4918.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$4694.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4931.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$4694.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4944.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$4694.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4957.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$4694.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4970.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$4694.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4983.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$4694.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$4996.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$4694.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$5009.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$4694.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$5018.slice[0].carry: CO=\core.hreadwire [5]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$5023.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$4659.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$5034.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$4694.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$5043.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$4659.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$5052.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$5052.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$5063.slice[0].carry: CO=\core.hscan_pos [4]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$5068.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$5052.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$5079.slice[0].carry: CO=\core.hscan_pos [7]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$5084.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$5052.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$5093.slice[0].carry: CO=\core.hscan_pos [4]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$5106.slice[0].carry: CO=\core.hscan_pos [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$5109.slice[0].carry: CO=\core.vscan_pos [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$5112.slice[0].carry: CO=\core.vreadwire [3]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$5118.slice[0].carry: CO=\core.hreadwire [3]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$5124.slice[0].carry: CO=\memory.resetperiod_state [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$5127.slice[0].carry: CO=\memory.resetperiod_state [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$5130.slice[0].carry: CO=\memory.resetperiod_state [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$5133.slice[0].carry: CO=\memory.P1blk_h [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$5133.slice[5].carry: CO=$auto$alumacc.cc:485:replace_alu$5133.C [5]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$5136.slice[0].carry: CO=\memory.P2blk_h [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$5136.slice[5].carry: CO=$auto$alumacc.cc:485:replace_alu$5136.C [5]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$5139.slice[0].carry: CO=\memory.P3blk_h [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$5139.slice[5].carry: CO=$auto$alumacc.cc:485:replace_alu$5139.C [5]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$5142.slice[0].carry: CO=\memory.P4blk_h [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$5142.slice[5].carry: CO=$auto$alumacc.cc:485:replace_alu$5142.C [5]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$5145.slice[0].carry: CO=\memory.perq [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$5148.slice[0].carry: CO=\t.counter [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$5151.slice[0].carry: CO=\vcell.tetron_h [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$5154.slice[0].carry: CO=\vcell.tetron_v [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$5157.slice[0].carry: CO=\vcell.tetron_rotation [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$5163.slice[0].carry: CO=\vcell.tetron_v [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$maccmap.cc:240:synth$15269.slice[0].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$opt_expr.cc:1765:replace_const_cells$5427.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$4403.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$opt_expr.cc:1765:replace_const_cells$5427.slice[3].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$opt_expr.cc:1765:replace_const_cells$5433.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$4403.BB [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$opt_expr.cc:1765:replace_const_cells$5433.slice[2].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$opt_expr.cc:1765:replace_const_cells$5436.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$4403.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$opt_expr.cc:1765:replace_const_cells$5436.slice[3].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$opt_expr.cc:1765:replace_const_cells$5439.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$4403.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$opt_expr.cc:1765:replace_const_cells$5439.slice[3].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$opt_expr.cc:1765:replace_const_cells$5442.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$4403.BB [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$opt_expr.cc:1765:replace_const_cells$5442.slice[2].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$opt_expr.cc:1765:replace_const_cells$5445.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$4403.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$opt_expr.cc:1765:replace_const_cells$5445.slice[3].carry: CO=1'1

20.33.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~84 debug messages>

20.33.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~144 debug messages>
Removed a total of 48 cells.

20.33.4. Executing OPT_DFF pass (perform DFF optimizations).

20.33.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 45 unused cells and 18 unused wires.
<suppressed ~46 debug messages>

20.33.6. Rerunning OPT passes. (Removed registers in this run.)

20.33.7. Running ICE40 specific optimizations.

20.33.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

20.33.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

20.33.10. Executing OPT_DFF pass (perform DFF optimizations).

20.33.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

20.33.12. Finished OPT passes. (There is nothing left to do.)

20.34. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

20.35. Executing TECHMAP pass (map to technology primitives).

20.35.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

20.35.2. Continuing TECHMAP pass.
Using template \$_SDFFCE_PP0P_ for cells of type $_SDFFCE_PP0P_.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
Using template \$_SDFF_PP0_ for cells of type $_SDFF_PP0_.
Using template \$_SDFFCE_PP1P_ for cells of type $_SDFFCE_PP1P_.
Using template \$_SDFF_PP1_ for cells of type $_SDFF_PP1_.
No more expansions possible.
<suppressed ~1032 debug messages>

20.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

20.37. Executing SIMPLEMAP pass (map simple cells to gate primitives).
Mapping top.$auto$alumacc.cc:485:replace_alu$5106.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$5109.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$5112.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$5118.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$5124.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$5127.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$5133.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$5133.slice[5].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$5136.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$5136.slice[5].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$5139.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$5139.slice[5].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$5142.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$5142.slice[5].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$5145.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$5148.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$5151.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$5154.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$5157.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$5163.slice[0].carry ($lut).
Mapping top.$auto$maccmap.cc:240:synth$15269.slice[0].carry ($lut).

20.38. Executing ICE40_OPT pass (performing simple optimizations).

20.38.1. Running ICE40 specific optimizations.

20.38.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~399 debug messages>

20.38.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~4614 debug messages>
Removed a total of 1538 cells.

20.38.4. Executing OPT_DFF pass (perform DFF optimizations).

20.38.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 7492 unused wires.
<suppressed ~1 debug messages>

20.38.6. Rerunning OPT passes. (Removed registers in this run.)

20.38.7. Running ICE40 specific optimizations.

20.38.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~1 debug messages>

20.38.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

20.38.10. Executing OPT_DFF pass (perform DFF optimizations).

20.38.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

20.38.12. Rerunning OPT passes. (Removed registers in this run.)

20.38.13. Running ICE40 specific optimizations.

20.38.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

20.38.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

20.38.16. Executing OPT_DFF pass (perform DFF optimizations).

20.38.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

20.38.18. Finished OPT passes. (There is nothing left to do.)

20.39. Executing TECHMAP pass (map to technology primitives).

20.39.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/latches_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

20.39.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

20.40. Executing ABC pass (technology mapping using ABC).

20.40.1. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Extracted 6406 gates and 7557 wires to a netlist network with 1149 inputs and 1122 outputs.

20.40.1.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + lutpack -S 1 
ABC: + dress 
ABC: Total number of equiv classes                =    2097.
ABC: Participating nodes from both networks       =    4353.
ABC: Participating nodes from the first network   =    2103. (  61.12 % of nodes)
ABC: Participating nodes from the second network  =    2250. (  65.39 % of nodes)
ABC: Node pairs (any polarity)                    =    2103. (  61.12 % of names can be moved)
ABC: Node pairs (same polarity)                   =    1582. (  45.98 % of names can be moved)
ABC: Total runtime =     0.06 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

20.40.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     3438
ABC RESULTS:        internal signals:     5286
ABC RESULTS:           input signals:     1149
ABC RESULTS:          output signals:     1122
Removing temp directory.

20.41. Executing ICE40_WRAPCARRY pass (wrap carries).

20.42. Executing TECHMAP pass (map to technology primitives).

20.42.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

20.42.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~22 debug messages>
Removed 439 unused cells and 5121 unused wires.

20.43. Executing OPT_LUT pass (optimize LUTs).
Discovering LUTs.
Number of LUTs:     3592
  1-LUT               76
  2-LUT              435
  3-LUT             1579
  4-LUT             1502
  with \SB_CARRY    (#0)  141
  with \SB_CARRY    (#1)  157

Eliminating LUTs.
Number of LUTs:     3592
  1-LUT               76
  2-LUT              435
  3-LUT             1579
  4-LUT             1502
  with \SB_CARRY    (#0)  141
  with \SB_CARRY    (#1)  157

Combining LUTs.
Number of LUTs:     3577
  1-LUT               76
  2-LUT              419
  3-LUT             1571
  4-LUT             1511
  with \SB_CARRY    (#0)  141
  with \SB_CARRY    (#1)  157

Eliminated 0 LUTs.
Combined 15 LUTs.
<suppressed ~19844 debug messages>

20.44. Executing TECHMAP pass (map to technology primitives).

20.44.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

20.44.2. Continuing TECHMAP pass.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10000000 for cells of type $lut.
Using template $paramod$6e238df02989b317f10820a22773676e71120644\$lut for cells of type $lut.
Using template $paramod$fd904e9e35cfd343a9df248824bd3f1408724879\$lut for cells of type $lut.
Using template $paramod$272652f6c6fbe9a75eff76e45cc7e2788835518b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0100 for cells of type $lut.
Using template $paramod$6b0849254d6c87461fb93e37cc18f089f61eb912\$lut for cells of type $lut.
Using template $paramod$658b9ed803f0d3d335616d3858b53e0a2522f1e8\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0001 for cells of type $lut.
Using template $paramod$4b2297966ddb718657b80566604f97685ffc0120\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01110000 for cells of type $lut.
Using template $paramod$43779580bfffd5d5a9f321249a174febf1dac288\$lut for cells of type $lut.
Using template $paramod$179512a187da069f3b79ef6612a41e494e7d54b6\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001011 for cells of type $lut.
Using template $paramod$571404c0889eaf57f492cb5e37f8acb5df5852f9\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10010110 for cells of type $lut.
Using template $paramod$c92106469089edeb8ad4d6daf5067879a8f6ba9f\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11101000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000001 for cells of type $lut.
Using template $paramod$8b24407096beec47292ddeb1567a058197a320b9\$lut for cells of type $lut.
Using template $paramod$703a13a751e631ef123f38f7d2125aeabec0f94c\$lut for cells of type $lut.
Using template $paramod$e9c77024ca501b890c641f9c0b10e27242db8730\$lut for cells of type $lut.
Using template $paramod$41326ad8644342a66dfb051d050f2b6fbf15015b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10100011 for cells of type $lut.
Using template $paramod$973818279bc95792902f3c09371fd2407d04a2a5\$lut for cells of type $lut.
Using template $paramod$e49f6e3576ef1a6d2f58c54414dbb786af8cc869\$lut for cells of type $lut.
Using template $paramod$c1a19a87ccbbb03d43a72335db63f692ddf82cc1\$lut for cells of type $lut.
Using template $paramod$71d951b20e73043168c1656217d126e617052faa\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00110101 for cells of type $lut.
Using template $paramod$45d617c2ce0041e27b541f62b0fc3c3ce441a616\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11001010 for cells of type $lut.
Using template $paramod$e5e9da8fed769f971686eed8c5eea50e61f73aaa\$lut for cells of type $lut.
Using template $paramod$38f9bf4dd2329347b8471f0a98443dd323386889\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01010011 for cells of type $lut.
Using template $paramod$04b674496422df8889c01c3744b94097628ccfbc\$lut for cells of type $lut.
Using template $paramod$adac5163f2ca606e303e4fcb6e4ac1a8cfe9825d\$lut for cells of type $lut.
Using template $paramod$9fed01b8a0c5f6113b8ac08943943d10264f3bee\$lut for cells of type $lut.
Using template $paramod$729aa850e969bb9bb1c205734876853e142656d4\$lut for cells of type $lut.
Using template $paramod$94ac66a11090dca84889e55fcf03297912a5b7ec\$lut for cells of type $lut.
Using template $paramod$6d6beead1425af15cf78b27fd9b11b41b5d4bce8\$lut for cells of type $lut.
Using template $paramod$608f40069c27841a5b3bdf03643a34bdc8974072\$lut for cells of type $lut.
Using template $paramod$2ea69c779d6c1b79ac5a87b0d1523c67d5628dba\$lut for cells of type $lut.
Using template $paramod$ab8bb87959c5d7cfa27886cee1355b38e054a61a\$lut for cells of type $lut.
Using template $paramod$a50be0e6fa3a01511bb234559cb74fb8bd3e2061\$lut for cells of type $lut.
Using template $paramod$b297295e19b03521716155b85537bbe86d6a9ae6\$lut for cells of type $lut.
Using template $paramod$f3e1547c4b47e64c590e75cf09078b2507c8cc75\$lut for cells of type $lut.
Using template $paramod$b4410865e8124402796f9dfbf73ef8d279fdbd08\$lut for cells of type $lut.
Using template $paramod$b4d0f4738a5ce50c7f36c2aa2ecc09cfb874f2b6\$lut for cells of type $lut.
Using template $paramod$bba54c1ef87367812b4c15f4aed5ac70773df775\$lut for cells of type $lut.
Using template $paramod$df0b68f8e63b2deb6710e23abd8b8ff0796d4897\$lut for cells of type $lut.
Using template $paramod$baa939b0bd5b3e0c8760492528669bd58f640542\$lut for cells of type $lut.
Using template $paramod$a15fd389a2f54cb7b94707b25934d226e68d9e2e\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11101111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1110 for cells of type $lut.
Using template $paramod$53ce561f80f32d4298a3beadc88b6c5c78293221\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10001111 for cells of type $lut.
Using template $paramod$12879138d1e376f344e47ea40be66b776233be75\$lut for cells of type $lut.
Using template $paramod$e0bde73e598487237493c8a43ca52c95a3727354\$lut for cells of type $lut.
Using template $paramod$5766b753e513aa2393ffc25ef94ebc79dc098484\$lut for cells of type $lut.
Using template $paramod$b431bfd938e35871dd0b7668e1503c7e8b9d491c\$lut for cells of type $lut.
Using template $paramod$f63fe32f78d5f3c5de711945c592c8c5ec2303ae\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11111000 for cells of type $lut.
Using template $paramod$a2d691ba21e093558f2a36669ee489fbccffbcd3\$lut for cells of type $lut.
Using template $paramod$b93d1ea7a612a32c185108f67a153d44ffb9aac2\$lut for cells of type $lut.
Using template $paramod$71b048598aae7f2b81e655c1bee88bee1013148c\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0111 for cells of type $lut.
Using template $paramod$161491d8314cab9d5d32db4aa31f31f4ef4f6dc6\$lut for cells of type $lut.
Using template $paramod$4d80b2350afbf957388ad464d6a1930002dd1b04\$lut for cells of type $lut.
Using template $paramod$e053a22d78e6bd5ea33183ea69976f0db741be0e\$lut for cells of type $lut.
Using template $paramod$cde3aa23c1efa60a470cf0f0281347d6ba585afa\$lut for cells of type $lut.
Using template $paramod$444dc65d62c26ac5c920b1ef08094df1b8d6a003\$lut for cells of type $lut.
Using template $paramod$7fcc2f13195f27c397064377984d87a90c06749d\$lut for cells of type $lut.
Using template $paramod$e96de5e9fcce737e52eacf39c70c8f533dc27d63\$lut for cells of type $lut.
Using template $paramod$acf49cb7bd2805dee4b4ebb218aa5924b1be7704\$lut for cells of type $lut.
Using template $paramod$69f20e0703606f2ffd2ee27cd26f815bd5eeb6e9\$lut for cells of type $lut.
Using template $paramod$de3d8c0ac9a85f776878d56395b6e0bf04ae72e7\$lut for cells of type $lut.
Using template $paramod$bdb7f9ed72fd4f5c7ad81c376f2d8a5c72a0098d\$lut for cells of type $lut.
Using template $paramod$048d4aa2263b685fba6c6b0d38f6224df0dc3042\$lut for cells of type $lut.
Using template $paramod$7a9d9396461df152f697894fa3b294ad1b285e08\$lut for cells of type $lut.
Using template $paramod$d6d3aaeac1b9aa2c4b652c48e0deb565040dda72\$lut for cells of type $lut.
Using template $paramod$5898ae4e52b22eca363a418fa94151158a507d30\$lut for cells of type $lut.
Using template $paramod$441de597d9318495d3225f370c9f7379b3b0fd0d\$lut for cells of type $lut.
Using template $paramod$ea0faad69a26c91786a25961ea149d0e0961eb1f\$lut for cells of type $lut.
Using template $paramod$e5759512db67494ff77fbdfc66dff4006376568f\$lut for cells of type $lut.
Using template $paramod$933f4f3e373a784da64d137def3625bdd36d1695\$lut for cells of type $lut.
Using template $paramod$cc14edb43bcbbd83b718cef08414cb23048bb6d0\$lut for cells of type $lut.
Using template $paramod$81d8a60fd95b1a9f9ef71c12a774ae6988cb9fd5\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11100000 for cells of type $lut.
Using template $paramod$a670b08a47dd8a34f954c50cd06e9996d77e8467\$lut for cells of type $lut.
Using template $paramod$ed10455c824c2a3761aabdeb1e31dad905f66e6e\$lut for cells of type $lut.
Using template $paramod$1bf62ab10e48d71d6497bccacf5c70420c470fe9\$lut for cells of type $lut.
Using template $paramod$ad3a97108c9f4d10f8acfa309b668b9455d3d733\$lut for cells of type $lut.
Using template $paramod$30c7bb594369ca20ff4ff844ba6ed3179f45572d\$lut for cells of type $lut.
Using template $paramod$02fbd2dfd8b419c0d6fd5205680ad063cd40eac8\$lut for cells of type $lut.
Using template $paramod$19ec49f31a8d230a567aa44ce3ea81a03c101e2b\$lut for cells of type $lut.
Using template $paramod$82b4a585d1edcb5c6e755dc9bd3392228a1c1304\$lut for cells of type $lut.
Using template $paramod$4da2782c2e024b3eded45331a6607870b9d0254f\$lut for cells of type $lut.
Using template $paramod$94397b2bc897b43893931fe7ae97122d5b13b262\$lut for cells of type $lut.
Using template $paramod$12e9049d8709286a770fe60b59ec4d94c39ce3c9\$lut for cells of type $lut.
Using template $paramod$2d8ecce5c907513cebcd38ab5efe0fc26fc03464\$lut for cells of type $lut.
Using template $paramod$56f6c3c361f9789429efc3012e94bff6931a14df\$lut for cells of type $lut.
Using template $paramod$8c24dc0cdd336b7fb88bbf7eed45cec5cbae862b\$lut for cells of type $lut.
Using template $paramod$5280a6fb15b184512b48cc6d199288a0bfdcb7a5\$lut for cells of type $lut.
Using template $paramod$0de052767abdccc3aefc818722bdc3c7850d25d6\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01001111 for cells of type $lut.
Using template $paramod$c5b694ec89d7629b942ccf6a9be1d39e24f8edec\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11110100 for cells of type $lut.
Using template $paramod$1307f430048519f43ab1ac47bdca16ced42e5270\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00011111 for cells of type $lut.
Using template $paramod$6d23198eb2b8f79a41c7626605a61009695893b1\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11110001 for cells of type $lut.
Using template $paramod$6e46ec5a196ba1a24b8e69ab094cadc07c13ac1f\$lut for cells of type $lut.
Using template $paramod$11ec7271d8e6e5aeaace08c13e4c601f10e31038\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000001\LUT=2'01 for cells of type $lut.
Using template $paramod$5a621b016c894274d07edef48c49b401a15fd796\$lut for cells of type $lut.
Using template $paramod$cc08dba3aac8677e797984bdf18a09dd37547dd3\$lut for cells of type $lut.
Using template $paramod$b4f15f202f50520dbc381cd0880ac94f830f05a8\$lut for cells of type $lut.
Using template $paramod$aff3a645bb9f572421a4f0f49cf8987ceb4bcdc5\$lut for cells of type $lut.
Using template $paramod$2167383712a3ef5a7aa9a279cd8db29e1fc2db5f\$lut for cells of type $lut.
Using template $paramod$f6718da5409ec8636fab31113c774a3123f56b0b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10110000 for cells of type $lut.
Using template $paramod$c471af5667a682bd131a5b479e58e470d1b2b7cd\$lut for cells of type $lut.
Using template $paramod$64669a7e87c28e39425dffff48145545533b4971\$lut for cells of type $lut.
Using template $paramod$fc318a7df7fe07fd6e06d67fcbc358e9823ea389\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11100011 for cells of type $lut.
Using template $paramod$c4c148354f86d2131dbfed31e2e01cbbb5aefda7\$lut for cells of type $lut.
Using template $paramod$2d07c1a6c53c7b878509360922c4fa5ebedc3011\$lut for cells of type $lut.
Using template $paramod$4cf5305612d86489c1a6171729557670bf08582e\$lut for cells of type $lut.
Using template $paramod$df196ed0a1da5c4a58c5e08a1dac304fd3fccaab\$lut for cells of type $lut.
Using template $paramod$ef55f89c74d994c27b4ec4bac79af43e8b1d7e25\$lut for cells of type $lut.
Using template $paramod$415b9dd3a15783ae56c103f189fd8e182f997441\$lut for cells of type $lut.
Using template $paramod$85b779ce5ab505dbf25e5e046fb43ca2b76b878b\$lut for cells of type $lut.
Using template $paramod$ca1d48527df516f209cb40a6149324209c84bc69\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11010011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01101000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01000010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11000010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01101001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01000011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11101001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00011100 for cells of type $lut.
No more expansions possible.
<suppressed ~5582 debug messages>
Removed 0 unused cells and 8358 unused wires.

20.45. Executing AUTONAME pass.
Renamed 101293 objects in module top (94 iterations).
<suppressed ~7376 debug messages>

20.46. Executing HIERARCHY pass (managing design hierarchy).

20.46.1. Analyzing design hierarchy..
Top module:  \top

20.46.2. Analyzing design hierarchy..
Top module:  \top
Removed 0 unused modules.

20.47. Printing statistics.

=== top ===

   Number of wires:               5800
   Number of wire bits:          16410
   Number of public wires:        5800
   Number of public wire bits:   16410
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               5122
     SB_CARRY                      534
     SB_DFF                         28
     SB_DFFE                        25
     SB_DFFESR                     854
     SB_DFFESS                      16
     SB_DFFSR                       81
     SB_DFFSS                        6
     SB_LUT4                      3577
     SB_PLL40_PAD                    1

20.48. Executing CHECK pass (checking for obvious problems).
Checking module top...
Found and reported 0 problems.

20.49. Executing JSON backend.

Warnings: 202 unique messages, 210 total
End of script. Logfile hash: 968ae4ce8a, CPU: user 8.00s system 0.07s, MEM: 114.38 MB peak
Yosys 0.12 (git sha1 2156e20)
Time spent: 25% 32x opt_expr (2 sec), 15% 27x opt_clean (1 sec), ...
