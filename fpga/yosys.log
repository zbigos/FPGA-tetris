
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.12 (git sha1 2156e20)


-- Parsing `src/meta_mem.v' using frontend `verilog' --

1. Executing Verilog-2005 frontend: src/meta_mem.v
Parsing Verilog input from `src/meta_mem.v' to AST representation.
Generating RTLIL representation for module `\memory'.
Successfully finished Verilog frontend.

-- Parsing `src/digitdisplay.v' using frontend `verilog' --

2. Executing Verilog-2005 frontend: src/digitdisplay.v
Parsing Verilog input from `src/digitdisplay.v' to AST representation.
Generating RTLIL representation for module `\score_digit'.
Successfully finished Verilog frontend.

-- Parsing `src/scoredisplay.v' using frontend `verilog' --

3. Executing Verilog-2005 frontend: src/scoredisplay.v
Parsing Verilog input from `src/scoredisplay.v' to AST representation.
Generating RTLIL representation for module `\scoredisplay'.
Warning: Replacing memory \values with list of registers. See src/scoredisplay.v:24
Successfully finished Verilog frontend.

-- Parsing `src/screen_manager.v' using frontend `verilog' --

4. Executing Verilog-2005 frontend: src/screen_manager.v
Parsing Verilog input from `src/screen_manager.v' to AST representation.
Generating RTLIL representation for module `\screen_manager'.
Successfully finished Verilog frontend.

-- Parsing `src/tetron_T.v' using frontend `verilog' --

5. Executing Verilog-2005 frontend: src/tetron_T.v
Parsing Verilog input from `src/tetron_T.v' to AST representation.
Generating RTLIL representation for module `\tetron_T_shaper'.
Warning: wire '\blk1_voffset' is assigned in a block at src/tetron_T.v:21.13-21.30.
Warning: wire '\blk1_hoffset' is assigned in a block at src/tetron_T.v:22.13-22.30.
Warning: wire '\blk2_voffset' is assigned in a block at src/tetron_T.v:23.13-23.30.
Warning: wire '\blk2_hoffset' is assigned in a block at src/tetron_T.v:24.13-24.30.
Warning: wire '\blk3_voffset' is assigned in a block at src/tetron_T.v:25.13-25.30.
Warning: wire '\blk3_hoffset' is assigned in a block at src/tetron_T.v:26.13-26.30.
Warning: wire '\blk4_voffset' is assigned in a block at src/tetron_T.v:27.13-27.30.
Warning: wire '\blk4_hoffset' is assigned in a block at src/tetron_T.v:28.13-28.30.
Warning: wire '\blk1_voffset' is assigned in a block at src/tetron_T.v:31.17-31.34.
Warning: wire '\blk1_hoffset' is assigned in a block at src/tetron_T.v:32.17-32.34.
Warning: wire '\blk2_voffset' is assigned in a block at src/tetron_T.v:34.17-34.34.
Warning: wire '\blk2_hoffset' is assigned in a block at src/tetron_T.v:35.17-35.34.
Warning: wire '\blk3_voffset' is assigned in a block at src/tetron_T.v:36.17-36.34.
Warning: wire '\blk3_hoffset' is assigned in a block at src/tetron_T.v:37.17-37.35.
Warning: wire '\blk4_voffset' is assigned in a block at src/tetron_T.v:39.17-39.34.
Warning: wire '\blk4_hoffset' is assigned in a block at src/tetron_T.v:40.17-40.34.
Warning: wire '\blk1_voffset' is assigned in a block at src/tetron_T.v:44.17-44.34.
Warning: wire '\blk1_hoffset' is assigned in a block at src/tetron_T.v:45.17-45.34.
Warning: wire '\blk2_voffset' is assigned in a block at src/tetron_T.v:47.17-47.34.
Warning: wire '\blk2_hoffset' is assigned in a block at src/tetron_T.v:48.17-48.34.
Warning: wire '\blk3_voffset' is assigned in a block at src/tetron_T.v:49.17-49.35.
Warning: wire '\blk3_hoffset' is assigned in a block at src/tetron_T.v:50.17-50.34.
Warning: wire '\blk4_voffset' is assigned in a block at src/tetron_T.v:52.17-52.34.
Warning: wire '\blk4_hoffset' is assigned in a block at src/tetron_T.v:53.17-53.34.
Warning: wire '\blk1_voffset' is assigned in a block at src/tetron_T.v:58.17-58.34.
Warning: wire '\blk1_hoffset' is assigned in a block at src/tetron_T.v:59.17-59.34.
Warning: wire '\blk2_voffset' is assigned in a block at src/tetron_T.v:61.17-61.34.
Warning: wire '\blk2_hoffset' is assigned in a block at src/tetron_T.v:62.17-62.34.
Warning: wire '\blk3_voffset' is assigned in a block at src/tetron_T.v:63.17-63.34.
Warning: wire '\blk3_hoffset' is assigned in a block at src/tetron_T.v:64.17-64.35.
Warning: wire '\blk4_voffset' is assigned in a block at src/tetron_T.v:66.17-66.35.
Warning: wire '\blk4_hoffset' is assigned in a block at src/tetron_T.v:67.17-67.34.
Warning: wire '\blk1_voffset' is assigned in a block at src/tetron_T.v:71.17-71.34.
Warning: wire '\blk1_hoffset' is assigned in a block at src/tetron_T.v:72.17-72.34.
Warning: wire '\blk2_voffset' is assigned in a block at src/tetron_T.v:74.17-74.34.
Warning: wire '\blk2_hoffset' is assigned in a block at src/tetron_T.v:75.17-75.34.
Warning: wire '\blk3_voffset' is assigned in a block at src/tetron_T.v:76.17-76.35.
Warning: wire '\blk3_hoffset' is assigned in a block at src/tetron_T.v:77.17-77.34.
Warning: wire '\blk4_voffset' is assigned in a block at src/tetron_T.v:79.17-79.34.
Warning: wire '\blk4_hoffset' is assigned in a block at src/tetron_T.v:80.17-80.35.
Successfully finished Verilog frontend.

-- Parsing `src/gamespeed_display.v' using frontend `verilog' --

6. Executing Verilog-2005 frontend: src/gamespeed_display.v
Parsing Verilog input from `src/gamespeed_display.v' to AST representation.
Generating RTLIL representation for module `\topbar_display'.
Successfully finished Verilog frontend.

-- Parsing `src/tetron_O.v' using frontend `verilog' --

7. Executing Verilog-2005 frontend: src/tetron_O.v
Parsing Verilog input from `src/tetron_O.v' to AST representation.
Generating RTLIL representation for module `\tetron_O_shaper'.
Warning: wire '\blk1_voffset' is assigned in a block at src/tetron_O.v:21.13-21.30.
Warning: wire '\blk1_hoffset' is assigned in a block at src/tetron_O.v:22.13-22.30.
Warning: wire '\blk2_voffset' is assigned in a block at src/tetron_O.v:23.13-23.30.
Warning: wire '\blk2_hoffset' is assigned in a block at src/tetron_O.v:24.13-24.30.
Warning: wire '\blk3_voffset' is assigned in a block at src/tetron_O.v:25.13-25.30.
Warning: wire '\blk3_hoffset' is assigned in a block at src/tetron_O.v:26.13-26.30.
Warning: wire '\blk4_voffset' is assigned in a block at src/tetron_O.v:27.13-27.30.
Warning: wire '\blk4_hoffset' is assigned in a block at src/tetron_O.v:28.13-28.30.
Warning: wire '\blk1_voffset' is assigned in a block at src/tetron_O.v:30.13-30.30.
Warning: wire '\blk1_hoffset' is assigned in a block at src/tetron_O.v:31.13-31.30.
Warning: wire '\blk2_voffset' is assigned in a block at src/tetron_O.v:33.13-33.30.
Warning: wire '\blk2_hoffset' is assigned in a block at src/tetron_O.v:34.13-34.30.
Warning: wire '\blk3_voffset' is assigned in a block at src/tetron_O.v:35.13-35.30.
Warning: wire '\blk3_hoffset' is assigned in a block at src/tetron_O.v:36.13-36.30.
Warning: wire '\blk4_voffset' is assigned in a block at src/tetron_O.v:37.13-37.30.
Warning: wire '\blk4_hoffset' is assigned in a block at src/tetron_O.v:38.13-38.30.
Successfully finished Verilog frontend.

-- Parsing `src/tetron_Lb.v' using frontend `verilog' --

8. Executing Verilog-2005 frontend: src/tetron_Lb.v
Parsing Verilog input from `src/tetron_Lb.v' to AST representation.
Generating RTLIL representation for module `\tetron_Lb_shaper'.
Warning: wire '\blk1_voffset' is assigned in a block at src/tetron_Lb.v:21.13-21.30.
Warning: wire '\blk1_hoffset' is assigned in a block at src/tetron_Lb.v:22.13-22.30.
Warning: wire '\blk2_voffset' is assigned in a block at src/tetron_Lb.v:23.13-23.30.
Warning: wire '\blk2_hoffset' is assigned in a block at src/tetron_Lb.v:24.13-24.30.
Warning: wire '\blk3_voffset' is assigned in a block at src/tetron_Lb.v:25.13-25.30.
Warning: wire '\blk3_hoffset' is assigned in a block at src/tetron_Lb.v:26.13-26.30.
Warning: wire '\blk4_voffset' is assigned in a block at src/tetron_Lb.v:27.13-27.30.
Warning: wire '\blk4_hoffset' is assigned in a block at src/tetron_Lb.v:28.13-28.30.
Warning: wire '\blk1_voffset' is assigned in a block at src/tetron_Lb.v:31.17-31.34.
Warning: wire '\blk1_hoffset' is assigned in a block at src/tetron_Lb.v:32.17-32.34.
Warning: wire '\blk2_voffset' is assigned in a block at src/tetron_Lb.v:34.17-34.34.
Warning: wire '\blk2_hoffset' is assigned in a block at src/tetron_Lb.v:35.17-35.34.
Warning: wire '\blk3_voffset' is assigned in a block at src/tetron_Lb.v:36.17-36.34.
Warning: wire '\blk3_hoffset' is assigned in a block at src/tetron_Lb.v:37.17-37.35.
Warning: wire '\blk4_voffset' is assigned in a block at src/tetron_Lb.v:39.17-39.34.
Warning: wire '\blk4_hoffset' is assigned in a block at src/tetron_Lb.v:40.17-40.35.
Warning: wire '\blk1_voffset' is assigned in a block at src/tetron_Lb.v:44.17-44.34.
Warning: wire '\blk1_hoffset' is assigned in a block at src/tetron_Lb.v:45.17-45.34.
Warning: wire '\blk2_voffset' is assigned in a block at src/tetron_Lb.v:47.17-47.34.
Warning: wire '\blk2_hoffset' is assigned in a block at src/tetron_Lb.v:48.17-48.34.
Warning: wire '\blk3_voffset' is assigned in a block at src/tetron_Lb.v:49.17-49.35.
Warning: wire '\blk3_hoffset' is assigned in a block at src/tetron_Lb.v:50.17-50.34.
Warning: wire '\blk4_voffset' is assigned in a block at src/tetron_Lb.v:52.17-52.35.
Warning: wire '\blk4_hoffset' is assigned in a block at src/tetron_Lb.v:53.17-53.35.
Warning: wire '\blk1_voffset' is assigned in a block at src/tetron_Lb.v:58.17-58.34.
Warning: wire '\blk1_hoffset' is assigned in a block at src/tetron_Lb.v:59.17-59.34.
Warning: wire '\blk2_voffset' is assigned in a block at src/tetron_Lb.v:61.17-61.34.
Warning: wire '\blk2_hoffset' is assigned in a block at src/tetron_Lb.v:62.17-62.34.
Warning: wire '\blk3_voffset' is assigned in a block at src/tetron_Lb.v:63.17-63.34.
Warning: wire '\blk3_hoffset' is assigned in a block at src/tetron_Lb.v:64.17-64.35.
Warning: wire '\blk4_voffset' is assigned in a block at src/tetron_Lb.v:66.17-66.35.
Warning: wire '\blk4_hoffset' is assigned in a block at src/tetron_Lb.v:67.17-67.34.
Warning: wire '\blk1_voffset' is assigned in a block at src/tetron_Lb.v:71.17-71.34.
Warning: wire '\blk1_hoffset' is assigned in a block at src/tetron_Lb.v:72.17-72.34.
Warning: wire '\blk2_voffset' is assigned in a block at src/tetron_Lb.v:74.17-74.34.
Warning: wire '\blk2_hoffset' is assigned in a block at src/tetron_Lb.v:75.17-75.34.
Warning: wire '\blk3_voffset' is assigned in a block at src/tetron_Lb.v:76.17-76.35.
Warning: wire '\blk3_hoffset' is assigned in a block at src/tetron_Lb.v:77.17-77.34.
Warning: wire '\blk4_voffset' is assigned in a block at src/tetron_Lb.v:79.17-79.34.
Warning: wire '\blk4_hoffset' is assigned in a block at src/tetron_Lb.v:80.17-80.34.
Successfully finished Verilog frontend.

-- Parsing `src/tetron_La.v' using frontend `verilog' --

9. Executing Verilog-2005 frontend: src/tetron_La.v
Parsing Verilog input from `src/tetron_La.v' to AST representation.
Generating RTLIL representation for module `\tetron_La_shaper'.
Warning: wire '\blk1_voffset' is assigned in a block at src/tetron_La.v:21.13-21.30.
Warning: wire '\blk1_hoffset' is assigned in a block at src/tetron_La.v:22.13-22.30.
Warning: wire '\blk2_voffset' is assigned in a block at src/tetron_La.v:23.13-23.30.
Warning: wire '\blk2_hoffset' is assigned in a block at src/tetron_La.v:24.13-24.30.
Warning: wire '\blk3_voffset' is assigned in a block at src/tetron_La.v:25.13-25.30.
Warning: wire '\blk3_hoffset' is assigned in a block at src/tetron_La.v:26.13-26.30.
Warning: wire '\blk4_voffset' is assigned in a block at src/tetron_La.v:27.13-27.30.
Warning: wire '\blk4_hoffset' is assigned in a block at src/tetron_La.v:28.13-28.30.
Warning: wire '\blk1_voffset' is assigned in a block at src/tetron_La.v:31.17-31.34.
Warning: wire '\blk1_hoffset' is assigned in a block at src/tetron_La.v:32.17-32.34.
Warning: wire '\blk2_voffset' is assigned in a block at src/tetron_La.v:34.17-34.34.
Warning: wire '\blk2_hoffset' is assigned in a block at src/tetron_La.v:35.17-35.34.
Warning: wire '\blk3_voffset' is assigned in a block at src/tetron_La.v:36.17-36.34.
Warning: wire '\blk3_hoffset' is assigned in a block at src/tetron_La.v:37.17-37.35.
Warning: wire '\blk4_voffset' is assigned in a block at src/tetron_La.v:39.17-39.35.
Warning: wire '\blk4_hoffset' is assigned in a block at src/tetron_La.v:40.17-40.35.
Warning: wire '\blk1_voffset' is assigned in a block at src/tetron_La.v:44.17-44.34.
Warning: wire '\blk1_hoffset' is assigned in a block at src/tetron_La.v:45.17-45.34.
Warning: wire '\blk2_voffset' is assigned in a block at src/tetron_La.v:47.17-47.34.
Warning: wire '\blk2_hoffset' is assigned in a block at src/tetron_La.v:48.17-48.34.
Warning: wire '\blk3_voffset' is assigned in a block at src/tetron_La.v:49.17-49.35.
Warning: wire '\blk3_hoffset' is assigned in a block at src/tetron_La.v:50.17-50.34.
Warning: wire '\blk4_voffset' is assigned in a block at src/tetron_La.v:52.17-52.35.
Warning: wire '\blk4_hoffset' is assigned in a block at src/tetron_La.v:53.17-53.34.
Warning: wire '\blk1_voffset' is assigned in a block at src/tetron_La.v:58.17-58.34.
Warning: wire '\blk1_hoffset' is assigned in a block at src/tetron_La.v:59.17-59.34.
Warning: wire '\blk2_voffset' is assigned in a block at src/tetron_La.v:61.17-61.34.
Warning: wire '\blk2_hoffset' is assigned in a block at src/tetron_La.v:62.17-62.34.
Warning: wire '\blk3_voffset' is assigned in a block at src/tetron_La.v:63.17-63.34.
Warning: wire '\blk3_hoffset' is assigned in a block at src/tetron_La.v:64.17-64.35.
Warning: wire '\blk4_voffset' is assigned in a block at src/tetron_La.v:66.17-66.34.
Warning: wire '\blk4_hoffset' is assigned in a block at src/tetron_La.v:67.17-67.34.
Warning: wire '\blk1_voffset' is assigned in a block at src/tetron_La.v:71.17-71.34.
Warning: wire '\blk1_hoffset' is assigned in a block at src/tetron_La.v:72.17-72.34.
Warning: wire '\blk2_voffset' is assigned in a block at src/tetron_La.v:74.17-74.34.
Warning: wire '\blk2_hoffset' is assigned in a block at src/tetron_La.v:75.17-75.34.
Warning: wire '\blk3_voffset' is assigned in a block at src/tetron_La.v:76.17-76.35.
Warning: wire '\blk3_hoffset' is assigned in a block at src/tetron_La.v:77.17-77.34.
Warning: wire '\blk4_voffset' is assigned in a block at src/tetron_La.v:79.17-79.34.
Warning: wire '\blk4_hoffset' is assigned in a block at src/tetron_La.v:80.17-80.35.
Successfully finished Verilog frontend.

-- Parsing `src/shifter.v' using frontend `verilog' --

10. Executing Verilog-2005 frontend: src/shifter.v
Parsing Verilog input from `src/shifter.v' to AST representation.
Generating RTLIL representation for module `\shifter'.
Successfully finished Verilog frontend.

-- Parsing `src/meta_memrow.v' using frontend `verilog' --

11. Executing Verilog-2005 frontend: src/meta_memrow.v
Parsing Verilog input from `src/meta_memrow.v' to AST representation.
Generating RTLIL representation for module `\memcell_row'.
Successfully finished Verilog frontend.

-- Parsing `src/meta_memcell.v' using frontend `verilog' --

12. Executing Verilog-2005 frontend: src/meta_memcell.v
Parsing Verilog input from `src/meta_memcell.v' to AST representation.
Generating RTLIL representation for module `\memcell'.
Successfully finished Verilog frontend.

-- Parsing `src/vga_core.v' using frontend `verilog' --

13. Executing Verilog-2005 frontend: src/vga_core.v
Parsing Verilog input from `src/vga_core.v' to AST representation.
Generating RTLIL representation for module `\VGAcore'.
Warning: reg '\r' is assigned in a continuous assignment at src/vga_core.v:60.12-60.50.
Warning: reg '\b' is assigned in a continuous assignment at src/vga_core.v:61.12-61.50.
Warning: reg '\g' is assigned in a continuous assignment at src/vga_core.v:62.12-62.50.
Successfully finished Verilog frontend.

-- Parsing `src/timer.v' using frontend `verilog' --

14. Executing Verilog-2005 frontend: src/timer.v
Parsing Verilog input from `src/timer.v' to AST representation.
Generating RTLIL representation for module `\timer'.
Successfully finished Verilog frontend.

-- Parsing `src/volatile_cell_storage.v' using frontend `verilog' --

15. Executing Verilog-2005 frontend: src/volatile_cell_storage.v
Parsing Verilog input from `src/volatile_cell_storage.v' to AST representation.
Generating RTLIL representation for module `\cellstorage'.
Warning: reg '\P1blk_v' is assigned in a continuous assignment at src/volatile_cell_storage.v:54.12-54.127.
Warning: reg '\P2blk_v' is assigned in a continuous assignment at src/volatile_cell_storage.v:55.12-55.127.
Warning: reg '\P3blk_v' is assigned in a continuous assignment at src/volatile_cell_storage.v:56.12-56.127.
Warning: reg '\P4blk_v' is assigned in a continuous assignment at src/volatile_cell_storage.v:57.12-57.127.
Warning: reg '\P1blk_h' is assigned in a continuous assignment at src/volatile_cell_storage.v:58.12-58.127.
Warning: reg '\P2blk_h' is assigned in a continuous assignment at src/volatile_cell_storage.v:59.12-59.127.
Warning: reg '\P3blk_h' is assigned in a continuous assignment at src/volatile_cell_storage.v:60.12-60.127.
Warning: reg '\P4blk_h' is assigned in a continuous assignment at src/volatile_cell_storage.v:61.12-61.127.
Successfully finished Verilog frontend.

-- Parsing `src/vga_pll.v' using frontend `verilog' --

16. Executing Verilog-2005 frontend: src/vga_pll.v
Parsing Verilog input from `src/vga_pll.v' to AST representation.
Generating RTLIL representation for module `\vga_pll'.
Successfully finished Verilog frontend.

-- Parsing `src/tetron_I.v' using frontend `verilog' --

17. Executing Verilog-2005 frontend: src/tetron_I.v
Parsing Verilog input from `src/tetron_I.v' to AST representation.
Generating RTLIL representation for module `\tetron_I_shaper'.
Warning: wire '\blk1_voffset' is assigned in a block at src/tetron_I.v:21.13-21.30.
Warning: wire '\blk1_hoffset' is assigned in a block at src/tetron_I.v:22.13-22.30.
Warning: wire '\blk2_voffset' is assigned in a block at src/tetron_I.v:23.13-23.30.
Warning: wire '\blk2_hoffset' is assigned in a block at src/tetron_I.v:24.13-24.30.
Warning: wire '\blk3_voffset' is assigned in a block at src/tetron_I.v:25.13-25.30.
Warning: wire '\blk3_hoffset' is assigned in a block at src/tetron_I.v:26.13-26.30.
Warning: wire '\blk4_voffset' is assigned in a block at src/tetron_I.v:27.13-27.30.
Warning: wire '\blk4_hoffset' is assigned in a block at src/tetron_I.v:28.13-28.30.
Warning: wire '\blk1_voffset' is assigned in a block at src/tetron_I.v:31.17-31.34.
Warning: wire '\blk1_hoffset' is assigned in a block at src/tetron_I.v:32.17-32.34.
Warning: wire '\blk2_voffset' is assigned in a block at src/tetron_I.v:33.17-33.34.
Warning: wire '\blk2_hoffset' is assigned in a block at src/tetron_I.v:34.17-34.35.
Warning: wire '\blk3_voffset' is assigned in a block at src/tetron_I.v:35.17-35.34.
Warning: wire '\blk3_hoffset' is assigned in a block at src/tetron_I.v:36.17-36.34.
Warning: wire '\blk4_voffset' is assigned in a block at src/tetron_I.v:37.17-37.34.
Warning: wire '\blk4_hoffset' is assigned in a block at src/tetron_I.v:38.17-38.34.
Warning: wire '\blk1_voffset' is assigned in a block at src/tetron_I.v:42.17-42.34.
Warning: wire '\blk1_hoffset' is assigned in a block at src/tetron_I.v:43.17-43.34.
Warning: wire '\blk2_voffset' is assigned in a block at src/tetron_I.v:44.17-44.35.
Warning: wire '\blk2_hoffset' is assigned in a block at src/tetron_I.v:45.17-45.34.
Warning: wire '\blk3_voffset' is assigned in a block at src/tetron_I.v:46.17-46.34.
Warning: wire '\blk3_hoffset' is assigned in a block at src/tetron_I.v:47.17-47.34.
Warning: wire '\blk4_voffset' is assigned in a block at src/tetron_I.v:48.17-48.34.
Warning: wire '\blk4_hoffset' is assigned in a block at src/tetron_I.v:49.17-49.34.
Warning: wire '\blk1_voffset' is assigned in a block at src/tetron_I.v:53.17-53.34.
Warning: wire '\blk1_hoffset' is assigned in a block at src/tetron_I.v:54.17-54.34.
Warning: wire '\blk2_voffset' is assigned in a block at src/tetron_I.v:55.17-55.34.
Warning: wire '\blk2_hoffset' is assigned in a block at src/tetron_I.v:56.17-56.35.
Warning: wire '\blk3_voffset' is assigned in a block at src/tetron_I.v:57.17-57.34.
Warning: wire '\blk3_hoffset' is assigned in a block at src/tetron_I.v:58.17-58.34.
Warning: wire '\blk4_voffset' is assigned in a block at src/tetron_I.v:59.17-59.34.
Warning: wire '\blk4_hoffset' is assigned in a block at src/tetron_I.v:60.17-60.34.
Warning: wire '\blk1_voffset' is assigned in a block at src/tetron_I.v:64.17-64.34.
Warning: wire '\blk1_hoffset' is assigned in a block at src/tetron_I.v:65.17-65.34.
Warning: wire '\blk2_voffset' is assigned in a block at src/tetron_I.v:66.17-66.35.
Warning: wire '\blk2_hoffset' is assigned in a block at src/tetron_I.v:67.17-67.34.
Warning: wire '\blk3_voffset' is assigned in a block at src/tetron_I.v:68.17-68.34.
Warning: wire '\blk3_hoffset' is assigned in a block at src/tetron_I.v:69.17-69.34.
Warning: wire '\blk4_voffset' is assigned in a block at src/tetron_I.v:70.17-70.34.
Warning: wire '\blk4_hoffset' is assigned in a block at src/tetron_I.v:71.17-71.34.
Successfully finished Verilog frontend.

-- Parsing `src/top.v' using frontend `verilog' --

18. Executing Verilog-2005 frontend: src/top.v
Parsing Verilog input from `src/top.v' to AST representation.
Generating RTLIL representation for module `\top'.
Successfully finished Verilog frontend.

-- Parsing `src/gmanager.v' using frontend `verilog' --

19. Executing Verilog-2005 frontend: src/gmanager.v
Parsing Verilog input from `src/gmanager.v' to AST representation.
Generating RTLIL representation for module `\gmanager'.
Successfully finished Verilog frontend.

-- Parsing `src/shader.v' using frontend `verilog' --

20. Executing Verilog-2005 frontend: src/shader.v
Parsing Verilog input from `src/shader.v' to AST representation.
Generating RTLIL representation for module `\shader'.
Successfully finished Verilog frontend.

-- Parsing `src/mod24.v' using frontend `verilog' --

21. Executing Verilog-2005 frontend: src/mod24.v
Parsing Verilog input from `src/mod24.v' to AST representation.
Generating RTLIL representation for module `\blknum_horizontal'.
Generating RTLIL representation for module `\offsetmap'.
Generating RTLIL representation for module `\blkoffset_horizontal'.
Successfully finished Verilog frontend.

-- Parsing `src/color_lut.v' using frontend `verilog' --

22. Executing Verilog-2005 frontend: src/color_lut.v
Parsing Verilog input from `src/color_lut.v' to AST representation.
Generating RTLIL representation for module `\color_lut'.
Successfully finished Verilog frontend.

-- Parsing `src/blockmemory.v' using frontend `verilog' --

23. Executing Verilog-2005 frontend: src/blockmemory.v
Parsing Verilog input from `src/blockmemory.v' to AST representation.
Generating RTLIL representation for module `\blkmemory'.
Successfully finished Verilog frontend.

-- Running command `synth_ice40 -top top -json fpga/vga_tetris.json' --

24. Executing SYNTH_ICE40 pass.

24.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/cells_sim.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\SB_IO'.
Generating RTLIL representation for module `\SB_GB_IO'.
Generating RTLIL representation for module `\SB_GB'.
Generating RTLIL representation for module `\SB_LUT4'.
Generating RTLIL representation for module `\SB_CARRY'.
Generating RTLIL representation for module `\SB_DFF'.
Generating RTLIL representation for module `\SB_DFFE'.
Generating RTLIL representation for module `\SB_DFFSR'.
Generating RTLIL representation for module `\SB_DFFR'.
Generating RTLIL representation for module `\SB_DFFSS'.
Generating RTLIL representation for module `\SB_DFFS'.
Generating RTLIL representation for module `\SB_DFFESR'.
Generating RTLIL representation for module `\SB_DFFER'.
Generating RTLIL representation for module `\SB_DFFESS'.
Generating RTLIL representation for module `\SB_DFFES'.
Generating RTLIL representation for module `\SB_DFFN'.
Generating RTLIL representation for module `\SB_DFFNE'.
Generating RTLIL representation for module `\SB_DFFNSR'.
Generating RTLIL representation for module `\SB_DFFNR'.
Generating RTLIL representation for module `\SB_DFFNSS'.
Generating RTLIL representation for module `\SB_DFFNS'.
Generating RTLIL representation for module `\SB_DFFNESR'.
Generating RTLIL representation for module `\SB_DFFNER'.
Generating RTLIL representation for module `\SB_DFFNESS'.
Generating RTLIL representation for module `\SB_DFFNES'.
Generating RTLIL representation for module `\SB_RAM40_4K'.
Generating RTLIL representation for module `\SB_RAM40_4KNR'.
Generating RTLIL representation for module `\SB_RAM40_4KNW'.
Generating RTLIL representation for module `\SB_RAM40_4KNRNW'.
Generating RTLIL representation for module `\ICESTORM_LC'.
Generating RTLIL representation for module `\SB_PLL40_CORE'.
Generating RTLIL representation for module `\SB_PLL40_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2_PAD'.
Generating RTLIL representation for module `\SB_PLL40_2F_CORE'.
Generating RTLIL representation for module `\SB_PLL40_2F_PAD'.
Generating RTLIL representation for module `\SB_WARMBOOT'.
Generating RTLIL representation for module `\SB_SPRAM256KA'.
Generating RTLIL representation for module `\SB_HFOSC'.
Generating RTLIL representation for module `\SB_LFOSC'.
Generating RTLIL representation for module `\SB_RGBA_DRV'.
Generating RTLIL representation for module `\SB_LED_DRV_CUR'.
Generating RTLIL representation for module `\SB_RGB_DRV'.
Generating RTLIL representation for module `\SB_I2C'.
Generating RTLIL representation for module `\SB_SPI'.
Generating RTLIL representation for module `\SB_LEDDA_IP'.
Generating RTLIL representation for module `\SB_FILTER_50NS'.
Generating RTLIL representation for module `\SB_IO_I3C'.
Generating RTLIL representation for module `\SB_IO_OD'.
Generating RTLIL representation for module `\SB_MAC16'.
Generating RTLIL representation for module `\ICESTORM_RAM'.
Successfully finished Verilog frontend.

24.2. Executing HIERARCHY pass (managing design hierarchy).

24.2.1. Analyzing design hierarchy..
Top module:  \top
Used module:     \VGAcore
Used module:     \gmanager
Used module:         \color_lut
Used module:         \shader
Used module:         \blkoffset_horizontal
Used module:             \offsetmap
Used module:         \blknum_horizontal
Used module:     \scoredisplay
Used module:         \score_digit
Used module:     \topbar_display
Used module:     \screen_manager
Used module:     \cellstorage
Used module:         \tetron_T_shaper
Used module:         \tetron_Lb_shaper
Used module:         \tetron_La_shaper
Used module:         \tetron_O_shaper
Used module:         \tetron_I_shaper
Used module:     \blkmemory
Used module:         \memory
Used module:             \memcell_row
Used module:                 \memcell
Used module:         \shifter
Used module:     \vga_pll
Used module:     \timer
Reprocessing module cellstorage because instantiated module tetron_I_shaper has become available.
Generating RTLIL representation for module `\cellstorage'.
Warning: reg '\P1blk_v' is assigned in a continuous assignment at src/volatile_cell_storage.v:54.12-54.127.
Warning: reg '\P2blk_v' is assigned in a continuous assignment at src/volatile_cell_storage.v:55.12-55.127.
Warning: reg '\P3blk_v' is assigned in a continuous assignment at src/volatile_cell_storage.v:56.12-56.127.
Warning: reg '\P4blk_v' is assigned in a continuous assignment at src/volatile_cell_storage.v:57.12-57.127.
Warning: reg '\P1blk_h' is assigned in a continuous assignment at src/volatile_cell_storage.v:58.12-58.127.
Warning: reg '\P2blk_h' is assigned in a continuous assignment at src/volatile_cell_storage.v:59.12-59.127.
Warning: reg '\P3blk_h' is assigned in a continuous assignment at src/volatile_cell_storage.v:60.12-60.127.
Warning: reg '\P4blk_h' is assigned in a continuous assignment at src/volatile_cell_storage.v:61.12-61.127.

24.2.2. Analyzing design hierarchy..
Top module:  \top
Used module:     \VGAcore
Used module:     \gmanager
Used module:         \color_lut
Used module:         \shader
Used module:         \blkoffset_horizontal
Used module:             \offsetmap
Used module:         \blknum_horizontal
Used module:     \scoredisplay
Used module:         \score_digit
Used module:     \topbar_display
Used module:     \screen_manager
Used module:     \cellstorage
Used module:         \tetron_T_shaper
Used module:         \tetron_Lb_shaper
Used module:         \tetron_La_shaper
Used module:         \tetron_O_shaper
Used module:         \tetron_I_shaper
Used module:     \blkmemory
Used module:         \memory
Used module:             \memcell_row
Used module:                 \memcell
Used module:         \shifter
Used module:     \vga_pll
Used module:     \timer

24.2.3. Analyzing design hierarchy..
Top module:  \top
Used module:     \VGAcore
Used module:     \gmanager
Used module:         \color_lut
Used module:         \shader
Used module:         \blkoffset_horizontal
Used module:             \offsetmap
Used module:         \blknum_horizontal
Used module:     \scoredisplay
Used module:         \score_digit
Used module:     \topbar_display
Used module:     \screen_manager
Used module:     \cellstorage
Used module:         \tetron_T_shaper
Used module:         \tetron_Lb_shaper
Used module:         \tetron_La_shaper
Used module:         \tetron_O_shaper
Used module:         \tetron_I_shaper
Used module:     \blkmemory
Used module:         \memory
Used module:             \memcell_row
Used module:                 \memcell
Used module:         \shifter
Used module:     \vga_pll
Used module:     \timer
Removed 0 unused modules.
Warning: Resizing cell port blkmemory.mem.hitbox_checker_3_y from 5 bits to 6 bits.
Warning: Resizing cell port blkmemory.mem.hitbox_checker_3_x from 5 bits to 6 bits.
Warning: Resizing cell port blkmemory.mem.hitbox_checker_2_y from 5 bits to 6 bits.
Warning: Resizing cell port blkmemory.mem.hitbox_checker_2_x from 5 bits to 6 bits.
Warning: Resizing cell port blkmemory.mem.hitbox_checker_1_y from 5 bits to 6 bits.
Warning: Resizing cell port blkmemory.mem.hitbox_checker_1_x from 5 bits to 6 bits.
Warning: Resizing cell port blkmemory.mem.hitbox_checker_0_y from 5 bits to 6 bits.
Warning: Resizing cell port blkmemory.mem.hitbox_checker_0_x from 5 bits to 6 bits.
Warning: Resizing cell port blkmemory.mem.color_requestor_y from 5 bits to 6 bits.
Warning: Resizing cell port blkmemory.mem.color_requestor_x from 5 bits to 6 bits.
Warning: Resizing cell port gmanager.hh.blkid from 5 bits to 6 bits.
Warning: Resizing cell port top.t.top from 24 bits to 25 bits.
Warning: Resizing cell port scoredisplay.s8.value from 5 bits to 4 bits.
Warning: Resizing cell port scoredisplay.s8.mut_vreadwire from 32 bits to 7 bits.
Warning: Resizing cell port scoredisplay.s8.mut_hreadwire from 32 bits to 7 bits.
Warning: Resizing cell port scoredisplay.s7.value from 5 bits to 4 bits.
Warning: Resizing cell port scoredisplay.s7.mut_vreadwire from 32 bits to 7 bits.
Warning: Resizing cell port scoredisplay.s7.mut_hreadwire from 32 bits to 7 bits.
Warning: Resizing cell port scoredisplay.s6.value from 5 bits to 4 bits.
Warning: Resizing cell port scoredisplay.s6.mut_vreadwire from 32 bits to 7 bits.
Warning: Resizing cell port scoredisplay.s6.mut_hreadwire from 32 bits to 7 bits.
Warning: Resizing cell port scoredisplay.s5.value from 5 bits to 4 bits.
Warning: Resizing cell port scoredisplay.s5.mut_vreadwire from 32 bits to 7 bits.
Warning: Resizing cell port scoredisplay.s5.mut_hreadwire from 32 bits to 7 bits.
Warning: Resizing cell port scoredisplay.s4.value from 5 bits to 4 bits.
Warning: Resizing cell port scoredisplay.s4.mut_vreadwire from 32 bits to 7 bits.
Warning: Resizing cell port scoredisplay.s4.mut_hreadwire from 32 bits to 7 bits.
Warning: Resizing cell port scoredisplay.s3.value from 5 bits to 4 bits.
Warning: Resizing cell port scoredisplay.s3.mut_vreadwire from 32 bits to 7 bits.
Warning: Resizing cell port scoredisplay.s3.mut_hreadwire from 32 bits to 7 bits.
Warning: Resizing cell port scoredisplay.s2.value from 5 bits to 4 bits.
Warning: Resizing cell port scoredisplay.s2.mut_vreadwire from 32 bits to 7 bits.
Warning: Resizing cell port scoredisplay.s2.mut_hreadwire from 32 bits to 7 bits.
Warning: Resizing cell port scoredisplay.s1.value from 5 bits to 4 bits.
Warning: Resizing cell port scoredisplay.s1.mut_vreadwire from 32 bits to 7 bits.
Warning: Resizing cell port scoredisplay.s1.mut_hreadwire from 32 bits to 7 bits.

24.3. Executing PROC pass (convert processes to netlists).

24.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

24.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 9 switch rules as full_case in process $proc$src/volatile_cell_storage.v:127$1871 in module cellstorage.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1386$1646 in module SB_DFFNES.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1328$1639 in module SB_DFFNESS.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1251$1635 in module SB_DFFNER.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1193$1628 in module SB_DFFNESR.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1122$1625 in module SB_DFFNS.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1072$1622 in module SB_DFFNSS.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1001$1619 in module SB_DFFNR.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:951$1616 in module SB_DFFNSR.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:789$1608 in module SB_DFFES.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:731$1601 in module SB_DFFESS.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:654$1597 in module SB_DFFER.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:596$1590 in module SB_DFFESR.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:525$1587 in module SB_DFFS.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:475$1584 in module SB_DFFSS.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:404$1581 in module SB_DFFR.
Marked 1 switch rules as full_case in process $proc$/usr/bin/../share/yosys/ice40/cells_sim.v:354$1578 in module SB_DFFSR.
Marked 9 switch rules as full_case in process $proc$src/blockmemory.v:105$1364 in module blkmemory.
Marked 1 switch rules as full_case in process $proc$src/color_lut.v:8$1343 in module color_lut.
Marked 2 switch rules as full_case in process $proc$src/gmanager.v:69$1111 in module gmanager.
Marked 1 switch rules as full_case in process $proc$src/tetron_I.v:19$1086 in module tetron_I_shaper.
Marked 2 switch rules as full_case in process $proc$src/timer.v:10$931 in module timer.
Marked 1 switch rules as full_case in process $proc$src/vga_core.v:64$915 in module VGAcore.
Marked 2 switch rules as full_case in process $proc$src/meta_memcell.v:22$909 in module memcell.
Marked 1 switch rules as full_case in process $proc$src/tetron_La.v:19$744 in module tetron_La_shaper.
Marked 1 switch rules as full_case in process $proc$src/tetron_Lb.v:19$738 in module tetron_Lb_shaper.
Marked 1 switch rules as full_case in process $proc$src/tetron_O.v:19$736 in module tetron_O_shaper.
Marked 2 switch rules as full_case in process $proc$src/gamespeed_display.v:21$730 in module topbar_display.
Marked 1 switch rules as full_case in process $proc$src/tetron_T.v:19$704 in module tetron_T_shaper.
Marked 10 switch rules as full_case in process $proc$src/scoredisplay.v:22$557 in module scoredisplay.
Removed a total of 0 dead cases.

24.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 27 redundant assignments.
Promoted 114 assignments to connections.

24.3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\SB_DFFNES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1649'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1645'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1638'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1634'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1627'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1624'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1621'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1618'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFNE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1615'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFN.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1613'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1611'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1607'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1600'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1596'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1589'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1586'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1583'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1580'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFFE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1577'.
  Set init value: \Q = 1'0
Found init rule in `\SB_DFF.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1575'.
  Set init value: \Q = 1'0
Found init rule in `\top.$proc$src/top.v:29$1097'.
  Set init value: \resetn_gen = 4'0000

24.3.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \S in `\SB_DFFNES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1386$1646'.
Found async reset \R in `\SB_DFFNER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1251$1635'.
Found async reset \S in `\SB_DFFNS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1122$1625'.
Found async reset \R in `\SB_DFFNR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1001$1619'.
Found async reset \S in `\SB_DFFES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:789$1608'.
Found async reset \R in `\SB_DFFER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:654$1597'.
Found async reset \S in `\SB_DFFS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:525$1587'.
Found async reset \R in `\SB_DFFR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:404$1581'.

24.3.6. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1945'.
Creating decoders for process `\cellstorage.$proc$src/volatile_cell_storage.v:127$1871'.
     1/22: $0\buttdebounceR[25:0]
     2/22: $0\buttdebounceD[25:0]
     3/22: $0\buttdebounceT[25:0]
     4/22: $0\buttdebounceL[25:0]
     5/22: $0\state[7:0]
     6/22: $0\dropcool[5:0]
     7/22: $0\dropit[0:0]
     8/22: $0\process_decline[0:0]
     9/22: $0\process_steal[0:0]
    10/22: $0\postdecline_cool[0:0]
    11/22: $0\cooldown[5:0]
    12/22: $0\movement_available[0:0]
    13/22: $0\tetron_type[3:0]
    14/22: $0\keep_tetron_rotation[2:0]
    15/22: $0\keep_tetron_h[4:0]
    16/22: $0\keep_tetron_v[4:0]
    17/22: $0\tetron_h[4:0]
    18/22: $0\tetron_v[4:0]
    19/22: $0\volatile_blk_color[2:0]
    20/22: $0\movement_intent[0:0]
    21/22: $0\movement_request[0:0]
    22/22: $0\tetron_rotation[2:0]
Creating decoders for process `\SB_DFFNES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1649'.
Creating decoders for process `\SB_DFFNES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1386$1646'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1645'.
Creating decoders for process `\SB_DFFNESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1328$1639'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1638'.
Creating decoders for process `\SB_DFFNER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1251$1635'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1634'.
Creating decoders for process `\SB_DFFNESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1193$1628'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1627'.
Creating decoders for process `\SB_DFFNS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1122$1625'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1624'.
Creating decoders for process `\SB_DFFNSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1072$1622'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1621'.
Creating decoders for process `\SB_DFFNR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1001$1619'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1618'.
Creating decoders for process `\SB_DFFNSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:951$1616'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFNE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1615'.
Creating decoders for process `\SB_DFFNE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:906$1614'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFN.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1613'.
Creating decoders for process `\SB_DFFN.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:868$1612'.
Creating decoders for process `\SB_DFFES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1611'.
Creating decoders for process `\SB_DFFES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:789$1608'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1607'.
Creating decoders for process `\SB_DFFESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:731$1601'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1600'.
Creating decoders for process `\SB_DFFER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:654$1597'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1596'.
Creating decoders for process `\SB_DFFESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:596$1590'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1589'.
Creating decoders for process `\SB_DFFS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:525$1587'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1586'.
Creating decoders for process `\SB_DFFSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:475$1584'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1583'.
Creating decoders for process `\SB_DFFR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:404$1581'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1580'.
Creating decoders for process `\SB_DFFSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:354$1578'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFFE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1577'.
Creating decoders for process `\SB_DFFE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:309$1576'.
     1/1: $0\Q[0:0]
Creating decoders for process `\SB_DFF.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1575'.
Creating decoders for process `\SB_DFF.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:271$1574'.
Creating decoders for process `\blkmemory.$proc$src/blockmemory.v:105$1364'.
     1/17: $0\keep_concurrent_blks[4:0]
     2/17: $0\perq[3:0]
     3/17: $0\resetperiod_state[20:0]
     4/17: $0\resetperiod[0:0]
     5/17: $0\streak_iterator[2:0]
     6/17: $0\streak_cooldown[16:0]
     7/17: $0\stealstatus[3:0]
     8/17: $0\mm_colorsetter_value[2:0]
     9/17: $0\mm_colorsetter_commit[0:0]
    10/17: $0\mm_colosetter_y[5:0]
    11/17: $0\mm_colosetter_x[5:0]
    12/17: $0\proposed_memval[2:0]
    13/17: $0\cooldown[3:0]
    14/17: $0\movement_steal[0:0]
    15/17: $0\movement_commit[0:0]
    16/17: $0\movement_declined[0:0]
    17/17: $0\scorewire[15:0]
Creating decoders for process `\color_lut.$proc$src/color_lut.v:8$1343'.
     1/1: $0\color[11:0]
Creating decoders for process `\blknum_horizontal.$proc$src/mod24.v:0$1193'.
Creating decoders for process `\gmanager.$proc$src/gmanager.v:69$1111'.
     1/4: $2\pixstream[11:0]
     2/4: $2\ipixstream[11:0]
     3/4: $1\ipixstream[11:0]
     4/4: $1\pixstream[11:0]
Creating decoders for process `\top.$proc$src/top.v:29$1097'.
Creating decoders for process `\top.$proc$src/top.v:33$1092'.
Creating decoders for process `\tetron_I_shaper.$proc$src/tetron_I.v:19$1086'.
     1/8: $0\blk4_hoffset[4:0]
     2/8: $0\blk4_voffset[4:0]
     3/8: $0\blk3_hoffset[4:0]
     4/8: $0\blk3_voffset[4:0]
     5/8: $0\blk2_hoffset[4:0]
     6/8: $0\blk2_voffset[4:0]
     7/8: $0\blk1_hoffset[4:0]
     8/8: $0\blk1_voffset[4:0]
Creating decoders for process `\timer.$proc$src/timer.v:10$931'.
     1/2: $0\counter[24:0]
     2/2: $0\trigger[0:0]
Creating decoders for process `\VGAcore.$proc$src/vga_core.v:64$915'.
     1/11: $0\proposed_b[3:0]
     2/11: $0\proposed_g[3:0]
     3/11: $0\proposed_r[3:0]
     4/11: $0\hscan_pos[9:0]
     5/11: $0\v_drawing_pixels[0:0]
     6/11: $0\h_drawing_pixels[0:0]
     7/11: $0\vscan_pos[9:0]
     8/11: $0\v_sync[0:0]
     9/11: $0\h_sync[0:0]
    10/11: $0\vreadwire[9:0]
    11/11: $0\hreadwire[9:0]
Creating decoders for process `\memcell.$proc$src/meta_memcell.v:22$909'.
     1/1: $0\priv_mem[2:0]
Creating decoders for process `\shifter.$proc$src/shifter.v:25$808'.
Creating decoders for process `\tetron_La_shaper.$proc$src/tetron_La.v:19$744'.
     1/8: $0\blk4_hoffset[4:0]
     2/8: $0\blk4_voffset[4:0]
     3/8: $0\blk3_hoffset[4:0]
     4/8: $0\blk3_voffset[4:0]
     5/8: $0\blk2_hoffset[4:0]
     6/8: $0\blk2_voffset[4:0]
     7/8: $0\blk1_hoffset[4:0]
     8/8: $0\blk1_voffset[4:0]
Creating decoders for process `\tetron_Lb_shaper.$proc$src/tetron_Lb.v:19$738'.
     1/8: $0\blk4_hoffset[4:0]
     2/8: $0\blk4_voffset[4:0]
     3/8: $0\blk3_hoffset[4:0]
     4/8: $0\blk3_voffset[4:0]
     5/8: $0\blk2_hoffset[4:0]
     6/8: $0\blk2_voffset[4:0]
     7/8: $0\blk1_hoffset[4:0]
     8/8: $0\blk1_voffset[4:0]
Creating decoders for process `\tetron_O_shaper.$proc$src/tetron_O.v:19$736'.
     1/8: $0\blk4_hoffset[4:0]
     2/8: $0\blk4_voffset[4:0]
     3/8: $0\blk3_hoffset[4:0]
     4/8: $0\blk3_voffset[4:0]
     5/8: $0\blk2_hoffset[4:0]
     6/8: $0\blk2_voffset[4:0]
     7/8: $0\blk1_hoffset[4:0]
     8/8: $0\blk1_voffset[4:0]
Creating decoders for process `\topbar_display.$proc$src/gamespeed_display.v:21$730'.
     1/2: $0\state[3:0]
     2/2: $0\gamespeed[23:0]
Creating decoders for process `\tetron_T_shaper.$proc$src/tetron_T.v:19$704'.
     1/8: $0\blk4_hoffset[4:0]
     2/8: $0\blk4_voffset[4:0]
     3/8: $0\blk3_hoffset[4:0]
     4/8: $0\blk3_voffset[4:0]
     5/8: $0\blk2_hoffset[4:0]
     6/8: $0\blk2_voffset[4:0]
     7/8: $0\blk1_hoffset[4:0]
     8/8: $0\blk1_voffset[4:0]
Creating decoders for process `\scoredisplay.$proc$src/scoredisplay.v:22$557'.
     1/17: $0\valused[7:0] [1]
     2/17: $0\valused[7:0] [0]
     3/17: $0\valused[7:0] [2]
     4/17: $0\valused[7:0] [3]
     5/17: $0\valused[7:0] [4]
     6/17: $0\valused[7:0] [5]
     7/17: $0\valused[7:0] [6]
     8/17: $0\valused[7:0] [7]
     9/17: $0\values[6][4:0]
    10/17: $0\values[5][4:0]
    11/17: $0\values[4][4:0]
    12/17: $0\values[3][4:0]
    13/17: $0\values[2][4:0]
    14/17: $0\values[1][4:0]
    15/17: $0\values[0][4:0]
    16/17: $0\dumpvar[20:0]
    17/17: $0\values[7][4:0]

24.3.7. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\cellstorage.\itetron_blk_h[0]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1945'.
No latch inferred for signal `\cellstorage.\itetron_blk_h[1]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1945'.
No latch inferred for signal `\cellstorage.\itetron_blk_h[2]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1945'.
No latch inferred for signal `\cellstorage.\itetron_blk_h[3]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1945'.
No latch inferred for signal `\cellstorage.\itetron_blk_v[0]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1945'.
No latch inferred for signal `\cellstorage.\itetron_blk_v[1]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1945'.
No latch inferred for signal `\cellstorage.\itetron_blk_v[2]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1945'.
No latch inferred for signal `\cellstorage.\itetron_blk_v[3]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1945'.
No latch inferred for signal `\cellstorage.\otetron_blk_h[0]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1945'.
No latch inferred for signal `\cellstorage.\otetron_blk_h[1]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1945'.
No latch inferred for signal `\cellstorage.\otetron_blk_h[2]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1945'.
No latch inferred for signal `\cellstorage.\otetron_blk_h[3]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1945'.
No latch inferred for signal `\cellstorage.\otetron_blk_v[0]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1945'.
No latch inferred for signal `\cellstorage.\otetron_blk_v[1]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1945'.
No latch inferred for signal `\cellstorage.\otetron_blk_v[2]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1945'.
No latch inferred for signal `\cellstorage.\otetron_blk_v[3]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1945'.
No latch inferred for signal `\cellstorage.\latetron_blk_h[0]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1945'.
No latch inferred for signal `\cellstorage.\latetron_blk_h[1]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1945'.
No latch inferred for signal `\cellstorage.\latetron_blk_h[2]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1945'.
No latch inferred for signal `\cellstorage.\latetron_blk_h[3]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1945'.
No latch inferred for signal `\cellstorage.\latetron_blk_v[0]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1945'.
No latch inferred for signal `\cellstorage.\latetron_blk_v[1]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1945'.
No latch inferred for signal `\cellstorage.\latetron_blk_v[2]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1945'.
No latch inferred for signal `\cellstorage.\latetron_blk_v[3]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1945'.
No latch inferred for signal `\cellstorage.\lbtetron_blk_h[0]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1945'.
No latch inferred for signal `\cellstorage.\lbtetron_blk_h[1]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1945'.
No latch inferred for signal `\cellstorage.\lbtetron_blk_h[2]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1945'.
No latch inferred for signal `\cellstorage.\lbtetron_blk_h[3]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1945'.
No latch inferred for signal `\cellstorage.\lbtetron_blk_v[0]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1945'.
No latch inferred for signal `\cellstorage.\lbtetron_blk_v[1]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1945'.
No latch inferred for signal `\cellstorage.\lbtetron_blk_v[2]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1945'.
No latch inferred for signal `\cellstorage.\lbtetron_blk_v[3]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1945'.
No latch inferred for signal `\cellstorage.\ttetron_blk_h[0]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1945'.
No latch inferred for signal `\cellstorage.\ttetron_blk_h[1]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1945'.
No latch inferred for signal `\cellstorage.\ttetron_blk_h[2]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1945'.
No latch inferred for signal `\cellstorage.\ttetron_blk_h[3]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1945'.
No latch inferred for signal `\cellstorage.\ttetron_blk_v[0]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1945'.
No latch inferred for signal `\cellstorage.\ttetron_blk_v[1]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1945'.
No latch inferred for signal `\cellstorage.\ttetron_blk_v[2]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1945'.
No latch inferred for signal `\cellstorage.\ttetron_blk_v[3]' from process `\cellstorage.$proc$src/volatile_cell_storage.v:0$1945'.
No latch inferred for signal `\color_lut.\color' from process `\color_lut.$proc$src/color_lut.v:8$1343'.
No latch inferred for signal `\blknum_horizontal.\locators[0]' from process `\blknum_horizontal.$proc$src/mod24.v:0$1193'.
No latch inferred for signal `\blknum_horizontal.\locators[1]' from process `\blknum_horizontal.$proc$src/mod24.v:0$1193'.
No latch inferred for signal `\blknum_horizontal.\locators[2]' from process `\blknum_horizontal.$proc$src/mod24.v:0$1193'.
No latch inferred for signal `\blknum_horizontal.\locators[3]' from process `\blknum_horizontal.$proc$src/mod24.v:0$1193'.
No latch inferred for signal `\blknum_horizontal.\locators[4]' from process `\blknum_horizontal.$proc$src/mod24.v:0$1193'.
No latch inferred for signal `\blknum_horizontal.\locators[5]' from process `\blknum_horizontal.$proc$src/mod24.v:0$1193'.
No latch inferred for signal `\blknum_horizontal.\locators[6]' from process `\blknum_horizontal.$proc$src/mod24.v:0$1193'.
No latch inferred for signal `\blknum_horizontal.\locators[7]' from process `\blknum_horizontal.$proc$src/mod24.v:0$1193'.
No latch inferred for signal `\blknum_horizontal.\locators[8]' from process `\blknum_horizontal.$proc$src/mod24.v:0$1193'.
No latch inferred for signal `\blknum_horizontal.\locators[9]' from process `\blknum_horizontal.$proc$src/mod24.v:0$1193'.
No latch inferred for signal `\blknum_horizontal.\locators[10]' from process `\blknum_horizontal.$proc$src/mod24.v:0$1193'.
No latch inferred for signal `\blknum_horizontal.\locators[11]' from process `\blknum_horizontal.$proc$src/mod24.v:0$1193'.
No latch inferred for signal `\blknum_horizontal.\locators[12]' from process `\blknum_horizontal.$proc$src/mod24.v:0$1193'.
No latch inferred for signal `\blknum_horizontal.\locators[13]' from process `\blknum_horizontal.$proc$src/mod24.v:0$1193'.
No latch inferred for signal `\blknum_horizontal.\locators[14]' from process `\blknum_horizontal.$proc$src/mod24.v:0$1193'.
No latch inferred for signal `\blknum_horizontal.\locators[15]' from process `\blknum_horizontal.$proc$src/mod24.v:0$1193'.
No latch inferred for signal `\blknum_horizontal.\locators[16]' from process `\blknum_horizontal.$proc$src/mod24.v:0$1193'.
No latch inferred for signal `\blknum_horizontal.\locators[17]' from process `\blknum_horizontal.$proc$src/mod24.v:0$1193'.
No latch inferred for signal `\blknum_horizontal.\locators[18]' from process `\blknum_horizontal.$proc$src/mod24.v:0$1193'.
No latch inferred for signal `\blknum_horizontal.\locators[19]' from process `\blknum_horizontal.$proc$src/mod24.v:0$1193'.
No latch inferred for signal `\blknum_horizontal.\locators[20]' from process `\blknum_horizontal.$proc$src/mod24.v:0$1193'.
No latch inferred for signal `\blknum_horizontal.\locators[21]' from process `\blknum_horizontal.$proc$src/mod24.v:0$1193'.
No latch inferred for signal `\blknum_horizontal.\locators[22]' from process `\blknum_horizontal.$proc$src/mod24.v:0$1193'.
No latch inferred for signal `\blknum_horizontal.\locators[23]' from process `\blknum_horizontal.$proc$src/mod24.v:0$1193'.

24.3.8. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\cellstorage.\tetron_rotation' using process `\cellstorage.$proc$src/volatile_cell_storage.v:127$1871'.
  created $dff cell `$procdff$3489' with positive edge clock.
Creating register for signal `\cellstorage.\state' using process `\cellstorage.$proc$src/volatile_cell_storage.v:127$1871'.
  created $dff cell `$procdff$3490' with positive edge clock.
Creating register for signal `\cellstorage.\movement_request' using process `\cellstorage.$proc$src/volatile_cell_storage.v:127$1871'.
  created $dff cell `$procdff$3491' with positive edge clock.
Creating register for signal `\cellstorage.\movement_intent' using process `\cellstorage.$proc$src/volatile_cell_storage.v:127$1871'.
  created $dff cell `$procdff$3492' with positive edge clock.
Creating register for signal `\cellstorage.\volatile_blk_color' using process `\cellstorage.$proc$src/volatile_cell_storage.v:127$1871'.
  created $dff cell `$procdff$3493' with positive edge clock.
Creating register for signal `\cellstorage.\tetron_v' using process `\cellstorage.$proc$src/volatile_cell_storage.v:127$1871'.
  created $dff cell `$procdff$3494' with positive edge clock.
Creating register for signal `\cellstorage.\tetron_h' using process `\cellstorage.$proc$src/volatile_cell_storage.v:127$1871'.
  created $dff cell `$procdff$3495' with positive edge clock.
Creating register for signal `\cellstorage.\keep_tetron_v' using process `\cellstorage.$proc$src/volatile_cell_storage.v:127$1871'.
  created $dff cell `$procdff$3496' with positive edge clock.
Creating register for signal `\cellstorage.\keep_tetron_h' using process `\cellstorage.$proc$src/volatile_cell_storage.v:127$1871'.
  created $dff cell `$procdff$3497' with positive edge clock.
Creating register for signal `\cellstorage.\keep_tetron_rotation' using process `\cellstorage.$proc$src/volatile_cell_storage.v:127$1871'.
  created $dff cell `$procdff$3498' with positive edge clock.
Creating register for signal `\cellstorage.\tetron_type' using process `\cellstorage.$proc$src/volatile_cell_storage.v:127$1871'.
  created $dff cell `$procdff$3499' with positive edge clock.
Creating register for signal `\cellstorage.\movement_available' using process `\cellstorage.$proc$src/volatile_cell_storage.v:127$1871'.
  created $dff cell `$procdff$3500' with positive edge clock.
Creating register for signal `\cellstorage.\cooldown' using process `\cellstorage.$proc$src/volatile_cell_storage.v:127$1871'.
  created $dff cell `$procdff$3501' with positive edge clock.
Creating register for signal `\cellstorage.\postdecline_cool' using process `\cellstorage.$proc$src/volatile_cell_storage.v:127$1871'.
  created $dff cell `$procdff$3502' with positive edge clock.
Creating register for signal `\cellstorage.\process_steal' using process `\cellstorage.$proc$src/volatile_cell_storage.v:127$1871'.
  created $dff cell `$procdff$3503' with positive edge clock.
Creating register for signal `\cellstorage.\buttdebounceL' using process `\cellstorage.$proc$src/volatile_cell_storage.v:127$1871'.
  created $dff cell `$procdff$3504' with positive edge clock.
Creating register for signal `\cellstorage.\buttdebounceR' using process `\cellstorage.$proc$src/volatile_cell_storage.v:127$1871'.
  created $dff cell `$procdff$3505' with positive edge clock.
Creating register for signal `\cellstorage.\buttdebounceT' using process `\cellstorage.$proc$src/volatile_cell_storage.v:127$1871'.
  created $dff cell `$procdff$3506' with positive edge clock.
Creating register for signal `\cellstorage.\buttdebounceD' using process `\cellstorage.$proc$src/volatile_cell_storage.v:127$1871'.
  created $dff cell `$procdff$3507' with positive edge clock.
Creating register for signal `\cellstorage.\process_decline' using process `\cellstorage.$proc$src/volatile_cell_storage.v:127$1871'.
  created $dff cell `$procdff$3508' with positive edge clock.
Creating register for signal `\cellstorage.\dropit' using process `\cellstorage.$proc$src/volatile_cell_storage.v:127$1871'.
  created $dff cell `$procdff$3509' with positive edge clock.
Creating register for signal `\cellstorage.\dropcool' using process `\cellstorage.$proc$src/volatile_cell_storage.v:127$1871'.
  created $dff cell `$procdff$3510' with positive edge clock.
Creating register for signal `\SB_DFFNES.\Q' using process `\SB_DFFNES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1386$1646'.
  created $adff cell `$procdff$3511' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESS.\Q' using process `\SB_DFFNESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1328$1639'.
  created $dff cell `$procdff$3512' with negative edge clock.
Creating register for signal `\SB_DFFNER.\Q' using process `\SB_DFFNER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1251$1635'.
  created $adff cell `$procdff$3513' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNESR.\Q' using process `\SB_DFFNESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1193$1628'.
  created $dff cell `$procdff$3514' with negative edge clock.
Creating register for signal `\SB_DFFNS.\Q' using process `\SB_DFFNS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1122$1625'.
  created $adff cell `$procdff$3515' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSS.\Q' using process `\SB_DFFNSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1072$1622'.
  created $dff cell `$procdff$3516' with negative edge clock.
Creating register for signal `\SB_DFFNR.\Q' using process `\SB_DFFNR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1001$1619'.
  created $adff cell `$procdff$3517' with negative edge clock and positive level reset.
Creating register for signal `\SB_DFFNSR.\Q' using process `\SB_DFFNSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:951$1616'.
  created $dff cell `$procdff$3518' with negative edge clock.
Creating register for signal `\SB_DFFNE.\Q' using process `\SB_DFFNE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:906$1614'.
  created $dff cell `$procdff$3519' with negative edge clock.
Creating register for signal `\SB_DFFN.\Q' using process `\SB_DFFN.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:868$1612'.
  created $dff cell `$procdff$3520' with negative edge clock.
Creating register for signal `\SB_DFFES.\Q' using process `\SB_DFFES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:789$1608'.
  created $adff cell `$procdff$3521' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESS.\Q' using process `\SB_DFFESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:731$1601'.
  created $dff cell `$procdff$3522' with positive edge clock.
Creating register for signal `\SB_DFFER.\Q' using process `\SB_DFFER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:654$1597'.
  created $adff cell `$procdff$3523' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFESR.\Q' using process `\SB_DFFESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:596$1590'.
  created $dff cell `$procdff$3524' with positive edge clock.
Creating register for signal `\SB_DFFS.\Q' using process `\SB_DFFS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:525$1587'.
  created $adff cell `$procdff$3525' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSS.\Q' using process `\SB_DFFSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:475$1584'.
  created $dff cell `$procdff$3526' with positive edge clock.
Creating register for signal `\SB_DFFR.\Q' using process `\SB_DFFR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:404$1581'.
  created $adff cell `$procdff$3527' with positive edge clock and positive level reset.
Creating register for signal `\SB_DFFSR.\Q' using process `\SB_DFFSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:354$1578'.
  created $dff cell `$procdff$3528' with positive edge clock.
Creating register for signal `\SB_DFFE.\Q' using process `\SB_DFFE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:309$1576'.
  created $dff cell `$procdff$3529' with positive edge clock.
Creating register for signal `\SB_DFF.\Q' using process `\SB_DFF.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:271$1574'.
  created $dff cell `$procdff$3530' with positive edge clock.
Creating register for signal `\blkmemory.\scorewire' using process `\blkmemory.$proc$src/blockmemory.v:105$1364'.
  created $dff cell `$procdff$3531' with positive edge clock.
Creating register for signal `\blkmemory.\movement_declined' using process `\blkmemory.$proc$src/blockmemory.v:105$1364'.
  created $dff cell `$procdff$3532' with positive edge clock.
Creating register for signal `\blkmemory.\movement_commit' using process `\blkmemory.$proc$src/blockmemory.v:105$1364'.
  created $dff cell `$procdff$3533' with positive edge clock.
Creating register for signal `\blkmemory.\movement_steal' using process `\blkmemory.$proc$src/blockmemory.v:105$1364'.
  created $dff cell `$procdff$3534' with positive edge clock.
Creating register for signal `\blkmemory.\cooldown' using process `\blkmemory.$proc$src/blockmemory.v:105$1364'.
  created $dff cell `$procdff$3535' with positive edge clock.
Creating register for signal `\blkmemory.\proposed_memval' using process `\blkmemory.$proc$src/blockmemory.v:105$1364'.
  created $dff cell `$procdff$3536' with positive edge clock.
Creating register for signal `\blkmemory.\mm_colosetter_x' using process `\blkmemory.$proc$src/blockmemory.v:105$1364'.
  created $dff cell `$procdff$3537' with positive edge clock.
Creating register for signal `\blkmemory.\mm_colosetter_y' using process `\blkmemory.$proc$src/blockmemory.v:105$1364'.
  created $dff cell `$procdff$3538' with positive edge clock.
Creating register for signal `\blkmemory.\mm_colorsetter_commit' using process `\blkmemory.$proc$src/blockmemory.v:105$1364'.
  created $dff cell `$procdff$3539' with positive edge clock.
Creating register for signal `\blkmemory.\mm_colorsetter_value' using process `\blkmemory.$proc$src/blockmemory.v:105$1364'.
  created $dff cell `$procdff$3540' with positive edge clock.
Creating register for signal `\blkmemory.\stealstatus' using process `\blkmemory.$proc$src/blockmemory.v:105$1364'.
  created $dff cell `$procdff$3541' with positive edge clock.
Creating register for signal `\blkmemory.\streak_cooldown' using process `\blkmemory.$proc$src/blockmemory.v:105$1364'.
  created $dff cell `$procdff$3542' with positive edge clock.
Creating register for signal `\blkmemory.\streak_iterator' using process `\blkmemory.$proc$src/blockmemory.v:105$1364'.
  created $dff cell `$procdff$3543' with positive edge clock.
Creating register for signal `\blkmemory.\resetperiod' using process `\blkmemory.$proc$src/blockmemory.v:105$1364'.
  created $dff cell `$procdff$3544' with positive edge clock.
Creating register for signal `\blkmemory.\resetperiod_state' using process `\blkmemory.$proc$src/blockmemory.v:105$1364'.
  created $dff cell `$procdff$3545' with positive edge clock.
Creating register for signal `\blkmemory.\perq' using process `\blkmemory.$proc$src/blockmemory.v:105$1364'.
  created $dff cell `$procdff$3546' with positive edge clock.
Creating register for signal `\blkmemory.\keep_concurrent_blks' using process `\blkmemory.$proc$src/blockmemory.v:105$1364'.
  created $dff cell `$procdff$3547' with positive edge clock.
Creating register for signal `\gmanager.\pixstream' using process `\gmanager.$proc$src/gmanager.v:69$1111'.
  created $dff cell `$procdff$3548' with positive edge clock.
Creating register for signal `\gmanager.\ipixstream' using process `\gmanager.$proc$src/gmanager.v:69$1111'.
  created $dff cell `$procdff$3549' with positive edge clock.
Creating register for signal `\top.\reset' using process `\top.$proc$src/top.v:33$1092'.
  created $dff cell `$procdff$3550' with positive edge clock.
Creating register for signal `\top.\resetn_gen' using process `\top.$proc$src/top.v:33$1092'.
  created $dff cell `$procdff$3551' with positive edge clock.
Creating register for signal `\tetron_I_shaper.\blk1_voffset' using process `\tetron_I_shaper.$proc$src/tetron_I.v:19$1086'.
  created $dff cell `$procdff$3552' with positive edge clock.
Creating register for signal `\tetron_I_shaper.\blk1_hoffset' using process `\tetron_I_shaper.$proc$src/tetron_I.v:19$1086'.
  created $dff cell `$procdff$3553' with positive edge clock.
Creating register for signal `\tetron_I_shaper.\blk2_voffset' using process `\tetron_I_shaper.$proc$src/tetron_I.v:19$1086'.
  created $dff cell `$procdff$3554' with positive edge clock.
Creating register for signal `\tetron_I_shaper.\blk2_hoffset' using process `\tetron_I_shaper.$proc$src/tetron_I.v:19$1086'.
  created $dff cell `$procdff$3555' with positive edge clock.
Creating register for signal `\tetron_I_shaper.\blk3_voffset' using process `\tetron_I_shaper.$proc$src/tetron_I.v:19$1086'.
  created $dff cell `$procdff$3556' with positive edge clock.
Creating register for signal `\tetron_I_shaper.\blk3_hoffset' using process `\tetron_I_shaper.$proc$src/tetron_I.v:19$1086'.
  created $dff cell `$procdff$3557' with positive edge clock.
Creating register for signal `\tetron_I_shaper.\blk4_voffset' using process `\tetron_I_shaper.$proc$src/tetron_I.v:19$1086'.
  created $dff cell `$procdff$3558' with positive edge clock.
Creating register for signal `\tetron_I_shaper.\blk4_hoffset' using process `\tetron_I_shaper.$proc$src/tetron_I.v:19$1086'.
  created $dff cell `$procdff$3559' with positive edge clock.
Creating register for signal `\timer.\trigger' using process `\timer.$proc$src/timer.v:10$931'.
  created $dff cell `$procdff$3560' with positive edge clock.
Creating register for signal `\timer.\counter' using process `\timer.$proc$src/timer.v:10$931'.
  created $dff cell `$procdff$3561' with positive edge clock.
Creating register for signal `\VGAcore.\hreadwire' using process `\VGAcore.$proc$src/vga_core.v:64$915'.
  created $dff cell `$procdff$3562' with positive edge clock.
Creating register for signal `\VGAcore.\vreadwire' using process `\VGAcore.$proc$src/vga_core.v:64$915'.
  created $dff cell `$procdff$3563' with positive edge clock.
Creating register for signal `\VGAcore.\h_sync' using process `\VGAcore.$proc$src/vga_core.v:64$915'.
  created $dff cell `$procdff$3564' with positive edge clock.
Creating register for signal `\VGAcore.\v_sync' using process `\VGAcore.$proc$src/vga_core.v:64$915'.
  created $dff cell `$procdff$3565' with positive edge clock.
Creating register for signal `\VGAcore.\hscan_pos' using process `\VGAcore.$proc$src/vga_core.v:64$915'.
  created $dff cell `$procdff$3566' with positive edge clock.
Creating register for signal `\VGAcore.\vscan_pos' using process `\VGAcore.$proc$src/vga_core.v:64$915'.
  created $dff cell `$procdff$3567' with positive edge clock.
Creating register for signal `\VGAcore.\proposed_r' using process `\VGAcore.$proc$src/vga_core.v:64$915'.
  created $dff cell `$procdff$3568' with positive edge clock.
Creating register for signal `\VGAcore.\proposed_b' using process `\VGAcore.$proc$src/vga_core.v:64$915'.
  created $dff cell `$procdff$3569' with positive edge clock.
Creating register for signal `\VGAcore.\proposed_g' using process `\VGAcore.$proc$src/vga_core.v:64$915'.
  created $dff cell `$procdff$3570' with positive edge clock.
Creating register for signal `\VGAcore.\h_drawing_pixels' using process `\VGAcore.$proc$src/vga_core.v:64$915'.
  created $dff cell `$procdff$3571' with positive edge clock.
Creating register for signal `\VGAcore.\v_drawing_pixels' using process `\VGAcore.$proc$src/vga_core.v:64$915'.
  created $dff cell `$procdff$3572' with positive edge clock.
Creating register for signal `\memcell.\priv_mem' using process `\memcell.$proc$src/meta_memcell.v:22$909'.
  created $dff cell `$procdff$3573' with positive edge clock.
Creating register for signal `\shifter.\rowshift' using process `\shifter.$proc$src/shifter.v:25$808'.
  created $dff cell `$procdff$3574' with positive edge clock.
Creating register for signal `\tetron_La_shaper.\blk1_voffset' using process `\tetron_La_shaper.$proc$src/tetron_La.v:19$744'.
  created $dff cell `$procdff$3575' with positive edge clock.
Creating register for signal `\tetron_La_shaper.\blk1_hoffset' using process `\tetron_La_shaper.$proc$src/tetron_La.v:19$744'.
  created $dff cell `$procdff$3576' with positive edge clock.
Creating register for signal `\tetron_La_shaper.\blk2_voffset' using process `\tetron_La_shaper.$proc$src/tetron_La.v:19$744'.
  created $dff cell `$procdff$3577' with positive edge clock.
Creating register for signal `\tetron_La_shaper.\blk2_hoffset' using process `\tetron_La_shaper.$proc$src/tetron_La.v:19$744'.
  created $dff cell `$procdff$3578' with positive edge clock.
Creating register for signal `\tetron_La_shaper.\blk3_voffset' using process `\tetron_La_shaper.$proc$src/tetron_La.v:19$744'.
  created $dff cell `$procdff$3579' with positive edge clock.
Creating register for signal `\tetron_La_shaper.\blk3_hoffset' using process `\tetron_La_shaper.$proc$src/tetron_La.v:19$744'.
  created $dff cell `$procdff$3580' with positive edge clock.
Creating register for signal `\tetron_La_shaper.\blk4_voffset' using process `\tetron_La_shaper.$proc$src/tetron_La.v:19$744'.
  created $dff cell `$procdff$3581' with positive edge clock.
Creating register for signal `\tetron_La_shaper.\blk4_hoffset' using process `\tetron_La_shaper.$proc$src/tetron_La.v:19$744'.
  created $dff cell `$procdff$3582' with positive edge clock.
Creating register for signal `\tetron_Lb_shaper.\blk1_voffset' using process `\tetron_Lb_shaper.$proc$src/tetron_Lb.v:19$738'.
  created $dff cell `$procdff$3583' with positive edge clock.
Creating register for signal `\tetron_Lb_shaper.\blk1_hoffset' using process `\tetron_Lb_shaper.$proc$src/tetron_Lb.v:19$738'.
  created $dff cell `$procdff$3584' with positive edge clock.
Creating register for signal `\tetron_Lb_shaper.\blk2_voffset' using process `\tetron_Lb_shaper.$proc$src/tetron_Lb.v:19$738'.
  created $dff cell `$procdff$3585' with positive edge clock.
Creating register for signal `\tetron_Lb_shaper.\blk2_hoffset' using process `\tetron_Lb_shaper.$proc$src/tetron_Lb.v:19$738'.
  created $dff cell `$procdff$3586' with positive edge clock.
Creating register for signal `\tetron_Lb_shaper.\blk3_voffset' using process `\tetron_Lb_shaper.$proc$src/tetron_Lb.v:19$738'.
  created $dff cell `$procdff$3587' with positive edge clock.
Creating register for signal `\tetron_Lb_shaper.\blk3_hoffset' using process `\tetron_Lb_shaper.$proc$src/tetron_Lb.v:19$738'.
  created $dff cell `$procdff$3588' with positive edge clock.
Creating register for signal `\tetron_Lb_shaper.\blk4_voffset' using process `\tetron_Lb_shaper.$proc$src/tetron_Lb.v:19$738'.
  created $dff cell `$procdff$3589' with positive edge clock.
Creating register for signal `\tetron_Lb_shaper.\blk4_hoffset' using process `\tetron_Lb_shaper.$proc$src/tetron_Lb.v:19$738'.
  created $dff cell `$procdff$3590' with positive edge clock.
Creating register for signal `\tetron_O_shaper.\blk1_voffset' using process `\tetron_O_shaper.$proc$src/tetron_O.v:19$736'.
  created $dff cell `$procdff$3591' with positive edge clock.
Creating register for signal `\tetron_O_shaper.\blk1_hoffset' using process `\tetron_O_shaper.$proc$src/tetron_O.v:19$736'.
  created $dff cell `$procdff$3592' with positive edge clock.
Creating register for signal `\tetron_O_shaper.\blk2_voffset' using process `\tetron_O_shaper.$proc$src/tetron_O.v:19$736'.
  created $dff cell `$procdff$3593' with positive edge clock.
Creating register for signal `\tetron_O_shaper.\blk2_hoffset' using process `\tetron_O_shaper.$proc$src/tetron_O.v:19$736'.
  created $dff cell `$procdff$3594' with positive edge clock.
Creating register for signal `\tetron_O_shaper.\blk3_voffset' using process `\tetron_O_shaper.$proc$src/tetron_O.v:19$736'.
  created $dff cell `$procdff$3595' with positive edge clock.
Creating register for signal `\tetron_O_shaper.\blk3_hoffset' using process `\tetron_O_shaper.$proc$src/tetron_O.v:19$736'.
  created $dff cell `$procdff$3596' with positive edge clock.
Creating register for signal `\tetron_O_shaper.\blk4_voffset' using process `\tetron_O_shaper.$proc$src/tetron_O.v:19$736'.
  created $dff cell `$procdff$3597' with positive edge clock.
Creating register for signal `\tetron_O_shaper.\blk4_hoffset' using process `\tetron_O_shaper.$proc$src/tetron_O.v:19$736'.
  created $dff cell `$procdff$3598' with positive edge clock.
Creating register for signal `\topbar_display.\gamespeed' using process `\topbar_display.$proc$src/gamespeed_display.v:21$730'.
  created $dff cell `$procdff$3599' with positive edge clock.
Creating register for signal `\topbar_display.\state' using process `\topbar_display.$proc$src/gamespeed_display.v:21$730'.
  created $dff cell `$procdff$3600' with positive edge clock.
Creating register for signal `\tetron_T_shaper.\blk1_voffset' using process `\tetron_T_shaper.$proc$src/tetron_T.v:19$704'.
  created $dff cell `$procdff$3601' with positive edge clock.
Creating register for signal `\tetron_T_shaper.\blk1_hoffset' using process `\tetron_T_shaper.$proc$src/tetron_T.v:19$704'.
  created $dff cell `$procdff$3602' with positive edge clock.
Creating register for signal `\tetron_T_shaper.\blk2_voffset' using process `\tetron_T_shaper.$proc$src/tetron_T.v:19$704'.
  created $dff cell `$procdff$3603' with positive edge clock.
Creating register for signal `\tetron_T_shaper.\blk2_hoffset' using process `\tetron_T_shaper.$proc$src/tetron_T.v:19$704'.
  created $dff cell `$procdff$3604' with positive edge clock.
Creating register for signal `\tetron_T_shaper.\blk3_voffset' using process `\tetron_T_shaper.$proc$src/tetron_T.v:19$704'.
  created $dff cell `$procdff$3605' with positive edge clock.
Creating register for signal `\tetron_T_shaper.\blk3_hoffset' using process `\tetron_T_shaper.$proc$src/tetron_T.v:19$704'.
  created $dff cell `$procdff$3606' with positive edge clock.
Creating register for signal `\tetron_T_shaper.\blk4_voffset' using process `\tetron_T_shaper.$proc$src/tetron_T.v:19$704'.
  created $dff cell `$procdff$3607' with positive edge clock.
Creating register for signal `\tetron_T_shaper.\blk4_hoffset' using process `\tetron_T_shaper.$proc$src/tetron_T.v:19$704'.
  created $dff cell `$procdff$3608' with positive edge clock.
Creating register for signal `\scoredisplay.\valused' using process `\scoredisplay.$proc$src/scoredisplay.v:22$557'.
  created $dff cell `$procdff$3609' with positive edge clock.
Creating register for signal `\scoredisplay.\dumpvar' using process `\scoredisplay.$proc$src/scoredisplay.v:22$557'.
  created $dff cell `$procdff$3610' with positive edge clock.
Creating register for signal `\scoredisplay.\values[0]' using process `\scoredisplay.$proc$src/scoredisplay.v:22$557'.
  created $dff cell `$procdff$3611' with positive edge clock.
Creating register for signal `\scoredisplay.\values[1]' using process `\scoredisplay.$proc$src/scoredisplay.v:22$557'.
  created $dff cell `$procdff$3612' with positive edge clock.
Creating register for signal `\scoredisplay.\values[2]' using process `\scoredisplay.$proc$src/scoredisplay.v:22$557'.
  created $dff cell `$procdff$3613' with positive edge clock.
Creating register for signal `\scoredisplay.\values[3]' using process `\scoredisplay.$proc$src/scoredisplay.v:22$557'.
  created $dff cell `$procdff$3614' with positive edge clock.
Creating register for signal `\scoredisplay.\values[4]' using process `\scoredisplay.$proc$src/scoredisplay.v:22$557'.
  created $dff cell `$procdff$3615' with positive edge clock.
Creating register for signal `\scoredisplay.\values[5]' using process `\scoredisplay.$proc$src/scoredisplay.v:22$557'.
  created $dff cell `$procdff$3616' with positive edge clock.
Creating register for signal `\scoredisplay.\values[6]' using process `\scoredisplay.$proc$src/scoredisplay.v:22$557'.
  created $dff cell `$procdff$3617' with positive edge clock.
Creating register for signal `\scoredisplay.\values[7]' using process `\scoredisplay.$proc$src/scoredisplay.v:22$557'.
  created $dff cell `$procdff$3618' with positive edge clock.

24.3.9. Executing PROC_MEMWR pass (convert process memory writes to cells).

24.3.10. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `cellstorage.$proc$src/volatile_cell_storage.v:0$1945'.
Found and cleaned up 16 empty switches in `\cellstorage.$proc$src/volatile_cell_storage.v:127$1871'.
Removing empty process `cellstorage.$proc$src/volatile_cell_storage.v:127$1871'.
Removing empty process `SB_DFFNES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1649'.
Found and cleaned up 1 empty switch in `\SB_DFFNES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1386$1646'.
Removing empty process `SB_DFFNES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1386$1646'.
Removing empty process `SB_DFFNESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1645'.
Found and cleaned up 2 empty switches in `\SB_DFFNESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1328$1639'.
Removing empty process `SB_DFFNESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1328$1639'.
Removing empty process `SB_DFFNER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1638'.
Found and cleaned up 1 empty switch in `\SB_DFFNER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1251$1635'.
Removing empty process `SB_DFFNER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1251$1635'.
Removing empty process `SB_DFFNESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1634'.
Found and cleaned up 2 empty switches in `\SB_DFFNESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1193$1628'.
Removing empty process `SB_DFFNESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1193$1628'.
Removing empty process `SB_DFFNS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1627'.
Removing empty process `SB_DFFNS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1122$1625'.
Removing empty process `SB_DFFNSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1624'.
Found and cleaned up 1 empty switch in `\SB_DFFNSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1072$1622'.
Removing empty process `SB_DFFNSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1072$1622'.
Removing empty process `SB_DFFNR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1621'.
Removing empty process `SB_DFFNR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:1001$1619'.
Removing empty process `SB_DFFNSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1618'.
Found and cleaned up 1 empty switch in `\SB_DFFNSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:951$1616'.
Removing empty process `SB_DFFNSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:951$1616'.
Removing empty process `SB_DFFNE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1615'.
Found and cleaned up 1 empty switch in `\SB_DFFNE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:906$1614'.
Removing empty process `SB_DFFNE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:906$1614'.
Removing empty process `SB_DFFN.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1613'.
Removing empty process `SB_DFFN.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:868$1612'.
Removing empty process `SB_DFFES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1611'.
Found and cleaned up 1 empty switch in `\SB_DFFES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:789$1608'.
Removing empty process `SB_DFFES.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:789$1608'.
Removing empty process `SB_DFFESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1607'.
Found and cleaned up 2 empty switches in `\SB_DFFESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:731$1601'.
Removing empty process `SB_DFFESS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:731$1601'.
Removing empty process `SB_DFFER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1600'.
Found and cleaned up 1 empty switch in `\SB_DFFER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:654$1597'.
Removing empty process `SB_DFFER.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:654$1597'.
Removing empty process `SB_DFFESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1596'.
Found and cleaned up 2 empty switches in `\SB_DFFESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:596$1590'.
Removing empty process `SB_DFFESR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:596$1590'.
Removing empty process `SB_DFFS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1589'.
Removing empty process `SB_DFFS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:525$1587'.
Removing empty process `SB_DFFSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1586'.
Found and cleaned up 1 empty switch in `\SB_DFFSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:475$1584'.
Removing empty process `SB_DFFSS.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:475$1584'.
Removing empty process `SB_DFFR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1583'.
Removing empty process `SB_DFFR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:404$1581'.
Removing empty process `SB_DFFSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1580'.
Found and cleaned up 1 empty switch in `\SB_DFFSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:354$1578'.
Removing empty process `SB_DFFSR.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:354$1578'.
Removing empty process `SB_DFFE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1577'.
Found and cleaned up 1 empty switch in `\SB_DFFE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:309$1576'.
Removing empty process `SB_DFFE.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:309$1576'.
Removing empty process `SB_DFF.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:0$1575'.
Removing empty process `SB_DFF.$proc$/usr/bin/../share/yosys/ice40/cells_sim.v:271$1574'.
Found and cleaned up 25 empty switches in `\blkmemory.$proc$src/blockmemory.v:105$1364'.
Removing empty process `blkmemory.$proc$src/blockmemory.v:105$1364'.
Found and cleaned up 1 empty switch in `\color_lut.$proc$src/color_lut.v:8$1343'.
Removing empty process `color_lut.$proc$src/color_lut.v:8$1343'.
Removing empty process `blknum_horizontal.$proc$src/mod24.v:0$1193'.
Found and cleaned up 3 empty switches in `\gmanager.$proc$src/gmanager.v:69$1111'.
Removing empty process `gmanager.$proc$src/gmanager.v:69$1111'.
Removing empty process `top.$proc$src/top.v:29$1097'.
Removing empty process `top.$proc$src/top.v:33$1092'.
Found and cleaned up 5 empty switches in `\tetron_I_shaper.$proc$src/tetron_I.v:19$1086'.
Removing empty process `tetron_I_shaper.$proc$src/tetron_I.v:19$1086'.
Found and cleaned up 2 empty switches in `\timer.$proc$src/timer.v:10$931'.
Removing empty process `timer.$proc$src/timer.v:10$931'.
Found and cleaned up 3 empty switches in `\VGAcore.$proc$src/vga_core.v:64$915'.
Removing empty process `VGAcore.$proc$src/vga_core.v:64$915'.
Found and cleaned up 3 empty switches in `\memcell.$proc$src/meta_memcell.v:22$909'.
Removing empty process `memcell.$proc$src/meta_memcell.v:22$909'.
Removing empty process `shifter.$proc$src/shifter.v:25$808'.
Found and cleaned up 5 empty switches in `\tetron_La_shaper.$proc$src/tetron_La.v:19$744'.
Removing empty process `tetron_La_shaper.$proc$src/tetron_La.v:19$744'.
Found and cleaned up 5 empty switches in `\tetron_Lb_shaper.$proc$src/tetron_Lb.v:19$738'.
Removing empty process `tetron_Lb_shaper.$proc$src/tetron_Lb.v:19$738'.
Found and cleaned up 1 empty switch in `\tetron_O_shaper.$proc$src/tetron_O.v:19$736'.
Removing empty process `tetron_O_shaper.$proc$src/tetron_O.v:19$736'.
Found and cleaned up 3 empty switches in `\topbar_display.$proc$src/gamespeed_display.v:21$730'.
Removing empty process `topbar_display.$proc$src/gamespeed_display.v:21$730'.
Found and cleaned up 5 empty switches in `\tetron_T_shaper.$proc$src/tetron_T.v:19$704'.
Removing empty process `tetron_T_shaper.$proc$src/tetron_T.v:19$704'.
Found and cleaned up 11 empty switches in `\scoredisplay.$proc$src/scoredisplay.v:22$557'.
Removing empty process `scoredisplay.$proc$src/scoredisplay.v:22$557'.
Cleaned up 106 empty switches.

24.3.11. Executing OPT_EXPR pass (perform const folding).
Optimizing module cellstorage.
<suppressed ~31 debug messages>
Optimizing module blkmemory.
<suppressed ~25 debug messages>
Optimizing module color_lut.
<suppressed ~1 debug messages>
Optimizing module blkoffset_horizontal.
Optimizing module offsetmap.
<suppressed ~1 debug messages>
Optimizing module blknum_horizontal.
<suppressed ~1 debug messages>
Optimizing module shader.
<suppressed ~1 debug messages>
Optimizing module gmanager.
<suppressed ~5 debug messages>
Optimizing module top.
Optimizing module tetron_I_shaper.
<suppressed ~9 debug messages>
Optimizing module vga_pll.
Optimizing module timer.
<suppressed ~2 debug messages>
Optimizing module VGAcore.
<suppressed ~11 debug messages>
Optimizing module memcell.
<suppressed ~2 debug messages>
Optimizing module memcell_row.
<suppressed ~14 debug messages>
Optimizing module shifter.
<suppressed ~23 debug messages>
Optimizing module tetron_La_shaper.
<suppressed ~9 debug messages>
Optimizing module tetron_Lb_shaper.
<suppressed ~9 debug messages>
Optimizing module tetron_O_shaper.
<suppressed ~4 debug messages>
Optimizing module topbar_display.
<suppressed ~6 debug messages>
Optimizing module tetron_T_shaper.
<suppressed ~9 debug messages>
Optimizing module screen_manager.
Optimizing module scoredisplay.
<suppressed ~25 debug messages>
Optimizing module score_digit.
<suppressed ~6 debug messages>
Optimizing module memory.
<suppressed ~48 debug messages>

24.4. Executing FLATTEN pass (flatten design).
Deleting now unused module cellstorage.
Deleting now unused module blkmemory.
Deleting now unused module color_lut.
Deleting now unused module blkoffset_horizontal.
Deleting now unused module offsetmap.
Deleting now unused module blknum_horizontal.
Deleting now unused module shader.
Deleting now unused module gmanager.
Deleting now unused module tetron_I_shaper.
Deleting now unused module vga_pll.
Deleting now unused module timer.
Deleting now unused module VGAcore.
Deleting now unused module memcell.
Deleting now unused module memcell_row.
Deleting now unused module shifter.
Deleting now unused module tetron_La_shaper.
Deleting now unused module tetron_Lb_shaper.
Deleting now unused module tetron_O_shaper.
Deleting now unused module topbar_display.
Deleting now unused module tetron_T_shaper.
Deleting now unused module screen_manager.
Deleting now unused module scoredisplay.
Deleting now unused module score_digit.
Deleting now unused module memory.
<suppressed ~62 debug messages>

24.5. Executing TRIBUF pass.

24.6. Executing DEMINOUT pass (demote inout ports to input or output).

24.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~73 debug messages>

24.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 279 unused cells and 3390 unused wires.
<suppressed ~317 debug messages>

24.9. Executing CHECK pass (checking for obvious problems).
Checking module top...
Warning: Wire top.\led2 is used but has no driver.
Warning: Wire top.\memory.mem.rowfull_stat [21] is used but has no driver.
Warning: Wire top.\memory.mem.rowfull_stat [22] is used but has no driver.
Found and reported 3 problems.

24.10. Executing OPT pass (performing simple optimizations).

24.10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~1 debug messages>

24.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~3594 debug messages>
Removed a total of 1198 cells.

24.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
      Replacing known input bits on port A of cell $flatten\memory.$procmux$2339: \memory.resetperiod -> 1'0
      Replacing known input bits on port A of cell $flatten\memory.$procmux$2337: \memory.resetperiod -> 1'1
      Replacing known input bits on port B of cell $flatten\vcell.$procmux$2005: \vcell.dropit -> 1'1
      Replacing known input bits on port A of cell $flatten\vcell.$procmux$2002: \vcell.dropit -> 1'0
  Analyzing evaluation results.
    dead port 2/2 on $mux $flatten\game_manager.$procmux$2671.
    dead port 2/2 on $mux $flatten\game_manager.$procmux$2674.
    dead port 2/2 on $mux $flatten\game_manager.$procmux$2680.
Removed 3 multiplexer ports.
<suppressed ~867 debug messages>

24.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

24.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~18 debug messages>
Removed a total of 6 cells.

24.10.6. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $flatten\vcell.\oshaper.$procdff$3591 ($dff) from module top.
Setting constant 0-bit at position 1 on $flatten\vcell.\oshaper.$procdff$3591 ($dff) from module top.
Setting constant 0-bit at position 2 on $flatten\vcell.\oshaper.$procdff$3591 ($dff) from module top.
Setting constant 0-bit at position 3 on $flatten\vcell.\oshaper.$procdff$3591 ($dff) from module top.
Setting constant 0-bit at position 4 on $flatten\vcell.\oshaper.$procdff$3591 ($dff) from module top.

24.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 1204 unused wires.
<suppressed ~3 debug messages>

24.10.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~4 debug messages>

24.10.9. Rerunning OPT passes. (Maybe there is more to do..)

24.10.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~864 debug messages>

24.10.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

24.10.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

24.10.13. Executing OPT_DFF pass (perform DFF optimizations).

24.10.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 4 unused wires.
<suppressed ~5 debug messages>

24.10.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

24.10.16. Rerunning OPT passes. (Maybe there is more to do..)

24.10.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~864 debug messages>

24.10.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

24.10.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

24.10.20. Executing OPT_DFF pass (perform DFF optimizations).

24.10.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

24.10.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

24.10.23. Finished OPT passes. (There is nothing left to do.)

24.11. Executing FSM pass (extract and optimize FSM).

24.11.1. Executing FSM_DETECT pass (finding FSMs in design).
Not marking top.game_manager.ipixstream as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.memory.scorewire as FSM state register:
    Users of register don't seem to benefit from recoding.
Found FSM state register top.memory.stealstatus.
Found FSM state register top.memory.streak_iterator.
Not marking top.vcell.ishaper.blk1_hoffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.ishaper.blk1_voffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.ishaper.blk2_hoffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.ishaper.blk2_voffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.ishaper.blk3_hoffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.ishaper.blk3_voffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.ishaper.blk4_hoffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.ishaper.blk4_voffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.lashaper.blk1_hoffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.lashaper.blk1_voffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.lashaper.blk2_hoffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.lashaper.blk2_voffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.lashaper.blk3_hoffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.lashaper.blk3_voffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.lashaper.blk4_hoffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.lashaper.blk4_voffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.lbshaper.blk1_hoffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.lbshaper.blk1_voffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.lbshaper.blk2_hoffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.lbshaper.blk2_voffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.lbshaper.blk3_hoffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.lbshaper.blk3_voffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.lbshaper.blk4_hoffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.lbshaper.blk4_voffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.oshaper.blk2_voffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Found FSM state register top.vcell.tetron_type.
Not marking top.vcell.tshaper.blk1_hoffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.tshaper.blk1_voffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.tshaper.blk2_hoffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.tshaper.blk2_voffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.tshaper.blk3_hoffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.tshaper.blk3_voffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.tshaper.blk4_hoffset as FSM state register:
    Users of register don't seem to benefit from recoding.
Not marking top.vcell.tshaper.blk4_voffset as FSM state register:
    Users of register don't seem to benefit from recoding.

24.11.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\memory.stealstatus' from module `\top'.
  found $dff cell for state register: $flatten\memory.$procdff$3541
  root of input selection tree: $flatten\memory.$0\stealstatus[3:0]
  found reset state: 4'0000 (guessed from mux tree)
  found ctrl input: \reset
  found state code: 4'0000
  found ctrl input: \memory.resetperiod
  found ctrl input: $flatten\memory.$gt$src/blockmemory.v:188$1392_Y
  found ctrl input: $flatten\memory.$and$src/blockmemory.v:146$1380_Y
  found ctrl input: $flatten\memory.$and$src/blockmemory.v:170$1386_Y
  found ctrl input: $flatten\memory.$eq$src/blockmemory.v:170$1385_Y
  found ctrl input: $flatten\memory.$eq$src/blockmemory.v:189$1393_Y
  found ctrl input: $flatten\memory.$procmux$2415_CMP
  found ctrl input: \vcell.movement_intent
  found ctrl input: $flatten\memory.$eq$src/blockmemory.v:233$1404_Y
  found ctrl input: $flatten\memory.$eq$src/blockmemory.v:228$1403_Y
  found ctrl input: $flatten\memory.$eq$src/blockmemory.v:220$1401_Y
  found ctrl input: $flatten\memory.$eq$src/blockmemory.v:212$1399_Y
  found ctrl input: $flatten\memory.$eq$src/blockmemory.v:204$1397_Y
  found ctrl input: $flatten\memory.$eq$src/blockmemory.v:196$1395_Y
  found state code: 4'0001
  found state code: 4'0010
  found state code: 4'0011
  found state code: 4'0100
  found state code: 4'0101
  found state code: 4'0110
  found ctrl output: $flatten\memory.$eq$src/blockmemory.v:233$1404_Y
  found ctrl output: $flatten\memory.$eq$src/blockmemory.v:228$1403_Y
  found ctrl output: $flatten\memory.$eq$src/blockmemory.v:220$1401_Y
  found ctrl output: $flatten\memory.$eq$src/blockmemory.v:212$1399_Y
  found ctrl output: $flatten\memory.$eq$src/blockmemory.v:204$1397_Y
  found ctrl output: $flatten\memory.$eq$src/blockmemory.v:196$1395_Y
  ctrl inputs: { \vcell.movement_intent \memory.resetperiod $flatten\memory.$and$src/blockmemory.v:146$1380_Y $flatten\memory.$eq$src/blockmemory.v:170$1385_Y $flatten\memory.$and$src/blockmemory.v:170$1386_Y $flatten\memory.$gt$src/blockmemory.v:188$1392_Y $flatten\memory.$eq$src/blockmemory.v:189$1393_Y $flatten\memory.$procmux$2415_CMP \reset }
  ctrl outputs: { $flatten\memory.$0\stealstatus[3:0] $flatten\memory.$eq$src/blockmemory.v:196$1395_Y $flatten\memory.$eq$src/blockmemory.v:204$1397_Y $flatten\memory.$eq$src/blockmemory.v:212$1399_Y $flatten\memory.$eq$src/blockmemory.v:220$1401_Y $flatten\memory.$eq$src/blockmemory.v:228$1403_Y $flatten\memory.$eq$src/blockmemory.v:233$1404_Y }
  transition:     4'0000 9'--------0 ->     4'0000 10'0000100000
  transition:     4'0000 9'-00000--1 ->     4'0000 10'0000100000
  transition:     4'0000 9'-00100--1 ->     4'0000 10'0000100000
  transition:     4'0000 9'-00-10--1 ->     4'0000 10'0000100000
  transition:     4'0000 9'-01--0--1 ->     4'0000 10'0000100000
  transition:     4'0000 9'-000010-1 ->     4'0000 10'0000100000
  transition:     4'0000 9'-001010-1 ->     4'0000 10'0000100000
  transition:     4'0000 9'-00-110-1 ->     4'0000 10'0000100000
  transition:     4'0000 9'-01--10-1 ->     4'0000 10'0000100000
  transition:     4'0000 9'-00001101 ->     4'0000 10'0000100000
  transition:     4'0000 9'-00101101 ->     4'0000 10'0000100000
  transition:     4'0000 9'-00-11101 ->     4'0000 10'0000100000
  transition:     4'0000 9'-01--1101 ->     4'0000 10'0000100000
  transition:     4'0000 9'00---1111 ->     4'0001 10'0001100000
  transition:     4'0000 9'100001111 ->     4'0000 10'0000100000
  transition:     4'0000 9'100101111 ->     4'0000 10'0000100000
  transition:     4'0000 9'100-11111 ->     4'0000 10'0000100000
  transition:     4'0000 9'101--1111 ->     4'0000 10'0000100000
  transition:     4'0000 9'-1------1 ->     4'0000 10'0000100000
  transition:     4'0100 9'--------0 ->     4'0000 10'0000000010
  transition:     4'0100 9'-00000--1 ->     4'0100 10'0100000010
  transition:     4'0100 9'-00100--1 ->     4'0000 10'0000000010
  transition:     4'0100 9'-00-10--1 ->     4'0100 10'0100000010
  transition:     4'0100 9'-01--0--1 ->     4'0100 10'0100000010
  transition:     4'0100 9'-000010-1 ->     4'0100 10'0100000010
  transition:     4'0100 9'-001010-1 ->     4'0000 10'0000000010
  transition:     4'0100 9'-00-110-1 ->     4'0100 10'0100000010
  transition:     4'0100 9'-01--10-1 ->     4'0100 10'0100000010
  transition:     4'0100 9'-00001101 ->     4'0100 10'0100000010
  transition:     4'0100 9'-00101101 ->     4'0000 10'0000000010
  transition:     4'0100 9'-00-11101 ->     4'0100 10'0100000010
  transition:     4'0100 9'-01--1101 ->     4'0100 10'0100000010
  transition:     4'0100 9'00---1111 ->     4'0101 10'0101000010
  transition:     4'0100 9'100001111 ->     4'0100 10'0100000010
  transition:     4'0100 9'100101111 ->     4'0000 10'0000000010
  transition:     4'0100 9'100-11111 ->     4'0100 10'0100000010
  transition:     4'0100 9'101--1111 ->     4'0100 10'0100000010
  transition:     4'0100 9'-1------1 ->     4'0100 10'0100000010
  transition:     4'0010 9'--------0 ->     4'0000 10'0000001000
  transition:     4'0010 9'-00000--1 ->     4'0010 10'0010001000
  transition:     4'0010 9'-00100--1 ->     4'0000 10'0000001000
  transition:     4'0010 9'-00-10--1 ->     4'0010 10'0010001000
  transition:     4'0010 9'-01--0--1 ->     4'0010 10'0010001000
  transition:     4'0010 9'-000010-1 ->     4'0010 10'0010001000
  transition:     4'0010 9'-001010-1 ->     4'0000 10'0000001000
  transition:     4'0010 9'-00-110-1 ->     4'0010 10'0010001000
  transition:     4'0010 9'-01--10-1 ->     4'0010 10'0010001000
  transition:     4'0010 9'-00001101 ->     4'0010 10'0010001000
  transition:     4'0010 9'-00101101 ->     4'0000 10'0000001000
  transition:     4'0010 9'-00-11101 ->     4'0010 10'0010001000
  transition:     4'0010 9'-01--1101 ->     4'0010 10'0010001000
  transition:     4'0010 9'00---1111 ->     4'0011 10'0011001000
  transition:     4'0010 9'100001111 ->     4'0010 10'0010001000
  transition:     4'0010 9'100101111 ->     4'0000 10'0000001000
  transition:     4'0010 9'100-11111 ->     4'0010 10'0010001000
  transition:     4'0010 9'101--1111 ->     4'0010 10'0010001000
  transition:     4'0010 9'-1------1 ->     4'0010 10'0010001000
  transition:     4'0110 9'--------0 ->     4'0000 10'0000000000
  transition:     4'0110 9'-00000--1 ->     4'0110 10'0110000000
  transition:     4'0110 9'-00100--1 ->     4'0000 10'0000000000
  transition:     4'0110 9'-00-10--1 ->     4'0110 10'0110000000
  transition:     4'0110 9'-01--0--1 ->     4'0110 10'0110000000
  transition:     4'0110 9'-000010-1 ->     4'0110 10'0110000000
  transition:     4'0110 9'-001010-1 ->     4'0000 10'0000000000
  transition:     4'0110 9'-00-110-1 ->     4'0110 10'0110000000
  transition:     4'0110 9'-01--10-1 ->     4'0110 10'0110000000
  transition:     4'0110 9'-00001101 ->     4'0110 10'0110000000
  transition:     4'0110 9'-00101101 ->     4'0000 10'0000000000
  transition:     4'0110 9'-00-11101 ->     4'0110 10'0110000000
  transition:     4'0110 9'-01--1101 ->     4'0110 10'0110000000
  transition:     4'0110 9'000001111 ->     4'0110 10'0110000000
  transition:     4'0110 9'000101111 ->     4'0000 10'0000000000
  transition:     4'0110 9'000-11111 ->     4'0110 10'0110000000
  transition:     4'0110 9'001--1111 ->     4'0110 10'0110000000
  transition:     4'0110 9'100001111 ->     4'0110 10'0110000000
  transition:     4'0110 9'100101111 ->     4'0000 10'0000000000
  transition:     4'0110 9'100-11111 ->     4'0110 10'0110000000
  transition:     4'0110 9'101--1111 ->     4'0110 10'0110000000
  transition:     4'0110 9'-1------1 ->     4'0110 10'0110000000
  transition:     4'0001 9'--------0 ->     4'0000 10'0000010000
  transition:     4'0001 9'-00000--1 ->     4'0001 10'0001010000
  transition:     4'0001 9'-00100--1 ->     4'0000 10'0000010000
  transition:     4'0001 9'-00-10--1 ->     4'0001 10'0001010000
  transition:     4'0001 9'-01--0--1 ->     4'0001 10'0001010000
  transition:     4'0001 9'-000010-1 ->     4'0001 10'0001010000
  transition:     4'0001 9'-001010-1 ->     4'0000 10'0000010000
  transition:     4'0001 9'-00-110-1 ->     4'0001 10'0001010000
  transition:     4'0001 9'-01--10-1 ->     4'0001 10'0001010000
  transition:     4'0001 9'-00001101 ->     4'0001 10'0001010000
  transition:     4'0001 9'-00101101 ->     4'0000 10'0000010000
  transition:     4'0001 9'-00-11101 ->     4'0001 10'0001010000
  transition:     4'0001 9'-01--1101 ->     4'0001 10'0001010000
  transition:     4'0001 9'00---1111 ->     4'0010 10'0010010000
  transition:     4'0001 9'100001111 ->     4'0001 10'0001010000
  transition:     4'0001 9'100101111 ->     4'0000 10'0000010000
  transition:     4'0001 9'100-11111 ->     4'0001 10'0001010000
  transition:     4'0001 9'101--1111 ->     4'0001 10'0001010000
  transition:     4'0001 9'-1------1 ->     4'0001 10'0001010000
  transition:     4'0101 9'--------0 ->     4'0000 10'0000000001
  transition:     4'0101 9'-00000--1 ->     4'0101 10'0101000001
  transition:     4'0101 9'-00100--1 ->     4'0000 10'0000000001
  transition:     4'0101 9'-00-10--1 ->     4'0101 10'0101000001
  transition:     4'0101 9'-01--0--1 ->     4'0101 10'0101000001
  transition:     4'0101 9'-000010-1 ->     4'0101 10'0101000001
  transition:     4'0101 9'-001010-1 ->     4'0000 10'0000000001
  transition:     4'0101 9'-00-110-1 ->     4'0101 10'0101000001
  transition:     4'0101 9'-01--10-1 ->     4'0101 10'0101000001
  transition:     4'0101 9'-00001101 ->     4'0101 10'0101000001
  transition:     4'0101 9'-00101101 ->     4'0000 10'0000000001
  transition:     4'0101 9'-00-11101 ->     4'0101 10'0101000001
  transition:     4'0101 9'-01--1101 ->     4'0101 10'0101000001
  transition:     4'0101 9'00---1111 ->     4'0110 10'0110000001
  transition:     4'0101 9'100001111 ->     4'0101 10'0101000001
  transition:     4'0101 9'100101111 ->     4'0000 10'0000000001
  transition:     4'0101 9'100-11111 ->     4'0101 10'0101000001
  transition:     4'0101 9'101--1111 ->     4'0101 10'0101000001
  transition:     4'0101 9'-1------1 ->     4'0101 10'0101000001
  transition:     4'0011 9'--------0 ->     4'0000 10'0000000100
  transition:     4'0011 9'-00000--1 ->     4'0011 10'0011000100
  transition:     4'0011 9'-00100--1 ->     4'0000 10'0000000100
  transition:     4'0011 9'-00-10--1 ->     4'0011 10'0011000100
  transition:     4'0011 9'-01--0--1 ->     4'0011 10'0011000100
  transition:     4'0011 9'-000010-1 ->     4'0011 10'0011000100
  transition:     4'0011 9'-001010-1 ->     4'0000 10'0000000100
  transition:     4'0011 9'-00-110-1 ->     4'0011 10'0011000100
  transition:     4'0011 9'-01--10-1 ->     4'0011 10'0011000100
  transition:     4'0011 9'-00001101 ->     4'0011 10'0011000100
  transition:     4'0011 9'-00101101 ->     4'0000 10'0000000100
  transition:     4'0011 9'-00-11101 ->     4'0011 10'0011000100
  transition:     4'0011 9'-01--1101 ->     4'0011 10'0011000100
  transition:     4'0011 9'00---1111 ->     4'0100 10'0100000100
  transition:     4'0011 9'100001111 ->     4'0011 10'0011000100
  transition:     4'0011 9'100101111 ->     4'0000 10'0000000100
  transition:     4'0011 9'100-11111 ->     4'0011 10'0011000100
  transition:     4'0011 9'101--1111 ->     4'0011 10'0011000100
  transition:     4'0011 9'-1------1 ->     4'0011 10'0011000100
Extracting FSM `\memory.streak_iterator' from module `\top'.
  found $dff cell for state register: $flatten\memory.$procdff$3543
  root of input selection tree: $flatten\memory.$0\streak_iterator[2:0]
  found reset state: 3'000 (guessed from mux tree)
  found ctrl input: \reset
  found state code: 3'000
  found ctrl input: \memory.resetperiod
  found ctrl input: $flatten\memory.$and$src/blockmemory.v:146$1380_Y
  found ctrl input: $flatten\memory.$and$src/blockmemory.v:170$1386_Y
  found ctrl input: $flatten\memory.$eq$src/blockmemory.v:170$1385_Y
  found ctrl input: $flatten\memory.$gt$src/blockmemory.v:182$1390_Y
  found ctrl input: $flatten\memory.$eq$src/blockmemory.v:148$1381_Y
  found ctrl input: $flatten\memory.$eq$src/blockmemory.v:164$1384_Y
  found ctrl input: $flatten\memory.$eq$src/blockmemory.v:159$1383_Y
  found ctrl input: $flatten\memory.$eq$src/blockmemory.v:154$1382_Y
  found state code: 3'001
  found state code: 3'010
  found state code: 3'011
  found ctrl output: $flatten\memory.$eq$src/blockmemory.v:164$1384_Y
  found ctrl output: $flatten\memory.$eq$src/blockmemory.v:159$1383_Y
  found ctrl output: $flatten\memory.$eq$src/blockmemory.v:154$1382_Y
  ctrl inputs: { \memory.resetperiod $flatten\memory.$and$src/blockmemory.v:146$1380_Y $flatten\memory.$eq$src/blockmemory.v:148$1381_Y $flatten\memory.$eq$src/blockmemory.v:170$1385_Y $flatten\memory.$and$src/blockmemory.v:170$1386_Y $flatten\memory.$gt$src/blockmemory.v:182$1390_Y \reset }
  ctrl outputs: { $flatten\memory.$0\streak_iterator[2:0] $flatten\memory.$eq$src/blockmemory.v:154$1382_Y $flatten\memory.$eq$src/blockmemory.v:159$1383_Y $flatten\memory.$eq$src/blockmemory.v:164$1384_Y }
  transition:      3'000 7'------0 ->      3'000 6'000100
  transition:      3'000 7'00-00-1 ->      3'000 6'000100
  transition:      3'000 7'00-1001 ->      3'000 6'000100
  transition:      3'000 7'00-1011 ->      3'000 6'000100
  transition:      3'000 7'00--1-1 ->      3'000 6'000100
  transition:      3'000 7'010---1 ->      3'001 6'001100
  transition:      3'000 7'011---1 ->      3'000 6'000100
  transition:      3'000 7'1-----1 ->      3'000 6'000100
  transition:      3'010 7'------0 ->      3'000 6'000001
  transition:      3'010 7'00-00-1 ->      3'010 6'010001
  transition:      3'010 7'00-1001 ->      3'000 6'000001
  transition:      3'010 7'00-1011 ->      3'010 6'010001
  transition:      3'010 7'00--1-1 ->      3'010 6'010001
  transition:      3'010 7'010---1 ->      3'011 6'011001
  transition:      3'010 7'011---1 ->      3'010 6'010001
  transition:      3'010 7'1-----1 ->      3'010 6'010001
  transition:      3'001 7'------0 ->      3'000 6'000010
  transition:      3'001 7'00-00-1 ->      3'001 6'001010
  transition:      3'001 7'00-1001 ->      3'000 6'000010
  transition:      3'001 7'00-1011 ->      3'001 6'001010
  transition:      3'001 7'00--1-1 ->      3'001 6'001010
  transition:      3'001 7'010---1 ->      3'010 6'010010
  transition:      3'001 7'011---1 ->      3'001 6'001010
  transition:      3'001 7'1-----1 ->      3'001 6'001010
  transition:      3'011 7'------0 ->      3'000 6'000000
  transition:      3'011 7'00-00-1 ->      3'011 6'011000
  transition:      3'011 7'00-1001 ->      3'000 6'000000
  transition:      3'011 7'00-1011 ->      3'011 6'011000
  transition:      3'011 7'00--1-1 ->      3'011 6'011000
  transition:      3'011 7'010---1 ->      3'011 6'011000
  transition:      3'011 7'011---1 ->      3'011 6'011000
  transition:      3'011 7'1-----1 ->      3'011 6'011000
Extracting FSM `\vcell.tetron_type' from module `\top'.
  found $dff cell for state register: $flatten\vcell.$procdff$3499
  root of input selection tree: $flatten\vcell.$0\tetron_type[3:0]
  found reset state: 4'0000 (guessed from mux tree)
  found ctrl input: \reset
  found state code: 4'0000
  found ctrl input: $flatten\vcell.$and$src/volatile_cell_storage.v:159$1881_Y
  found ctrl input: $flatten\vcell.$and$src/volatile_cell_storage.v:233$1937_Y
  fsm extraction failed: at least two states are required.

24.11.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\memory.streak_iterator$3627' from module `\top'.
  Merging pattern 7'00-1001 and 7'00-1011 from group (0 0 6'000100).
  Merging pattern 7'00-1011 and 7'00-1001 from group (0 0 6'000100).
  Merging pattern 7'00-00-1 and 7'00-10-1 from group (0 0 6'000100).
  Merging pattern 7'00-10-1 and 7'00-00-1 from group (0 0 6'000100).
  Merging pattern 7'00--0-1 and 7'00--1-1 from group (0 0 6'000100).
  Merging pattern 7'00--1-1 and 7'00--0-1 from group (0 0 6'000100).
  Merging pattern 7'010---1 and 7'011---1 from group (3 3 6'011000).
  Merging pattern 7'011---1 and 7'010---1 from group (3 3 6'011000).
Optimizing FSM `$fsm$\memory.stealstatus$3619' from module `\top'.
  Merging pattern 9'-00001101 and 9'-00101101 from group (0 0 10'0000100000).
  Merging pattern 9'-00101101 and 9'-00001101 from group (0 0 10'0000100000).
  Merging pattern 9'100001111 and 9'100101111 from group (0 0 10'0000100000).
  Merging pattern 9'100101111 and 9'100001111 from group (0 0 10'0000100000).
  Merging pattern 9'-000010-1 and 9'-001010-1 from group (0 0 10'0000100000).
  Merging pattern 9'-001010-1 and 9'-000010-1 from group (0 0 10'0000100000).
  Merging pattern 9'-00000--1 and 9'-00100--1 from group (0 0 10'0000100000).
  Merging pattern 9'-00100--1 and 9'-00000--1 from group (0 0 10'0000100000).
  Merging pattern 9'-00-01101 and 9'-00-11101 from group (0 0 10'0000100000).
  Merging pattern 9'-00-11101 and 9'-00-01101 from group (0 0 10'0000100000).
  Merging pattern 9'100-01111 and 9'100-11111 from group (0 0 10'0000100000).
  Merging pattern 9'100-11111 and 9'100-01111 from group (0 0 10'0000100000).
  Merging pattern 9'-00-010-1 and 9'-00-110-1 from group (0 0 10'0000100000).
  Merging pattern 9'-00-110-1 and 9'-00-010-1 from group (0 0 10'0000100000).
  Merging pattern 9'-00-00--1 and 9'-00-10--1 from group (0 0 10'0000100000).
  Merging pattern 9'-00-10--1 and 9'-00-00--1 from group (0 0 10'0000100000).
  Merging pattern 9'-00--1101 and 9'-01--1101 from group (0 0 10'0000100000).
  Merging pattern 9'-01--1101 and 9'-00--1101 from group (0 0 10'0000100000).
  Merging pattern 9'100--1111 and 9'101--1111 from group (0 0 10'0000100000).
  Merging pattern 9'101--1111 and 9'100--1111 from group (0 0 10'0000100000).
  Merging pattern 9'-00--10-1 and 9'-01--10-1 from group (0 0 10'0000100000).
  Merging pattern 9'-01--10-1 and 9'-00--10-1 from group (0 0 10'0000100000).
  Merging pattern 9'-00--0--1 and 9'-01--0--1 from group (0 0 10'0000100000).
  Merging pattern 9'-01--0--1 and 9'-00--0--1 from group (0 0 10'0000100000).
  Merging pattern 9'000101111 and 9'100101111 from group (3 0 10'0000000000).
  Merging pattern 9'100101111 and 9'000101111 from group (3 0 10'0000000000).
  Merging pattern 9'-00101101 and 9'-00101111 from group (3 0 10'0000000000).
  Merging pattern 9'-00101111 and 9'-00101101 from group (3 0 10'0000000000).
  Merging pattern 9'-001010-1 and 9'-001011-1 from group (3 0 10'0000000000).
  Merging pattern 9'-001011-1 and 9'-001010-1 from group (3 0 10'0000000000).
  Merging pattern 9'-00100--1 and 9'-00101--1 from group (3 0 10'0000000000).
  Merging pattern 9'-00101--1 and 9'-00100--1 from group (3 0 10'0000000000).
  Merging pattern 9'000001111 and 9'100001111 from group (3 3 10'0110000000).
  Merging pattern 9'100001111 and 9'000001111 from group (3 3 10'0110000000).
  Merging pattern 9'000-11111 and 9'100-11111 from group (3 3 10'0110000000).
  Merging pattern 9'100-11111 and 9'000-11111 from group (3 3 10'0110000000).
  Merging pattern 9'001--1111 and 9'101--1111 from group (3 3 10'0110000000).
  Merging pattern 9'101--1111 and 9'001--1111 from group (3 3 10'0110000000).
  Merging pattern 9'-00001101 and 9'-00001111 from group (3 3 10'0110000000).
  Merging pattern 9'-00-11101 and 9'-00-11111 from group (3 3 10'0110000000).
  Merging pattern 9'-01--1101 and 9'-01--1111 from group (3 3 10'0110000000).
  Merging pattern 9'-00001111 and 9'-00001101 from group (3 3 10'0110000000).
  Merging pattern 9'-00-11111 and 9'-00-11101 from group (3 3 10'0110000000).
  Merging pattern 9'-01--1111 and 9'-01--1101 from group (3 3 10'0110000000).
  Merging pattern 9'-000010-1 and 9'-000011-1 from group (3 3 10'0110000000).
  Merging pattern 9'-00-110-1 and 9'-00-111-1 from group (3 3 10'0110000000).
  Merging pattern 9'-01--10-1 and 9'-01--11-1 from group (3 3 10'0110000000).
  Merging pattern 9'-000011-1 and 9'-000010-1 from group (3 3 10'0110000000).
  Merging pattern 9'-00-111-1 and 9'-00-110-1 from group (3 3 10'0110000000).
  Merging pattern 9'-01--11-1 and 9'-01--10-1 from group (3 3 10'0110000000).
  Merging pattern 9'-00000--1 and 9'-00001--1 from group (3 3 10'0110000000).
  Merging pattern 9'-00-10--1 and 9'-00-11--1 from group (3 3 10'0110000000).
  Merging pattern 9'-01--0--1 and 9'-01--1--1 from group (3 3 10'0110000000).
  Merging pattern 9'-00001--1 and 9'-00000--1 from group (3 3 10'0110000000).
  Merging pattern 9'-00-11--1 and 9'-00-10--1 from group (3 3 10'0110000000).
  Merging pattern 9'-01--1--1 and 9'-01--0--1 from group (3 3 10'0110000000).

24.11.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 36 unused cells and 36 unused wires.
<suppressed ~37 debug messages>

24.11.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\memory.stealstatus$3619' from module `\top'.
  Removing unused output signal $flatten\memory.$0\stealstatus[3:0] [0].
  Removing unused output signal $flatten\memory.$0\stealstatus[3:0] [1].
  Removing unused output signal $flatten\memory.$0\stealstatus[3:0] [2].
  Removing unused output signal $flatten\memory.$0\stealstatus[3:0] [3].
Optimizing FSM `$fsm$\memory.streak_iterator$3627' from module `\top'.
  Removing unused output signal $flatten\memory.$0\streak_iterator[2:0] [0].
  Removing unused output signal $flatten\memory.$0\streak_iterator[2:0] [1].
  Removing unused output signal $flatten\memory.$0\streak_iterator[2:0] [2].

24.11.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\memory.stealstatus$3619' from module `\top' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  0000 -> ------1
  0100 -> -----1-
  0010 -> ----1--
  0110 -> ---1---
  0001 -> --1----
  0101 -> -1-----
  0011 -> 1------
Recoding FSM `$fsm$\memory.streak_iterator$3627' from module `\top' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  000 -> ---1
  010 -> --1-
  001 -> -1--
  011 -> 1---

24.11.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\memory.stealstatus$3619' from module `top':
-------------------------------------

  Information on FSM $fsm$\memory.stealstatus$3619 (\memory.stealstatus):

  Number of input signals:    9
  Number of output signals:   6
  Number of state bits:       7

  Input signals:
    0: \reset
    1: $flatten\memory.$procmux$2415_CMP
    2: $flatten\memory.$eq$src/blockmemory.v:189$1393_Y
    3: $flatten\memory.$gt$src/blockmemory.v:188$1392_Y
    4: $flatten\memory.$and$src/blockmemory.v:170$1386_Y
    5: $flatten\memory.$eq$src/blockmemory.v:170$1385_Y
    6: $flatten\memory.$and$src/blockmemory.v:146$1380_Y
    7: \memory.resetperiod
    8: \vcell.movement_intent

  Output signals:
    0: $flatten\memory.$eq$src/blockmemory.v:233$1404_Y
    1: $flatten\memory.$eq$src/blockmemory.v:228$1403_Y
    2: $flatten\memory.$eq$src/blockmemory.v:220$1401_Y
    3: $flatten\memory.$eq$src/blockmemory.v:212$1399_Y
    4: $flatten\memory.$eq$src/blockmemory.v:204$1397_Y
    5: $flatten\memory.$eq$src/blockmemory.v:196$1395_Y

  State encoding:
    0:  7'------1  <RESET STATE>
    1:  7'-----1-
    2:  7'----1--
    3:  7'---1---
    4:  7'--1----
    5:  7'-1-----
    6:  7'1------

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 9'--------0   ->     0 6'100000
      1:     0 9'-0---1101   ->     0 6'100000
      2:     0 9'10---1111   ->     0 6'100000
      3:     0 9'-0---10-1   ->     0 6'100000
      4:     0 9'-0---0--1   ->     0 6'100000
      5:     0 9'-1------1   ->     0 6'100000
      6:     0 9'00---1111   ->     4 6'100000
      7:     1 9'--------0   ->     0 6'000010
      8:     1 9'-00101101   ->     0 6'000010
      9:     1 9'100101111   ->     0 6'000010
     10:     1 9'-001010-1   ->     0 6'000010
     11:     1 9'-00100--1   ->     0 6'000010
     12:     1 9'-00001101   ->     1 6'000010
     13:     1 9'-00-11101   ->     1 6'000010
     14:     1 9'-01--1101   ->     1 6'000010
     15:     1 9'100001111   ->     1 6'000010
     16:     1 9'100-11111   ->     1 6'000010
     17:     1 9'101--1111   ->     1 6'000010
     18:     1 9'-000010-1   ->     1 6'000010
     19:     1 9'-00-110-1   ->     1 6'000010
     20:     1 9'-01--10-1   ->     1 6'000010
     21:     1 9'-00000--1   ->     1 6'000010
     22:     1 9'-00-10--1   ->     1 6'000010
     23:     1 9'-01--0--1   ->     1 6'000010
     24:     1 9'-1------1   ->     1 6'000010
     25:     1 9'00---1111   ->     5 6'000010
     26:     2 9'--------0   ->     0 6'001000
     27:     2 9'-00101101   ->     0 6'001000
     28:     2 9'100101111   ->     0 6'001000
     29:     2 9'-001010-1   ->     0 6'001000
     30:     2 9'-00100--1   ->     0 6'001000
     31:     2 9'-00001101   ->     2 6'001000
     32:     2 9'-00-11101   ->     2 6'001000
     33:     2 9'-01--1101   ->     2 6'001000
     34:     2 9'100001111   ->     2 6'001000
     35:     2 9'100-11111   ->     2 6'001000
     36:     2 9'101--1111   ->     2 6'001000
     37:     2 9'-000010-1   ->     2 6'001000
     38:     2 9'-00-110-1   ->     2 6'001000
     39:     2 9'-01--10-1   ->     2 6'001000
     40:     2 9'-00000--1   ->     2 6'001000
     41:     2 9'-00-10--1   ->     2 6'001000
     42:     2 9'-01--0--1   ->     2 6'001000
     43:     2 9'-1------1   ->     2 6'001000
     44:     2 9'00---1111   ->     6 6'001000
     45:     3 9'--------0   ->     0 6'000000
     46:     3 9'-0010---1   ->     0 6'000000
     47:     3 9'-0000---1   ->     3 6'000000
     48:     3 9'-00-1---1   ->     3 6'000000
     49:     3 9'-01-----1   ->     3 6'000000
     50:     3 9'-1------1   ->     3 6'000000
     51:     4 9'--------0   ->     0 6'010000
     52:     4 9'-00101101   ->     0 6'010000
     53:     4 9'100101111   ->     0 6'010000
     54:     4 9'-001010-1   ->     0 6'010000
     55:     4 9'-00100--1   ->     0 6'010000
     56:     4 9'00---1111   ->     2 6'010000
     57:     4 9'-00001101   ->     4 6'010000
     58:     4 9'-00-11101   ->     4 6'010000
     59:     4 9'-01--1101   ->     4 6'010000
     60:     4 9'100001111   ->     4 6'010000
     61:     4 9'100-11111   ->     4 6'010000
     62:     4 9'101--1111   ->     4 6'010000
     63:     4 9'-000010-1   ->     4 6'010000
     64:     4 9'-00-110-1   ->     4 6'010000
     65:     4 9'-01--10-1   ->     4 6'010000
     66:     4 9'-00000--1   ->     4 6'010000
     67:     4 9'-00-10--1   ->     4 6'010000
     68:     4 9'-01--0--1   ->     4 6'010000
     69:     4 9'-1------1   ->     4 6'010000
     70:     5 9'--------0   ->     0 6'000001
     71:     5 9'-00101101   ->     0 6'000001
     72:     5 9'100101111   ->     0 6'000001
     73:     5 9'-001010-1   ->     0 6'000001
     74:     5 9'-00100--1   ->     0 6'000001
     75:     5 9'00---1111   ->     3 6'000001
     76:     5 9'-00001101   ->     5 6'000001
     77:     5 9'-00-11101   ->     5 6'000001
     78:     5 9'-01--1101   ->     5 6'000001
     79:     5 9'100001111   ->     5 6'000001
     80:     5 9'100-11111   ->     5 6'000001
     81:     5 9'101--1111   ->     5 6'000001
     82:     5 9'-000010-1   ->     5 6'000001
     83:     5 9'-00-110-1   ->     5 6'000001
     84:     5 9'-01--10-1   ->     5 6'000001
     85:     5 9'-00000--1   ->     5 6'000001
     86:     5 9'-00-10--1   ->     5 6'000001
     87:     5 9'-01--0--1   ->     5 6'000001
     88:     5 9'-1------1   ->     5 6'000001
     89:     6 9'--------0   ->     0 6'000100
     90:     6 9'-00101101   ->     0 6'000100
     91:     6 9'100101111   ->     0 6'000100
     92:     6 9'-001010-1   ->     0 6'000100
     93:     6 9'-00100--1   ->     0 6'000100
     94:     6 9'00---1111   ->     1 6'000100
     95:     6 9'-00001101   ->     6 6'000100
     96:     6 9'-00-11101   ->     6 6'000100
     97:     6 9'-01--1101   ->     6 6'000100
     98:     6 9'100001111   ->     6 6'000100
     99:     6 9'100-11111   ->     6 6'000100
    100:     6 9'101--1111   ->     6 6'000100
    101:     6 9'-000010-1   ->     6 6'000100
    102:     6 9'-00-110-1   ->     6 6'000100
    103:     6 9'-01--10-1   ->     6 6'000100
    104:     6 9'-00000--1   ->     6 6'000100
    105:     6 9'-00-10--1   ->     6 6'000100
    106:     6 9'-01--0--1   ->     6 6'000100
    107:     6 9'-1------1   ->     6 6'000100

-------------------------------------

FSM `$fsm$\memory.streak_iterator$3627' from module `top':
-------------------------------------

  Information on FSM $fsm$\memory.streak_iterator$3627 (\memory.streak_iterator):

  Number of input signals:    7
  Number of output signals:   3
  Number of state bits:       4

  Input signals:
    0: \reset
    1: $flatten\memory.$gt$src/blockmemory.v:182$1390_Y
    2: $flatten\memory.$and$src/blockmemory.v:170$1386_Y
    3: $flatten\memory.$eq$src/blockmemory.v:170$1385_Y
    4: $flatten\memory.$eq$src/blockmemory.v:148$1381_Y
    5: $flatten\memory.$and$src/blockmemory.v:146$1380_Y
    6: \memory.resetperiod

  Output signals:
    0: $flatten\memory.$eq$src/blockmemory.v:164$1384_Y
    1: $flatten\memory.$eq$src/blockmemory.v:159$1383_Y
    2: $flatten\memory.$eq$src/blockmemory.v:154$1382_Y

  State encoding:
    0:     4'---1  <RESET STATE>
    1:     4'--1-
    2:     4'-1--
    3:     4'1---

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 7'------0   ->     0 3'100
      1:     0 7'011---1   ->     0 3'100
      2:     0 7'00----1   ->     0 3'100
      3:     0 7'1-----1   ->     0 3'100
      4:     0 7'010---1   ->     2 3'100
      5:     1 7'------0   ->     0 3'001
      6:     1 7'00-1001   ->     0 3'001
      7:     1 7'00-1011   ->     1 3'001
      8:     1 7'00-00-1   ->     1 3'001
      9:     1 7'00--1-1   ->     1 3'001
     10:     1 7'011---1   ->     1 3'001
     11:     1 7'1-----1   ->     1 3'001
     12:     1 7'010---1   ->     3 3'001
     13:     2 7'------0   ->     0 3'010
     14:     2 7'00-1001   ->     0 3'010
     15:     2 7'010---1   ->     1 3'010
     16:     2 7'00-1011   ->     2 3'010
     17:     2 7'00-00-1   ->     2 3'010
     18:     2 7'00--1-1   ->     2 3'010
     19:     2 7'011---1   ->     2 3'010
     20:     2 7'1-----1   ->     2 3'010
     21:     3 7'------0   ->     0 3'000
     22:     3 7'00-1001   ->     0 3'000
     23:     3 7'00-1011   ->     3 3'000
     24:     3 7'00-00-1   ->     3 3'000
     25:     3 7'00--1-1   ->     3 3'000
     26:     3 7'01----1   ->     3 3'000
     27:     3 7'1-----1   ->     3 3'000

-------------------------------------

24.11.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\memory.stealstatus$3619' from module `\top'.
Mapping FSM `$fsm$\memory.streak_iterator$3627' from module `\top'.

24.12. Executing OPT pass (performing simple optimizations).

24.12.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~2 debug messages>

24.12.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~231 debug messages>
Removed a total of 77 cells.

24.12.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~861 debug messages>

24.12.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

24.12.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

24.12.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $flatten\vcell.\tshaper.$procdff$3608 ($dff) from module top (D = $flatten\vcell.\tshaper.$procmux$3055_Y, Q = \vcell.tshaper.blk4_hoffset, rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$4073 ($sdff) from module top (D = $flatten\vcell.\tshaper.$procmux$3055_Y, Q = \vcell.tshaper.blk4_hoffset).
Adding SRST signal on $flatten\vcell.\tshaper.$procdff$3607 ($dff) from module top (D = $flatten\vcell.\tshaper.$procmux$3064_Y, Q = \vcell.tshaper.blk4_voffset, rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$4077 ($sdff) from module top (D = $flatten\vcell.\tshaper.$procmux$3064_Y, Q = \vcell.tshaper.blk4_voffset).
Adding SRST signal on $flatten\vcell.\tshaper.$procdff$3606 ($dff) from module top (D = $flatten\vcell.\tshaper.$procmux$3075_Y, Q = \vcell.tshaper.blk3_hoffset, rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$4085 ($sdff) from module top (D = $flatten\vcell.\tshaper.$procmux$3075_Y, Q = \vcell.tshaper.blk3_hoffset).
Adding SRST signal on $flatten\vcell.\tshaper.$procdff$3605 ($dff) from module top (D = $flatten\vcell.\tshaper.$procmux$3088_Y, Q = \vcell.tshaper.blk3_voffset, rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$4093 ($sdff) from module top (D = $flatten\vcell.\tshaper.$procmux$3088_Y, Q = \vcell.tshaper.blk3_voffset).
Adding SRST signal on $flatten\vcell.\tshaper.$procdff$3604 ($dff) from module top (D = $flatten\vcell.\tshaper.$procmux$3093_Y [4:1], Q = \vcell.tshaper.blk2_hoffset [4:1], rval = 4'0000).
Adding SRST signal on $flatten\vcell.\tshaper.$procdff$3604 ($dff) from module top (D = $flatten\vcell.\tshaper.$procmux$3097_Y [0], Q = \vcell.tshaper.blk2_hoffset [0], rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$4102 ($sdff) from module top (D = $flatten\vcell.\tshaper.$procmux$3097_Y [0], Q = \vcell.tshaper.blk2_hoffset [0]).
Adding EN signal on $auto$ff.cc:262:slice$4097 ($sdff) from module top (D = 4'0000, Q = \vcell.tshaper.blk2_hoffset [4:1]).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4110 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4110 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$4110 ($sdffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$4110 ($sdffe) from module top.
Adding SRST signal on $flatten\vcell.\tshaper.$procdff$3603 ($dff) from module top (D = $flatten\vcell.\tshaper.$procmux$3110_Y [0], Q = \vcell.tshaper.blk2_voffset [0], rval = 1'0).
Adding SRST signal on $flatten\vcell.\tshaper.$procdff$3603 ($dff) from module top (D = $flatten\vcell.\tshaper.$procmux$3104_Y [4:1], Q = \vcell.tshaper.blk2_voffset [4:1], rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$4112 ($sdff) from module top (D = 4'0000, Q = \vcell.tshaper.blk2_voffset [4:1]).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4117 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4117 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$4117 ($sdffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$4117 ($sdffe) from module top.
Adding EN signal on $auto$ff.cc:262:slice$4111 ($sdff) from module top (D = $flatten\vcell.\tshaper.$procmux$3110_Y [0], Q = \vcell.tshaper.blk2_voffset [0]).
Adding SRST signal on $flatten\vcell.\tshaper.$procdff$3602 ($dff) from module top (D = $flatten\vcell.\tshaper.$procmux$3115_Y, Q = \vcell.tshaper.blk1_hoffset, rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$4121 ($sdff) from module top (D = 5'00000, Q = \vcell.tshaper.blk1_hoffset).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4126 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4126 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$4126 ($sdffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$4126 ($sdffe) from module top.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$4126 ($sdffe) from module top.
Adding SRST signal on $flatten\vcell.\tshaper.$procdff$3601 ($dff) from module top (D = $flatten\vcell.\tshaper.$procmux$3126_Y, Q = \vcell.tshaper.blk1_voffset, rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$4127 ($sdff) from module top (D = 5'00000, Q = \vcell.tshaper.blk1_voffset).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4132 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4132 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$4132 ($sdffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$4132 ($sdffe) from module top.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$4132 ($sdffe) from module top.
Adding SRST signal on $flatten\vcell.\lbshaper.$procdff$3590 ($dff) from module top (D = $flatten\vcell.\lbshaper.$procmux$2931_Y [0], Q = \vcell.lbshaper.blk4_hoffset [0], rval = 1'0).
Adding SRST signal on $flatten\vcell.\lbshaper.$procdff$3590 ($dff) from module top (D = $flatten\vcell.\lbshaper.$procmux$2927_Y [4:1], Q = \vcell.lbshaper.blk4_hoffset [4:1], rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$4134 ($sdff) from module top (D = $flatten\vcell.\lbshaper.$procmux$2927_Y [4:1], Q = \vcell.lbshaper.blk4_hoffset [4:1]).
Adding EN signal on $auto$ff.cc:262:slice$4133 ($sdff) from module top (D = $flatten\vcell.\lbshaper.$procmux$2931_Y [0], Q = \vcell.lbshaper.blk4_hoffset [0]).
Adding SRST signal on $flatten\vcell.\lbshaper.$procdff$3589 ($dff) from module top (D = $flatten\vcell.\lbshaper.$procmux$2942_Y [0], Q = \vcell.lbshaper.blk4_voffset [0], rval = 1'0).
Adding SRST signal on $flatten\vcell.\lbshaper.$procdff$3589 ($dff) from module top (D = $flatten\vcell.\lbshaper.$procmux$2940_Y [4:1], Q = \vcell.lbshaper.blk4_voffset [4:1], rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$4146 ($sdff) from module top (D = $flatten\vcell.\lbshaper.$procmux$2940_Y [4:1], Q = \vcell.lbshaper.blk4_voffset [4:1]).
Adding EN signal on $auto$ff.cc:262:slice$4145 ($sdff) from module top (D = $flatten\vcell.\lbshaper.$procmux$2942_Y [0], Q = \vcell.lbshaper.blk4_voffset [0]).
Adding SRST signal on $flatten\vcell.\lbshaper.$procdff$3588 ($dff) from module top (D = $flatten\vcell.\lbshaper.$procmux$2951_Y, Q = \vcell.lbshaper.blk3_hoffset, rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$4157 ($sdff) from module top (D = $flatten\vcell.\lbshaper.$procmux$2951_Y, Q = \vcell.lbshaper.blk3_hoffset).
Adding SRST signal on $flatten\vcell.\lbshaper.$procdff$3587 ($dff) from module top (D = $flatten\vcell.\lbshaper.$procmux$2964_Y, Q = \vcell.lbshaper.blk3_voffset, rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$4165 ($sdff) from module top (D = $flatten\vcell.\lbshaper.$procmux$2964_Y, Q = \vcell.lbshaper.blk3_voffset).
Adding SRST signal on $flatten\vcell.\lbshaper.$procdff$3586 ($dff) from module top (D = $flatten\vcell.\lbshaper.$procmux$2969_Y [4:1], Q = \vcell.lbshaper.blk2_hoffset [4:1], rval = 4'0000).
Adding SRST signal on $flatten\vcell.\lbshaper.$procdff$3586 ($dff) from module top (D = $flatten\vcell.\lbshaper.$procmux$2973_Y [0], Q = \vcell.lbshaper.blk2_hoffset [0], rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$4174 ($sdff) from module top (D = $flatten\vcell.\lbshaper.$procmux$2973_Y [0], Q = \vcell.lbshaper.blk2_hoffset [0]).
Adding EN signal on $auto$ff.cc:262:slice$4169 ($sdff) from module top (D = 4'0000, Q = \vcell.lbshaper.blk2_hoffset [4:1]).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4182 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4182 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$4182 ($sdffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$4182 ($sdffe) from module top.
Adding SRST signal on $flatten\vcell.\lbshaper.$procdff$3585 ($dff) from module top (D = $flatten\vcell.\lbshaper.$procmux$2986_Y [0], Q = \vcell.lbshaper.blk2_voffset [0], rval = 1'0).
Adding SRST signal on $flatten\vcell.\lbshaper.$procdff$3585 ($dff) from module top (D = $flatten\vcell.\lbshaper.$procmux$2980_Y [4:1], Q = \vcell.lbshaper.blk2_voffset [4:1], rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$4184 ($sdff) from module top (D = 4'0000, Q = \vcell.lbshaper.blk2_voffset [4:1]).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4189 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4189 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$4189 ($sdffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$4189 ($sdffe) from module top.
Adding EN signal on $auto$ff.cc:262:slice$4183 ($sdff) from module top (D = $flatten\vcell.\lbshaper.$procmux$2986_Y [0], Q = \vcell.lbshaper.blk2_voffset [0]).
Adding SRST signal on $flatten\vcell.\lbshaper.$procdff$3584 ($dff) from module top (D = $flatten\vcell.\lbshaper.$procmux$2991_Y, Q = \vcell.lbshaper.blk1_hoffset, rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$4193 ($sdff) from module top (D = 5'00000, Q = \vcell.lbshaper.blk1_hoffset).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4198 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4198 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$4198 ($sdffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$4198 ($sdffe) from module top.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$4198 ($sdffe) from module top.
Adding SRST signal on $flatten\vcell.\lbshaper.$procdff$3583 ($dff) from module top (D = $flatten\vcell.\lbshaper.$procmux$3002_Y, Q = \vcell.lbshaper.blk1_voffset, rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$4199 ($sdff) from module top (D = 5'00000, Q = \vcell.lbshaper.blk1_voffset).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4204 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4204 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$4204 ($sdffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$4204 ($sdffe) from module top.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$4204 ($sdffe) from module top.
Adding SRST signal on $flatten\vcell.\lashaper.$procdff$3582 ($dff) from module top (D = $flatten\vcell.\lashaper.$procmux$2843_Y, Q = \vcell.lashaper.blk4_hoffset, rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$4205 ($sdff) from module top (D = $flatten\vcell.\lashaper.$procmux$2843_Y, Q = \vcell.lashaper.blk4_hoffset).
Adding SRST signal on $flatten\vcell.\lashaper.$procdff$3581 ($dff) from module top (D = $flatten\vcell.\lashaper.$procmux$2854_Y [0], Q = \vcell.lashaper.blk4_voffset [0], rval = 1'0).
Adding SRST signal on $flatten\vcell.\lashaper.$procdff$3581 ($dff) from module top (D = $flatten\vcell.\lashaper.$procmux$2850_Y [4:1], Q = \vcell.lashaper.blk4_voffset [4:1], rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$4210 ($sdff) from module top (D = $flatten\vcell.\lashaper.$procmux$2850_Y [4:1], Q = \vcell.lashaper.blk4_voffset [4:1]).
Adding EN signal on $auto$ff.cc:262:slice$4209 ($sdff) from module top (D = $flatten\vcell.\lashaper.$procmux$2854_Y [0], Q = \vcell.lashaper.blk4_voffset [0]).
Adding SRST signal on $flatten\vcell.\lashaper.$procdff$3580 ($dff) from module top (D = $flatten\vcell.\lashaper.$procmux$2863_Y, Q = \vcell.lashaper.blk3_hoffset, rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$4221 ($sdff) from module top (D = $flatten\vcell.\lashaper.$procmux$2863_Y, Q = \vcell.lashaper.blk3_hoffset).
Adding SRST signal on $flatten\vcell.\lashaper.$procdff$3579 ($dff) from module top (D = $flatten\vcell.\lashaper.$procmux$2876_Y, Q = \vcell.lashaper.blk3_voffset, rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$4229 ($sdff) from module top (D = $flatten\vcell.\lashaper.$procmux$2876_Y, Q = \vcell.lashaper.blk3_voffset).
Adding SRST signal on $flatten\vcell.\lashaper.$procdff$3578 ($dff) from module top (D = $flatten\vcell.\lashaper.$procmux$2881_Y [4:1], Q = \vcell.lashaper.blk2_hoffset [4:1], rval = 4'0000).
Adding SRST signal on $flatten\vcell.\lashaper.$procdff$3578 ($dff) from module top (D = $flatten\vcell.\lashaper.$procmux$2885_Y [0], Q = \vcell.lashaper.blk2_hoffset [0], rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$4238 ($sdff) from module top (D = $flatten\vcell.\lashaper.$procmux$2885_Y [0], Q = \vcell.lashaper.blk2_hoffset [0]).
Adding EN signal on $auto$ff.cc:262:slice$4233 ($sdff) from module top (D = 4'0000, Q = \vcell.lashaper.blk2_hoffset [4:1]).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4246 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4246 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$4246 ($sdffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$4246 ($sdffe) from module top.
Adding SRST signal on $flatten\vcell.\lashaper.$procdff$3577 ($dff) from module top (D = $flatten\vcell.\lashaper.$procmux$2898_Y [0], Q = \vcell.lashaper.blk2_voffset [0], rval = 1'0).
Adding SRST signal on $flatten\vcell.\lashaper.$procdff$3577 ($dff) from module top (D = $flatten\vcell.\lashaper.$procmux$2892_Y [4:1], Q = \vcell.lashaper.blk2_voffset [4:1], rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$4248 ($sdff) from module top (D = 4'0000, Q = \vcell.lashaper.blk2_voffset [4:1]).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4253 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4253 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$4253 ($sdffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$4253 ($sdffe) from module top.
Adding EN signal on $auto$ff.cc:262:slice$4247 ($sdff) from module top (D = $flatten\vcell.\lashaper.$procmux$2898_Y [0], Q = \vcell.lashaper.blk2_voffset [0]).
Adding SRST signal on $flatten\vcell.\lashaper.$procdff$3576 ($dff) from module top (D = $flatten\vcell.\lashaper.$procmux$2903_Y, Q = \vcell.lashaper.blk1_hoffset, rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$4257 ($sdff) from module top (D = 5'00000, Q = \vcell.lashaper.blk1_hoffset).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4262 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4262 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$4262 ($sdffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$4262 ($sdffe) from module top.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$4262 ($sdffe) from module top.
Adding SRST signal on $flatten\vcell.\lashaper.$procdff$3575 ($dff) from module top (D = $flatten\vcell.\lashaper.$procmux$2914_Y, Q = \vcell.lashaper.blk1_voffset, rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$4263 ($sdff) from module top (D = 5'00000, Q = \vcell.lashaper.blk1_voffset).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4268 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4268 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$4268 ($sdffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$4268 ($sdffe) from module top.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$4268 ($sdffe) from module top.
Adding SRST signal on $flatten\vcell.\ishaper.$procdff$3559 ($dff) from module top (D = $flatten\vcell.\ishaper.$procmux$2696_Y [0], Q = \vcell.ishaper.blk4_hoffset [0], rval = 1'0).
Adding SRST signal on $flatten\vcell.\ishaper.$procdff$3559 ($dff) from module top (D = $flatten\vcell.\ishaper.$procmux$2690_Y [4:2], Q = \vcell.ishaper.blk4_hoffset [4:2], rval = 3'000).
Adding SRST signal on $flatten\vcell.\ishaper.$procdff$3559 ($dff) from module top (D = $flatten\vcell.\ishaper.$procmux$2694_Y [1], Q = \vcell.ishaper.blk4_hoffset [1], rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$4275 ($sdff) from module top (D = $flatten\vcell.\ishaper.$procmux$2694_Y [1], Q = \vcell.ishaper.blk4_hoffset [1]).
Adding EN signal on $auto$ff.cc:262:slice$4270 ($sdff) from module top (D = 3'000, Q = \vcell.ishaper.blk4_hoffset [4:2]).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4283 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4283 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$4283 ($sdffe) from module top.
Adding EN signal on $auto$ff.cc:262:slice$4269 ($sdff) from module top (D = $flatten\vcell.\ishaper.$procmux$2696_Y [0], Q = \vcell.ishaper.blk4_hoffset [0]).
Adding SRST signal on $flatten\vcell.\ishaper.$procdff$3558 ($dff) from module top (D = $flatten\vcell.\ishaper.$procmux$2707_Y [1], Q = \vcell.ishaper.blk4_voffset [1], rval = 1'0).
Adding SRST signal on $flatten\vcell.\ishaper.$procdff$3558 ($dff) from module top (D = $flatten\vcell.\ishaper.$procmux$2701_Y [4:2], Q = \vcell.ishaper.blk4_voffset [4:2], rval = 3'000).
Adding SRST signal on $flatten\vcell.\ishaper.$procdff$3558 ($dff) from module top (D = $flatten\vcell.\ishaper.$procmux$2705_Y [0], Q = \vcell.ishaper.blk4_voffset [0], rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$4293 ($sdff) from module top (D = $flatten\vcell.\ishaper.$procmux$2705_Y [0], Q = \vcell.ishaper.blk4_voffset [0]).
Adding EN signal on $auto$ff.cc:262:slice$4288 ($sdff) from module top (D = 3'000, Q = \vcell.ishaper.blk4_voffset [4:2]).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4301 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4301 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$4301 ($sdffe) from module top.
Adding EN signal on $auto$ff.cc:262:slice$4287 ($sdff) from module top (D = $flatten\vcell.\ishaper.$procmux$2707_Y [1], Q = \vcell.ishaper.blk4_voffset [1]).
Adding SRST signal on $flatten\vcell.\ishaper.$procdff$3557 ($dff) from module top (D = $flatten\vcell.\ishaper.$procmux$2718_Y [0], Q = \vcell.ishaper.blk3_hoffset [0], rval = 1'0).
Adding SRST signal on $flatten\vcell.\ishaper.$procdff$3557 ($dff) from module top (D = $flatten\vcell.\ishaper.$procmux$2712_Y [4:1], Q = \vcell.ishaper.blk3_hoffset [4:1], rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$4306 ($sdff) from module top (D = 4'0000, Q = \vcell.ishaper.blk3_hoffset [4:1]).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4311 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4311 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$4311 ($sdffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$4311 ($sdffe) from module top.
Adding EN signal on $auto$ff.cc:262:slice$4305 ($sdff) from module top (D = $flatten\vcell.\ishaper.$procmux$2718_Y [0], Q = \vcell.ishaper.blk3_hoffset [0]).
Adding SRST signal on $flatten\vcell.\ishaper.$procdff$3556 ($dff) from module top (D = $flatten\vcell.\ishaper.$procmux$2729_Y [0], Q = \vcell.ishaper.blk3_voffset [0], rval = 1'0).
Adding SRST signal on $flatten\vcell.\ishaper.$procdff$3556 ($dff) from module top (D = $flatten\vcell.\ishaper.$procmux$2723_Y [4:1], Q = \vcell.ishaper.blk3_voffset [4:1], rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$4316 ($sdff) from module top (D = 4'0000, Q = \vcell.ishaper.blk3_voffset [4:1]).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4321 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4321 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$4321 ($sdffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$4321 ($sdffe) from module top.
Adding EN signal on $auto$ff.cc:262:slice$4315 ($sdff) from module top (D = $flatten\vcell.\ishaper.$procmux$2729_Y [0], Q = \vcell.ishaper.blk3_voffset [0]).
Adding SRST signal on $flatten\vcell.\ishaper.$procdff$3555 ($dff) from module top (D = $flatten\vcell.\ishaper.$procmux$2740_Y [0], Q = \vcell.ishaper.blk2_hoffset [0], rval = 1'0).
Adding SRST signal on $flatten\vcell.\ishaper.$procdff$3555 ($dff) from module top (D = $flatten\vcell.\ishaper.$procmux$2738_Y [4:1], Q = \vcell.ishaper.blk2_hoffset [4:1], rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$4326 ($sdff) from module top (D = $flatten\vcell.\ishaper.$procmux$2738_Y [4:1], Q = \vcell.ishaper.blk2_hoffset [4:1]).
Adding EN signal on $auto$ff.cc:262:slice$4325 ($sdff) from module top (D = $flatten\vcell.\ishaper.$procmux$2740_Y [0], Q = \vcell.ishaper.blk2_hoffset [0]).
Adding SRST signal on $flatten\vcell.\ishaper.$procdff$3554 ($dff) from module top (D = $flatten\vcell.\ishaper.$procmux$2751_Y, Q = \vcell.ishaper.blk2_voffset, rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$4337 ($sdff) from module top (D = $flatten\vcell.\ishaper.$procmux$2751_Y, Q = \vcell.ishaper.blk2_voffset).
Adding SRST signal on $flatten\vcell.\ishaper.$procdff$3553 ($dff) from module top (D = $flatten\vcell.\ishaper.$procmux$2762_Y [0], Q = \vcell.ishaper.blk1_hoffset [0], rval = 1'0).
Adding SRST signal on $flatten\vcell.\ishaper.$procdff$3553 ($dff) from module top (D = $flatten\vcell.\ishaper.$procmux$2756_Y [4:1], Q = \vcell.ishaper.blk1_hoffset [4:1], rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$4342 ($sdff) from module top (D = 4'0000, Q = \vcell.ishaper.blk1_hoffset [4:1]).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4347 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4347 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$4347 ($sdffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$4347 ($sdffe) from module top.
Adding EN signal on $auto$ff.cc:262:slice$4341 ($sdff) from module top (D = $flatten\vcell.\ishaper.$procmux$2762_Y [0], Q = \vcell.ishaper.blk1_hoffset [0]).
Adding SRST signal on $flatten\vcell.\ishaper.$procdff$3552 ($dff) from module top (D = $flatten\vcell.\ishaper.$procmux$2767_Y [4:1], Q = \vcell.ishaper.blk1_voffset [4:1], rval = 4'0000).
Adding SRST signal on $flatten\vcell.\ishaper.$procdff$3552 ($dff) from module top (D = $flatten\vcell.\ishaper.$procmux$2771_Y [0], Q = \vcell.ishaper.blk1_voffset [0], rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$4356 ($sdff) from module top (D = $flatten\vcell.\ishaper.$procmux$2771_Y [0], Q = \vcell.ishaper.blk1_voffset [0]).
Adding EN signal on $auto$ff.cc:262:slice$4351 ($sdff) from module top (D = 4'0000, Q = \vcell.ishaper.blk1_voffset [4:1]).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4364 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4364 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$4364 ($sdffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$4364 ($sdffe) from module top.
Adding SRST signal on $flatten\vcell.$procdff$3510 ($dff) from module top (D = $flatten\vcell.$procmux$1987_Y, Q = \vcell.dropcool, rval = 6'010000).
Adding EN signal on $auto$ff.cc:262:slice$4365 ($sdff) from module top (D = $flatten\vcell.$procmux$1982_Y, Q = \vcell.dropcool).
Adding SRST signal on $flatten\vcell.$procdff$3509 ($dff) from module top (D = $flatten\vcell.$procmux$2010_Y, Q = \vcell.dropit, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$4375 ($sdff) from module top (D = $flatten\vcell.$procmux$2010_Y, Q = \vcell.dropit).
Adding SRST signal on $flatten\vcell.$procdff$3508 ($dff) from module top (D = $flatten\vcell.$procmux$2020_Y, Q = \vcell.process_decline, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$4383 ($sdff) from module top (D = $flatten\vcell.$procmux$2017_Y, Q = \vcell.process_decline).
Adding SRST signal on $flatten\vcell.$procdff$3507 ($dff) from module top (D = { $flatten\vcell.$logic_not$src/volatile_cell_storage.v:156$1876_Y \vcell.buttdebounceD [25:1] }, Q = \vcell.buttdebounceD, rval = 26'00000000000000000000000000).
Adding SRST signal on $flatten\vcell.$procdff$3506 ($dff) from module top (D = { $flatten\vcell.$logic_not$src/volatile_cell_storage.v:154$1874_Y \vcell.buttdebounceT [25:1] }, Q = \vcell.buttdebounceT, rval = 26'00000000000000000000000000).
Adding SRST signal on $flatten\vcell.$procdff$3505 ($dff) from module top (D = { $flatten\vcell.$logic_not$src/volatile_cell_storage.v:155$1875_Y \vcell.buttdebounceR [25:1] }, Q = \vcell.buttdebounceR, rval = 26'00000000000000000000000000).
Adding SRST signal on $flatten\vcell.$procdff$3504 ($dff) from module top (D = { $flatten\vcell.$logic_not$src/volatile_cell_storage.v:153$1873_Y \vcell.buttdebounceL [25:1] }, Q = \vcell.buttdebounceL, rval = 26'00000000000000000000000000).
Adding SRST signal on $flatten\vcell.$procdff$3503 ($dff) from module top (D = $flatten\vcell.$procmux$2030_Y, Q = \vcell.process_steal, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$4395 ($sdff) from module top (D = $flatten\vcell.$procmux$2027_Y, Q = \vcell.process_steal).
Adding SRST signal on $flatten\vcell.$procdff$3500 ($dff) from module top (D = $flatten\vcell.$procmux$2081_Y, Q = \vcell.movement_available, rval = 1'1).
Adding EN signal on $auto$ff.cc:262:slice$4403 ($sdff) from module top (D = $flatten\vcell.$procmux$2081_Y, Q = \vcell.movement_available).
Adding SRST signal on $flatten\vcell.$procdff$3499 ($dff) from module top (D = $flatten\vcell.$procmux$2089_Y, Q = \vcell.tetron_type, rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$4415 ($sdff) from module top (D = 4'0000, Q = \vcell.tetron_type).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4416 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4416 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$4416 ($sdffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$4416 ($sdffe) from module top.
Adding SRST signal on $flatten\vcell.$procdff$3498 ($dff) from module top (D = $flatten\vcell.$procmux$2099_Y, Q = \vcell.keep_tetron_rotation, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4421 ($sdff) from module top (D = $flatten\vcell.$procmux$2096_Y, Q = \vcell.keep_tetron_rotation).
Adding SRST signal on $flatten\vcell.$procdff$3497 ($dff) from module top (D = $flatten\vcell.$procmux$2107_Y, Q = \vcell.keep_tetron_h, rval = 5'00101).
Adding EN signal on $auto$ff.cc:262:slice$4429 ($sdff) from module top (D = \vcell.tetron_h, Q = \vcell.keep_tetron_h).
Adding SRST signal on $flatten\vcell.$procdff$3496 ($dff) from module top (D = $flatten\vcell.$procmux$2115_Y, Q = \vcell.keep_tetron_v, rval = 5'00101).
Adding EN signal on $auto$ff.cc:262:slice$4435 ($sdff) from module top (D = \vcell.tetron_v, Q = \vcell.keep_tetron_v).
Adding SRST signal on $flatten\vcell.$procdff$3495 ($dff) from module top (D = $flatten\vcell.$procmux$2134_Y, Q = \vcell.tetron_h, rval = 5'00101).
Adding EN signal on $auto$ff.cc:262:slice$4441 ($sdff) from module top (D = $flatten\vcell.$procmux$2134_Y, Q = \vcell.tetron_h).
Adding SRST signal on $flatten\vcell.$procdff$3494 ($dff) from module top (D = $flatten\vcell.$procmux$2159_Y, Q = \vcell.tetron_v, rval = 5'00101).
Adding EN signal on $auto$ff.cc:262:slice$4451 ($sdff) from module top (D = $flatten\vcell.$procmux$2159_Y, Q = \vcell.tetron_v).
Adding SRST signal on $flatten\vcell.$procdff$3493 ($dff) from module top (D = $flatten\vcell.$procmux$2167_Y, Q = \vcell.volatile_blk_color, rval = 3'100).
Adding EN signal on $auto$ff.cc:262:slice$4465 ($sdff) from module top (D = $flatten\vcell.$ternary$src/volatile_cell_storage.v:236$1939_Y, Q = \vcell.volatile_blk_color).
Adding SRST signal on $flatten\vcell.$procdff$3492 ($dff) from module top (D = $flatten\vcell.$procmux$2194_Y, Q = \vcell.movement_intent, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$4471 ($sdff) from module top (D = $flatten\vcell.$procmux$2192_Y, Q = \vcell.movement_intent).
Adding SRST signal on $flatten\vcell.$procdff$3491 ($dff) from module top (D = $flatten\vcell.$procmux$2227_Y, Q = \vcell.movement_request, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$4481 ($sdff) from module top (D = $flatten\vcell.$procmux$2227_Y, Q = \vcell.movement_request).
Adding SRST signal on $flatten\vcell.$procdff$3490 ($dff) from module top (D = { \vcell.state [6:0] $flatten\vcell.$xor$src/volatile_cell_storage.v:158$1879_Y }, Q = \vcell.state, rval = 8'11110000).
Adding SRST signal on $flatten\vcell.$procdff$3489 ($dff) from module top (D = $flatten\vcell.$procmux$2255_Y, Q = \vcell.tetron_rotation, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4494 ($sdff) from module top (D = $flatten\vcell.$procmux$2255_Y, Q = \vcell.tetron_rotation).
Adding SRST signal on $flatten\tdisplay.$procdff$3600 ($dff) from module top (D = $flatten\tdisplay.$procmux$3036_Y, Q = \tdisplay.state, rval = 4'0001).
Adding EN signal on $auto$ff.cc:262:slice$4512 ($sdff) from module top (D = $flatten\tdisplay.$procmux$3034_Y, Q = \tdisplay.state).
Adding SRST signal on $flatten\tdisplay.$procdff$3599 ($dff) from module top (D = $flatten\tdisplay.$procmux$3044_Y, Q = \tdisplay.gamespeed, rval = 24'111111111111111111111111).
Adding EN signal on $auto$ff.cc:262:slice$4514 ($sdff) from module top (D = $flatten\tdisplay.$sub$src/gamespeed_display.v:31$735_Y, Q = \tdisplay.gamespeed).
Adding SRST signal on $flatten\t.$procdff$3561 ($dff) from module top (D = $flatten\t.$add$src/timer.v:18$934_Y, Q = \t.counter, rval = 25'0000000000000000000000000).
Adding EN signal on $flatten\t.$procdff$3560 ($dff) from module top (D = $flatten\t.$procmux$2785_Y, Q = \t.trigger).
Adding SRST signal on $flatten\sdisplay.$procdff$3618 ($dff) from module top (D = $flatten\sdisplay.$procmux$3484_Y, Q = \sdisplay.values[7], rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$4526 ($sdff) from module top (D = $flatten\sdisplay.$procmux$3479_Y, Q = \sdisplay.values[7]).
Adding SRST signal on $flatten\sdisplay.$procdff$3617 ($dff) from module top (D = $flatten\sdisplay.$procmux$3318_Y, Q = \sdisplay.values[6], rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$4532 ($sdff) from module top (D = $flatten\sdisplay.$procmux$3310_Y, Q = \sdisplay.values[6]).
Adding SRST signal on $flatten\sdisplay.$procdff$3616 ($dff) from module top (D = $flatten\sdisplay.$procmux$3335_Y, Q = \sdisplay.values[5], rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$4540 ($sdff) from module top (D = $flatten\sdisplay.$procmux$3324_Y, Q = \sdisplay.values[5]).
Adding SRST signal on $flatten\sdisplay.$procdff$3615 ($dff) from module top (D = $flatten\sdisplay.$procmux$3355_Y, Q = \sdisplay.values[4], rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$4550 ($sdff) from module top (D = $flatten\sdisplay.$procmux$3341_Y, Q = \sdisplay.values[4]).
Adding SRST signal on $flatten\sdisplay.$procdff$3614 ($dff) from module top (D = $flatten\sdisplay.$procmux$3378_Y, Q = \sdisplay.values[3], rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$4562 ($sdff) from module top (D = $flatten\sdisplay.$procmux$3361_Y, Q = \sdisplay.values[3]).
Adding SRST signal on $flatten\sdisplay.$procdff$3613 ($dff) from module top (D = $flatten\sdisplay.$procmux$3404_Y, Q = \sdisplay.values[2], rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$4576 ($sdff) from module top (D = $flatten\sdisplay.$procmux$3384_Y, Q = \sdisplay.values[2]).
Adding SRST signal on $flatten\sdisplay.$procdff$3612 ($dff) from module top (D = $flatten\sdisplay.$procmux$3433_Y, Q = \sdisplay.values[1], rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$4592 ($sdff) from module top (D = $flatten\sdisplay.$procmux$3410_Y, Q = \sdisplay.values[1]).
Adding SRST signal on $flatten\sdisplay.$procdff$3611 ($dff) from module top (D = $flatten\sdisplay.$procmux$3465_Y, Q = \sdisplay.values[0], rval = 5'00000).
Adding EN signal on $auto$ff.cc:262:slice$4610 ($sdff) from module top (D = $flatten\sdisplay.$procmux$3439_Y, Q = \sdisplay.values[0]).
Adding SRST signal on $flatten\sdisplay.$procdff$3610 ($dff) from module top (D = $flatten\sdisplay.$procmux$3473_Y, Q = \sdisplay.dumpvar, rval = 21'000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$4630 ($sdff) from module top (D = $flatten\sdisplay.$procmux$3473_Y, Q = \sdisplay.dumpvar).
Adding SRST signal on $flatten\sdisplay.$procdff$3609 ($dff) from module top (D = { $flatten\sdisplay.$procmux$3304_Y $flatten\sdisplay.$procmux$3293_Y $flatten\sdisplay.$procmux$3279_Y $flatten\sdisplay.$procmux$3262_Y $flatten\sdisplay.$procmux$3242_Y $flatten\sdisplay.$procmux$3219_Y $flatten\sdisplay.$procmux$3161_Y $flatten\sdisplay.$procmux$3193_Y }, Q = \sdisplay.valused, rval = 8'00000000).
Adding EN signal on $auto$ff.cc:262:slice$4634 ($sdff) from module top (D = 1'1, Q = \sdisplay.valused [0]).
Adding EN signal on $auto$ff.cc:262:slice$4634 ($sdff) from module top (D = 1'1, Q = \sdisplay.valused [1]).
Adding EN signal on $auto$ff.cc:262:slice$4634 ($sdff) from module top (D = 1'1, Q = \sdisplay.valused [2]).
Adding EN signal on $auto$ff.cc:262:slice$4634 ($sdff) from module top (D = 1'1, Q = \sdisplay.valused [3]).
Adding EN signal on $auto$ff.cc:262:slice$4634 ($sdff) from module top (D = 1'1, Q = \sdisplay.valused [4]).
Adding EN signal on $auto$ff.cc:262:slice$4634 ($sdff) from module top (D = 1'1, Q = \sdisplay.valused [5]).
Adding EN signal on $auto$ff.cc:262:slice$4634 ($sdff) from module top (D = 1'1, Q = \sdisplay.valused [6]).
Adding EN signal on $auto$ff.cc:262:slice$4634 ($sdff) from module top (D = 1'1, Q = \sdisplay.valused [7]).
Adding SRST signal on $flatten\memory.\mem.\row_9.\cell_9.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_9.\cell_9.$procmux$2832_Y, Q = \memory.mem.row_9.cell_9.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4731 ($sdff) from module top (D = $flatten\memory.\mem.\row_9.\cell_9.$procmux$2832_Y, Q = \memory.mem.row_9.cell_9.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_9.\cell_8.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_9.\cell_8.$procmux$2832_Y, Q = \memory.mem.row_9.cell_8.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4735 ($sdff) from module top (D = $flatten\memory.\mem.\row_9.\cell_8.$procmux$2832_Y, Q = \memory.mem.row_9.cell_8.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_9.\cell_7.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_9.\cell_7.$procmux$2832_Y, Q = \memory.mem.row_9.cell_7.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4739 ($sdff) from module top (D = $flatten\memory.\mem.\row_9.\cell_7.$procmux$2832_Y, Q = \memory.mem.row_9.cell_7.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_9.\cell_6.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_9.\cell_6.$procmux$2832_Y, Q = \memory.mem.row_9.cell_6.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4743 ($sdff) from module top (D = $flatten\memory.\mem.\row_9.\cell_6.$procmux$2832_Y, Q = \memory.mem.row_9.cell_6.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_9.\cell_5.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_9.\cell_5.$procmux$2832_Y, Q = \memory.mem.row_9.cell_5.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4747 ($sdff) from module top (D = $flatten\memory.\mem.\row_9.\cell_5.$procmux$2832_Y, Q = \memory.mem.row_9.cell_5.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_9.\cell_4.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_9.\cell_4.$procmux$2832_Y, Q = \memory.mem.row_9.cell_4.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4751 ($sdff) from module top (D = $flatten\memory.\mem.\row_9.\cell_4.$procmux$2832_Y, Q = \memory.mem.row_9.cell_4.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_9.\cell_3.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_9.\cell_3.$procmux$2832_Y, Q = \memory.mem.row_9.cell_3.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4755 ($sdff) from module top (D = $flatten\memory.\mem.\row_9.\cell_3.$procmux$2832_Y, Q = \memory.mem.row_9.cell_3.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_9.\cell_2.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_9.\cell_2.$procmux$2832_Y, Q = \memory.mem.row_9.cell_2.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4759 ($sdff) from module top (D = $flatten\memory.\mem.\row_9.\cell_2.$procmux$2832_Y, Q = \memory.mem.row_9.cell_2.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_9.\cell_11.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_9.\cell_11.$procmux$2832_Y, Q = \memory.mem.row_9.cell_11.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4763 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_9.cell_11.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_9.\cell_10.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_9.\cell_10.$procmux$2832_Y, Q = \memory.mem.row_9.cell_10.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4765 ($sdff) from module top (D = $flatten\memory.\mem.\row_9.\cell_10.$procmux$2832_Y, Q = \memory.mem.row_9.cell_10.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_9.\cell_1.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_9.\cell_1.$procmux$2832_Y, Q = \memory.mem.row_9.cell_1.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4769 ($sdff) from module top (D = $flatten\memory.\mem.\row_9.\cell_1.$procmux$2832_Y, Q = \memory.mem.row_9.cell_1.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_9.\cell_0.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_9.\cell_0.$procmux$2832_Y, Q = \memory.mem.row_9.cell_0.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4773 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_9.cell_0.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_8.\cell_9.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_8.\cell_9.$procmux$2832_Y, Q = \memory.mem.row_8.cell_9.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4775 ($sdff) from module top (D = $flatten\memory.\mem.\row_8.\cell_9.$procmux$2832_Y, Q = \memory.mem.row_8.cell_9.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_8.\cell_8.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_8.\cell_8.$procmux$2832_Y, Q = \memory.mem.row_8.cell_8.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4779 ($sdff) from module top (D = $flatten\memory.\mem.\row_8.\cell_8.$procmux$2832_Y, Q = \memory.mem.row_8.cell_8.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_8.\cell_7.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_8.\cell_7.$procmux$2832_Y, Q = \memory.mem.row_8.cell_7.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4783 ($sdff) from module top (D = $flatten\memory.\mem.\row_8.\cell_7.$procmux$2832_Y, Q = \memory.mem.row_8.cell_7.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_8.\cell_6.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_8.\cell_6.$procmux$2832_Y, Q = \memory.mem.row_8.cell_6.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4787 ($sdff) from module top (D = $flatten\memory.\mem.\row_8.\cell_6.$procmux$2832_Y, Q = \memory.mem.row_8.cell_6.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_8.\cell_5.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_8.\cell_5.$procmux$2832_Y, Q = \memory.mem.row_8.cell_5.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4791 ($sdff) from module top (D = $flatten\memory.\mem.\row_8.\cell_5.$procmux$2832_Y, Q = \memory.mem.row_8.cell_5.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_8.\cell_4.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_8.\cell_4.$procmux$2832_Y, Q = \memory.mem.row_8.cell_4.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4795 ($sdff) from module top (D = $flatten\memory.\mem.\row_8.\cell_4.$procmux$2832_Y, Q = \memory.mem.row_8.cell_4.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_8.\cell_3.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_8.\cell_3.$procmux$2832_Y, Q = \memory.mem.row_8.cell_3.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4799 ($sdff) from module top (D = $flatten\memory.\mem.\row_8.\cell_3.$procmux$2832_Y, Q = \memory.mem.row_8.cell_3.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_8.\cell_2.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_8.\cell_2.$procmux$2832_Y, Q = \memory.mem.row_8.cell_2.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4803 ($sdff) from module top (D = $flatten\memory.\mem.\row_8.\cell_2.$procmux$2832_Y, Q = \memory.mem.row_8.cell_2.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_8.\cell_11.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_8.\cell_11.$procmux$2832_Y, Q = \memory.mem.row_8.cell_11.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4807 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_8.cell_11.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_8.\cell_10.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_8.\cell_10.$procmux$2832_Y, Q = \memory.mem.row_8.cell_10.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4809 ($sdff) from module top (D = $flatten\memory.\mem.\row_8.\cell_10.$procmux$2832_Y, Q = \memory.mem.row_8.cell_10.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_8.\cell_1.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_8.\cell_1.$procmux$2832_Y, Q = \memory.mem.row_8.cell_1.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4813 ($sdff) from module top (D = $flatten\memory.\mem.\row_8.\cell_1.$procmux$2832_Y, Q = \memory.mem.row_8.cell_1.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_8.\cell_0.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_8.\cell_0.$procmux$2832_Y, Q = \memory.mem.row_8.cell_0.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4817 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_8.cell_0.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_7.\cell_9.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_7.\cell_9.$procmux$2832_Y, Q = \memory.mem.row_7.cell_9.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4819 ($sdff) from module top (D = $flatten\memory.\mem.\row_7.\cell_9.$procmux$2832_Y, Q = \memory.mem.row_7.cell_9.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_7.\cell_8.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_7.\cell_8.$procmux$2832_Y, Q = \memory.mem.row_7.cell_8.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4823 ($sdff) from module top (D = $flatten\memory.\mem.\row_7.\cell_8.$procmux$2832_Y, Q = \memory.mem.row_7.cell_8.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_7.\cell_7.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_7.\cell_7.$procmux$2832_Y, Q = \memory.mem.row_7.cell_7.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4827 ($sdff) from module top (D = $flatten\memory.\mem.\row_7.\cell_7.$procmux$2832_Y, Q = \memory.mem.row_7.cell_7.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_7.\cell_6.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_7.\cell_6.$procmux$2832_Y, Q = \memory.mem.row_7.cell_6.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4831 ($sdff) from module top (D = $flatten\memory.\mem.\row_7.\cell_6.$procmux$2832_Y, Q = \memory.mem.row_7.cell_6.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_7.\cell_5.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_7.\cell_5.$procmux$2832_Y, Q = \memory.mem.row_7.cell_5.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4835 ($sdff) from module top (D = $flatten\memory.\mem.\row_7.\cell_5.$procmux$2832_Y, Q = \memory.mem.row_7.cell_5.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_7.\cell_4.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_7.\cell_4.$procmux$2832_Y, Q = \memory.mem.row_7.cell_4.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4839 ($sdff) from module top (D = $flatten\memory.\mem.\row_7.\cell_4.$procmux$2832_Y, Q = \memory.mem.row_7.cell_4.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_7.\cell_3.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_7.\cell_3.$procmux$2832_Y, Q = \memory.mem.row_7.cell_3.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4843 ($sdff) from module top (D = $flatten\memory.\mem.\row_7.\cell_3.$procmux$2832_Y, Q = \memory.mem.row_7.cell_3.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_7.\cell_2.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_7.\cell_2.$procmux$2832_Y, Q = \memory.mem.row_7.cell_2.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4847 ($sdff) from module top (D = $flatten\memory.\mem.\row_7.\cell_2.$procmux$2832_Y, Q = \memory.mem.row_7.cell_2.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_7.\cell_11.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_7.\cell_11.$procmux$2832_Y, Q = \memory.mem.row_7.cell_11.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4851 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_7.cell_11.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_7.\cell_10.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_7.\cell_10.$procmux$2832_Y, Q = \memory.mem.row_7.cell_10.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4853 ($sdff) from module top (D = $flatten\memory.\mem.\row_7.\cell_10.$procmux$2832_Y, Q = \memory.mem.row_7.cell_10.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_7.\cell_1.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_7.\cell_1.$procmux$2832_Y, Q = \memory.mem.row_7.cell_1.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4857 ($sdff) from module top (D = $flatten\memory.\mem.\row_7.\cell_1.$procmux$2832_Y, Q = \memory.mem.row_7.cell_1.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_7.\cell_0.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_7.\cell_0.$procmux$2832_Y, Q = \memory.mem.row_7.cell_0.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4861 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_7.cell_0.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_6.\cell_9.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_6.\cell_9.$procmux$2832_Y, Q = \memory.mem.row_6.cell_9.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4863 ($sdff) from module top (D = $flatten\memory.\mem.\row_6.\cell_9.$procmux$2832_Y, Q = \memory.mem.row_6.cell_9.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_6.\cell_8.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_6.\cell_8.$procmux$2832_Y, Q = \memory.mem.row_6.cell_8.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4867 ($sdff) from module top (D = $flatten\memory.\mem.\row_6.\cell_8.$procmux$2832_Y, Q = \memory.mem.row_6.cell_8.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_6.\cell_7.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_6.\cell_7.$procmux$2832_Y, Q = \memory.mem.row_6.cell_7.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4871 ($sdff) from module top (D = $flatten\memory.\mem.\row_6.\cell_7.$procmux$2832_Y, Q = \memory.mem.row_6.cell_7.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_6.\cell_6.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_6.\cell_6.$procmux$2832_Y, Q = \memory.mem.row_6.cell_6.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4875 ($sdff) from module top (D = $flatten\memory.\mem.\row_6.\cell_6.$procmux$2832_Y, Q = \memory.mem.row_6.cell_6.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_6.\cell_5.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_6.\cell_5.$procmux$2832_Y, Q = \memory.mem.row_6.cell_5.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4879 ($sdff) from module top (D = $flatten\memory.\mem.\row_6.\cell_5.$procmux$2832_Y, Q = \memory.mem.row_6.cell_5.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_6.\cell_4.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_6.\cell_4.$procmux$2832_Y, Q = \memory.mem.row_6.cell_4.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4883 ($sdff) from module top (D = $flatten\memory.\mem.\row_6.\cell_4.$procmux$2832_Y, Q = \memory.mem.row_6.cell_4.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_6.\cell_3.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_6.\cell_3.$procmux$2832_Y, Q = \memory.mem.row_6.cell_3.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4887 ($sdff) from module top (D = $flatten\memory.\mem.\row_6.\cell_3.$procmux$2832_Y, Q = \memory.mem.row_6.cell_3.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_6.\cell_2.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_6.\cell_2.$procmux$2832_Y, Q = \memory.mem.row_6.cell_2.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4891 ($sdff) from module top (D = $flatten\memory.\mem.\row_6.\cell_2.$procmux$2832_Y, Q = \memory.mem.row_6.cell_2.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_6.\cell_11.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_6.\cell_11.$procmux$2832_Y, Q = \memory.mem.row_6.cell_11.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4895 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_6.cell_11.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_6.\cell_10.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_6.\cell_10.$procmux$2832_Y, Q = \memory.mem.row_6.cell_10.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4897 ($sdff) from module top (D = $flatten\memory.\mem.\row_6.\cell_10.$procmux$2832_Y, Q = \memory.mem.row_6.cell_10.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_6.\cell_1.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_6.\cell_1.$procmux$2832_Y, Q = \memory.mem.row_6.cell_1.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4901 ($sdff) from module top (D = $flatten\memory.\mem.\row_6.\cell_1.$procmux$2832_Y, Q = \memory.mem.row_6.cell_1.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_6.\cell_0.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_6.\cell_0.$procmux$2832_Y, Q = \memory.mem.row_6.cell_0.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4905 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_6.cell_0.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_5.\cell_9.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_5.\cell_9.$procmux$2832_Y, Q = \memory.mem.row_5.cell_9.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4907 ($sdff) from module top (D = $flatten\memory.\mem.\row_5.\cell_9.$procmux$2832_Y, Q = \memory.mem.row_5.cell_9.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_5.\cell_8.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_5.\cell_8.$procmux$2832_Y, Q = \memory.mem.row_5.cell_8.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4911 ($sdff) from module top (D = $flatten\memory.\mem.\row_5.\cell_8.$procmux$2832_Y, Q = \memory.mem.row_5.cell_8.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_5.\cell_7.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_5.\cell_7.$procmux$2832_Y, Q = \memory.mem.row_5.cell_7.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4915 ($sdff) from module top (D = $flatten\memory.\mem.\row_5.\cell_7.$procmux$2832_Y, Q = \memory.mem.row_5.cell_7.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_5.\cell_6.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_5.\cell_6.$procmux$2832_Y, Q = \memory.mem.row_5.cell_6.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4919 ($sdff) from module top (D = $flatten\memory.\mem.\row_5.\cell_6.$procmux$2832_Y, Q = \memory.mem.row_5.cell_6.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_5.\cell_5.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_5.\cell_5.$procmux$2832_Y, Q = \memory.mem.row_5.cell_5.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4923 ($sdff) from module top (D = $flatten\memory.\mem.\row_5.\cell_5.$procmux$2832_Y, Q = \memory.mem.row_5.cell_5.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_5.\cell_4.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_5.\cell_4.$procmux$2832_Y, Q = \memory.mem.row_5.cell_4.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4927 ($sdff) from module top (D = $flatten\memory.\mem.\row_5.\cell_4.$procmux$2832_Y, Q = \memory.mem.row_5.cell_4.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_5.\cell_3.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_5.\cell_3.$procmux$2832_Y, Q = \memory.mem.row_5.cell_3.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4931 ($sdff) from module top (D = $flatten\memory.\mem.\row_5.\cell_3.$procmux$2832_Y, Q = \memory.mem.row_5.cell_3.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_5.\cell_2.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_5.\cell_2.$procmux$2832_Y, Q = \memory.mem.row_5.cell_2.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4935 ($sdff) from module top (D = $flatten\memory.\mem.\row_5.\cell_2.$procmux$2832_Y, Q = \memory.mem.row_5.cell_2.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_5.\cell_11.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_5.\cell_11.$procmux$2832_Y, Q = \memory.mem.row_5.cell_11.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4939 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_5.cell_11.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_5.\cell_10.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_5.\cell_10.$procmux$2832_Y, Q = \memory.mem.row_5.cell_10.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4941 ($sdff) from module top (D = $flatten\memory.\mem.\row_5.\cell_10.$procmux$2832_Y, Q = \memory.mem.row_5.cell_10.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_5.\cell_1.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_5.\cell_1.$procmux$2832_Y, Q = \memory.mem.row_5.cell_1.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4945 ($sdff) from module top (D = $flatten\memory.\mem.\row_5.\cell_1.$procmux$2832_Y, Q = \memory.mem.row_5.cell_1.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_5.\cell_0.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_5.\cell_0.$procmux$2832_Y, Q = \memory.mem.row_5.cell_0.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4949 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_5.cell_0.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_4.\cell_9.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_4.\cell_9.$procmux$2832_Y, Q = \memory.mem.row_4.cell_9.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4951 ($sdff) from module top (D = $flatten\memory.\mem.\row_4.\cell_9.$procmux$2832_Y, Q = \memory.mem.row_4.cell_9.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_4.\cell_8.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_4.\cell_8.$procmux$2832_Y, Q = \memory.mem.row_4.cell_8.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4955 ($sdff) from module top (D = $flatten\memory.\mem.\row_4.\cell_8.$procmux$2832_Y, Q = \memory.mem.row_4.cell_8.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_4.\cell_7.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_4.\cell_7.$procmux$2832_Y, Q = \memory.mem.row_4.cell_7.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4959 ($sdff) from module top (D = $flatten\memory.\mem.\row_4.\cell_7.$procmux$2832_Y, Q = \memory.mem.row_4.cell_7.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_4.\cell_6.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_4.\cell_6.$procmux$2832_Y, Q = \memory.mem.row_4.cell_6.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4963 ($sdff) from module top (D = $flatten\memory.\mem.\row_4.\cell_6.$procmux$2832_Y, Q = \memory.mem.row_4.cell_6.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_4.\cell_5.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_4.\cell_5.$procmux$2832_Y, Q = \memory.mem.row_4.cell_5.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4967 ($sdff) from module top (D = $flatten\memory.\mem.\row_4.\cell_5.$procmux$2832_Y, Q = \memory.mem.row_4.cell_5.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_4.\cell_4.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_4.\cell_4.$procmux$2832_Y, Q = \memory.mem.row_4.cell_4.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4971 ($sdff) from module top (D = $flatten\memory.\mem.\row_4.\cell_4.$procmux$2832_Y, Q = \memory.mem.row_4.cell_4.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_4.\cell_3.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_4.\cell_3.$procmux$2832_Y, Q = \memory.mem.row_4.cell_3.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4975 ($sdff) from module top (D = $flatten\memory.\mem.\row_4.\cell_3.$procmux$2832_Y, Q = \memory.mem.row_4.cell_3.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_4.\cell_2.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_4.\cell_2.$procmux$2832_Y, Q = \memory.mem.row_4.cell_2.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4979 ($sdff) from module top (D = $flatten\memory.\mem.\row_4.\cell_2.$procmux$2832_Y, Q = \memory.mem.row_4.cell_2.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_4.\cell_11.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_4.\cell_11.$procmux$2832_Y, Q = \memory.mem.row_4.cell_11.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4983 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_4.cell_11.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_4.\cell_10.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_4.\cell_10.$procmux$2832_Y, Q = \memory.mem.row_4.cell_10.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4985 ($sdff) from module top (D = $flatten\memory.\mem.\row_4.\cell_10.$procmux$2832_Y, Q = \memory.mem.row_4.cell_10.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_4.\cell_1.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_4.\cell_1.$procmux$2832_Y, Q = \memory.mem.row_4.cell_1.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4989 ($sdff) from module top (D = $flatten\memory.\mem.\row_4.\cell_1.$procmux$2832_Y, Q = \memory.mem.row_4.cell_1.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_4.\cell_0.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_4.\cell_0.$procmux$2832_Y, Q = \memory.mem.row_4.cell_0.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4993 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_4.cell_0.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_3.\cell_9.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_3.\cell_9.$procmux$2832_Y, Q = \memory.mem.row_3.cell_9.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4995 ($sdff) from module top (D = $flatten\memory.\mem.\row_3.\cell_9.$procmux$2832_Y, Q = \memory.mem.row_3.cell_9.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_3.\cell_8.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_3.\cell_8.$procmux$2832_Y, Q = \memory.mem.row_3.cell_8.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$4999 ($sdff) from module top (D = $flatten\memory.\mem.\row_3.\cell_8.$procmux$2832_Y, Q = \memory.mem.row_3.cell_8.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_3.\cell_7.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_3.\cell_7.$procmux$2832_Y, Q = \memory.mem.row_3.cell_7.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5003 ($sdff) from module top (D = $flatten\memory.\mem.\row_3.\cell_7.$procmux$2832_Y, Q = \memory.mem.row_3.cell_7.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_3.\cell_6.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_3.\cell_6.$procmux$2832_Y, Q = \memory.mem.row_3.cell_6.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5007 ($sdff) from module top (D = $flatten\memory.\mem.\row_3.\cell_6.$procmux$2832_Y, Q = \memory.mem.row_3.cell_6.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_3.\cell_5.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_3.\cell_5.$procmux$2832_Y, Q = \memory.mem.row_3.cell_5.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5011 ($sdff) from module top (D = $flatten\memory.\mem.\row_3.\cell_5.$procmux$2832_Y, Q = \memory.mem.row_3.cell_5.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_3.\cell_4.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_3.\cell_4.$procmux$2832_Y, Q = \memory.mem.row_3.cell_4.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5015 ($sdff) from module top (D = $flatten\memory.\mem.\row_3.\cell_4.$procmux$2832_Y, Q = \memory.mem.row_3.cell_4.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_3.\cell_3.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_3.\cell_3.$procmux$2832_Y, Q = \memory.mem.row_3.cell_3.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5019 ($sdff) from module top (D = $flatten\memory.\mem.\row_3.\cell_3.$procmux$2832_Y, Q = \memory.mem.row_3.cell_3.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_3.\cell_2.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_3.\cell_2.$procmux$2832_Y, Q = \memory.mem.row_3.cell_2.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5023 ($sdff) from module top (D = $flatten\memory.\mem.\row_3.\cell_2.$procmux$2832_Y, Q = \memory.mem.row_3.cell_2.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_3.\cell_11.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_3.\cell_11.$procmux$2832_Y, Q = \memory.mem.row_3.cell_11.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5027 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_3.cell_11.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_3.\cell_10.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_3.\cell_10.$procmux$2832_Y, Q = \memory.mem.row_3.cell_10.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5029 ($sdff) from module top (D = $flatten\memory.\mem.\row_3.\cell_10.$procmux$2832_Y, Q = \memory.mem.row_3.cell_10.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_3.\cell_1.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_3.\cell_1.$procmux$2832_Y, Q = \memory.mem.row_3.cell_1.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5033 ($sdff) from module top (D = $flatten\memory.\mem.\row_3.\cell_1.$procmux$2832_Y, Q = \memory.mem.row_3.cell_1.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_3.\cell_0.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_3.\cell_0.$procmux$2832_Y, Q = \memory.mem.row_3.cell_0.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5037 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_3.cell_0.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_20.\cell_9.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_20.\cell_9.$procmux$2832_Y, Q = \memory.mem.row_20.cell_9.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5039 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_20.cell_9.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_20.\cell_8.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_20.\cell_8.$procmux$2832_Y, Q = \memory.mem.row_20.cell_8.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5041 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_20.cell_8.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_20.\cell_7.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_20.\cell_7.$procmux$2832_Y, Q = \memory.mem.row_20.cell_7.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5043 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_20.cell_7.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_20.\cell_6.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_20.\cell_6.$procmux$2832_Y, Q = \memory.mem.row_20.cell_6.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5045 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_20.cell_6.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_20.\cell_5.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_20.\cell_5.$procmux$2832_Y, Q = \memory.mem.row_20.cell_5.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5047 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_20.cell_5.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_20.\cell_4.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_20.\cell_4.$procmux$2832_Y, Q = \memory.mem.row_20.cell_4.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5049 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_20.cell_4.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_20.\cell_3.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_20.\cell_3.$procmux$2832_Y, Q = \memory.mem.row_20.cell_3.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5051 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_20.cell_3.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_20.\cell_2.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_20.\cell_2.$procmux$2832_Y, Q = \memory.mem.row_20.cell_2.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5053 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_20.cell_2.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_20.\cell_11.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_20.\cell_11.$procmux$2832_Y, Q = \memory.mem.row_20.cell_11.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5055 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_20.cell_11.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_20.\cell_10.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_20.\cell_10.$procmux$2832_Y, Q = \memory.mem.row_20.cell_10.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5057 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_20.cell_10.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_20.\cell_1.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_20.\cell_1.$procmux$2832_Y, Q = \memory.mem.row_20.cell_1.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5059 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_20.cell_1.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_20.\cell_0.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_20.\cell_0.$procmux$2832_Y, Q = \memory.mem.row_20.cell_0.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5061 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_20.cell_0.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_2.\cell_9.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_2.\cell_9.$procmux$2832_Y, Q = \memory.mem.row_2.cell_9.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5063 ($sdff) from module top (D = $flatten\memory.\mem.\row_2.\cell_9.$procmux$2832_Y, Q = \memory.mem.row_2.cell_9.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_2.\cell_8.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_2.\cell_8.$procmux$2832_Y, Q = \memory.mem.row_2.cell_8.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5067 ($sdff) from module top (D = $flatten\memory.\mem.\row_2.\cell_8.$procmux$2832_Y, Q = \memory.mem.row_2.cell_8.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_2.\cell_7.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_2.\cell_7.$procmux$2832_Y, Q = \memory.mem.row_2.cell_7.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5071 ($sdff) from module top (D = $flatten\memory.\mem.\row_2.\cell_7.$procmux$2832_Y, Q = \memory.mem.row_2.cell_7.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_2.\cell_6.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_2.\cell_6.$procmux$2832_Y, Q = \memory.mem.row_2.cell_6.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5075 ($sdff) from module top (D = $flatten\memory.\mem.\row_2.\cell_6.$procmux$2832_Y, Q = \memory.mem.row_2.cell_6.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_2.\cell_5.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_2.\cell_5.$procmux$2832_Y, Q = \memory.mem.row_2.cell_5.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5079 ($sdff) from module top (D = $flatten\memory.\mem.\row_2.\cell_5.$procmux$2832_Y, Q = \memory.mem.row_2.cell_5.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_2.\cell_4.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_2.\cell_4.$procmux$2832_Y, Q = \memory.mem.row_2.cell_4.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5083 ($sdff) from module top (D = $flatten\memory.\mem.\row_2.\cell_4.$procmux$2832_Y, Q = \memory.mem.row_2.cell_4.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_2.\cell_3.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_2.\cell_3.$procmux$2832_Y, Q = \memory.mem.row_2.cell_3.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5087 ($sdff) from module top (D = $flatten\memory.\mem.\row_2.\cell_3.$procmux$2832_Y, Q = \memory.mem.row_2.cell_3.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_2.\cell_2.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_2.\cell_2.$procmux$2832_Y, Q = \memory.mem.row_2.cell_2.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5091 ($sdff) from module top (D = $flatten\memory.\mem.\row_2.\cell_2.$procmux$2832_Y, Q = \memory.mem.row_2.cell_2.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_2.\cell_11.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_2.\cell_11.$procmux$2832_Y, Q = \memory.mem.row_2.cell_11.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5095 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_2.cell_11.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_2.\cell_10.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_2.\cell_10.$procmux$2832_Y, Q = \memory.mem.row_2.cell_10.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5097 ($sdff) from module top (D = $flatten\memory.\mem.\row_2.\cell_10.$procmux$2832_Y, Q = \memory.mem.row_2.cell_10.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_2.\cell_1.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_2.\cell_1.$procmux$2832_Y, Q = \memory.mem.row_2.cell_1.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5101 ($sdff) from module top (D = $flatten\memory.\mem.\row_2.\cell_1.$procmux$2832_Y, Q = \memory.mem.row_2.cell_1.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_2.\cell_0.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_2.\cell_0.$procmux$2832_Y, Q = \memory.mem.row_2.cell_0.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5105 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_2.cell_0.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_19.\cell_9.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_19.\cell_9.$procmux$2832_Y, Q = \memory.mem.row_19.cell_9.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5107 ($sdff) from module top (D = $flatten\memory.\mem.\row_19.\cell_9.$procmux$2832_Y, Q = \memory.mem.row_19.cell_9.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_19.\cell_8.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_19.\cell_8.$procmux$2832_Y, Q = \memory.mem.row_19.cell_8.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5111 ($sdff) from module top (D = $flatten\memory.\mem.\row_19.\cell_8.$procmux$2832_Y, Q = \memory.mem.row_19.cell_8.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_19.\cell_7.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_19.\cell_7.$procmux$2832_Y, Q = \memory.mem.row_19.cell_7.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5115 ($sdff) from module top (D = $flatten\memory.\mem.\row_19.\cell_7.$procmux$2832_Y, Q = \memory.mem.row_19.cell_7.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_19.\cell_6.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_19.\cell_6.$procmux$2832_Y, Q = \memory.mem.row_19.cell_6.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5119 ($sdff) from module top (D = $flatten\memory.\mem.\row_19.\cell_6.$procmux$2832_Y, Q = \memory.mem.row_19.cell_6.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_19.\cell_5.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_19.\cell_5.$procmux$2832_Y, Q = \memory.mem.row_19.cell_5.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5123 ($sdff) from module top (D = $flatten\memory.\mem.\row_19.\cell_5.$procmux$2832_Y, Q = \memory.mem.row_19.cell_5.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_19.\cell_4.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_19.\cell_4.$procmux$2832_Y, Q = \memory.mem.row_19.cell_4.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5127 ($sdff) from module top (D = $flatten\memory.\mem.\row_19.\cell_4.$procmux$2832_Y, Q = \memory.mem.row_19.cell_4.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_19.\cell_3.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_19.\cell_3.$procmux$2832_Y, Q = \memory.mem.row_19.cell_3.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5131 ($sdff) from module top (D = $flatten\memory.\mem.\row_19.\cell_3.$procmux$2832_Y, Q = \memory.mem.row_19.cell_3.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_19.\cell_2.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_19.\cell_2.$procmux$2832_Y, Q = \memory.mem.row_19.cell_2.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5135 ($sdff) from module top (D = $flatten\memory.\mem.\row_19.\cell_2.$procmux$2832_Y, Q = \memory.mem.row_19.cell_2.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_19.\cell_11.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_19.\cell_11.$procmux$2832_Y, Q = \memory.mem.row_19.cell_11.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5139 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_19.cell_11.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_19.\cell_10.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_19.\cell_10.$procmux$2832_Y, Q = \memory.mem.row_19.cell_10.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5141 ($sdff) from module top (D = $flatten\memory.\mem.\row_19.\cell_10.$procmux$2832_Y, Q = \memory.mem.row_19.cell_10.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_19.\cell_1.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_19.\cell_1.$procmux$2832_Y, Q = \memory.mem.row_19.cell_1.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5145 ($sdff) from module top (D = $flatten\memory.\mem.\row_19.\cell_1.$procmux$2832_Y, Q = \memory.mem.row_19.cell_1.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_19.\cell_0.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_19.\cell_0.$procmux$2832_Y, Q = \memory.mem.row_19.cell_0.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5149 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_19.cell_0.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_18.\cell_9.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_18.\cell_9.$procmux$2832_Y, Q = \memory.mem.row_18.cell_9.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5151 ($sdff) from module top (D = $flatten\memory.\mem.\row_18.\cell_9.$procmux$2832_Y, Q = \memory.mem.row_18.cell_9.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_18.\cell_8.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_18.\cell_8.$procmux$2832_Y, Q = \memory.mem.row_18.cell_8.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5155 ($sdff) from module top (D = $flatten\memory.\mem.\row_18.\cell_8.$procmux$2832_Y, Q = \memory.mem.row_18.cell_8.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_18.\cell_7.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_18.\cell_7.$procmux$2832_Y, Q = \memory.mem.row_18.cell_7.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5159 ($sdff) from module top (D = $flatten\memory.\mem.\row_18.\cell_7.$procmux$2832_Y, Q = \memory.mem.row_18.cell_7.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_18.\cell_6.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_18.\cell_6.$procmux$2832_Y, Q = \memory.mem.row_18.cell_6.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5163 ($sdff) from module top (D = $flatten\memory.\mem.\row_18.\cell_6.$procmux$2832_Y, Q = \memory.mem.row_18.cell_6.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_18.\cell_5.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_18.\cell_5.$procmux$2832_Y, Q = \memory.mem.row_18.cell_5.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5167 ($sdff) from module top (D = $flatten\memory.\mem.\row_18.\cell_5.$procmux$2832_Y, Q = \memory.mem.row_18.cell_5.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_18.\cell_4.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_18.\cell_4.$procmux$2832_Y, Q = \memory.mem.row_18.cell_4.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5171 ($sdff) from module top (D = $flatten\memory.\mem.\row_18.\cell_4.$procmux$2832_Y, Q = \memory.mem.row_18.cell_4.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_18.\cell_3.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_18.\cell_3.$procmux$2832_Y, Q = \memory.mem.row_18.cell_3.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5175 ($sdff) from module top (D = $flatten\memory.\mem.\row_18.\cell_3.$procmux$2832_Y, Q = \memory.mem.row_18.cell_3.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_18.\cell_2.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_18.\cell_2.$procmux$2832_Y, Q = \memory.mem.row_18.cell_2.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5179 ($sdff) from module top (D = $flatten\memory.\mem.\row_18.\cell_2.$procmux$2832_Y, Q = \memory.mem.row_18.cell_2.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_18.\cell_11.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_18.\cell_11.$procmux$2832_Y, Q = \memory.mem.row_18.cell_11.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5183 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_18.cell_11.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_18.\cell_10.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_18.\cell_10.$procmux$2832_Y, Q = \memory.mem.row_18.cell_10.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5185 ($sdff) from module top (D = $flatten\memory.\mem.\row_18.\cell_10.$procmux$2832_Y, Q = \memory.mem.row_18.cell_10.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_18.\cell_1.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_18.\cell_1.$procmux$2832_Y, Q = \memory.mem.row_18.cell_1.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5189 ($sdff) from module top (D = $flatten\memory.\mem.\row_18.\cell_1.$procmux$2832_Y, Q = \memory.mem.row_18.cell_1.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_18.\cell_0.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_18.\cell_0.$procmux$2832_Y, Q = \memory.mem.row_18.cell_0.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5193 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_18.cell_0.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_17.\cell_9.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_17.\cell_9.$procmux$2832_Y, Q = \memory.mem.row_17.cell_9.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5195 ($sdff) from module top (D = $flatten\memory.\mem.\row_17.\cell_9.$procmux$2832_Y, Q = \memory.mem.row_17.cell_9.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_17.\cell_8.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_17.\cell_8.$procmux$2832_Y, Q = \memory.mem.row_17.cell_8.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5199 ($sdff) from module top (D = $flatten\memory.\mem.\row_17.\cell_8.$procmux$2832_Y, Q = \memory.mem.row_17.cell_8.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_17.\cell_7.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_17.\cell_7.$procmux$2832_Y, Q = \memory.mem.row_17.cell_7.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5203 ($sdff) from module top (D = $flatten\memory.\mem.\row_17.\cell_7.$procmux$2832_Y, Q = \memory.mem.row_17.cell_7.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_17.\cell_6.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_17.\cell_6.$procmux$2832_Y, Q = \memory.mem.row_17.cell_6.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5207 ($sdff) from module top (D = $flatten\memory.\mem.\row_17.\cell_6.$procmux$2832_Y, Q = \memory.mem.row_17.cell_6.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_17.\cell_5.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_17.\cell_5.$procmux$2832_Y, Q = \memory.mem.row_17.cell_5.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5211 ($sdff) from module top (D = $flatten\memory.\mem.\row_17.\cell_5.$procmux$2832_Y, Q = \memory.mem.row_17.cell_5.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_17.\cell_4.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_17.\cell_4.$procmux$2832_Y, Q = \memory.mem.row_17.cell_4.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5215 ($sdff) from module top (D = $flatten\memory.\mem.\row_17.\cell_4.$procmux$2832_Y, Q = \memory.mem.row_17.cell_4.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_17.\cell_3.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_17.\cell_3.$procmux$2832_Y, Q = \memory.mem.row_17.cell_3.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5219 ($sdff) from module top (D = $flatten\memory.\mem.\row_17.\cell_3.$procmux$2832_Y, Q = \memory.mem.row_17.cell_3.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_17.\cell_2.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_17.\cell_2.$procmux$2832_Y, Q = \memory.mem.row_17.cell_2.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5223 ($sdff) from module top (D = $flatten\memory.\mem.\row_17.\cell_2.$procmux$2832_Y, Q = \memory.mem.row_17.cell_2.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_17.\cell_11.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_17.\cell_11.$procmux$2832_Y, Q = \memory.mem.row_17.cell_11.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5227 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_17.cell_11.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_17.\cell_10.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_17.\cell_10.$procmux$2832_Y, Q = \memory.mem.row_17.cell_10.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5229 ($sdff) from module top (D = $flatten\memory.\mem.\row_17.\cell_10.$procmux$2832_Y, Q = \memory.mem.row_17.cell_10.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_17.\cell_1.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_17.\cell_1.$procmux$2832_Y, Q = \memory.mem.row_17.cell_1.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5233 ($sdff) from module top (D = $flatten\memory.\mem.\row_17.\cell_1.$procmux$2832_Y, Q = \memory.mem.row_17.cell_1.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_17.\cell_0.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_17.\cell_0.$procmux$2832_Y, Q = \memory.mem.row_17.cell_0.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5237 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_17.cell_0.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_16.\cell_9.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_16.\cell_9.$procmux$2832_Y, Q = \memory.mem.row_16.cell_9.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5239 ($sdff) from module top (D = $flatten\memory.\mem.\row_16.\cell_9.$procmux$2832_Y, Q = \memory.mem.row_16.cell_9.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_16.\cell_8.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_16.\cell_8.$procmux$2832_Y, Q = \memory.mem.row_16.cell_8.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5243 ($sdff) from module top (D = $flatten\memory.\mem.\row_16.\cell_8.$procmux$2832_Y, Q = \memory.mem.row_16.cell_8.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_16.\cell_7.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_16.\cell_7.$procmux$2832_Y, Q = \memory.mem.row_16.cell_7.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5247 ($sdff) from module top (D = $flatten\memory.\mem.\row_16.\cell_7.$procmux$2832_Y, Q = \memory.mem.row_16.cell_7.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_16.\cell_6.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_16.\cell_6.$procmux$2832_Y, Q = \memory.mem.row_16.cell_6.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5251 ($sdff) from module top (D = $flatten\memory.\mem.\row_16.\cell_6.$procmux$2832_Y, Q = \memory.mem.row_16.cell_6.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_16.\cell_5.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_16.\cell_5.$procmux$2832_Y, Q = \memory.mem.row_16.cell_5.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5255 ($sdff) from module top (D = $flatten\memory.\mem.\row_16.\cell_5.$procmux$2832_Y, Q = \memory.mem.row_16.cell_5.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_16.\cell_4.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_16.\cell_4.$procmux$2832_Y, Q = \memory.mem.row_16.cell_4.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5259 ($sdff) from module top (D = $flatten\memory.\mem.\row_16.\cell_4.$procmux$2832_Y, Q = \memory.mem.row_16.cell_4.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_16.\cell_3.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_16.\cell_3.$procmux$2832_Y, Q = \memory.mem.row_16.cell_3.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5263 ($sdff) from module top (D = $flatten\memory.\mem.\row_16.\cell_3.$procmux$2832_Y, Q = \memory.mem.row_16.cell_3.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_16.\cell_2.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_16.\cell_2.$procmux$2832_Y, Q = \memory.mem.row_16.cell_2.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5267 ($sdff) from module top (D = $flatten\memory.\mem.\row_16.\cell_2.$procmux$2832_Y, Q = \memory.mem.row_16.cell_2.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_16.\cell_11.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_16.\cell_11.$procmux$2832_Y, Q = \memory.mem.row_16.cell_11.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5271 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_16.cell_11.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_16.\cell_10.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_16.\cell_10.$procmux$2832_Y, Q = \memory.mem.row_16.cell_10.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5273 ($sdff) from module top (D = $flatten\memory.\mem.\row_16.\cell_10.$procmux$2832_Y, Q = \memory.mem.row_16.cell_10.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_16.\cell_1.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_16.\cell_1.$procmux$2832_Y, Q = \memory.mem.row_16.cell_1.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5277 ($sdff) from module top (D = $flatten\memory.\mem.\row_16.\cell_1.$procmux$2832_Y, Q = \memory.mem.row_16.cell_1.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_16.\cell_0.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_16.\cell_0.$procmux$2832_Y, Q = \memory.mem.row_16.cell_0.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5281 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_16.cell_0.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_15.\cell_9.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_15.\cell_9.$procmux$2832_Y, Q = \memory.mem.row_15.cell_9.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5283 ($sdff) from module top (D = $flatten\memory.\mem.\row_15.\cell_9.$procmux$2832_Y, Q = \memory.mem.row_15.cell_9.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_15.\cell_8.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_15.\cell_8.$procmux$2832_Y, Q = \memory.mem.row_15.cell_8.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5287 ($sdff) from module top (D = $flatten\memory.\mem.\row_15.\cell_8.$procmux$2832_Y, Q = \memory.mem.row_15.cell_8.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_15.\cell_7.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_15.\cell_7.$procmux$2832_Y, Q = \memory.mem.row_15.cell_7.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5291 ($sdff) from module top (D = $flatten\memory.\mem.\row_15.\cell_7.$procmux$2832_Y, Q = \memory.mem.row_15.cell_7.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_15.\cell_6.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_15.\cell_6.$procmux$2832_Y, Q = \memory.mem.row_15.cell_6.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5295 ($sdff) from module top (D = $flatten\memory.\mem.\row_15.\cell_6.$procmux$2832_Y, Q = \memory.mem.row_15.cell_6.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_15.\cell_5.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_15.\cell_5.$procmux$2832_Y, Q = \memory.mem.row_15.cell_5.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5299 ($sdff) from module top (D = $flatten\memory.\mem.\row_15.\cell_5.$procmux$2832_Y, Q = \memory.mem.row_15.cell_5.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_15.\cell_4.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_15.\cell_4.$procmux$2832_Y, Q = \memory.mem.row_15.cell_4.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5303 ($sdff) from module top (D = $flatten\memory.\mem.\row_15.\cell_4.$procmux$2832_Y, Q = \memory.mem.row_15.cell_4.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_15.\cell_3.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_15.\cell_3.$procmux$2832_Y, Q = \memory.mem.row_15.cell_3.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5307 ($sdff) from module top (D = $flatten\memory.\mem.\row_15.\cell_3.$procmux$2832_Y, Q = \memory.mem.row_15.cell_3.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_15.\cell_2.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_15.\cell_2.$procmux$2832_Y, Q = \memory.mem.row_15.cell_2.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5311 ($sdff) from module top (D = $flatten\memory.\mem.\row_15.\cell_2.$procmux$2832_Y, Q = \memory.mem.row_15.cell_2.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_15.\cell_11.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_15.\cell_11.$procmux$2832_Y, Q = \memory.mem.row_15.cell_11.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5315 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_15.cell_11.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_15.\cell_10.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_15.\cell_10.$procmux$2832_Y, Q = \memory.mem.row_15.cell_10.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5317 ($sdff) from module top (D = $flatten\memory.\mem.\row_15.\cell_10.$procmux$2832_Y, Q = \memory.mem.row_15.cell_10.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_15.\cell_1.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_15.\cell_1.$procmux$2832_Y, Q = \memory.mem.row_15.cell_1.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5321 ($sdff) from module top (D = $flatten\memory.\mem.\row_15.\cell_1.$procmux$2832_Y, Q = \memory.mem.row_15.cell_1.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_15.\cell_0.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_15.\cell_0.$procmux$2832_Y, Q = \memory.mem.row_15.cell_0.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5325 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_15.cell_0.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_14.\cell_9.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_14.\cell_9.$procmux$2832_Y, Q = \memory.mem.row_14.cell_9.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5327 ($sdff) from module top (D = $flatten\memory.\mem.\row_14.\cell_9.$procmux$2832_Y, Q = \memory.mem.row_14.cell_9.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_14.\cell_8.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_14.\cell_8.$procmux$2832_Y, Q = \memory.mem.row_14.cell_8.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5331 ($sdff) from module top (D = $flatten\memory.\mem.\row_14.\cell_8.$procmux$2832_Y, Q = \memory.mem.row_14.cell_8.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_14.\cell_7.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_14.\cell_7.$procmux$2832_Y, Q = \memory.mem.row_14.cell_7.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5335 ($sdff) from module top (D = $flatten\memory.\mem.\row_14.\cell_7.$procmux$2832_Y, Q = \memory.mem.row_14.cell_7.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_14.\cell_6.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_14.\cell_6.$procmux$2832_Y, Q = \memory.mem.row_14.cell_6.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5339 ($sdff) from module top (D = $flatten\memory.\mem.\row_14.\cell_6.$procmux$2832_Y, Q = \memory.mem.row_14.cell_6.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_14.\cell_5.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_14.\cell_5.$procmux$2832_Y, Q = \memory.mem.row_14.cell_5.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5343 ($sdff) from module top (D = $flatten\memory.\mem.\row_14.\cell_5.$procmux$2832_Y, Q = \memory.mem.row_14.cell_5.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_14.\cell_4.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_14.\cell_4.$procmux$2832_Y, Q = \memory.mem.row_14.cell_4.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5347 ($sdff) from module top (D = $flatten\memory.\mem.\row_14.\cell_4.$procmux$2832_Y, Q = \memory.mem.row_14.cell_4.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_14.\cell_3.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_14.\cell_3.$procmux$2832_Y, Q = \memory.mem.row_14.cell_3.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5351 ($sdff) from module top (D = $flatten\memory.\mem.\row_14.\cell_3.$procmux$2832_Y, Q = \memory.mem.row_14.cell_3.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_14.\cell_2.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_14.\cell_2.$procmux$2832_Y, Q = \memory.mem.row_14.cell_2.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5355 ($sdff) from module top (D = $flatten\memory.\mem.\row_14.\cell_2.$procmux$2832_Y, Q = \memory.mem.row_14.cell_2.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_14.\cell_11.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_14.\cell_11.$procmux$2832_Y, Q = \memory.mem.row_14.cell_11.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5359 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_14.cell_11.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_14.\cell_10.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_14.\cell_10.$procmux$2832_Y, Q = \memory.mem.row_14.cell_10.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5361 ($sdff) from module top (D = $flatten\memory.\mem.\row_14.\cell_10.$procmux$2832_Y, Q = \memory.mem.row_14.cell_10.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_14.\cell_1.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_14.\cell_1.$procmux$2832_Y, Q = \memory.mem.row_14.cell_1.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5365 ($sdff) from module top (D = $flatten\memory.\mem.\row_14.\cell_1.$procmux$2832_Y, Q = \memory.mem.row_14.cell_1.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_14.\cell_0.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_14.\cell_0.$procmux$2832_Y, Q = \memory.mem.row_14.cell_0.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5369 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_14.cell_0.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_13.\cell_9.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_13.\cell_9.$procmux$2832_Y, Q = \memory.mem.row_13.cell_9.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5371 ($sdff) from module top (D = $flatten\memory.\mem.\row_13.\cell_9.$procmux$2832_Y, Q = \memory.mem.row_13.cell_9.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_13.\cell_8.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_13.\cell_8.$procmux$2832_Y, Q = \memory.mem.row_13.cell_8.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5375 ($sdff) from module top (D = $flatten\memory.\mem.\row_13.\cell_8.$procmux$2832_Y, Q = \memory.mem.row_13.cell_8.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_13.\cell_7.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_13.\cell_7.$procmux$2832_Y, Q = \memory.mem.row_13.cell_7.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5379 ($sdff) from module top (D = $flatten\memory.\mem.\row_13.\cell_7.$procmux$2832_Y, Q = \memory.mem.row_13.cell_7.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_13.\cell_6.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_13.\cell_6.$procmux$2832_Y, Q = \memory.mem.row_13.cell_6.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5383 ($sdff) from module top (D = $flatten\memory.\mem.\row_13.\cell_6.$procmux$2832_Y, Q = \memory.mem.row_13.cell_6.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_13.\cell_5.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_13.\cell_5.$procmux$2832_Y, Q = \memory.mem.row_13.cell_5.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5387 ($sdff) from module top (D = $flatten\memory.\mem.\row_13.\cell_5.$procmux$2832_Y, Q = \memory.mem.row_13.cell_5.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_13.\cell_4.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_13.\cell_4.$procmux$2832_Y, Q = \memory.mem.row_13.cell_4.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5391 ($sdff) from module top (D = $flatten\memory.\mem.\row_13.\cell_4.$procmux$2832_Y, Q = \memory.mem.row_13.cell_4.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_13.\cell_3.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_13.\cell_3.$procmux$2832_Y, Q = \memory.mem.row_13.cell_3.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5395 ($sdff) from module top (D = $flatten\memory.\mem.\row_13.\cell_3.$procmux$2832_Y, Q = \memory.mem.row_13.cell_3.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_13.\cell_2.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_13.\cell_2.$procmux$2832_Y, Q = \memory.mem.row_13.cell_2.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5399 ($sdff) from module top (D = $flatten\memory.\mem.\row_13.\cell_2.$procmux$2832_Y, Q = \memory.mem.row_13.cell_2.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_13.\cell_11.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_13.\cell_11.$procmux$2832_Y, Q = \memory.mem.row_13.cell_11.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5403 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_13.cell_11.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_13.\cell_10.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_13.\cell_10.$procmux$2832_Y, Q = \memory.mem.row_13.cell_10.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5405 ($sdff) from module top (D = $flatten\memory.\mem.\row_13.\cell_10.$procmux$2832_Y, Q = \memory.mem.row_13.cell_10.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_13.\cell_1.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_13.\cell_1.$procmux$2832_Y, Q = \memory.mem.row_13.cell_1.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5409 ($sdff) from module top (D = $flatten\memory.\mem.\row_13.\cell_1.$procmux$2832_Y, Q = \memory.mem.row_13.cell_1.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_13.\cell_0.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_13.\cell_0.$procmux$2832_Y, Q = \memory.mem.row_13.cell_0.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5413 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_13.cell_0.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_12.\cell_9.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_12.\cell_9.$procmux$2832_Y, Q = \memory.mem.row_12.cell_9.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5415 ($sdff) from module top (D = $flatten\memory.\mem.\row_12.\cell_9.$procmux$2832_Y, Q = \memory.mem.row_12.cell_9.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_12.\cell_8.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_12.\cell_8.$procmux$2832_Y, Q = \memory.mem.row_12.cell_8.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5419 ($sdff) from module top (D = $flatten\memory.\mem.\row_12.\cell_8.$procmux$2832_Y, Q = \memory.mem.row_12.cell_8.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_12.\cell_7.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_12.\cell_7.$procmux$2832_Y, Q = \memory.mem.row_12.cell_7.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5423 ($sdff) from module top (D = $flatten\memory.\mem.\row_12.\cell_7.$procmux$2832_Y, Q = \memory.mem.row_12.cell_7.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_12.\cell_6.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_12.\cell_6.$procmux$2832_Y, Q = \memory.mem.row_12.cell_6.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5427 ($sdff) from module top (D = $flatten\memory.\mem.\row_12.\cell_6.$procmux$2832_Y, Q = \memory.mem.row_12.cell_6.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_12.\cell_5.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_12.\cell_5.$procmux$2832_Y, Q = \memory.mem.row_12.cell_5.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5431 ($sdff) from module top (D = $flatten\memory.\mem.\row_12.\cell_5.$procmux$2832_Y, Q = \memory.mem.row_12.cell_5.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_12.\cell_4.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_12.\cell_4.$procmux$2832_Y, Q = \memory.mem.row_12.cell_4.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5435 ($sdff) from module top (D = $flatten\memory.\mem.\row_12.\cell_4.$procmux$2832_Y, Q = \memory.mem.row_12.cell_4.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_12.\cell_3.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_12.\cell_3.$procmux$2832_Y, Q = \memory.mem.row_12.cell_3.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5439 ($sdff) from module top (D = $flatten\memory.\mem.\row_12.\cell_3.$procmux$2832_Y, Q = \memory.mem.row_12.cell_3.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_12.\cell_2.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_12.\cell_2.$procmux$2832_Y, Q = \memory.mem.row_12.cell_2.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5443 ($sdff) from module top (D = $flatten\memory.\mem.\row_12.\cell_2.$procmux$2832_Y, Q = \memory.mem.row_12.cell_2.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_12.\cell_11.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_12.\cell_11.$procmux$2832_Y, Q = \memory.mem.row_12.cell_11.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5447 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_12.cell_11.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_12.\cell_10.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_12.\cell_10.$procmux$2832_Y, Q = \memory.mem.row_12.cell_10.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5449 ($sdff) from module top (D = $flatten\memory.\mem.\row_12.\cell_10.$procmux$2832_Y, Q = \memory.mem.row_12.cell_10.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_12.\cell_1.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_12.\cell_1.$procmux$2832_Y, Q = \memory.mem.row_12.cell_1.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5453 ($sdff) from module top (D = $flatten\memory.\mem.\row_12.\cell_1.$procmux$2832_Y, Q = \memory.mem.row_12.cell_1.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_12.\cell_0.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_12.\cell_0.$procmux$2832_Y, Q = \memory.mem.row_12.cell_0.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5457 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_12.cell_0.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_11.\cell_9.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_11.\cell_9.$procmux$2832_Y, Q = \memory.mem.row_11.cell_9.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5459 ($sdff) from module top (D = $flatten\memory.\mem.\row_11.\cell_9.$procmux$2832_Y, Q = \memory.mem.row_11.cell_9.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_11.\cell_8.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_11.\cell_8.$procmux$2832_Y, Q = \memory.mem.row_11.cell_8.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5463 ($sdff) from module top (D = $flatten\memory.\mem.\row_11.\cell_8.$procmux$2832_Y, Q = \memory.mem.row_11.cell_8.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_11.\cell_7.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_11.\cell_7.$procmux$2832_Y, Q = \memory.mem.row_11.cell_7.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5467 ($sdff) from module top (D = $flatten\memory.\mem.\row_11.\cell_7.$procmux$2832_Y, Q = \memory.mem.row_11.cell_7.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_11.\cell_6.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_11.\cell_6.$procmux$2832_Y, Q = \memory.mem.row_11.cell_6.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5471 ($sdff) from module top (D = $flatten\memory.\mem.\row_11.\cell_6.$procmux$2832_Y, Q = \memory.mem.row_11.cell_6.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_11.\cell_5.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_11.\cell_5.$procmux$2832_Y, Q = \memory.mem.row_11.cell_5.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5475 ($sdff) from module top (D = $flatten\memory.\mem.\row_11.\cell_5.$procmux$2832_Y, Q = \memory.mem.row_11.cell_5.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_11.\cell_4.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_11.\cell_4.$procmux$2832_Y, Q = \memory.mem.row_11.cell_4.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5479 ($sdff) from module top (D = $flatten\memory.\mem.\row_11.\cell_4.$procmux$2832_Y, Q = \memory.mem.row_11.cell_4.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_11.\cell_3.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_11.\cell_3.$procmux$2832_Y, Q = \memory.mem.row_11.cell_3.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5483 ($sdff) from module top (D = $flatten\memory.\mem.\row_11.\cell_3.$procmux$2832_Y, Q = \memory.mem.row_11.cell_3.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_11.\cell_2.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_11.\cell_2.$procmux$2832_Y, Q = \memory.mem.row_11.cell_2.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5487 ($sdff) from module top (D = $flatten\memory.\mem.\row_11.\cell_2.$procmux$2832_Y, Q = \memory.mem.row_11.cell_2.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_11.\cell_11.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_11.\cell_11.$procmux$2832_Y, Q = \memory.mem.row_11.cell_11.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5491 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_11.cell_11.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_11.\cell_10.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_11.\cell_10.$procmux$2832_Y, Q = \memory.mem.row_11.cell_10.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5493 ($sdff) from module top (D = $flatten\memory.\mem.\row_11.\cell_10.$procmux$2832_Y, Q = \memory.mem.row_11.cell_10.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_11.\cell_1.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_11.\cell_1.$procmux$2832_Y, Q = \memory.mem.row_11.cell_1.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5497 ($sdff) from module top (D = $flatten\memory.\mem.\row_11.\cell_1.$procmux$2832_Y, Q = \memory.mem.row_11.cell_1.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_11.\cell_0.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_11.\cell_0.$procmux$2832_Y, Q = \memory.mem.row_11.cell_0.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5501 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_11.cell_0.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_10.\cell_9.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_10.\cell_9.$procmux$2832_Y, Q = \memory.mem.row_10.cell_9.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5503 ($sdff) from module top (D = $flatten\memory.\mem.\row_10.\cell_9.$procmux$2832_Y, Q = \memory.mem.row_10.cell_9.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_10.\cell_8.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_10.\cell_8.$procmux$2832_Y, Q = \memory.mem.row_10.cell_8.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5507 ($sdff) from module top (D = $flatten\memory.\mem.\row_10.\cell_8.$procmux$2832_Y, Q = \memory.mem.row_10.cell_8.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_10.\cell_7.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_10.\cell_7.$procmux$2832_Y, Q = \memory.mem.row_10.cell_7.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5511 ($sdff) from module top (D = $flatten\memory.\mem.\row_10.\cell_7.$procmux$2832_Y, Q = \memory.mem.row_10.cell_7.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_10.\cell_6.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_10.\cell_6.$procmux$2832_Y, Q = \memory.mem.row_10.cell_6.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5515 ($sdff) from module top (D = $flatten\memory.\mem.\row_10.\cell_6.$procmux$2832_Y, Q = \memory.mem.row_10.cell_6.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_10.\cell_5.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_10.\cell_5.$procmux$2832_Y, Q = \memory.mem.row_10.cell_5.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5519 ($sdff) from module top (D = $flatten\memory.\mem.\row_10.\cell_5.$procmux$2832_Y, Q = \memory.mem.row_10.cell_5.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_10.\cell_4.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_10.\cell_4.$procmux$2832_Y, Q = \memory.mem.row_10.cell_4.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5523 ($sdff) from module top (D = $flatten\memory.\mem.\row_10.\cell_4.$procmux$2832_Y, Q = \memory.mem.row_10.cell_4.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_10.\cell_3.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_10.\cell_3.$procmux$2832_Y, Q = \memory.mem.row_10.cell_3.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5527 ($sdff) from module top (D = $flatten\memory.\mem.\row_10.\cell_3.$procmux$2832_Y, Q = \memory.mem.row_10.cell_3.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_10.\cell_2.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_10.\cell_2.$procmux$2832_Y, Q = \memory.mem.row_10.cell_2.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5531 ($sdff) from module top (D = $flatten\memory.\mem.\row_10.\cell_2.$procmux$2832_Y, Q = \memory.mem.row_10.cell_2.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_10.\cell_11.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_10.\cell_11.$procmux$2832_Y, Q = \memory.mem.row_10.cell_11.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5535 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_10.cell_11.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_10.\cell_10.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_10.\cell_10.$procmux$2832_Y, Q = \memory.mem.row_10.cell_10.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5537 ($sdff) from module top (D = $flatten\memory.\mem.\row_10.\cell_10.$procmux$2832_Y, Q = \memory.mem.row_10.cell_10.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_10.\cell_1.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_10.\cell_1.$procmux$2832_Y, Q = \memory.mem.row_10.cell_1.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5541 ($sdff) from module top (D = $flatten\memory.\mem.\row_10.\cell_1.$procmux$2832_Y, Q = \memory.mem.row_10.cell_1.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_10.\cell_0.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_10.\cell_0.$procmux$2832_Y, Q = \memory.mem.row_10.cell_0.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5545 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_10.cell_0.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_1.\cell_9.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_1.\cell_9.$procmux$2832_Y, Q = \memory.mem.row_1.cell_9.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5547 ($sdff) from module top (D = $flatten\memory.\mem.\row_1.\cell_9.$procmux$2832_Y, Q = \memory.mem.row_1.cell_9.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_1.\cell_8.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_1.\cell_8.$procmux$2832_Y, Q = \memory.mem.row_1.cell_8.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5551 ($sdff) from module top (D = $flatten\memory.\mem.\row_1.\cell_8.$procmux$2832_Y, Q = \memory.mem.row_1.cell_8.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_1.\cell_7.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_1.\cell_7.$procmux$2832_Y, Q = \memory.mem.row_1.cell_7.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5555 ($sdff) from module top (D = $flatten\memory.\mem.\row_1.\cell_7.$procmux$2832_Y, Q = \memory.mem.row_1.cell_7.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_1.\cell_6.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_1.\cell_6.$procmux$2832_Y, Q = \memory.mem.row_1.cell_6.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5559 ($sdff) from module top (D = $flatten\memory.\mem.\row_1.\cell_6.$procmux$2832_Y, Q = \memory.mem.row_1.cell_6.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_1.\cell_5.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_1.\cell_5.$procmux$2832_Y, Q = \memory.mem.row_1.cell_5.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5563 ($sdff) from module top (D = $flatten\memory.\mem.\row_1.\cell_5.$procmux$2832_Y, Q = \memory.mem.row_1.cell_5.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_1.\cell_4.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_1.\cell_4.$procmux$2832_Y, Q = \memory.mem.row_1.cell_4.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5567 ($sdff) from module top (D = $flatten\memory.\mem.\row_1.\cell_4.$procmux$2832_Y, Q = \memory.mem.row_1.cell_4.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_1.\cell_3.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_1.\cell_3.$procmux$2832_Y, Q = \memory.mem.row_1.cell_3.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5571 ($sdff) from module top (D = $flatten\memory.\mem.\row_1.\cell_3.$procmux$2832_Y, Q = \memory.mem.row_1.cell_3.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_1.\cell_2.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_1.\cell_2.$procmux$2832_Y, Q = \memory.mem.row_1.cell_2.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5575 ($sdff) from module top (D = $flatten\memory.\mem.\row_1.\cell_2.$procmux$2832_Y, Q = \memory.mem.row_1.cell_2.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_1.\cell_11.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_1.\cell_11.$procmux$2832_Y, Q = \memory.mem.row_1.cell_11.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5579 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_1.cell_11.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_1.\cell_10.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_1.\cell_10.$procmux$2832_Y, Q = \memory.mem.row_1.cell_10.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5581 ($sdff) from module top (D = $flatten\memory.\mem.\row_1.\cell_10.$procmux$2832_Y, Q = \memory.mem.row_1.cell_10.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_1.\cell_1.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_1.\cell_1.$procmux$2832_Y, Q = \memory.mem.row_1.cell_1.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5585 ($sdff) from module top (D = $flatten\memory.\mem.\row_1.\cell_1.$procmux$2832_Y, Q = \memory.mem.row_1.cell_1.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_1.\cell_0.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_1.\cell_0.$procmux$2832_Y, Q = \memory.mem.row_1.cell_0.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5589 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_1.cell_0.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_0.\cell_9.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_0.\cell_9.$procmux$2832_Y, Q = \memory.mem.row_0.cell_9.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5591 ($sdff) from module top (D = $flatten\memory.\mem.\row_0.\cell_9.$procmux$2832_Y, Q = \memory.mem.row_0.cell_9.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_0.\cell_8.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_0.\cell_8.$procmux$2832_Y, Q = \memory.mem.row_0.cell_8.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5595 ($sdff) from module top (D = $flatten\memory.\mem.\row_0.\cell_8.$procmux$2832_Y, Q = \memory.mem.row_0.cell_8.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_0.\cell_7.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_0.\cell_7.$procmux$2832_Y, Q = \memory.mem.row_0.cell_7.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5599 ($sdff) from module top (D = $flatten\memory.\mem.\row_0.\cell_7.$procmux$2832_Y, Q = \memory.mem.row_0.cell_7.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_0.\cell_6.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_0.\cell_6.$procmux$2832_Y, Q = \memory.mem.row_0.cell_6.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5603 ($sdff) from module top (D = $flatten\memory.\mem.\row_0.\cell_6.$procmux$2832_Y, Q = \memory.mem.row_0.cell_6.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_0.\cell_5.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_0.\cell_5.$procmux$2832_Y, Q = \memory.mem.row_0.cell_5.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5607 ($sdff) from module top (D = $flatten\memory.\mem.\row_0.\cell_5.$procmux$2832_Y, Q = \memory.mem.row_0.cell_5.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_0.\cell_4.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_0.\cell_4.$procmux$2832_Y, Q = \memory.mem.row_0.cell_4.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5611 ($sdff) from module top (D = $flatten\memory.\mem.\row_0.\cell_4.$procmux$2832_Y, Q = \memory.mem.row_0.cell_4.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_0.\cell_3.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_0.\cell_3.$procmux$2832_Y, Q = \memory.mem.row_0.cell_3.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5615 ($sdff) from module top (D = $flatten\memory.\mem.\row_0.\cell_3.$procmux$2832_Y, Q = \memory.mem.row_0.cell_3.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_0.\cell_2.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_0.\cell_2.$procmux$2832_Y, Q = \memory.mem.row_0.cell_2.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5619 ($sdff) from module top (D = $flatten\memory.\mem.\row_0.\cell_2.$procmux$2832_Y, Q = \memory.mem.row_0.cell_2.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_0.\cell_11.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_0.\cell_11.$procmux$2832_Y, Q = \memory.mem.row_0.cell_11.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5623 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_0.cell_11.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_0.\cell_10.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_0.\cell_10.$procmux$2832_Y, Q = \memory.mem.row_0.cell_10.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5625 ($sdff) from module top (D = $flatten\memory.\mem.\row_0.\cell_10.$procmux$2832_Y, Q = \memory.mem.row_0.cell_10.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_0.\cell_1.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_0.\cell_1.$procmux$2832_Y, Q = \memory.mem.row_0.cell_1.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5629 ($sdff) from module top (D = $flatten\memory.\mem.\row_0.\cell_1.$procmux$2832_Y, Q = \memory.mem.row_0.cell_1.priv_mem).
Adding SRST signal on $flatten\memory.\mem.\row_0.\cell_0.$procdff$3573 ($dff) from module top (D = $flatten\memory.\mem.\row_0.\cell_0.$procmux$2832_Y, Q = \memory.mem.row_0.cell_0.priv_mem, rval = 3'000).
Adding EN signal on $auto$ff.cc:262:slice$5633 ($sdff) from module top (D = \memory.mm_colorsetter_value, Q = \memory.mem.row_0.cell_0.priv_mem).
Adding SRST signal on $flatten\memory.$procdff$3546 ($dff) from module top (D = $flatten\memory.$procmux$2319_Y, Q = \memory.perq, rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$5635 ($sdff) from module top (D = $flatten\memory.$procmux$2316_Y, Q = \memory.perq).
Adding SRST signal on $flatten\memory.$procdff$3545 ($dff) from module top (D = $flatten\memory.$procmux$2331_Y, Q = \memory.resetperiod_state, rval = 21'000000000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$5645 ($sdff) from module top (D = $flatten\memory.$procmux$2329_Y, Q = \memory.resetperiod_state).
Adding SRST signal on $flatten\memory.$procdff$3544 ($dff) from module top (D = $flatten\memory.$procmux$2339_Y, Q = \memory.resetperiod, rval = 1'1).
Adding SRST signal on $flatten\memory.$procdff$3542 ($dff) from module top (D = $flatten\memory.$procmux$2384_Y, Q = \memory.streak_cooldown, rval = 17'00000000000000000).
Adding EN signal on $auto$ff.cc:262:slice$5652 ($sdff) from module top (D = $flatten\memory.$procmux$2381_Y, Q = \memory.streak_cooldown).
Adding SRST signal on $flatten\memory.$procdff$3540 ($dff) from module top (D = $flatten\memory.$procmux$2446_Y, Q = \memory.mm_colorsetter_value, rval = 3'110).
Adding EN signal on $auto$ff.cc:262:slice$5664 ($sdff) from module top (D = $flatten\memory.$procmux$2434_Y, Q = \memory.mm_colorsetter_value).
Adding SRST signal on $flatten\memory.$procdff$3539 ($dff) from module top (D = $flatten\memory.$procmux$2475_Y, Q = \memory.mm_colorsetter_commit, rval = 1'1).
Adding EN signal on $auto$ff.cc:262:slice$5674 ($sdff) from module top (D = $flatten\memory.$procmux$2475_Y, Q = \memory.mm_colorsetter_commit).
Adding SRST signal on $flatten\memory.$procdff$3538 ($dff) from module top (D = $flatten\memory.$procmux$2506_Y, Q = \memory.mm_colosetter_y, rval = 6'000000).
Adding EN signal on $auto$ff.cc:262:slice$5690 ($sdff) from module top (D = $flatten\memory.$procmux$2506_Y, Q = \memory.mm_colosetter_y).
Adding SRST signal on $flatten\memory.$procdff$3537 ($dff) from module top (D = $flatten\memory.$procmux$2537_Y, Q = \memory.mm_colosetter_x, rval = 6'000000).
Adding EN signal on $auto$ff.cc:262:slice$5706 ($sdff) from module top (D = $flatten\memory.$procmux$2537_Y, Q = \memory.mm_colosetter_x).
Adding SRST signal on $flatten\memory.$procdff$3536 ($dff) from module top (D = $flatten\memory.$procmux$2543_Y, Q = \memory.proposed_memval, rval = 3'111).
Adding EN signal on $auto$ff.cc:262:slice$5722 ($sdff) from module top (D = \memory.memvalwire, Q = \memory.proposed_memval).
Adding SRST signal on $flatten\memory.$procdff$3535 ($dff) from module top (D = $flatten\memory.$procmux$2559_Y, Q = \memory.cooldown, rval = 4'0000).
Adding EN signal on $auto$ff.cc:262:slice$5724 ($sdff) from module top (D = $flatten\memory.$procmux$2556_Y, Q = \memory.cooldown).
Adding SRST signal on $flatten\memory.$procdff$3534 ($dff) from module top (D = $flatten\memory.$procmux$2586_Y, Q = \memory.movement_steal, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$5734 ($sdff) from module top (D = $flatten\memory.$procmux$2583_Y, Q = \memory.movement_steal).
Adding SRST signal on $flatten\memory.$procdff$3533 ($dff) from module top (D = $flatten\memory.$procmux$2608_Y, Q = \memory.movement_commit, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$5736 ($sdff) from module top (D = $flatten\memory.$procmux$2605_Y, Q = \memory.movement_commit).
Adding SRST signal on $flatten\memory.$procdff$3532 ($dff) from module top (D = $flatten\memory.$procmux$2633_Y, Q = \memory.movement_declined, rval = 1'0).
Adding EN signal on $auto$ff.cc:262:slice$5738 ($sdff) from module top (D = $flatten\memory.$procmux$2630_Y, Q = \memory.movement_declined).
Adding EN signal on $flatten\memory.$procdff$3531 ($dff) from module top (D = $flatten\memory.$procmux$2653_Y, Q = \memory.scorewire).
Adding SRST signal on $flatten\game_manager.$procdff$3549 ($dff) from module top (D = $flatten\game_manager.$2\ipixstream[11:0], Q = \game_manager.ipixstream, rval = 12'000000000000).
Adding EN signal on $auto$ff.cc:262:slice$5751 ($sdff) from module top (D = \game_manager.texture_lookup, Q = \game_manager.ipixstream).
Adding SRST signal on $flatten\game_manager.$procdff$3548 ($dff) from module top (D = $flatten\game_manager.$procmux$2685_Y, Q = \game_manager.pixstream, rval = 12'000000000000).
Adding EN signal on $flatten\core.$procdff$3572 ($dff) from module top (D = $flatten\core.$lt$src/vga_core.v:82$919_Y, Q = \core.v_drawing_pixels).
Adding EN signal on $flatten\core.$procdff$3571 ($dff) from module top (D = $flatten\core.$lt$src/vga_core.v:81$918_Y, Q = \core.h_drawing_pixels).
Adding SRST signal on $flatten\core.$procdff$3570 ($dff) from module top (D = \core.pixstream [7:4], Q = \core.proposed_g, rval = 4'0000).
Adding SRST signal on $flatten\core.$procdff$3569 ($dff) from module top (D = \core.pixstream [11:8], Q = \core.proposed_b, rval = 4'0000).
Adding SRST signal on $flatten\core.$procdff$3568 ($dff) from module top (D = \core.pixstream [3:0], Q = \core.proposed_r, rval = 4'0000).
Adding SRST signal on $flatten\core.$procdff$3567 ($dff) from module top (D = $flatten\core.$procmux$2810_Y, Q = \core.vscan_pos, rval = 10'0000000000).
Adding EN signal on $auto$ff.cc:262:slice$5759 ($sdff) from module top (D = $flatten\core.$add$src/vga_core.v:89$929_Y, Q = \core.vscan_pos).
Adding SRST signal on $flatten\core.$procdff$3566 ($dff) from module top (D = $flatten\core.$add$src/vga_core.v:79$917_Y, Q = \core.hscan_pos, rval = 10'0000000000).
Adding EN signal on $flatten\core.$procdff$3565 ($dff) from module top (D = $flatten\core.$logic_not$src/vga_core.v:85$927_Y, Q = \core.v_sync).
Adding EN signal on $flatten\core.$procdff$3564 ($dff) from module top (D = $flatten\core.$logic_not$src/vga_core.v:84$923_Y, Q = \core.h_sync).
Adding EN signal on $flatten\core.$procdff$3563 ($dff) from module top (D = \core.vscan_pos, Q = \core.vreadwire).
Adding EN signal on $flatten\core.$procdff$3562 ($dff) from module top (D = \core.hscan_pos, Q = \core.hreadwire).

24.12.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 606 unused cells and 691 unused wires.
<suppressed ~607 debug messages>

24.12.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~293 debug messages>

24.12.9. Rerunning OPT passes. (Maybe there is more to do..)

24.12.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~778 debug messages>

24.12.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

24.12.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~615 debug messages>
Removed a total of 205 cells.

24.12.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $flatten\vcell.\oshaper.$procdff$3593 ($dff) from module top.
Setting constant 0-bit at position 1 on $flatten\vcell.\oshaper.$procdff$3593 ($dff) from module top.
Setting constant 0-bit at position 2 on $flatten\vcell.\oshaper.$procdff$3593 ($dff) from module top.
Setting constant 0-bit at position 3 on $flatten\vcell.\oshaper.$procdff$3593 ($dff) from module top.
Setting constant 0-bit at position 4 on $flatten\vcell.\oshaper.$procdff$3593 ($dff) from module top.
Handling always-active SRST on $auto$ff.cc:262:slice$4074 ($sdffe) from module top (changing to const D).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4074 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4074 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$4074 ($sdffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$4074 ($sdffe) from module top.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$4074 ($sdffe) from module top.
Handling always-active SRST on $auto$ff.cc:262:slice$4206 ($sdffe) from module top (changing to const D).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4206 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4206 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$4206 ($sdffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$4206 ($sdffe) from module top.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$4206 ($sdffe) from module top.
Handling always-active SRST on $auto$ff.cc:262:slice$4154 ($sdffe) from module top (changing to const D).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4154 ($sdffe) from module top.
Handling always-active SRST on $auto$ff.cc:262:slice$4142 ($sdffe) from module top (changing to const D).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4142 ($sdffe) from module top.
Removing never-active SRST on $auto$ff.cc:262:slice$4338 ($sdffe) from module top.
Adding SRST signal on $auto$ff.cc:262:slice$4338 ($sdffe) from module top (D = $flatten\vcell.\ishaper.$procmux$2747_Y [0], Q = \vcell.ishaper.blk2_voffset [0], rval = 1'1).
Adding SRST signal on $auto$ff.cc:262:slice$4338 ($sdffe) from module top (D = $flatten\vcell.\ishaper.$procmux$2749_Y [4:1], Q = \vcell.ishaper.blk2_voffset [4:1], rval = 4'1111).
Removing never-active SRST on $auto$ff.cc:262:slice$4312 ($sdffe) from module top.
Adding SRST signal on $auto$ff.cc:262:slice$4312 ($sdffe) from module top (D = $flatten\vcell.\ishaper.$procmux$2716_Y [0], Q = \vcell.ishaper.blk3_hoffset [0], rval = 1'1).
Handling always-active SRST on $auto$ff.cc:262:slice$4226 ($sdffe) from module top (changing to const D).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4226 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4226 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$4226 ($sdffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$4226 ($sdffe) from module top.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$4226 ($sdffe) from module top.
Handling always-active SRST on $auto$ff.cc:262:slice$4190 ($sdffe) from module top (changing to const D).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4190 ($sdffe) from module top.
Handling always-active SRST on $auto$ff.cc:262:slice$4166 ($sdffe) from module top (changing to const D).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4166 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4166 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$4166 ($sdffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$4166 ($sdffe) from module top.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$4166 ($sdffe) from module top.
Handling always-active SRST on $auto$ff.cc:262:slice$4151 ($sdffe) from module top (changing to const D).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4151 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4151 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$4151 ($sdffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$4151 ($sdffe) from module top.
Handling always-active SRST on $auto$ff.cc:262:slice$4139 ($sdffe) from module top (changing to const D).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4139 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4139 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$4139 ($sdffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$4139 ($sdffe) from module top.
Removing never-active SRST on $auto$ff.cc:262:slice$4334 ($sdffe) from module top.
Adding SRST signal on $auto$ff.cc:262:slice$4334 ($sdffe) from module top (D = $flatten\vcell.\ishaper.$procmux$2738_Y [0], Q = \vcell.ishaper.blk2_hoffset [0], rval = 1'1).
Removing never-active SRST on $auto$ff.cc:262:slice$4322 ($sdffe) from module top.
Adding SRST signal on $auto$ff.cc:262:slice$4322 ($sdffe) from module top (D = $flatten\vcell.\ishaper.$procmux$2725_Y [0], Q = \vcell.ishaper.blk3_voffset [0], rval = 1'1).
Removing never-active SRST on $auto$ff.cc:262:slice$4302 ($sdffe) from module top.
Adding SRST signal on $auto$ff.cc:262:slice$4302 ($sdffe) from module top (D = $flatten\vcell.\ishaper.$procmux$2705_Y [1], Q = \vcell.ishaper.blk4_voffset [1], rval = 1'1).
Removing never-active SRST on $auto$ff.cc:262:slice$4284 ($sdffe) from module top.
Adding SRST signal on $auto$ff.cc:262:slice$4284 ($sdffe) from module top (D = $flatten\vcell.\ishaper.$procmux$2694_Y [0], Q = \vcell.ishaper.blk4_hoffset [0], rval = 1'1).
Handling always-active SRST on $auto$ff.cc:262:slice$4243 ($sdffe) from module top (changing to const D).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4243 ($sdffe) from module top.
Handling always-active SRST on $auto$ff.cc:262:slice$4082 ($sdffe) from module top (changing to const D).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$4082 ($sdffe) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$4082 ($sdffe) from module top.
Setting constant 0-bit at position 2 on $auto$ff.cc:262:slice$4082 ($sdffe) from module top.
Setting constant 0-bit at position 3 on $auto$ff.cc:262:slice$4082 ($sdffe) from module top.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$4082 ($sdffe) from module top.
Removing never-active SRST on $auto$ff.cc:262:slice$4348 ($sdffe) from module top.
Adding SRST signal on $auto$ff.cc:262:slice$4348 ($sdffe) from module top (D = $flatten\vcell.\ishaper.$procmux$2760_Y [0], Q = \vcell.ishaper.blk1_hoffset [0], rval = 1'1).

24.12.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 28 unused cells and 258 unused wires.
<suppressed ~35 debug messages>

24.12.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~22 debug messages>

24.12.16. Rerunning OPT passes. (Maybe there is more to do..)

24.12.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~760 debug messages>

24.12.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

24.12.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

24.12.20. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:262:slice$5780 ($sdffce) from module top (D = $flatten\vcell.\ishaper.$procmux$2723_Y [0], Q = \vcell.ishaper.blk3_voffset [0], rval = 1'1).
Adding SRST signal on $auto$ff.cc:262:slice$5779 ($sdffce) from module top (D = $flatten\vcell.\ishaper.$procmux$2736_Y [0], Q = \vcell.ishaper.blk2_hoffset [0], rval = 1'1).
Adding SRST signal on $auto$ff.cc:262:slice$5778 ($sdffce) from module top (D = $flatten\vcell.\ishaper.$procmux$2714_Y [0], Q = \vcell.ishaper.blk3_hoffset [0], rval = 1'1).

24.12.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 2 unused cells and 25 unused wires.
<suppressed ~25 debug messages>

24.12.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

24.12.23. Rerunning OPT passes. (Maybe there is more to do..)

24.12.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~760 debug messages>

24.12.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    New input vector for $reduce_or cell $auto$opt_dff.cc:257:combine_resets$5788: { $flatten\vcell.\ishaper.$eq$src/tetron_I.v:52$1090_Y $flatten\vcell.\ishaper.$eq$src/tetron_I.v:41$1089_Y $auto$opt_dff.cc:256:combine_resets$4278 }
  Optimizing cells in module \top.
Performed a total of 1 changes.

24.12.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~6 debug messages>
Removed a total of 2 cells.

24.12.27. Executing OPT_DFF pass (perform DFF optimizations).

24.12.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

24.12.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

24.12.30. Rerunning OPT passes. (Maybe there is more to do..)

24.12.31. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~760 debug messages>

24.12.32. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

24.12.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

24.12.34. Executing OPT_DFF pass (perform DFF optimizations).

24.12.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

24.12.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

24.12.37. Finished OPT passes. (There is nothing left to do.)

24.13. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 25) from port B of cell top.$flatten\t.$eq$src/timer.v:14$933 ($eq).
Removed top 2 bits (of 3) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$3990 ($eq).
Removed top 2 bits (of 6) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$3984 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$4040 ($eq).
Removed top 4 bits (of 5) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$4053 ($eq).
Removed top 2 bits (of 6) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$4049 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$4061 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$4057 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$4065 ($eq).
Removed top 3 bits (of 7) from port B of cell top.$auto$opt_dff.cc:198:make_patterns_logic$4368 ($ne).
Removed top 1 bits (of 6) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$3929 ($eq).
Removed top 2 bits (of 7) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$3925 ($eq).
Removed top 4 bits (of 8) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$3921 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$3957 ($eq).
Removed top 2 bits (of 6) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$3953 ($eq).
Removed top 4 bits (of 7) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$3949 ($eq).
Removed top 2 bits (of 6) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$3945 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$3965 ($eq).
Removed top 5 bits (of 6) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$3961 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$3969 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$3663 ($eq).
Removed top 2 bits (of 3) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$3659 ($eq).
Removed top 2 bits (of 6) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$3657 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$3653 ($eq).
Removed top 2 bits (of 7) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$3651 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$3641 ($eq).
Removed top 5 bits (of 6) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:350$7 ($eq).
Removed top 4 bits (of 6) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:395$11 ($eq).
Removed top 4 bits (of 6) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:440$15 ($eq).
Removed top 3 bits (of 6) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:485$19 ($eq).
Removed top 3 bits (of 6) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:530$23 ($eq).
Removed top 3 bits (of 6) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:575$27 ($eq).
Removed top 3 bits (of 6) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:620$31 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1247$377 ($eq).
Removed top 2 bits (of 6) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:665$35 ($eq).
Removed top 2 bits (of 6) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:710$39 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1247$374 ($eq).
Removed top 2 bits (of 6) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:755$43 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1247$371 ($eq).
Removed top 2 bits (of 6) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:800$47 ($eq).
Removed top 2 bits (of 6) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:845$51 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1247$368 ($eq).
Removed top 2 bits (of 6) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:890$55 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1247$365 ($eq).
Removed top 2 bits (of 6) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:935$59 ($eq).
Removed top 2 bits (of 6) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:980$63 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1247$362 ($eq).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1025$67 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1247$359 ($eq).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1070$71 ($eq).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1115$75 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1247$356 ($eq).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1160$79 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1247$353 ($eq).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1205$83 ($eq).
Removed top 4 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1240$87 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1240$93 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1240$99 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1240$105 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1240$111 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1240$117 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1240$123 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1240$129 ($eq).
Removed top 4 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1244$149 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1244$152 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1244$155 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1244$158 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1244$161 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1244$164 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1244$167 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1244$170 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1244$173 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1244$176 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1244$179 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1244$182 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1244$185 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1244$188 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1244$191 ($eq).
Removed top 4 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1245$211 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1245$214 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1245$217 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1245$220 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1245$223 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1245$226 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1245$229 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1245$232 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1245$235 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1245$238 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1245$241 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1245$244 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1245$247 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1245$250 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1245$253 ($eq).
Removed top 4 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1246$273 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1246$276 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1246$279 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1246$282 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1246$285 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1246$288 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1246$291 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1246$294 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1246$297 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1246$300 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1246$303 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1246$306 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1246$309 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1246$312 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1246$315 ($eq).
Removed top 4 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1247$335 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1247$338 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1247$341 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1247$344 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1247$347 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.$eq$src/meta_mem.v:1247$350 ($eq).
Removed cell top.$flatten\memory.\mem.\row_0.\cell_1.$procmux$2829 ($mux).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:173$897 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:160$894 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:147$891 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:186$900 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:134$888 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:199$903 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:121$885 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:108$882 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:95$879 ($eq).
Removed top 4 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:82$876 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:212$906 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:59$869 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:59$866 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:59$863 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:59$860 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:59$857 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:59$854 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:59$851 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:59$848 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:59$845 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:59$842 ($eq).
Removed top 4 bits (of 5) from port B of cell top.$flatten\memory.\mem.\row_0.$eq$src/meta_memrow.v:59$839 ($eq).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_0.$shiftx$src/meta_memrow.v:0$836 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_0.$shiftx$src/meta_memrow.v:0$835 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_0.$shiftx$src/meta_memrow.v:0$834 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_0.$shiftx$src/meta_memrow.v:0$833 ($shiftx).
Removed cell top.$flatten\memory.\mem.\row_1.\cell_8.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_1.\cell_10.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_1.\cell_7.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_1.\cell_6.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_1.\cell_5.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_1.\cell_4.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_1.\cell_3.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_1.\cell_9.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_1.\cell_2.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_1.\cell_1.$procmux$2829 ($mux).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_1.$shiftx$src/meta_memrow.v:0$836 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_1.$shiftx$src/meta_memrow.v:0$835 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_1.$shiftx$src/meta_memrow.v:0$834 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_1.$shiftx$src/meta_memrow.v:0$833 ($shiftx).
Removed cell top.$flatten\memory.\mem.\row_2.\cell_8.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_2.\cell_10.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_2.\cell_7.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_2.\cell_6.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_2.\cell_5.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_2.\cell_4.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_2.\cell_3.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_2.\cell_9.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_2.\cell_2.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_2.\cell_1.$procmux$2829 ($mux).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_2.$shiftx$src/meta_memrow.v:0$836 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_2.$shiftx$src/meta_memrow.v:0$835 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_2.$shiftx$src/meta_memrow.v:0$834 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_2.$shiftx$src/meta_memrow.v:0$833 ($shiftx).
Removed cell top.$flatten\memory.\mem.\row_3.\cell_8.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_3.\cell_10.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_3.\cell_7.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_3.\cell_6.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_3.\cell_5.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_3.\cell_4.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_3.\cell_3.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_3.\cell_9.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_3.\cell_2.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_3.\cell_1.$procmux$2829 ($mux).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_3.$shiftx$src/meta_memrow.v:0$836 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_3.$shiftx$src/meta_memrow.v:0$835 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_3.$shiftx$src/meta_memrow.v:0$834 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_3.$shiftx$src/meta_memrow.v:0$833 ($shiftx).
Removed cell top.$flatten\memory.\mem.\row_4.\cell_8.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_4.\cell_10.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_4.\cell_7.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_4.\cell_6.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_4.\cell_5.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_4.\cell_4.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_4.\cell_3.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_4.\cell_9.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_4.\cell_2.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_4.\cell_1.$procmux$2829 ($mux).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_4.$shiftx$src/meta_memrow.v:0$836 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_4.$shiftx$src/meta_memrow.v:0$835 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_4.$shiftx$src/meta_memrow.v:0$834 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_4.$shiftx$src/meta_memrow.v:0$833 ($shiftx).
Removed cell top.$flatten\memory.\mem.\row_5.\cell_8.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_5.\cell_10.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_5.\cell_7.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_5.\cell_6.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_5.\cell_5.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_5.\cell_4.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_5.\cell_3.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_5.\cell_9.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_5.\cell_2.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_5.\cell_1.$procmux$2829 ($mux).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_5.$shiftx$src/meta_memrow.v:0$836 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_5.$shiftx$src/meta_memrow.v:0$835 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_5.$shiftx$src/meta_memrow.v:0$834 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_5.$shiftx$src/meta_memrow.v:0$833 ($shiftx).
Removed cell top.$flatten\memory.\mem.\row_6.\cell_8.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_6.\cell_10.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_6.\cell_7.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_6.\cell_6.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_6.\cell_5.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_6.\cell_4.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_6.\cell_3.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_6.\cell_9.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_6.\cell_2.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_6.\cell_1.$procmux$2829 ($mux).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_6.$shiftx$src/meta_memrow.v:0$836 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_6.$shiftx$src/meta_memrow.v:0$835 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_6.$shiftx$src/meta_memrow.v:0$834 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_6.$shiftx$src/meta_memrow.v:0$833 ($shiftx).
Removed cell top.$flatten\memory.\mem.\row_7.\cell_8.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_7.\cell_10.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_7.\cell_7.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_7.\cell_6.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_7.\cell_5.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_7.\cell_4.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_7.\cell_3.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_7.\cell_9.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_7.\cell_2.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_7.\cell_1.$procmux$2829 ($mux).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_7.$shiftx$src/meta_memrow.v:0$836 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_7.$shiftx$src/meta_memrow.v:0$835 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_7.$shiftx$src/meta_memrow.v:0$834 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_7.$shiftx$src/meta_memrow.v:0$833 ($shiftx).
Removed cell top.$flatten\memory.\mem.\row_8.\cell_8.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_8.\cell_10.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_8.\cell_7.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_8.\cell_6.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_8.\cell_5.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_8.\cell_4.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_8.\cell_3.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_8.\cell_9.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_8.\cell_2.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_8.\cell_1.$procmux$2829 ($mux).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_8.$shiftx$src/meta_memrow.v:0$836 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_8.$shiftx$src/meta_memrow.v:0$835 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_8.$shiftx$src/meta_memrow.v:0$834 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_8.$shiftx$src/meta_memrow.v:0$833 ($shiftx).
Removed cell top.$flatten\memory.\mem.\row_9.\cell_8.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_9.\cell_10.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_9.\cell_7.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_9.\cell_6.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_9.\cell_5.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_9.\cell_4.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_9.\cell_3.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_9.\cell_9.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_9.\cell_2.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_9.\cell_1.$procmux$2829 ($mux).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_9.$shiftx$src/meta_memrow.v:0$836 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_9.$shiftx$src/meta_memrow.v:0$835 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_9.$shiftx$src/meta_memrow.v:0$834 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_9.$shiftx$src/meta_memrow.v:0$833 ($shiftx).
Removed cell top.$flatten\memory.\mem.\row_10.\cell_8.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_10.\cell_10.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_10.\cell_7.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_10.\cell_6.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_10.\cell_5.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_10.\cell_4.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_10.\cell_3.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_10.\cell_9.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_10.\cell_2.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_10.\cell_1.$procmux$2829 ($mux).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_10.$shiftx$src/meta_memrow.v:0$836 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_10.$shiftx$src/meta_memrow.v:0$835 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_10.$shiftx$src/meta_memrow.v:0$834 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_10.$shiftx$src/meta_memrow.v:0$833 ($shiftx).
Removed cell top.$flatten\memory.\mem.\row_11.\cell_8.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_11.\cell_10.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_11.\cell_7.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_11.\cell_6.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_11.\cell_5.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_11.\cell_4.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_11.\cell_3.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_11.\cell_9.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_11.\cell_2.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_11.\cell_1.$procmux$2829 ($mux).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_11.$shiftx$src/meta_memrow.v:0$836 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_11.$shiftx$src/meta_memrow.v:0$835 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_11.$shiftx$src/meta_memrow.v:0$834 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_11.$shiftx$src/meta_memrow.v:0$833 ($shiftx).
Removed cell top.$flatten\memory.\mem.\row_12.\cell_8.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_12.\cell_10.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_12.\cell_7.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_12.\cell_6.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_12.\cell_5.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_12.\cell_4.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_12.\cell_3.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_12.\cell_9.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_12.\cell_2.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_12.\cell_1.$procmux$2829 ($mux).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_12.$shiftx$src/meta_memrow.v:0$836 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_12.$shiftx$src/meta_memrow.v:0$835 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_12.$shiftx$src/meta_memrow.v:0$834 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_12.$shiftx$src/meta_memrow.v:0$833 ($shiftx).
Removed cell top.$flatten\memory.\mem.\row_13.\cell_8.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_13.\cell_10.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_13.\cell_7.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_13.\cell_6.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_13.\cell_5.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_13.\cell_4.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_13.\cell_3.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_13.\cell_9.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_13.\cell_2.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_13.\cell_1.$procmux$2829 ($mux).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_13.$shiftx$src/meta_memrow.v:0$836 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_13.$shiftx$src/meta_memrow.v:0$835 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_13.$shiftx$src/meta_memrow.v:0$834 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_13.$shiftx$src/meta_memrow.v:0$833 ($shiftx).
Removed cell top.$flatten\memory.\mem.\row_14.\cell_8.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_14.\cell_10.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_14.\cell_7.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_14.\cell_6.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_14.\cell_5.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_14.\cell_4.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_14.\cell_3.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_14.\cell_9.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_14.\cell_2.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_14.\cell_1.$procmux$2829 ($mux).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_14.$shiftx$src/meta_memrow.v:0$836 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_14.$shiftx$src/meta_memrow.v:0$835 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_14.$shiftx$src/meta_memrow.v:0$834 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_14.$shiftx$src/meta_memrow.v:0$833 ($shiftx).
Removed cell top.$flatten\memory.\mem.\row_15.\cell_8.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_15.\cell_10.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_15.\cell_7.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_15.\cell_6.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_15.\cell_5.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_15.\cell_4.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_15.\cell_3.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_15.\cell_9.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_15.\cell_2.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_15.\cell_1.$procmux$2829 ($mux).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_15.$shiftx$src/meta_memrow.v:0$836 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_15.$shiftx$src/meta_memrow.v:0$835 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_15.$shiftx$src/meta_memrow.v:0$834 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_15.$shiftx$src/meta_memrow.v:0$833 ($shiftx).
Removed cell top.$flatten\memory.\mem.\row_16.\cell_8.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_16.\cell_10.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_16.\cell_7.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_16.\cell_6.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_16.\cell_5.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_16.\cell_4.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_16.\cell_3.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_16.\cell_9.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_16.\cell_2.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_16.\cell_1.$procmux$2829 ($mux).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_16.$shiftx$src/meta_memrow.v:0$836 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_16.$shiftx$src/meta_memrow.v:0$835 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_16.$shiftx$src/meta_memrow.v:0$834 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_16.$shiftx$src/meta_memrow.v:0$833 ($shiftx).
Removed cell top.$flatten\memory.\mem.\row_17.\cell_8.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_17.\cell_10.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_17.\cell_7.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_17.\cell_6.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_17.\cell_5.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_17.\cell_4.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_17.\cell_3.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_17.\cell_9.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_17.\cell_2.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_17.\cell_1.$procmux$2829 ($mux).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_17.$shiftx$src/meta_memrow.v:0$836 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_17.$shiftx$src/meta_memrow.v:0$835 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_17.$shiftx$src/meta_memrow.v:0$834 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_17.$shiftx$src/meta_memrow.v:0$833 ($shiftx).
Removed cell top.$flatten\memory.\mem.\row_18.\cell_8.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_18.\cell_10.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_18.\cell_7.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_18.\cell_6.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_18.\cell_5.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_18.\cell_4.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_18.\cell_3.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_18.\cell_9.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_18.\cell_2.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_18.\cell_1.$procmux$2829 ($mux).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_18.$shiftx$src/meta_memrow.v:0$836 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_18.$shiftx$src/meta_memrow.v:0$835 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_18.$shiftx$src/meta_memrow.v:0$834 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_18.$shiftx$src/meta_memrow.v:0$833 ($shiftx).
Removed cell top.$flatten\memory.\mem.\row_19.\cell_8.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_19.\cell_10.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_19.\cell_7.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_19.\cell_6.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_19.\cell_5.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_19.\cell_4.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_19.\cell_3.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_19.\cell_9.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_19.\cell_2.$procmux$2829 ($mux).
Removed cell top.$flatten\memory.\mem.\row_19.\cell_1.$procmux$2829 ($mux).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_19.$shiftx$src/meta_memrow.v:0$836 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_19.$shiftx$src/meta_memrow.v:0$835 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_19.$shiftx$src/meta_memrow.v:0$834 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_19.$shiftx$src/meta_memrow.v:0$833 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_20.$shiftx$src/meta_memrow.v:0$836 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_20.$shiftx$src/meta_memrow.v:0$835 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_20.$shiftx$src/meta_memrow.v:0$834 ($shiftx).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\mem.\row_20.$shiftx$src/meta_memrow.v:0$833 ($shiftx).
Removed top 1 bits (of 6) from port A of cell top.$flatten\memory.\sh.$lt$src/shifter.v:48$831 ($lt).
Removed top 1 bits (of 6) from port A of cell top.$flatten\memory.\sh.$lt$src/shifter.v:47$830 ($lt).
Removed top 1 bits (of 6) from port A of cell top.$flatten\memory.\sh.$lt$src/shifter.v:46$829 ($lt).
Removed top 3 bits (of 6) from mux cell top.$flatten\memory.\sh.$ternary$src/shifter.v:10$754 ($mux).
Removed top 3 bits (of 6) from mux cell top.$flatten\memory.\sh.$ternary$src/shifter.v:10$755 ($mux).
Removed top 3 bits (of 6) from mux cell top.$flatten\memory.\sh.$ternary$src/shifter.v:10$756 ($mux).
Removed top 3 bits (of 6) from mux cell top.$flatten\memory.\sh.$ternary$src/shifter.v:10$757 ($mux).
Removed top 1 bits (of 6) from port A of cell top.$flatten\memory.\sh.$lt$src/shifter.v:45$828 ($lt).
Removed top 1 bits (of 6) from port A of cell top.$flatten\memory.\sh.$lt$src/shifter.v:44$827 ($lt).
Removed top 1 bits (of 6) from port A of cell top.$flatten\memory.\sh.$lt$src/shifter.v:43$826 ($lt).
Removed top 1 bits (of 6) from port A of cell top.$flatten\memory.\sh.$lt$src/shifter.v:42$825 ($lt).
Removed top 2 bits (of 6) from mux cell top.$flatten\memory.\sh.$ternary$src/shifter.v:12$762 ($mux).
Removed top 2 bits (of 6) from mux cell top.$flatten\memory.\sh.$ternary$src/shifter.v:12$763 ($mux).
Removed top 2 bits (of 6) from mux cell top.$flatten\memory.\sh.$ternary$src/shifter.v:12$764 ($mux).
Removed top 2 bits (of 6) from mux cell top.$flatten\memory.\sh.$ternary$src/shifter.v:12$765 ($mux).
Removed top 2 bits (of 6) from port A of cell top.$flatten\memory.\sh.$lt$src/shifter.v:41$824 ($lt).
Removed top 2 bits (of 6) from port A of cell top.$flatten\memory.\sh.$lt$src/shifter.v:40$823 ($lt).
Removed top 2 bits (of 6) from port A of cell top.$flatten\memory.\sh.$lt$src/shifter.v:39$822 ($lt).
Removed top 2 bits (of 6) from port A of cell top.$flatten\memory.\sh.$lt$src/shifter.v:38$821 ($lt).
Removed top 2 bits (of 6) from mux cell top.$flatten\memory.\sh.$ternary$src/shifter.v:14$770 ($mux).
Removed top 2 bits (of 6) from mux cell top.$flatten\memory.\sh.$ternary$src/shifter.v:14$771 ($mux).
Removed top 2 bits (of 6) from mux cell top.$flatten\memory.\sh.$ternary$src/shifter.v:14$772 ($mux).
Removed top 2 bits (of 6) from mux cell top.$flatten\memory.\sh.$ternary$src/shifter.v:14$773 ($mux).
Removed top 2 bits (of 6) from port A of cell top.$flatten\memory.\sh.$lt$src/shifter.v:37$820 ($lt).
Removed top 2 bits (of 6) from port A of cell top.$flatten\memory.\sh.$lt$src/shifter.v:36$819 ($lt).
Removed top 2 bits (of 6) from port A of cell top.$flatten\memory.\sh.$lt$src/shifter.v:35$818 ($lt).
Removed top 2 bits (of 6) from port A of cell top.$flatten\memory.\sh.$lt$src/shifter.v:34$817 ($lt).
Removed top 1 bits (of 6) from mux cell top.$flatten\memory.\sh.$ternary$src/shifter.v:16$778 ($mux).
Removed top 1 bits (of 6) from mux cell top.$flatten\memory.\sh.$ternary$src/shifter.v:16$779 ($mux).
Removed top 1 bits (of 6) from mux cell top.$flatten\memory.\sh.$ternary$src/shifter.v:16$780 ($mux).
Removed top 1 bits (of 6) from mux cell top.$flatten\memory.\sh.$ternary$src/shifter.v:16$781 ($mux).
Removed top 3 bits (of 6) from port A of cell top.$flatten\memory.\sh.$lt$src/shifter.v:33$816 ($lt).
Removed top 3 bits (of 6) from port A of cell top.$flatten\memory.\sh.$lt$src/shifter.v:32$815 ($lt).
Removed top 3 bits (of 6) from port A of cell top.$flatten\memory.\sh.$lt$src/shifter.v:31$814 ($lt).
Removed top 3 bits (of 6) from port A of cell top.$flatten\memory.\sh.$lt$src/shifter.v:30$813 ($lt).
Removed top 1 bits (of 6) from mux cell top.$flatten\memory.\sh.$ternary$src/shifter.v:18$786 ($mux).
Removed top 1 bits (of 6) from mux cell top.$flatten\memory.\sh.$ternary$src/shifter.v:18$787 ($mux).
Removed top 1 bits (of 6) from mux cell top.$flatten\memory.\sh.$ternary$src/shifter.v:18$788 ($mux).
Removed top 1 bits (of 6) from mux cell top.$flatten\memory.\sh.$ternary$src/shifter.v:18$789 ($mux).
Removed top 4 bits (of 6) from port A of cell top.$flatten\memory.\sh.$lt$src/shifter.v:29$812 ($lt).
Removed top 4 bits (of 6) from port A of cell top.$flatten\memory.\sh.$lt$src/shifter.v:28$811 ($lt).
Removed top 5 bits (of 6) from port A of cell top.$flatten\memory.\sh.$lt$src/shifter.v:27$810 ($lt).
Removed top 1 bits (of 6) from mux cell top.$flatten\memory.\sh.$ternary$src/shifter.v:20$793 ($mux).
Removed top 1 bits (of 6) from mux cell top.$flatten\memory.\sh.$ternary$src/shifter.v:20$794 ($mux).
Removed top 3 bits (of 6) from port A of cell top.$flatten\memory.\sh.$gt$src/shifter.v:23$796 ($gt).
Removed top 5 bits (of 6) from port B of cell top.$flatten\memory.\sh.$gt$src/shifter.v:23$796 ($gt).
Removed top 2 bits (of 6) from port A of cell top.$flatten\memory.\sh.$gt$src/shifter.v:23$797 ($gt).
Removed top 5 bits (of 6) from port B of cell top.$flatten\memory.\sh.$gt$src/shifter.v:23$797 ($gt).
Removed top 2 bits (of 6) from port A of cell top.$flatten\memory.\sh.$gt$src/shifter.v:23$798 ($gt).
Removed top 5 bits (of 6) from port B of cell top.$flatten\memory.\sh.$gt$src/shifter.v:23$798 ($gt).
Removed top 1 bits (of 6) from port A of cell top.$flatten\memory.\sh.$gt$src/shifter.v:23$799 ($gt).
Removed top 5 bits (of 6) from port B of cell top.$flatten\memory.\sh.$gt$src/shifter.v:23$799 ($gt).
Removed top 1 bits (of 6) from port A of cell top.$flatten\memory.\sh.$gt$src/shifter.v:23$800 ($gt).
Removed top 5 bits (of 6) from port B of cell top.$flatten\memory.\sh.$gt$src/shifter.v:23$800 ($gt).
Removed top 1 bits (of 6) from port A of cell top.$flatten\memory.\sh.$gt$src/shifter.v:23$801 ($gt).
Removed top 5 bits (of 6) from port B of cell top.$flatten\memory.\sh.$gt$src/shifter.v:23$801 ($gt).
Removed top 1 bits (of 6) from mux cell top.$flatten\memory.\sh.$ternary$src/shifter.v:23$802 ($mux).
Removed top 1 bits (of 6) from mux cell top.$flatten\memory.\sh.$ternary$src/shifter.v:23$803 ($mux).
Removed top 1 bits (of 6) from mux cell top.$flatten\memory.\sh.$ternary$src/shifter.v:23$804 ($mux).
Removed top 1 bits (of 6) from mux cell top.$flatten\memory.\sh.$ternary$src/shifter.v:23$805 ($mux).
Removed top 1 bits (of 6) from mux cell top.$flatten\memory.\sh.$ternary$src/shifter.v:23$806 ($mux).
Removed top 1 bits (of 6) from mux cell top.$flatten\memory.\sh.$ternary$src/shifter.v:23$807 ($mux).
Removed top 5 bits (of 6) from port A of cell top.$flatten\memory.\sh.$lt$src/shifter.v:26$809 ($lt).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\sh.$lt$src/shifter.v:26$809 ($lt).
Removed cell top.$flatten\memory.$procmux$2644 ($mux).
Removed cell top.$flatten\memory.$procmux$2641 ($mux).
Removed cell top.$flatten\memory.$procmux$2638 ($mux).
Removed cell top.$flatten\memory.$procmux$2550 ($mux).
Removed cell top.$flatten\memory.$procmux$2548 ($mux).
Removed cell top.$flatten\memory.$procmux$2531 ($mux).
Removed cell top.$flatten\memory.$procmux$2528 ($mux).
Removed cell top.$flatten\memory.$procmux$2526 ($mux).
Removed cell top.$flatten\memory.$procmux$2524 ($mux).
Removed cell top.$flatten\memory.$procmux$2522 ($mux).
Removed cell top.$flatten\memory.$procmux$2513 ($mux).
Removed cell top.$flatten\memory.$procmux$2500 ($mux).
Removed cell top.$flatten\memory.$procmux$2497 ($mux).
Removed cell top.$flatten\memory.$procmux$2495 ($mux).
Removed cell top.$flatten\memory.$procmux$2493 ($mux).
Removed cell top.$flatten\memory.$procmux$2491 ($mux).
Removed cell top.$flatten\memory.$procmux$2482 ($mux).
Removed cell top.$flatten\memory.$procmux$2473 ($mux).
Removed cell top.$flatten\memory.$procmux$2470 ($mux).
Removed cell top.$flatten\memory.$procmux$2468 ($mux).
Removed cell top.$flatten\memory.$procmux$2466 ($mux).
Removed cell top.$flatten\memory.$procmux$2464 ($mux).
Removed cell top.$flatten\memory.$procmux$2453 ($mux).
Removed cell top.$flatten\memory.$procmux$2428 ($mux).
Removed cell top.$flatten\memory.$procmux$2376 ($mux).
Removed cell top.$flatten\memory.$procmux$2373 ($mux).
Removed cell top.$flatten\memory.$procmux$2371 ($mux).
Removed cell top.$flatten\memory.$procmux$2325 ($mux).
Removed cell top.$flatten\memory.$procmux$2311 ($mux).
Removed cell top.$flatten\memory.$procmux$2308 ($mux).
Removed top 31 bits (of 32) from port B of cell top.$flatten\memory.$sub$src/blockmemory.v:223$1402 ($sub).
Removed top 26 bits (of 32) from port Y of cell top.$flatten\memory.$sub$src/blockmemory.v:223$1402 ($sub).
Removed top 31 bits (of 32) from port B of cell top.$flatten\memory.$sub$src/blockmemory.v:215$1400 ($sub).
Removed top 26 bits (of 32) from port Y of cell top.$flatten\memory.$sub$src/blockmemory.v:215$1400 ($sub).
Removed top 31 bits (of 32) from port B of cell top.$flatten\memory.$sub$src/blockmemory.v:207$1398 ($sub).
Removed top 26 bits (of 32) from port Y of cell top.$flatten\memory.$sub$src/blockmemory.v:207$1398 ($sub).
Removed top 31 bits (of 32) from port B of cell top.$flatten\memory.$sub$src/blockmemory.v:199$1396 ($sub).
Removed top 26 bits (of 32) from port Y of cell top.$flatten\memory.$sub$src/blockmemory.v:199$1396 ($sub).
Removed top 3 bits (of 4) from port B of cell top.$flatten\memory.$eq$src/blockmemory.v:189$1393 ($eq).
Removed top 31 bits (of 32) from port B of cell top.$flatten\memory.$gt$src/blockmemory.v:188$1392 ($gt).
Removed top 31 bits (of 32) from port B of cell top.$flatten\memory.$gt$src/blockmemory.v:182$1390 ($gt).
Removed top 31 bits (of 32) from port B of cell top.$flatten\memory.$gt$src/blockmemory.v:179$1388 ($gt).
Removed top 26 bits (of 32) from port B of cell top.$flatten\memory.$ge$src/blockmemory.v:140$1378 ($ge).
Removed top 26 bits (of 32) from port B of cell top.$flatten\memory.$sub$src/blockmemory.v:136$1376 ($sub).
Removed top 26 bits (of 32) from port Y of cell top.$flatten\memory.$sub$src/blockmemory.v:136$1376 ($sub).
Removed top 26 bits (of 32) from port B of cell top.$flatten\memory.$lt$src/blockmemory.v:135$1374 ($lt).
Removed top 26 bits (of 32) from port B of cell top.$flatten\memory.$ge$src/blockmemory.v:135$1373 ($ge).
Removed top 27 bits (of 32) from port B of cell top.$flatten\memory.$sub$src/blockmemory.v:132$1371 ($sub).
Removed top 26 bits (of 32) from port Y of cell top.$flatten\memory.$sub$src/blockmemory.v:132$1371 ($sub).
Removed top 26 bits (of 32) from port B of cell top.$flatten\memory.$lt$src/blockmemory.v:130$1369 ($lt).
Removed top 27 bits (of 32) from port B of cell top.$flatten\memory.$ge$src/blockmemory.v:130$1368 ($ge).
Removed top 27 bits (of 32) from port B of cell top.$flatten\memory.$lt$src/blockmemory.v:125$1366 ($lt).
Removed top 3 bits (of 23) from mux cell top.$flatten\memory.$ternary$src/blockmemory.v:66$1361 ($mux).
Removed top 2 bits (of 8) from port B of cell top.$auto$fsm_map.cc:77:implement_pattern_cache$3639 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$auto$opt_dff.cc:198:make_patterns_logic$5655 ($ne).
Removed top 2 bits (of 3) from port B of cell top.$flatten\vcell.\ishaper.$eq$src/tetron_I.v:41$1089 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$flatten\vcell.\ishaper.$eq$src/tetron_I.v:52$1090 ($eq).
Removed cell top.$flatten\vcell.\ishaper.$procmux$2690 ($mux).
Removed top 3 bits (of 5) from mux cell top.$flatten\vcell.\ishaper.$procmux$2692 ($mux).
Removed top 3 bits (of 5) from mux cell top.$flatten\vcell.\ishaper.$procmux$2694 ($mux).
Removed cell top.$flatten\vcell.\ishaper.$procmux$2701 ($mux).
Removed top 3 bits (of 5) from mux cell top.$flatten\vcell.\ishaper.$procmux$2703 ($mux).
Removed top 3 bits (of 5) from mux cell top.$flatten\vcell.\ishaper.$procmux$2705 ($mux).
Removed cell top.$flatten\vcell.\ishaper.$procmux$2712 ($mux).
Removed top 4 bits (of 5) from mux cell top.$flatten\vcell.\ishaper.$procmux$2714 ($mux).
Removed cell top.$flatten\vcell.\ishaper.$procmux$2723 ($mux).
Removed cell top.$flatten\vcell.\ishaper.$procmux$2734 ($mux).
Removed cell top.$flatten\vcell.\ishaper.$procmux$2745 ($mux).
Removed cell top.$flatten\vcell.\ishaper.$procmux$2758 ($mux).
Removed cell top.$flatten\vcell.\ishaper.$procmux$2760 ($mux).
Removed top 4 bits (of 5) from mux cell top.$flatten\vcell.\ishaper.$procmux$2771 ($mux).
Removed cell top.$flatten\vcell.$procmux$2253 ($mux).
Removed cell top.$flatten\vcell.$procmux$2250 ($mux).
Removed cell top.$flatten\vcell.$procmux$2247 ($mux).
Removed cell top.$flatten\vcell.$procmux$2244 ($mux).
Removed cell top.$flatten\vcell.$procmux$2241 ($mux).
Removed cell top.$flatten\vcell.$procmux$2238 ($mux).
Removed cell top.$flatten\vcell.$procmux$2232 ($mux).
Removed cell top.$flatten\vcell.$procmux$2220 ($mux).
Removed cell top.$flatten\vcell.$procmux$2199 ($mux).
Removed cell top.$flatten\vcell.$procmux$2183 ($mux).
Removed cell top.$flatten\vcell.$procmux$2174 ($mux).
Removed cell top.$flatten\vcell.$procmux$2157 ($mux).
Removed cell top.$flatten\vcell.$procmux$2154 ($mux).
Removed cell top.$flatten\vcell.$procmux$2151 ($mux).
Removed cell top.$flatten\vcell.$procmux$2145 ($mux).
Removed cell top.$flatten\vcell.$procmux$2139 ($mux).
Removed cell top.$flatten\vcell.$procmux$2129 ($mux).
Removed cell top.$flatten\vcell.$procmux$2127 ($mux).
Removed cell top.$flatten\vcell.$procmux$2120 ($mux).
Removed cell top.$flatten\vcell.$procmux$2094 ($mux).
Removed cell top.$flatten\vcell.$procmux$2074 ($mux).
Removed cell top.$flatten\vcell.$procmux$2070 ($mux).
Removed cell top.$flatten\vcell.$procmux$2061 ($mux).
Removed cell top.$flatten\vcell.$procmux$2053 ($mux).
Removed cell top.$flatten\vcell.$procmux$2025 ($mux).
Removed cell top.$flatten\vcell.$procmux$2015 ($mux).
Removed cell top.$flatten\vcell.$procmux$2008 ($mux).
Removed cell top.$flatten\vcell.$procmux$1992 ($mux).
Removed cell top.$flatten\vcell.$procmux$1964 ($mux).
Removed cell top.$flatten\vcell.$procmux$1962 ($mux).
Removed top 31 bits (of 32) from port B of cell top.$flatten\vcell.$gt$src/volatile_cell_storage.v:198$1917 ($gt).
Removed top 1 bits (of 3) from port B of cell top.$flatten\vcell.$eq$src/volatile_cell_storage.v:194$1914 ($eq).
Removed top 25 bits (of 26) from port B of cell top.$flatten\vcell.$and$src/volatile_cell_storage.v:192$1911 ($and).
Removed top 25 bits (of 26) from port A of cell top.$flatten\vcell.$and$src/volatile_cell_storage.v:192$1909 ($and).
Removed top 25 bits (of 26) from port B of cell top.$flatten\vcell.$and$src/volatile_cell_storage.v:186$1903 ($and).
Removed top 25 bits (of 26) from port A of cell top.$flatten\vcell.$and$src/volatile_cell_storage.v:186$1901 ($and).
Removed top 3 bits (of 5) from port B of cell top.$flatten\vcell.$add$src/volatile_cell_storage.v:61$1866 ($add).
Removed top 4 bits (of 5) from port B of cell top.$flatten\vcell.$add$src/volatile_cell_storage.v:60$1861 ($add).
Removed top 4 bits (of 5) from port B of cell top.$flatten\vcell.$add$src/volatile_cell_storage.v:58$1851 ($add).
Removed top 3 bits (of 5) from port B of cell top.$flatten\vcell.$add$src/volatile_cell_storage.v:57$1846 ($add).
Removed top 4 bits (of 5) from port B of cell top.$flatten\vcell.$add$src/volatile_cell_storage.v:56$1841 ($add).
Removed top 4 bits (of 5) from port B of cell top.$flatten\vcell.$add$src/volatile_cell_storage.v:54$1831 ($add).
Removed top 26 bits (of 32) from port B of cell top.$flatten\screen_mngr.$lt$src/screen_manager.v:12$694 ($lt).
Removed top 29 bits (of 32) from port B of cell top.$flatten\screen_mngr.$ge$src/screen_manager.v:12$693 ($ge).
Removed top 22 bits (of 32) from port B of cell top.$flatten\screen_mngr.$lt$src/screen_manager.v:11$687 ($lt).
Removed top 26 bits (of 32) from port B of cell top.$flatten\screen_mngr.$ge$src/screen_manager.v:11$686 ($ge).
Removed top 3 bits (of 24) from port B of cell top.$flatten\tdisplay.$sub$src/gamespeed_display.v:31$735 ($sub).
Removed top 4 bits (of 9) from port A of cell top.$flatten\tdisplay.$mul$src/gamespeed_display.v:18$729 ($mul).
Removed top 6 bits (of 18) from mux cell top.$flatten\tdisplay.$ternary$src/gamespeed_display.v:17$728 ($mux).
Removed top 9 bits (of 18) from mux cell top.$flatten\tdisplay.$ternary$src/gamespeed_display.v:17$726 ($mux).
Removed top 1 bits (of 10) from port A of cell top.$flatten\tdisplay.$sub$src/gamespeed_display.v:17$720 ($sub).
Removed top 1 bits (of 10) from port A of cell top.$flatten\tdisplay.$sub$src/gamespeed_display.v:17$718 ($sub).
Removed top 26 bits (of 32) from port B of cell top.$flatten\tdisplay.$lt$src/gamespeed_display.v:14$714 ($lt).
Removed top 29 bits (of 32) from port B of cell top.$flatten\tdisplay.$ge$src/gamespeed_display.v:14$713 ($ge).
Removed top 1 bits (of 3) from port B of cell top.$auto$opt_dff.cc:198:make_patterns_logic$4446 ($ne).
Removed top 1 bits (of 6) from port B of cell top.$auto$opt_dff.cc:198:make_patterns_logic$4454 ($ne).
Removed top 1 bits (of 6) from port B of cell top.$auto$opt_dff.cc:198:make_patterns_logic$4499 ($ne).
Removed top 1 bits (of 3) from port B of cell top.$auto$opt_dff.cc:198:make_patterns_logic$4476 ($ne).
Removed top 1 bits (of 5) from port B of cell top.$auto$opt_dff.cc:198:make_patterns_logic$4501 ($ne).
Removed top 1 bits (of 4) from port B of cell top.$auto$opt_dff.cc:198:make_patterns_logic$4408 ($ne).
Removed top 1 bits (of 7) from port B of cell top.$auto$opt_dff.cc:198:make_patterns_logic$4406 ($ne).
Removed top 1 bits (of 4) from port B of cell top.$auto$opt_dff.cc:198:make_patterns_logic$5677 ($ne).
Removed top 30 bits (of 32) from port B of cell top.$flatten\sdisplay.\s8.$gt$src/digitdisplay.v:17$398 ($gt).
Removed top 26 bits (of 32) from port B of cell top.$flatten\sdisplay.\s8.$lt$src/digitdisplay.v:17$399 ($lt).
Removed top 2 bits (of 4) from port B of cell top.$flatten\sdisplay.\s8.$eq$src/digitdisplay.v:18$403 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$flatten\sdisplay.\s8.$eq$src/digitdisplay.v:18$405 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\sdisplay.\s8.$eq$src/digitdisplay.v:18$407 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\sdisplay.\s8.$eq$src/digitdisplay.v:18$409 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\sdisplay.\s8.$eq$src/digitdisplay.v:18$411 ($eq).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s8.$ternary$src/digitdisplay.v:18$417 ($mux).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s8.$ternary$src/digitdisplay.v:18$418 ($mux).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s8.$ternary$src/digitdisplay.v:23$441 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s8.$or$src/digitdisplay.v:23$442 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s8.$or$src/digitdisplay.v:23$442 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s8.$or$src/digitdisplay.v:23$442 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s8.$ternary$src/digitdisplay.v:23$443 ($mux).
Removed top 1 bits (of 4) from port B of cell top.$flatten\sdisplay.\s8.$eq$src/digitdisplay.v:28$454 ($eq).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s8.$ternary$src/digitdisplay.v:28$464 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s8.$or$src/digitdisplay.v:28$465 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s8.$or$src/digitdisplay.v:28$465 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s8.$or$src/digitdisplay.v:28$465 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s8.$ternary$src/digitdisplay.v:28$466 ($mux).
Removed top 29 bits (of 32) from port B of cell top.$flatten\sdisplay.\s8.$lt$src/digitdisplay.v:32$471 ($lt).
Removed top 3 bits (of 4) from port B of cell top.$flatten\sdisplay.\s8.$eq$src/digitdisplay.v:33$475 ($eq).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s8.$ternary$src/digitdisplay.v:33$489 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s8.$or$src/digitdisplay.v:33$490 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s8.$or$src/digitdisplay.v:33$490 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s8.$or$src/digitdisplay.v:33$490 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s8.$ternary$src/digitdisplay.v:33$491 ($mux).
Removed top 26 bits (of 32) from port B of cell top.$flatten\sdisplay.\s8.$gt$src/digitdisplay.v:37$495 ($gt).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s8.$ternary$src/digitdisplay.v:38$510 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s8.$or$src/digitdisplay.v:38$511 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s8.$or$src/digitdisplay.v:38$511 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s8.$or$src/digitdisplay.v:38$511 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s8.$ternary$src/digitdisplay.v:38$512 ($mux).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s8.$ternary$src/digitdisplay.v:43$527 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s8.$or$src/digitdisplay.v:43$528 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s8.$or$src/digitdisplay.v:43$528 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s8.$or$src/digitdisplay.v:43$528 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s8.$ternary$src/digitdisplay.v:43$529 ($mux).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s8.$ternary$src/digitdisplay.v:47$554 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s8.$or$src/digitdisplay.v:47$555 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s8.$or$src/digitdisplay.v:47$555 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s8.$or$src/digitdisplay.v:47$555 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s8.$ternary$src/digitdisplay.v:47$556 ($mux).
Removed top 30 bits (of 32) from port B of cell top.$flatten\sdisplay.\s7.$gt$src/digitdisplay.v:17$398 ($gt).
Removed top 26 bits (of 32) from port B of cell top.$flatten\sdisplay.\s7.$lt$src/digitdisplay.v:17$399 ($lt).
Removed top 2 bits (of 4) from port B of cell top.$flatten\sdisplay.\s7.$eq$src/digitdisplay.v:18$403 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$flatten\sdisplay.\s7.$eq$src/digitdisplay.v:18$405 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\sdisplay.\s7.$eq$src/digitdisplay.v:18$407 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\sdisplay.\s7.$eq$src/digitdisplay.v:18$409 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\sdisplay.\s7.$eq$src/digitdisplay.v:18$411 ($eq).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s7.$ternary$src/digitdisplay.v:18$417 ($mux).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s7.$ternary$src/digitdisplay.v:18$418 ($mux).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s7.$ternary$src/digitdisplay.v:23$441 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s7.$or$src/digitdisplay.v:23$442 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s7.$or$src/digitdisplay.v:23$442 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s7.$or$src/digitdisplay.v:23$442 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s7.$ternary$src/digitdisplay.v:23$443 ($mux).
Removed top 1 bits (of 4) from port B of cell top.$flatten\sdisplay.\s7.$eq$src/digitdisplay.v:28$454 ($eq).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s7.$ternary$src/digitdisplay.v:28$464 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s7.$or$src/digitdisplay.v:28$465 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s7.$or$src/digitdisplay.v:28$465 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s7.$or$src/digitdisplay.v:28$465 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s7.$ternary$src/digitdisplay.v:28$466 ($mux).
Removed top 1 bits (of 3) from port B of cell top.$auto$opt_dff.cc:198:make_patterns_logic$5683 ($ne).
Removed top 29 bits (of 32) from port B of cell top.$flatten\sdisplay.\s7.$lt$src/digitdisplay.v:32$471 ($lt).
Removed top 3 bits (of 4) from port B of cell top.$flatten\sdisplay.\s7.$eq$src/digitdisplay.v:33$475 ($eq).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s7.$ternary$src/digitdisplay.v:33$489 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s7.$or$src/digitdisplay.v:33$490 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s7.$or$src/digitdisplay.v:33$490 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s7.$or$src/digitdisplay.v:33$490 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s7.$ternary$src/digitdisplay.v:33$491 ($mux).
Removed top 26 bits (of 32) from port B of cell top.$flatten\sdisplay.\s7.$gt$src/digitdisplay.v:37$495 ($gt).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s7.$ternary$src/digitdisplay.v:38$510 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s7.$or$src/digitdisplay.v:38$511 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s7.$or$src/digitdisplay.v:38$511 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s7.$or$src/digitdisplay.v:38$511 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s7.$ternary$src/digitdisplay.v:38$512 ($mux).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s7.$ternary$src/digitdisplay.v:43$527 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s7.$or$src/digitdisplay.v:43$528 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s7.$or$src/digitdisplay.v:43$528 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s7.$or$src/digitdisplay.v:43$528 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s7.$ternary$src/digitdisplay.v:43$529 ($mux).
Removed top 7 bits (of 10) from port B of cell top.$auto$opt_dff.cc:198:make_patterns_logic$5679 ($ne).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s7.$ternary$src/digitdisplay.v:47$554 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s7.$or$src/digitdisplay.v:47$555 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s7.$or$src/digitdisplay.v:47$555 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s7.$or$src/digitdisplay.v:47$555 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s7.$ternary$src/digitdisplay.v:47$556 ($mux).
Removed top 30 bits (of 32) from port B of cell top.$flatten\sdisplay.\s6.$gt$src/digitdisplay.v:17$398 ($gt).
Removed top 26 bits (of 32) from port B of cell top.$flatten\sdisplay.\s6.$lt$src/digitdisplay.v:17$399 ($lt).
Removed top 2 bits (of 4) from port B of cell top.$flatten\sdisplay.\s6.$eq$src/digitdisplay.v:18$403 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$flatten\sdisplay.\s6.$eq$src/digitdisplay.v:18$405 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\sdisplay.\s6.$eq$src/digitdisplay.v:18$407 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\sdisplay.\s6.$eq$src/digitdisplay.v:18$409 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\sdisplay.\s6.$eq$src/digitdisplay.v:18$411 ($eq).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s6.$ternary$src/digitdisplay.v:18$417 ($mux).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s6.$ternary$src/digitdisplay.v:18$418 ($mux).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s6.$ternary$src/digitdisplay.v:23$441 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s6.$or$src/digitdisplay.v:23$442 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s6.$or$src/digitdisplay.v:23$442 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s6.$or$src/digitdisplay.v:23$442 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s6.$ternary$src/digitdisplay.v:23$443 ($mux).
Removed top 1 bits (of 4) from port B of cell top.$flatten\sdisplay.\s6.$eq$src/digitdisplay.v:28$454 ($eq).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s6.$ternary$src/digitdisplay.v:28$464 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s6.$or$src/digitdisplay.v:28$465 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s6.$or$src/digitdisplay.v:28$465 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s6.$or$src/digitdisplay.v:28$465 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s6.$ternary$src/digitdisplay.v:28$466 ($mux).
Removed top 29 bits (of 32) from port B of cell top.$flatten\sdisplay.\s6.$lt$src/digitdisplay.v:32$471 ($lt).
Removed top 3 bits (of 4) from port B of cell top.$flatten\sdisplay.\s6.$eq$src/digitdisplay.v:33$475 ($eq).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s6.$ternary$src/digitdisplay.v:33$489 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s6.$or$src/digitdisplay.v:33$490 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s6.$or$src/digitdisplay.v:33$490 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s6.$or$src/digitdisplay.v:33$490 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s6.$ternary$src/digitdisplay.v:33$491 ($mux).
Removed top 6 bits (of 9) from port B of cell top.$auto$opt_dff.cc:198:make_patterns_logic$5695 ($ne).
Removed top 26 bits (of 32) from port B of cell top.$flatten\sdisplay.\s6.$gt$src/digitdisplay.v:37$495 ($gt).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s6.$ternary$src/digitdisplay.v:38$510 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s6.$or$src/digitdisplay.v:38$511 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s6.$or$src/digitdisplay.v:38$511 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s6.$or$src/digitdisplay.v:38$511 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s6.$ternary$src/digitdisplay.v:38$512 ($mux).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s6.$ternary$src/digitdisplay.v:43$527 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s6.$or$src/digitdisplay.v:43$528 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s6.$or$src/digitdisplay.v:43$528 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s6.$or$src/digitdisplay.v:43$528 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s6.$ternary$src/digitdisplay.v:43$529 ($mux).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s6.$ternary$src/digitdisplay.v:47$554 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s6.$or$src/digitdisplay.v:47$555 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s6.$or$src/digitdisplay.v:47$555 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s6.$or$src/digitdisplay.v:47$555 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s6.$ternary$src/digitdisplay.v:47$556 ($mux).
Removed top 30 bits (of 32) from port B of cell top.$flatten\sdisplay.\s5.$gt$src/digitdisplay.v:17$398 ($gt).
Removed top 26 bits (of 32) from port B of cell top.$flatten\sdisplay.\s5.$lt$src/digitdisplay.v:17$399 ($lt).
Removed top 2 bits (of 4) from port B of cell top.$flatten\sdisplay.\s5.$eq$src/digitdisplay.v:18$403 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$flatten\sdisplay.\s5.$eq$src/digitdisplay.v:18$405 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\sdisplay.\s5.$eq$src/digitdisplay.v:18$407 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\sdisplay.\s5.$eq$src/digitdisplay.v:18$409 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\sdisplay.\s5.$eq$src/digitdisplay.v:18$411 ($eq).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s5.$ternary$src/digitdisplay.v:18$417 ($mux).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s5.$ternary$src/digitdisplay.v:18$418 ($mux).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s5.$ternary$src/digitdisplay.v:23$441 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s5.$or$src/digitdisplay.v:23$442 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s5.$or$src/digitdisplay.v:23$442 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s5.$or$src/digitdisplay.v:23$442 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s5.$ternary$src/digitdisplay.v:23$443 ($mux).
Removed top 1 bits (of 4) from port B of cell top.$flatten\sdisplay.\s5.$eq$src/digitdisplay.v:28$454 ($eq).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s5.$ternary$src/digitdisplay.v:28$464 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s5.$or$src/digitdisplay.v:28$465 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s5.$or$src/digitdisplay.v:28$465 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s5.$or$src/digitdisplay.v:28$465 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s5.$ternary$src/digitdisplay.v:28$466 ($mux).
Removed top 29 bits (of 32) from port B of cell top.$flatten\sdisplay.\s5.$lt$src/digitdisplay.v:32$471 ($lt).
Removed top 3 bits (of 4) from port B of cell top.$flatten\sdisplay.\s5.$eq$src/digitdisplay.v:33$475 ($eq).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s5.$ternary$src/digitdisplay.v:33$489 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s5.$or$src/digitdisplay.v:33$490 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s5.$or$src/digitdisplay.v:33$490 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s5.$or$src/digitdisplay.v:33$490 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s5.$ternary$src/digitdisplay.v:33$491 ($mux).
Removed top 26 bits (of 32) from port B of cell top.$flatten\sdisplay.\s5.$gt$src/digitdisplay.v:37$495 ($gt).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s5.$ternary$src/digitdisplay.v:38$510 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s5.$or$src/digitdisplay.v:38$511 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s5.$or$src/digitdisplay.v:38$511 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s5.$or$src/digitdisplay.v:38$511 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s5.$ternary$src/digitdisplay.v:38$512 ($mux).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s5.$ternary$src/digitdisplay.v:43$527 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s5.$or$src/digitdisplay.v:43$528 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s5.$or$src/digitdisplay.v:43$528 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s5.$or$src/digitdisplay.v:43$528 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s5.$ternary$src/digitdisplay.v:43$529 ($mux).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s5.$ternary$src/digitdisplay.v:47$554 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s5.$or$src/digitdisplay.v:47$555 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s5.$or$src/digitdisplay.v:47$555 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s5.$or$src/digitdisplay.v:47$555 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s5.$ternary$src/digitdisplay.v:47$556 ($mux).
Removed top 30 bits (of 32) from port B of cell top.$flatten\sdisplay.\s4.$gt$src/digitdisplay.v:17$398 ($gt).
Removed top 26 bits (of 32) from port B of cell top.$flatten\sdisplay.\s4.$lt$src/digitdisplay.v:17$399 ($lt).
Removed top 2 bits (of 4) from port B of cell top.$flatten\sdisplay.\s4.$eq$src/digitdisplay.v:18$403 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$flatten\sdisplay.\s4.$eq$src/digitdisplay.v:18$405 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\sdisplay.\s4.$eq$src/digitdisplay.v:18$407 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\sdisplay.\s4.$eq$src/digitdisplay.v:18$409 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\sdisplay.\s4.$eq$src/digitdisplay.v:18$411 ($eq).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s4.$ternary$src/digitdisplay.v:18$417 ($mux).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s4.$ternary$src/digitdisplay.v:18$418 ($mux).
Removed top 1 bits (of 4) from port B of cell top.$auto$opt_dff.cc:198:make_patterns_logic$5727 ($ne).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s4.$ternary$src/digitdisplay.v:23$441 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s4.$or$src/digitdisplay.v:23$442 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s4.$or$src/digitdisplay.v:23$442 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s4.$or$src/digitdisplay.v:23$442 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s4.$ternary$src/digitdisplay.v:23$443 ($mux).
Removed top 1 bits (of 4) from port B of cell top.$flatten\sdisplay.\s4.$eq$src/digitdisplay.v:28$454 ($eq).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s4.$ternary$src/digitdisplay.v:28$464 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s4.$or$src/digitdisplay.v:28$465 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s4.$or$src/digitdisplay.v:28$465 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s4.$or$src/digitdisplay.v:28$465 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s4.$ternary$src/digitdisplay.v:28$466 ($mux).
Removed top 29 bits (of 32) from port B of cell top.$flatten\sdisplay.\s4.$lt$src/digitdisplay.v:32$471 ($lt).
Removed top 3 bits (of 4) from port B of cell top.$flatten\sdisplay.\s4.$eq$src/digitdisplay.v:33$475 ($eq).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s4.$ternary$src/digitdisplay.v:33$489 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s4.$or$src/digitdisplay.v:33$490 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s4.$or$src/digitdisplay.v:33$490 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s4.$or$src/digitdisplay.v:33$490 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s4.$ternary$src/digitdisplay.v:33$491 ($mux).
Removed top 26 bits (of 32) from port B of cell top.$flatten\sdisplay.\s4.$gt$src/digitdisplay.v:37$495 ($gt).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s4.$ternary$src/digitdisplay.v:38$510 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s4.$or$src/digitdisplay.v:38$511 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s4.$or$src/digitdisplay.v:38$511 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s4.$or$src/digitdisplay.v:38$511 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s4.$ternary$src/digitdisplay.v:38$512 ($mux).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s4.$ternary$src/digitdisplay.v:43$527 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s4.$or$src/digitdisplay.v:43$528 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s4.$or$src/digitdisplay.v:43$528 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s4.$or$src/digitdisplay.v:43$528 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s4.$ternary$src/digitdisplay.v:43$529 ($mux).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s4.$ternary$src/digitdisplay.v:47$554 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s4.$or$src/digitdisplay.v:47$555 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s4.$or$src/digitdisplay.v:47$555 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s4.$or$src/digitdisplay.v:47$555 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s4.$ternary$src/digitdisplay.v:47$556 ($mux).
Removed top 30 bits (of 32) from port B of cell top.$flatten\sdisplay.\s3.$gt$src/digitdisplay.v:17$398 ($gt).
Removed top 26 bits (of 32) from port B of cell top.$flatten\sdisplay.\s3.$lt$src/digitdisplay.v:17$399 ($lt).
Removed top 2 bits (of 4) from port B of cell top.$flatten\sdisplay.\s3.$eq$src/digitdisplay.v:18$403 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$flatten\sdisplay.\s3.$eq$src/digitdisplay.v:18$405 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\sdisplay.\s3.$eq$src/digitdisplay.v:18$407 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\sdisplay.\s3.$eq$src/digitdisplay.v:18$409 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\sdisplay.\s3.$eq$src/digitdisplay.v:18$411 ($eq).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s3.$ternary$src/digitdisplay.v:18$417 ($mux).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s3.$ternary$src/digitdisplay.v:18$418 ($mux).
Removed top 3 bits (of 5) from port B of cell top.$auto$opt_dff.cc:198:make_patterns_logic$5746 ($ne).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s3.$ternary$src/digitdisplay.v:23$441 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s3.$or$src/digitdisplay.v:23$442 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s3.$or$src/digitdisplay.v:23$442 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s3.$or$src/digitdisplay.v:23$442 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s3.$ternary$src/digitdisplay.v:23$443 ($mux).
Removed top 1 bits (of 4) from port B of cell top.$flatten\sdisplay.\s3.$eq$src/digitdisplay.v:28$454 ($eq).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s3.$ternary$src/digitdisplay.v:28$464 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s3.$or$src/digitdisplay.v:28$465 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s3.$or$src/digitdisplay.v:28$465 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s3.$or$src/digitdisplay.v:28$465 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s3.$ternary$src/digitdisplay.v:28$466 ($mux).
Removed top 29 bits (of 32) from port B of cell top.$flatten\sdisplay.\s3.$lt$src/digitdisplay.v:32$471 ($lt).
Removed top 3 bits (of 4) from port B of cell top.$flatten\sdisplay.\s3.$eq$src/digitdisplay.v:33$475 ($eq).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s3.$ternary$src/digitdisplay.v:33$489 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s3.$or$src/digitdisplay.v:33$490 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s3.$or$src/digitdisplay.v:33$490 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s3.$or$src/digitdisplay.v:33$490 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s3.$ternary$src/digitdisplay.v:33$491 ($mux).
Removed top 26 bits (of 32) from port B of cell top.$flatten\sdisplay.\s3.$gt$src/digitdisplay.v:37$495 ($gt).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s3.$ternary$src/digitdisplay.v:38$510 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s3.$or$src/digitdisplay.v:38$511 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s3.$or$src/digitdisplay.v:38$511 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s3.$or$src/digitdisplay.v:38$511 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s3.$ternary$src/digitdisplay.v:38$512 ($mux).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s3.$ternary$src/digitdisplay.v:43$527 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s3.$or$src/digitdisplay.v:43$528 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s3.$or$src/digitdisplay.v:43$528 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s3.$or$src/digitdisplay.v:43$528 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s3.$ternary$src/digitdisplay.v:43$529 ($mux).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s3.$ternary$src/digitdisplay.v:47$554 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s3.$or$src/digitdisplay.v:47$555 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s3.$or$src/digitdisplay.v:47$555 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s3.$or$src/digitdisplay.v:47$555 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s3.$ternary$src/digitdisplay.v:47$556 ($mux).
Removed top 30 bits (of 32) from port B of cell top.$flatten\sdisplay.\s2.$gt$src/digitdisplay.v:17$398 ($gt).
Removed top 26 bits (of 32) from port B of cell top.$flatten\sdisplay.\s2.$lt$src/digitdisplay.v:17$399 ($lt).
Removed top 2 bits (of 4) from port B of cell top.$flatten\sdisplay.\s2.$eq$src/digitdisplay.v:18$403 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$flatten\sdisplay.\s2.$eq$src/digitdisplay.v:18$405 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\sdisplay.\s2.$eq$src/digitdisplay.v:18$407 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\sdisplay.\s2.$eq$src/digitdisplay.v:18$409 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\sdisplay.\s2.$eq$src/digitdisplay.v:18$411 ($eq).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s2.$ternary$src/digitdisplay.v:18$417 ($mux).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s2.$ternary$src/digitdisplay.v:18$418 ($mux).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s2.$ternary$src/digitdisplay.v:23$441 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s2.$or$src/digitdisplay.v:23$442 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s2.$or$src/digitdisplay.v:23$442 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s2.$or$src/digitdisplay.v:23$442 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s2.$ternary$src/digitdisplay.v:23$443 ($mux).
Removed top 1 bits (of 4) from port B of cell top.$flatten\sdisplay.\s2.$eq$src/digitdisplay.v:28$454 ($eq).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s2.$ternary$src/digitdisplay.v:28$464 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s2.$or$src/digitdisplay.v:28$465 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s2.$or$src/digitdisplay.v:28$465 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s2.$or$src/digitdisplay.v:28$465 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s2.$ternary$src/digitdisplay.v:28$466 ($mux).
Removed top 29 bits (of 32) from port B of cell top.$flatten\sdisplay.\s2.$lt$src/digitdisplay.v:32$471 ($lt).
Removed top 3 bits (of 4) from port B of cell top.$flatten\sdisplay.\s2.$eq$src/digitdisplay.v:33$475 ($eq).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s2.$ternary$src/digitdisplay.v:33$489 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s2.$or$src/digitdisplay.v:33$490 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s2.$or$src/digitdisplay.v:33$490 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s2.$or$src/digitdisplay.v:33$490 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s2.$ternary$src/digitdisplay.v:33$491 ($mux).
Removed top 26 bits (of 32) from port B of cell top.$flatten\sdisplay.\s2.$gt$src/digitdisplay.v:37$495 ($gt).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s2.$ternary$src/digitdisplay.v:38$510 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s2.$or$src/digitdisplay.v:38$511 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s2.$or$src/digitdisplay.v:38$511 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s2.$or$src/digitdisplay.v:38$511 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s2.$ternary$src/digitdisplay.v:38$512 ($mux).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s2.$ternary$src/digitdisplay.v:43$527 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s2.$or$src/digitdisplay.v:43$528 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s2.$or$src/digitdisplay.v:43$528 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s2.$or$src/digitdisplay.v:43$528 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s2.$ternary$src/digitdisplay.v:43$529 ($mux).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s2.$ternary$src/digitdisplay.v:47$554 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s2.$or$src/digitdisplay.v:47$555 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s2.$or$src/digitdisplay.v:47$555 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s2.$or$src/digitdisplay.v:47$555 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s2.$ternary$src/digitdisplay.v:47$556 ($mux).
Removed top 29 bits (of 32) from port B of cell top.$flatten\sdisplay.\s1.$lt$src/digitdisplay.v:17$396 ($lt).
Removed top 30 bits (of 32) from port B of cell top.$flatten\sdisplay.\s1.$gt$src/digitdisplay.v:17$398 ($gt).
Removed top 26 bits (of 32) from port B of cell top.$flatten\sdisplay.\s1.$lt$src/digitdisplay.v:17$399 ($lt).
Removed top 2 bits (of 4) from port B of cell top.$flatten\sdisplay.\s1.$eq$src/digitdisplay.v:18$403 ($eq).
Removed top 2 bits (of 4) from port B of cell top.$flatten\sdisplay.\s1.$eq$src/digitdisplay.v:18$405 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\sdisplay.\s1.$eq$src/digitdisplay.v:18$407 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\sdisplay.\s1.$eq$src/digitdisplay.v:18$409 ($eq).
Removed top 1 bits (of 4) from port B of cell top.$flatten\sdisplay.\s1.$eq$src/digitdisplay.v:18$411 ($eq).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s1.$ternary$src/digitdisplay.v:18$417 ($mux).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s1.$ternary$src/digitdisplay.v:18$418 ($mux).
Removed top 26 bits (of 32) from port B of cell top.$flatten\sdisplay.\s1.$gt$src/digitdisplay.v:22$419 ($gt).
Removed top 26 bits (of 32) from port B of cell top.$flatten\sdisplay.\s1.$lt$src/digitdisplay.v:22$420 ($lt).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s1.$ternary$src/digitdisplay.v:23$441 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s1.$or$src/digitdisplay.v:23$442 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s1.$or$src/digitdisplay.v:23$442 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s1.$or$src/digitdisplay.v:23$442 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s1.$ternary$src/digitdisplay.v:23$443 ($mux).
Removed top 27 bits (of 32) from port B of cell top.$flatten\sdisplay.\s1.$gt$src/digitdisplay.v:27$444 ($gt).
Removed top 27 bits (of 32) from port B of cell top.$flatten\sdisplay.\s1.$lt$src/digitdisplay.v:27$445 ($lt).
Removed top 1 bits (of 4) from port B of cell top.$flatten\sdisplay.\s1.$eq$src/digitdisplay.v:28$454 ($eq).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s1.$ternary$src/digitdisplay.v:28$464 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s1.$or$src/digitdisplay.v:28$465 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s1.$or$src/digitdisplay.v:28$465 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s1.$or$src/digitdisplay.v:28$465 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s1.$ternary$src/digitdisplay.v:28$466 ($mux).
Removed top 29 bits (of 32) from port B of cell top.$flatten\sdisplay.\s1.$lt$src/digitdisplay.v:32$471 ($lt).
Removed top 3 bits (of 4) from port B of cell top.$flatten\sdisplay.\s1.$eq$src/digitdisplay.v:33$475 ($eq).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s1.$ternary$src/digitdisplay.v:33$489 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s1.$or$src/digitdisplay.v:33$490 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s1.$or$src/digitdisplay.v:33$490 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s1.$or$src/digitdisplay.v:33$490 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s1.$ternary$src/digitdisplay.v:33$491 ($mux).
Removed top 26 bits (of 32) from port B of cell top.$flatten\sdisplay.\s1.$gt$src/digitdisplay.v:37$495 ($gt).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s1.$ternary$src/digitdisplay.v:38$510 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s1.$or$src/digitdisplay.v:38$511 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s1.$or$src/digitdisplay.v:38$511 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s1.$or$src/digitdisplay.v:38$511 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s1.$ternary$src/digitdisplay.v:38$512 ($mux).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s1.$ternary$src/digitdisplay.v:43$527 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s1.$or$src/digitdisplay.v:43$528 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s1.$or$src/digitdisplay.v:43$528 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s1.$or$src/digitdisplay.v:43$528 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s1.$ternary$src/digitdisplay.v:43$529 ($mux).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s1.$ternary$src/digitdisplay.v:47$554 ($mux).
Removed top 8 bits (of 12) from port A of cell top.$flatten\sdisplay.\s1.$or$src/digitdisplay.v:47$555 ($or).
Removed top 8 bits (of 12) from port B of cell top.$flatten\sdisplay.\s1.$or$src/digitdisplay.v:47$555 ($or).
Removed top 8 bits (of 12) from port Y of cell top.$flatten\sdisplay.\s1.$or$src/digitdisplay.v:47$555 ($or).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.\s1.$ternary$src/digitdisplay.v:47$556 ($mux).
Removed cell top.$flatten\sdisplay.$procmux$3470 ($mux).
Removed top 25 bits (of 32) from port B of cell top.$flatten\sdisplay.$lt$src/scoredisplay.v:147$675 ($lt).
Removed top 26 bits (of 32) from port B of cell top.$flatten\sdisplay.$ge$src/scoredisplay.v:147$674 ($ge).
Removed top 1 bits (of 5) from mux cell top.$flatten\sdisplay.$ternary$src/scoredisplay.v:146$673 ($mux).
Removed top 26 bits (of 32) from port B of cell top.$flatten\sdisplay.$sub$src/scoredisplay.v:146$671 ($sub).
Removed top 25 bits (of 32) from port Y of cell top.$flatten\sdisplay.$sub$src/scoredisplay.v:146$671 ($sub).
Removed top 3 bits (of 10) from port A of cell top.$flatten\sdisplay.$sub$src/scoredisplay.v:146$671 ($sub).
Removed top 22 bits (of 32) from port B of cell top.$flatten\sdisplay.$lt$src/scoredisplay.v:143$667 ($lt).
Removed top 22 bits (of 32) from port B of cell top.$flatten\sdisplay.$ge$src/scoredisplay.v:143$666 ($ge).
Removed top 23 bits (of 32) from port B of cell top.$flatten\sdisplay.$lt$src/scoredisplay.v:143$664 ($lt).
Removed top 26 bits (of 32) from port B of cell top.$flatten\sdisplay.$ge$src/scoredisplay.v:143$663 ($ge).
Removed top 1 bits (of 5) from mux cell top.$flatten\sdisplay.$ternary$src/scoredisplay.v:139$661 ($mux).
Removed top 25 bits (of 32) from port B of cell top.$flatten\sdisplay.$sub$src/scoredisplay.v:139$659 ($sub).
Removed top 25 bits (of 32) from port Y of cell top.$flatten\sdisplay.$sub$src/scoredisplay.v:139$659 ($sub).
Removed top 3 bits (of 10) from port A of cell top.$flatten\sdisplay.$sub$src/scoredisplay.v:139$659 ($sub).
Removed top 24 bits (of 32) from port B of cell top.$flatten\sdisplay.$lt$src/scoredisplay.v:137$652 ($lt).
Removed top 25 bits (of 32) from port B of cell top.$flatten\sdisplay.$ge$src/scoredisplay.v:137$651 ($ge).
Removed top 1 bits (of 5) from mux cell top.$flatten\sdisplay.$ternary$src/scoredisplay.v:132$649 ($mux).
Removed top 24 bits (of 32) from port B of cell top.$flatten\sdisplay.$sub$src/scoredisplay.v:132$647 ($sub).
Removed top 25 bits (of 32) from port Y of cell top.$flatten\sdisplay.$sub$src/scoredisplay.v:132$647 ($sub).
Removed top 3 bits (of 10) from port A of cell top.$flatten\sdisplay.$sub$src/scoredisplay.v:132$647 ($sub).
Removed top 4 bits (of 8) from port B of cell top.$flatten\sdisplay.$sub$src/scoredisplay.v:132$647 ($sub).
Removed top 24 bits (of 32) from port B of cell top.$flatten\sdisplay.$lt$src/scoredisplay.v:130$640 ($lt).
Removed top 24 bits (of 32) from port B of cell top.$flatten\sdisplay.$ge$src/scoredisplay.v:130$639 ($ge).
Removed top 1 bits (of 5) from mux cell top.$flatten\sdisplay.$ternary$src/scoredisplay.v:125$637 ($mux).
Removed top 24 bits (of 32) from port B of cell top.$flatten\sdisplay.$sub$src/scoredisplay.v:125$635 ($sub).
Removed top 25 bits (of 32) from port Y of cell top.$flatten\sdisplay.$sub$src/scoredisplay.v:125$635 ($sub).
Removed top 3 bits (of 10) from port A of cell top.$flatten\sdisplay.$sub$src/scoredisplay.v:125$635 ($sub).
Removed top 2 bits (of 8) from port B of cell top.$flatten\sdisplay.$sub$src/scoredisplay.v:125$635 ($sub).
Removed top 24 bits (of 32) from port B of cell top.$flatten\sdisplay.$lt$src/scoredisplay.v:123$628 ($lt).
Removed top 24 bits (of 32) from port B of cell top.$flatten\sdisplay.$ge$src/scoredisplay.v:123$627 ($ge).
Removed top 1 bits (of 5) from mux cell top.$flatten\sdisplay.$ternary$src/scoredisplay.v:118$625 ($mux).
Removed top 24 bits (of 32) from port B of cell top.$flatten\sdisplay.$sub$src/scoredisplay.v:118$623 ($sub).
Removed top 25 bits (of 32) from port Y of cell top.$flatten\sdisplay.$sub$src/scoredisplay.v:118$623 ($sub).
Removed top 3 bits (of 10) from port A of cell top.$flatten\sdisplay.$sub$src/scoredisplay.v:118$623 ($sub).
Removed top 1 bits (of 8) from port B of cell top.$flatten\sdisplay.$sub$src/scoredisplay.v:118$623 ($sub).
Removed top 23 bits (of 32) from port B of cell top.$flatten\sdisplay.$lt$src/scoredisplay.v:116$616 ($lt).
Removed top 24 bits (of 32) from port B of cell top.$flatten\sdisplay.$ge$src/scoredisplay.v:116$615 ($ge).
Removed top 1 bits (of 5) from mux cell top.$flatten\sdisplay.$ternary$src/scoredisplay.v:111$613 ($mux).
Removed top 23 bits (of 32) from port B of cell top.$flatten\sdisplay.$sub$src/scoredisplay.v:111$611 ($sub).
Removed top 25 bits (of 32) from port Y of cell top.$flatten\sdisplay.$sub$src/scoredisplay.v:111$611 ($sub).
Removed top 3 bits (of 10) from port A of cell top.$flatten\sdisplay.$sub$src/scoredisplay.v:111$611 ($sub).
Removed top 4 bits (of 9) from port B of cell top.$flatten\sdisplay.$sub$src/scoredisplay.v:111$611 ($sub).
Removed top 23 bits (of 32) from port B of cell top.$flatten\sdisplay.$lt$src/scoredisplay.v:109$604 ($lt).
Removed top 23 bits (of 32) from port B of cell top.$flatten\sdisplay.$ge$src/scoredisplay.v:109$603 ($ge).
Removed top 1 bits (of 5) from mux cell top.$flatten\sdisplay.$ternary$src/scoredisplay.v:105$602 ($mux).
Removed top 23 bits (of 32) from port B of cell top.$flatten\sdisplay.$sub$src/scoredisplay.v:105$600 ($sub).
Removed top 25 bits (of 32) from port Y of cell top.$flatten\sdisplay.$sub$src/scoredisplay.v:105$600 ($sub).
Removed top 3 bits (of 10) from port A of cell top.$flatten\sdisplay.$sub$src/scoredisplay.v:105$600 ($sub).
Removed top 2 bits (of 9) from port B of cell top.$flatten\sdisplay.$sub$src/scoredisplay.v:105$600 ($sub).
Removed top 22 bits (of 32) from port B of cell top.$flatten\sdisplay.$sub$src/scoredisplay.v:105$599 ($sub).
Removed top 25 bits (of 32) from port Y of cell top.$flatten\sdisplay.$sub$src/scoredisplay.v:105$599 ($sub).
Removed top 3 bits (of 10) from port A of cell top.$flatten\sdisplay.$sub$src/scoredisplay.v:105$599 ($sub).
Removed top 4 bits (of 10) from port B of cell top.$flatten\sdisplay.$sub$src/scoredisplay.v:105$599 ($sub).
Removed top 22 bits (of 32) from port B of cell top.$flatten\sdisplay.$lt$src/scoredisplay.v:102$595 ($lt).
Removed top 22 bits (of 32) from port B of cell top.$flatten\sdisplay.$ge$src/scoredisplay.v:102$594 ($ge).
Removed top 23 bits (of 32) from port B of cell top.$flatten\sdisplay.$lt$src/scoredisplay.v:102$592 ($lt).
Removed top 23 bits (of 32) from port B of cell top.$flatten\sdisplay.$ge$src/scoredisplay.v:102$591 ($ge).
Removed top 1 bits (of 5) from mux cell top.$flatten\sdisplay.$ternary$src/scoredisplay.v:97$590 ($mux).
Removed top 23 bits (of 32) from port B of cell top.$flatten\sdisplay.$sub$src/scoredisplay.v:97$588 ($sub).
Removed top 25 bits (of 32) from port Y of cell top.$flatten\sdisplay.$sub$src/scoredisplay.v:97$588 ($sub).
Removed top 3 bits (of 10) from port A of cell top.$flatten\sdisplay.$sub$src/scoredisplay.v:97$588 ($sub).
Removed top 2 bits (of 9) from port B of cell top.$flatten\sdisplay.$sub$src/scoredisplay.v:97$588 ($sub).
Removed top 31 bits (of 32) from port B of cell top.$flatten\sdisplay.\s1.$gt$src/digitdisplay.v:17$395 ($gt).
Removed top 8 bits (of 12) from mux cell top.$flatten\sdisplay.$ternary$src/scoredisplay.v:96$586 ($mux).
Removed top 23 bits (of 32) from port B of cell top.$flatten\sdisplay.$lt$src/scoredisplay.v:94$580 ($lt).
Removed top 23 bits (of 32) from port B of cell top.$flatten\sdisplay.$ge$src/scoredisplay.v:94$579 ($ge).
Removed top 31 bits (of 32) from port B of cell top.$flatten\sdisplay.$gt$src/scoredisplay.v:37$561 ($gt).
Removed top 31 bits (of 32) from port B of cell top.$flatten\sdisplay.$gt$src/scoredisplay.v:35$559 ($gt).
Removed top 1 bits (of 3) from port B of cell top.$flatten\game_manager.\c.$procmux$2666_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell top.$flatten\game_manager.\c.$procmux$2667_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell top.$flatten\game_manager.\c.$procmux$2668_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell top.$flatten\game_manager.\sh.$eq$src/shader.v:9$1117 ($eq).
Removed top 27 bits (of 32) from port B of cell top.$flatten\game_manager.\sh.$ge$src/shader.v:9$1119 ($ge).
Removed top 30 bits (of 32) from port B of cell top.$flatten\game_manager.\sh.$gt$src/shader.v:10$1121 ($gt).
Removed top 27 bits (of 32) from port B of cell top.$flatten\game_manager.\sh.$lt$src/shader.v:10$1122 ($lt).
Removed top 30 bits (of 32) from port B of cell top.$flatten\game_manager.\sh.$gt$src/shader.v:10$1124 ($gt).
Removed top 27 bits (of 32) from port B of cell top.$flatten\game_manager.\sh.$lt$src/shader.v:10$1126 ($lt).
Removed top 11 bits (of 12) from port Y of cell top.$flatten\game_manager.\sh.$and$src/shader.v:20$1134 ($and).
Removed top 11 bits (of 12) from port B of cell top.$flatten\game_manager.\sh.$and$src/shader.v:21$1137 ($and).
Removed top 11 bits (of 12) from port Y of cell top.$flatten\game_manager.\sh.$and$src/shader.v:21$1137 ($and).
Removed top 4 bits (of 10) from port Y of cell top.$flatten\game_manager.\hh.$sub$src/mod24.v:58$1342 ($sub).
Removed top 4 bits (of 10) from port A of cell top.$flatten\game_manager.\hh.$sub$src/mod24.v:58$1342 ($sub).
Removed top 4 bits (of 10) from port B of cell top.$flatten\game_manager.\hh.$sub$src/mod24.v:58$1342 ($sub).
Removed top 4 bits (of 10) from port Y of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$1341 ($or).
Removed top 4 bits (of 10) from port A of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$1341 ($or).
Removed top 4 bits (of 10) from port B of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$1341 ($or).
Removed top 4 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:43$1340 ($mux).
Removed top 4 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:43$1339 ($mux).
Removed top 4 bits (of 10) from port Y of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$1334 ($or).
Removed top 4 bits (of 10) from port A of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$1334 ($or).
Removed top 4 bits (of 10) from port B of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$1334 ($or).
Removed top 4 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:42$1333 ($mux).
Removed top 6 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:42$1332 ($mux).
Removed top 4 bits (of 10) from port Y of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$1327 ($or).
Removed top 4 bits (of 10) from port A of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$1327 ($or).
Removed top 4 bits (of 10) from port B of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$1327 ($or).
Removed top 4 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:41$1326 ($mux).
Removed top 5 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:41$1325 ($mux).
Removed top 4 bits (of 10) from port Y of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$1320 ($or).
Removed top 4 bits (of 10) from port A of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$1320 ($or).
Removed top 4 bits (of 10) from port B of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$1320 ($or).
Removed top 4 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:40$1319 ($mux).
Removed top 4 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:40$1318 ($mux).
Removed top 1 bits (of 5) from port B of cell top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:40$1315 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:40$1314 ($eq).
Removed top 4 bits (of 10) from port Y of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$1313 ($or).
Removed top 4 bits (of 10) from port A of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$1313 ($or).
Removed top 4 bits (of 10) from port B of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$1313 ($or).
Removed top 4 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:39$1312 ($mux).
Removed top 4 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:39$1311 ($mux).
Removed top 1 bits (of 5) from port B of cell top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:39$1308 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:39$1307 ($eq).
Removed top 4 bits (of 10) from port Y of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$1306 ($or).
Removed top 4 bits (of 10) from port A of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$1306 ($or).
Removed top 4 bits (of 10) from port B of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$1306 ($or).
Removed top 4 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:38$1305 ($mux).
Removed top 6 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:38$1304 ($mux).
Removed top 1 bits (of 5) from port B of cell top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:38$1301 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:38$1300 ($eq).
Removed top 4 bits (of 10) from port Y of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$1299 ($or).
Removed top 4 bits (of 10) from port A of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$1299 ($or).
Removed top 4 bits (of 10) from port B of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$1299 ($or).
Removed top 4 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:37$1298 ($mux).
Removed top 5 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:37$1297 ($mux).
Removed top 1 bits (of 5) from port B of cell top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:37$1294 ($eq).
Removed top 1 bits (of 5) from port B of cell top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:37$1293 ($eq).
Removed top 4 bits (of 10) from port Y of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$1292 ($or).
Removed top 4 bits (of 10) from port A of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$1292 ($or).
Removed top 4 bits (of 10) from port B of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$1292 ($or).
Removed top 4 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:36$1291 ($mux).
Removed top 4 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:36$1290 ($mux).
Removed top 2 bits (of 5) from port B of cell top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:36$1287 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:36$1286 ($eq).
Removed top 4 bits (of 10) from port Y of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$1285 ($or).
Removed top 4 bits (of 10) from port A of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$1285 ($or).
Removed top 4 bits (of 10) from port B of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$1285 ($or).
Removed top 4 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:35$1284 ($mux).
Removed top 4 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:35$1283 ($mux).
Removed top 2 bits (of 5) from port B of cell top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:35$1280 ($eq).
Removed top 2 bits (of 5) from port B of cell top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:35$1279 ($eq).
Removed top 4 bits (of 10) from port Y of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$1278 ($or).
Removed top 4 bits (of 10) from port A of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$1278 ($or).
Removed top 4 bits (of 10) from port B of cell top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$1278 ($or).
Removed top 4 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:34$1277 ($mux).
Removed top 6 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:34$1276 ($mux).
Removed top 3 bits (of 5) from port B of cell top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:34$1273 ($eq).
Removed top 3 bits (of 5) from port B of cell top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:34$1272 ($eq).
Removed top 4 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:33$1271 ($mux).
Removed top 5 bits (of 10) from mux cell top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:33$1270 ($mux).
Removed top 4 bits (of 5) from port B of cell top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:33$1267 ($eq).
Removed top 4 bits (of 5) from mux cell top.$flatten\game_manager.\h.$ternary$src/mod24.v:18$1147 ($mux).
Removed top 3 bits (of 5) from mux cell top.$flatten\game_manager.\h.$ternary$src/mod24.v:18$1149 ($mux).
Removed top 4 bits (of 5) from port A of cell top.$flatten\game_manager.\h.$or$src/mod24.v:18$1150 ($or).
Removed top 3 bits (of 5) from port B of cell top.$flatten\game_manager.\h.$or$src/mod24.v:18$1150 ($or).
Removed top 3 bits (of 5) from port Y of cell top.$flatten\game_manager.\h.$or$src/mod24.v:18$1150 ($or).
Removed top 3 bits (of 5) from mux cell top.$flatten\game_manager.\h.$ternary$src/mod24.v:18$1151 ($mux).
Removed top 3 bits (of 5) from port A of cell top.$flatten\game_manager.\h.$or$src/mod24.v:18$1152 ($or).
Removed top 3 bits (of 5) from port B of cell top.$flatten\game_manager.\h.$or$src/mod24.v:18$1152 ($or).
Removed top 3 bits (of 5) from port Y of cell top.$flatten\game_manager.\h.$or$src/mod24.v:18$1152 ($or).
Removed top 2 bits (of 5) from mux cell top.$flatten\game_manager.\h.$ternary$src/mod24.v:19$1153 ($mux).
Removed top 2 bits (of 5) from mux cell top.$flatten\game_manager.\h.$ternary$src/mod24.v:19$1154 ($mux).
Removed top 2 bits (of 5) from port A of cell top.$flatten\game_manager.\h.$or$src/mod24.v:19$1155 ($or).
Removed top 2 bits (of 5) from port B of cell top.$flatten\game_manager.\h.$or$src/mod24.v:19$1155 ($or).
Removed top 2 bits (of 5) from port Y of cell top.$flatten\game_manager.\h.$or$src/mod24.v:19$1155 ($or).
Removed top 2 bits (of 5) from mux cell top.$flatten\game_manager.\h.$ternary$src/mod24.v:19$1156 ($mux).
Removed top 2 bits (of 5) from port A of cell top.$flatten\game_manager.\h.$or$src/mod24.v:19$1157 ($or).
Removed top 2 bits (of 5) from port B of cell top.$flatten\game_manager.\h.$or$src/mod24.v:19$1157 ($or).
Removed top 2 bits (of 5) from port Y of cell top.$flatten\game_manager.\h.$or$src/mod24.v:19$1157 ($or).
Removed top 2 bits (of 5) from mux cell top.$flatten\game_manager.\h.$ternary$src/mod24.v:19$1158 ($mux).
Removed top 2 bits (of 5) from port A of cell top.$flatten\game_manager.\h.$or$src/mod24.v:19$1159 ($or).
Removed top 2 bits (of 5) from port B of cell top.$flatten\game_manager.\h.$or$src/mod24.v:19$1159 ($or).
Removed top 2 bits (of 5) from port Y of cell top.$flatten\game_manager.\h.$or$src/mod24.v:19$1159 ($or).
Removed top 1 bits (of 5) from mux cell top.$flatten\game_manager.\h.$ternary$src/mod24.v:20$1160 ($mux).
Removed top 1 bits (of 5) from mux cell top.$flatten\game_manager.\h.$ternary$src/mod24.v:20$1161 ($mux).
Removed top 1 bits (of 5) from port A of cell top.$flatten\game_manager.\h.$or$src/mod24.v:20$1162 ($or).
Removed top 1 bits (of 5) from port B of cell top.$flatten\game_manager.\h.$or$src/mod24.v:20$1162 ($or).
Removed top 1 bits (of 5) from port Y of cell top.$flatten\game_manager.\h.$or$src/mod24.v:20$1162 ($or).
Removed top 1 bits (of 5) from mux cell top.$flatten\game_manager.\h.$ternary$src/mod24.v:20$1163 ($mux).
Removed top 1 bits (of 5) from port A of cell top.$flatten\game_manager.\h.$or$src/mod24.v:20$1164 ($or).
Removed top 1 bits (of 5) from port B of cell top.$flatten\game_manager.\h.$or$src/mod24.v:20$1164 ($or).
Removed top 1 bits (of 5) from port Y of cell top.$flatten\game_manager.\h.$or$src/mod24.v:20$1164 ($or).
Removed top 1 bits (of 5) from mux cell top.$flatten\game_manager.\h.$ternary$src/mod24.v:20$1165 ($mux).
Removed top 1 bits (of 5) from port A of cell top.$flatten\game_manager.\h.$or$src/mod24.v:20$1166 ($or).
Removed top 1 bits (of 5) from port B of cell top.$flatten\game_manager.\h.$or$src/mod24.v:20$1166 ($or).
Removed top 1 bits (of 5) from port Y of cell top.$flatten\game_manager.\h.$or$src/mod24.v:20$1166 ($or).
Removed top 1 bits (of 5) from mux cell top.$flatten\game_manager.\h.$ternary$src/mod24.v:21$1167 ($mux).
Removed top 1 bits (of 5) from mux cell top.$flatten\game_manager.\h.$ternary$src/mod24.v:21$1168 ($mux).
Removed top 1 bits (of 5) from port A of cell top.$flatten\game_manager.\h.$or$src/mod24.v:21$1169 ($or).
Removed top 1 bits (of 5) from port B of cell top.$flatten\game_manager.\h.$or$src/mod24.v:21$1169 ($or).
Removed top 1 bits (of 5) from port Y of cell top.$flatten\game_manager.\h.$or$src/mod24.v:21$1169 ($or).
Removed top 1 bits (of 5) from mux cell top.$flatten\game_manager.\h.$ternary$src/mod24.v:21$1170 ($mux).
Removed top 1 bits (of 5) from port A of cell top.$flatten\game_manager.\h.$or$src/mod24.v:21$1171 ($or).
Removed top 1 bits (of 5) from port B of cell top.$flatten\game_manager.\h.$or$src/mod24.v:21$1171 ($or).
Removed top 1 bits (of 5) from port Y of cell top.$flatten\game_manager.\h.$or$src/mod24.v:21$1171 ($or).
Removed top 1 bits (of 5) from mux cell top.$flatten\game_manager.\h.$ternary$src/mod24.v:21$1172 ($mux).
Removed top 1 bits (of 5) from port A of cell top.$flatten\game_manager.\h.$or$src/mod24.v:21$1173 ($or).
Removed top 1 bits (of 5) from port B of cell top.$flatten\game_manager.\h.$or$src/mod24.v:21$1173 ($or).
Removed top 1 bits (of 5) from port Y of cell top.$flatten\game_manager.\h.$or$src/mod24.v:21$1173 ($or).
Removed top 3 bits (of 5) from port A of cell top.$flatten\game_manager.\h.$or$src/mod24.v:25$1188 ($or).
Removed top 2 bits (of 5) from port B of cell top.$flatten\game_manager.\h.$or$src/mod24.v:25$1188 ($or).
Removed top 2 bits (of 5) from port Y of cell top.$flatten\game_manager.\h.$or$src/mod24.v:25$1188 ($or).
Removed top 2 bits (of 5) from port A of cell top.$flatten\game_manager.\h.$or$src/mod24.v:25$1189 ($or).
Removed top 1 bits (of 5) from port B of cell top.$flatten\game_manager.\h.$or$src/mod24.v:25$1189 ($or).
Removed top 1 bits (of 5) from port Y of cell top.$flatten\game_manager.\h.$or$src/mod24.v:25$1189 ($or).
Removed top 1 bits (of 5) from port A of cell top.$flatten\game_manager.\h.$or$src/mod24.v:25$1190 ($or).
Removed top 1 bits (of 5) from port B of cell top.$flatten\game_manager.\h.$or$src/mod24.v:25$1190 ($or).
Removed top 1 bits (of 5) from port Y of cell top.$flatten\game_manager.\h.$or$src/mod24.v:25$1190 ($or).
Removed top 1 bits (of 5) from port A of cell top.$flatten\game_manager.\h.$or$src/mod24.v:25$1191 ($or).
Removed top 27 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$1197 ($ge).
Removed top 26 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$1198 ($lt).
Removed top 26 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$1200 ($ge).
Removed top 25 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$1201 ($lt).
Removed top 25 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$1203 ($ge).
Removed top 25 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$1204 ($lt).
Removed top 25 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$1206 ($ge).
Removed top 25 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$1207 ($lt).
Removed top 25 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$1209 ($ge).
Removed top 24 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$1210 ($lt).
Removed top 24 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$1212 ($ge).
Removed top 24 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$1213 ($lt).
Removed top 24 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$1215 ($ge).
Removed top 24 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$1216 ($lt).
Removed top 24 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$1218 ($ge).
Removed top 24 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$1219 ($lt).
Removed top 24 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$1221 ($ge).
Removed top 24 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$1222 ($lt).
Removed top 24 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$1224 ($ge).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$1225 ($lt).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$1227 ($ge).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$1228 ($lt).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$1230 ($ge).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$1231 ($lt).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$1233 ($ge).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$1234 ($lt).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$1236 ($ge).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$1237 ($lt).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$1239 ($ge).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$1240 ($lt).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$1242 ($ge).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$1243 ($lt).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$1245 ($ge).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$1246 ($lt).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$1248 ($ge).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$1249 ($lt).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$1251 ($ge).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$1252 ($lt).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$1254 ($ge).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$1255 ($lt).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$1257 ($ge).
Removed top 22 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$1258 ($lt).
Removed top 22 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$1260 ($ge).
Removed top 22 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$1261 ($lt).
Removed top 22 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$ge$src/mod24.v:15$1263 ($ge).
Removed top 22 bits (of 32) from port B of cell top.$flatten\game_manager.\h.$lt$src/mod24.v:15$1264 ($lt).
Removed top 1 bits (of 2) from port B of cell top.$auto$opt_dff.cc:198:make_patterns_logic$5659 ($ne).
Removed top 31 bits (of 32) from port B of cell top.$flatten\game_manager.\sh.$le$src/shader.v:9$1114 ($le).
Removed top 26 bits (of 32) from port B of cell top.$flatten\game_manager.$sub$src/gmanager.v:43$1110 ($sub).
Removed top 22 bits (of 32) from port Y of cell top.$flatten\game_manager.$sub$src/gmanager.v:43$1110 ($sub).
Removed top 22 bits (of 32) from port B of cell top.$flatten\game_manager.$sub$src/gmanager.v:35$1109 ($sub).
Removed top 26 bits (of 32) from port Y of cell top.$flatten\game_manager.$sub$src/gmanager.v:35$1109 ($sub).
Removed top 26 bits (of 32) from port A of cell top.$flatten\game_manager.$sub$src/gmanager.v:35$1109 ($sub).
Removed top 4 bits (of 10) from port B of cell top.$flatten\game_manager.$sub$src/gmanager.v:35$1109 ($sub).
Removed top 26 bits (of 32) from port B of cell top.$flatten\game_manager.$sub$src/gmanager.v:34$1105 ($sub).
Removed top 22 bits (of 32) from port Y of cell top.$flatten\game_manager.$sub$src/gmanager.v:34$1105 ($sub).
Removed top 22 bits (of 32) from port B of cell top.$flatten\game_manager.$lt$src/gmanager.v:29$1103 ($lt).
Removed top 26 bits (of 32) from port B of cell top.$flatten\game_manager.$ge$src/gmanager.v:29$1102 ($ge).
Removed top 23 bits (of 32) from port B of cell top.$flatten\game_manager.$lt$src/gmanager.v:28$1100 ($lt).
Removed top 26 bits (of 32) from port B of cell top.$flatten\game_manager.$ge$src/gmanager.v:28$1099 ($ge).
Removed top 23 bits (of 32) from port B of cell top.$flatten\core.$lt$src/vga_core.v:85$925 ($lt).
Removed top 23 bits (of 32) from port B of cell top.$flatten\core.$ge$src/vga_core.v:85$924 ($ge).
Removed top 22 bits (of 32) from port B of cell top.$flatten\core.$lt$src/vga_core.v:84$921 ($lt).
Removed top 22 bits (of 32) from port B of cell top.$flatten\core.$ge$src/vga_core.v:84$920 ($ge).
Removed top 23 bits (of 32) from port B of cell top.$flatten\core.$lt$src/vga_core.v:82$919 ($lt).
Removed top 22 bits (of 32) from port B of cell top.$flatten\core.$lt$src/vga_core.v:81$918 ($lt).
Removed top 3 bits (of 23) from FF cell top.$flatten\memory.\sh.$procdff$3574 ($dff).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\sh.$lt$src/shifter.v:45$828 ($lt).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\sh.$lt$src/shifter.v:44$827 ($lt).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\sh.$lt$src/shifter.v:43$826 ($lt).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\sh.$lt$src/shifter.v:42$825 ($lt).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\sh.$lt$src/shifter.v:41$824 ($lt).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\sh.$lt$src/shifter.v:40$823 ($lt).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\sh.$lt$src/shifter.v:39$822 ($lt).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\sh.$lt$src/shifter.v:38$821 ($lt).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\sh.$lt$src/shifter.v:37$820 ($lt).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\sh.$lt$src/shifter.v:36$819 ($lt).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\sh.$lt$src/shifter.v:35$818 ($lt).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\sh.$lt$src/shifter.v:34$817 ($lt).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\sh.$lt$src/shifter.v:33$816 ($lt).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\sh.$lt$src/shifter.v:32$815 ($lt).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\sh.$lt$src/shifter.v:31$814 ($lt).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\sh.$lt$src/shifter.v:30$813 ($lt).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\sh.$lt$src/shifter.v:29$812 ($lt).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\sh.$lt$src/shifter.v:28$811 ($lt).
Removed top 1 bits (of 6) from port B of cell top.$flatten\memory.\sh.$lt$src/shifter.v:27$810 ($lt).
Removed top 22 bits (of 32) from wire top.$flatten\game_manager.$sub$src/gmanager.v:34$1105_Y.
Removed top 4 bits (of 5) from wire top.$flatten\game_manager.\h.$or$src/mod24.v:18$1148_Y.
Removed top 3 bits (of 5) from wire top.$flatten\game_manager.\h.$or$src/mod24.v:18$1150_Y.
Removed top 2 bits (of 5) from wire top.$flatten\game_manager.\h.$or$src/mod24.v:19$1155_Y.
Removed top 2 bits (of 5) from wire top.$flatten\game_manager.\h.$or$src/mod24.v:19$1157_Y.
Removed top 1 bits (of 5) from wire top.$flatten\game_manager.\h.$or$src/mod24.v:20$1162_Y.
Removed top 1 bits (of 5) from wire top.$flatten\game_manager.\h.$or$src/mod24.v:20$1164_Y.
Removed top 1 bits (of 5) from wire top.$flatten\game_manager.\h.$or$src/mod24.v:21$1169_Y.
Removed top 1 bits (of 5) from wire top.$flatten\game_manager.\h.$or$src/mod24.v:21$1171_Y.
Removed top 2 bits (of 5) from wire top.$flatten\game_manager.\h.$or$src/mod24.v:25$1188_Y.
Removed top 1 bits (of 5) from wire top.$flatten\game_manager.\h.$or$src/mod24.v:25$1189_Y.
Removed top 1 bits (of 5) from wire top.$flatten\game_manager.\h.$or$src/mod24.v:25$1190_Y.
Removed top 4 bits (of 5) from wire top.$flatten\game_manager.\h.$ternary$src/mod24.v:18$1149_Y.
Removed top 3 bits (of 5) from wire top.$flatten\game_manager.\h.$ternary$src/mod24.v:18$1151_Y.
Removed top 2 bits (of 5) from wire top.$flatten\game_manager.\h.$ternary$src/mod24.v:19$1153_Y.
Removed top 2 bits (of 5) from wire top.$flatten\game_manager.\h.$ternary$src/mod24.v:19$1154_Y.
Removed top 2 bits (of 5) from wire top.$flatten\game_manager.\h.$ternary$src/mod24.v:19$1156_Y.
Removed top 2 bits (of 5) from wire top.$flatten\game_manager.\h.$ternary$src/mod24.v:19$1158_Y.
Removed top 1 bits (of 5) from wire top.$flatten\game_manager.\h.$ternary$src/mod24.v:20$1160_Y.
Removed top 1 bits (of 5) from wire top.$flatten\game_manager.\h.$ternary$src/mod24.v:20$1161_Y.
Removed top 1 bits (of 5) from wire top.$flatten\game_manager.\h.$ternary$src/mod24.v:20$1163_Y.
Removed top 1 bits (of 5) from wire top.$flatten\game_manager.\h.$ternary$src/mod24.v:20$1165_Y.
Removed top 1 bits (of 5) from wire top.$flatten\game_manager.\h.$ternary$src/mod24.v:21$1167_Y.
Removed top 1 bits (of 5) from wire top.$flatten\game_manager.\h.$ternary$src/mod24.v:21$1168_Y.
Removed top 4 bits (of 5) from wire top.$flatten\game_manager.\h.$ternary$src/mod24.v:21$1170_Y.
Removed top 1 bits (of 5) from wire top.$flatten\game_manager.\h.$ternary$src/mod24.v:21$1172_Y.
Removed top 9 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:33$1267_Y.
Removed top 9 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:34$1273_Y.
Removed top 9 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:35$1280_Y.
Removed top 9 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:36$1287_Y.
Removed top 9 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:37$1294_Y.
Removed top 9 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:38$1301_Y.
Removed top 9 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:39$1308_Y.
Removed top 9 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:40$1315_Y.
Removed top 9 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:41$1322_Y.
Removed top 9 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:42$1329_Y.
Removed top 9 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$eq$src/mod24.v:43$1336_Y.
Removed top 4 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$1278_Y.
Removed top 6 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$1285_Y.
Removed top 4 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$1292_Y.
Removed top 4 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$1299_Y.
Removed top 4 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$1306_Y.
Removed top 6 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$1313_Y.
Removed top 4 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$1320_Y.
Removed top 4 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$or$src/mod24.v:33$1327_Y.
Removed top 5 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:33$1270_Y.
Removed top 4 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:33$1271_Y.
Removed top 6 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:34$1276_Y.
Removed top 4 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:34$1277_Y.
Removed top 4 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:36$1290_Y.
Removed top 4 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:36$1291_Y.
Removed top 5 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:37$1297_Y.
Removed top 4 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:37$1298_Y.
Removed top 6 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:38$1304_Y.
Removed top 4 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:38$1305_Y.
Removed top 4 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:40$1318_Y.
Removed top 6 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:40$1319_Y.
Removed top 5 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:41$1325_Y.
Removed top 4 bits (of 10) from wire top.$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:41$1326_Y.
Removed top 11 bits (of 12) from wire top.$flatten\game_manager.\sh.$and$src/shader.v:20$1134_Y.
Removed top 11 bits (of 12) from wire top.$flatten\game_manager.\sh.$and$src/shader.v:21$1137_Y.
Removed top 11 bits (of 12) from wire top.$flatten\game_manager.\sh.$logic_not$src/shader.v:21$1136_Y.
Removed top 26 bits (of 32) from wire top.$flatten\memory.$sub$src/blockmemory.v:132$1371_Y.
Removed top 26 bits (of 32) from wire top.$flatten\memory.$sub$src/blockmemory.v:136$1376_Y.
Removed top 26 bits (of 32) from wire top.$flatten\memory.$sub$src/blockmemory.v:207$1398_Y.
Removed top 26 bits (of 32) from wire top.$flatten\memory.$sub$src/blockmemory.v:215$1400_Y.
Removed top 26 bits (of 32) from wire top.$flatten\memory.$sub$src/blockmemory.v:223$1402_Y.
Removed top 3 bits (of 6) from wire top.$flatten\memory.\sh.$ternary$src/shifter.v:10$754_Y.
Removed top 3 bits (of 6) from wire top.$flatten\memory.\sh.$ternary$src/shifter.v:10$755_Y.
Removed top 2 bits (of 6) from wire top.$flatten\memory.\sh.$ternary$src/shifter.v:12$763_Y.
Removed top 1 bits (of 6) from wire top.$flatten\memory.\sh.$ternary$src/shifter.v:16$778_Y.
Removed top 1 bits (of 6) from wire top.$flatten\memory.\sh.$ternary$src/shifter.v:23$802_Y.
Removed top 1 bits (of 6) from wire top.$flatten\memory.\sh.$ternary$src/shifter.v:23$803_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s1.$or$src/digitdisplay.v:23$442_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s1.$or$src/digitdisplay.v:28$465_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s1.$or$src/digitdisplay.v:33$490_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s1.$or$src/digitdisplay.v:38$511_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s1.$or$src/digitdisplay.v:43$528_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s1.$or$src/digitdisplay.v:47$555_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s1.$ternary$src/digitdisplay.v:18$417_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s1.$ternary$src/digitdisplay.v:23$441_Y.
Removed top 9 bits (of 12) from wire top.$flatten\sdisplay.\s1.$ternary$src/digitdisplay.v:28$464_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s1.$ternary$src/digitdisplay.v:33$489_Y.
Removed top 9 bits (of 12) from wire top.$flatten\sdisplay.\s1.$ternary$src/digitdisplay.v:38$510_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s1.$ternary$src/digitdisplay.v:43$527_Y.
Removed top 9 bits (of 12) from wire top.$flatten\sdisplay.\s1.$ternary$src/digitdisplay.v:47$554_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s2.$or$src/digitdisplay.v:23$442_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s2.$or$src/digitdisplay.v:28$465_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s2.$or$src/digitdisplay.v:33$490_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s2.$or$src/digitdisplay.v:38$511_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s2.$or$src/digitdisplay.v:43$528_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s2.$or$src/digitdisplay.v:47$555_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s2.$ternary$src/digitdisplay.v:18$417_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s2.$ternary$src/digitdisplay.v:23$441_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s2.$ternary$src/digitdisplay.v:28$464_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s2.$ternary$src/digitdisplay.v:33$489_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s2.$ternary$src/digitdisplay.v:38$510_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s2.$ternary$src/digitdisplay.v:43$527_Y.
Removed top 9 bits (of 12) from wire top.$flatten\sdisplay.\s2.$ternary$src/digitdisplay.v:47$554_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s3.$or$src/digitdisplay.v:23$442_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s3.$or$src/digitdisplay.v:28$465_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s3.$or$src/digitdisplay.v:33$490_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s3.$or$src/digitdisplay.v:38$511_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s3.$or$src/digitdisplay.v:43$528_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s3.$or$src/digitdisplay.v:47$555_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s3.$ternary$src/digitdisplay.v:18$417_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s3.$ternary$src/digitdisplay.v:23$441_Y.
Removed top 9 bits (of 12) from wire top.$flatten\sdisplay.\s3.$ternary$src/digitdisplay.v:28$464_Y.
Removed top 10 bits (of 12) from wire top.$flatten\sdisplay.\s3.$ternary$src/digitdisplay.v:33$489_Y.
Removed top 9 bits (of 12) from wire top.$flatten\sdisplay.\s3.$ternary$src/digitdisplay.v:38$510_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s3.$ternary$src/digitdisplay.v:43$527_Y.
Removed top 10 bits (of 12) from wire top.$flatten\sdisplay.\s3.$ternary$src/digitdisplay.v:47$554_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s4.$or$src/digitdisplay.v:23$442_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s4.$or$src/digitdisplay.v:28$465_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s4.$or$src/digitdisplay.v:33$490_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s4.$or$src/digitdisplay.v:38$511_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s4.$or$src/digitdisplay.v:43$528_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s4.$or$src/digitdisplay.v:47$555_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s4.$ternary$src/digitdisplay.v:18$417_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s4.$ternary$src/digitdisplay.v:23$441_Y.
Removed top 9 bits (of 12) from wire top.$flatten\sdisplay.\s4.$ternary$src/digitdisplay.v:28$464_Y.
Removed top 9 bits (of 12) from wire top.$flatten\sdisplay.\s4.$ternary$src/digitdisplay.v:33$489_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s4.$ternary$src/digitdisplay.v:38$510_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s4.$ternary$src/digitdisplay.v:43$527_Y.
Removed top 9 bits (of 12) from wire top.$flatten\sdisplay.\s4.$ternary$src/digitdisplay.v:47$554_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s5.$or$src/digitdisplay.v:23$442_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s5.$or$src/digitdisplay.v:28$465_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s5.$or$src/digitdisplay.v:33$490_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s5.$or$src/digitdisplay.v:38$511_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s5.$or$src/digitdisplay.v:43$528_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s5.$or$src/digitdisplay.v:47$555_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s5.$ternary$src/digitdisplay.v:18$417_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s5.$ternary$src/digitdisplay.v:23$441_Y.
Removed top 9 bits (of 12) from wire top.$flatten\sdisplay.\s5.$ternary$src/digitdisplay.v:28$464_Y.
Removed top 9 bits (of 12) from wire top.$flatten\sdisplay.\s5.$ternary$src/digitdisplay.v:33$489_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s5.$ternary$src/digitdisplay.v:38$510_Y.
Removed top 11 bits (of 12) from wire top.$flatten\sdisplay.\s5.$ternary$src/digitdisplay.v:43$527_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s5.$ternary$src/digitdisplay.v:47$554_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s6.$or$src/digitdisplay.v:23$442_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s6.$or$src/digitdisplay.v:28$465_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s6.$or$src/digitdisplay.v:33$490_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s6.$or$src/digitdisplay.v:38$511_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s6.$or$src/digitdisplay.v:43$528_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s6.$or$src/digitdisplay.v:47$555_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s6.$ternary$src/digitdisplay.v:18$417_Y.
Removed top 9 bits (of 12) from wire top.$flatten\sdisplay.\s6.$ternary$src/digitdisplay.v:23$441_Y.
Removed top 11 bits (of 12) from wire top.$flatten\sdisplay.\s6.$ternary$src/digitdisplay.v:28$464_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s6.$ternary$src/digitdisplay.v:33$489_Y.
Removed top 9 bits (of 12) from wire top.$flatten\sdisplay.\s6.$ternary$src/digitdisplay.v:38$510_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s6.$ternary$src/digitdisplay.v:43$527_Y.
Removed top 9 bits (of 12) from wire top.$flatten\sdisplay.\s6.$ternary$src/digitdisplay.v:47$554_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s7.$or$src/digitdisplay.v:23$442_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s7.$or$src/digitdisplay.v:28$465_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s7.$or$src/digitdisplay.v:33$490_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s7.$or$src/digitdisplay.v:38$511_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s7.$or$src/digitdisplay.v:43$528_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s7.$or$src/digitdisplay.v:47$555_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s7.$ternary$src/digitdisplay.v:18$417_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s7.$ternary$src/digitdisplay.v:23$441_Y.
Removed top 9 bits (of 12) from wire top.$flatten\sdisplay.\s7.$ternary$src/digitdisplay.v:28$464_Y.
Removed top 9 bits (of 12) from wire top.$flatten\sdisplay.\s7.$ternary$src/digitdisplay.v:33$489_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s7.$ternary$src/digitdisplay.v:38$510_Y.
Removed top 11 bits (of 12) from wire top.$flatten\sdisplay.\s7.$ternary$src/digitdisplay.v:43$527_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s7.$ternary$src/digitdisplay.v:47$554_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s8.$or$src/digitdisplay.v:23$442_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s8.$or$src/digitdisplay.v:28$465_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s8.$or$src/digitdisplay.v:33$490_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s8.$or$src/digitdisplay.v:38$511_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s8.$or$src/digitdisplay.v:43$528_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s8.$or$src/digitdisplay.v:47$555_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s8.$ternary$src/digitdisplay.v:18$417_Y.
Removed top 9 bits (of 12) from wire top.$flatten\sdisplay.\s8.$ternary$src/digitdisplay.v:23$441_Y.
Removed top 11 bits (of 12) from wire top.$flatten\sdisplay.\s8.$ternary$src/digitdisplay.v:28$464_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s8.$ternary$src/digitdisplay.v:33$489_Y.
Removed top 9 bits (of 12) from wire top.$flatten\sdisplay.\s8.$ternary$src/digitdisplay.v:38$510_Y.
Removed top 8 bits (of 12) from wire top.$flatten\sdisplay.\s8.$ternary$src/digitdisplay.v:43$527_Y.
Removed top 9 bits (of 12) from wire top.$flatten\sdisplay.\s8.$ternary$src/digitdisplay.v:47$554_Y.
Removed top 1 bits (of 10) from wire top.$flatten\tdisplay.$shr$src/gamespeed_display.v:17$724_Y.
Removed top 9 bits (of 10) from wire top.$flatten\tdisplay.$sub$src/gamespeed_display.v:17$723_Y.
Removed top 12 bits (of 18) from wire top.$flatten\tdisplay.$ternary$src/gamespeed_display.v:17$726_Y.
Removed top 25 bits (of 26) from wire top.$flatten\vcell.$eq$src/volatile_cell_storage.v:186$1902_Y.
Removed top 3 bits (of 5) from wire top.$flatten\vcell.\ishaper.$procmux$2692_Y.
Removed top 3 bits (of 5) from wire top.$flatten\vcell.\ishaper.$procmux$2694_Y.
Removed top 3 bits (of 5) from wire top.$flatten\vcell.\ishaper.$procmux$2703_Y.
Removed top 3 bits (of 5) from wire top.$flatten\vcell.\ishaper.$procmux$2705_Y.
Removed top 4 bits (of 5) from wire top.$flatten\vcell.\ishaper.$procmux$2714_Y.
Removed top 4 bits (of 5) from wire top.$flatten\vcell.\ishaper.$procmux$2771_Y.

24.14. Executing PEEPOPT pass (run peephole optimizers).

24.15. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 3 unused cells and 469 unused wires.
<suppressed ~4 debug messages>

24.16. Executing SHARE pass (SAT-based resource sharing).

24.17. Executing TECHMAP pass (map to technology primitives).

24.17.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/usr/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

24.17.2. Continuing TECHMAP pass.
Using template $paramod$145abe87336b813af869805af52840f8eaed9f1a\_90_lut_cmp_ for cells of type $gt.
Using template $paramod$63c7f1a5c4d320eda7bf5de8a615386686b975ab\_90_lut_cmp_ for cells of type $gt.
Using template $paramod$fd3a338331ce77d5c60504e1108b754e9b73ee37\_90_lut_cmp_ for cells of type $lt.
No more expansions possible.
<suppressed ~3543 debug messages>

24.18. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~37 debug messages>

24.19. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 55 unused wires.
<suppressed ~1 debug messages>

24.20. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module top:
  creating $macc model for $flatten\core.$add$src/vga_core.v:79$917 ($add).
  creating $macc model for $flatten\core.$add$src/vga_core.v:89$929 ($add).
  creating $macc model for $flatten\game_manager.$sub$src/gmanager.v:34$1105 ($sub).
  creating $macc model for $flatten\game_manager.$sub$src/gmanager.v:35$1109 ($sub).
  creating $macc model for $flatten\game_manager.$sub$src/gmanager.v:43$1110 ($sub).
  creating $macc model for $flatten\game_manager.\hh.$sub$src/mod24.v:58$1342 ($sub).
  creating $macc model for $flatten\memory.$add$src/blockmemory.v:128$1367 ($add).
  creating $macc model for $flatten\memory.$sub$src/blockmemory.v:132$1371 ($sub).
  creating $macc model for $flatten\memory.$sub$src/blockmemory.v:136$1376 ($sub).
  creating $macc model for $flatten\memory.$sub$src/blockmemory.v:180$1389 ($sub).
  creating $macc model for $flatten\memory.$sub$src/blockmemory.v:183$1391 ($sub).
  creating $macc model for $flatten\memory.$sub$src/blockmemory.v:199$1396 ($sub).
  creating $macc model for $flatten\memory.$sub$src/blockmemory.v:207$1398 ($sub).
  creating $macc model for $flatten\memory.$sub$src/blockmemory.v:215$1400 ($sub).
  creating $macc model for $flatten\memory.$sub$src/blockmemory.v:223$1402 ($sub).
  creating $macc model for $flatten\memory.$sub$src/blockmemory.v:242$1405 ($sub).
  creating $macc model for $flatten\sdisplay.$add$src/scoredisplay.v:36$560 ($add).
  creating $macc model for $flatten\sdisplay.$add$src/scoredisplay.v:40$564 ($add).
  creating $macc model for $flatten\sdisplay.$add$src/scoredisplay.v:46$566 ($add).
  creating $macc model for $flatten\sdisplay.$add$src/scoredisplay.v:51$568 ($add).
  creating $macc model for $flatten\sdisplay.$add$src/scoredisplay.v:56$570 ($add).
  creating $macc model for $flatten\sdisplay.$add$src/scoredisplay.v:61$572 ($add).
  creating $macc model for $flatten\sdisplay.$add$src/scoredisplay.v:65$574 ($add).
  creating $macc model for $flatten\sdisplay.$add$src/scoredisplay.v:70$576 ($add).
  creating $macc model for $flatten\sdisplay.$add$src/scoredisplay.v:75$578 ($add).
  creating $macc model for $flatten\sdisplay.$sub$src/scoredisplay.v:105$599 ($sub).
  creating $macc model for $flatten\sdisplay.$sub$src/scoredisplay.v:105$600 ($sub).
  creating $macc model for $flatten\sdisplay.$sub$src/scoredisplay.v:111$611 ($sub).
  creating $macc model for $flatten\sdisplay.$sub$src/scoredisplay.v:118$623 ($sub).
  creating $macc model for $flatten\sdisplay.$sub$src/scoredisplay.v:125$635 ($sub).
  creating $macc model for $flatten\sdisplay.$sub$src/scoredisplay.v:132$647 ($sub).
  creating $macc model for $flatten\sdisplay.$sub$src/scoredisplay.v:139$659 ($sub).
  creating $macc model for $flatten\sdisplay.$sub$src/scoredisplay.v:146$671 ($sub).
  creating $macc model for $flatten\sdisplay.$sub$src/scoredisplay.v:38$562 ($sub).
  creating $macc model for $flatten\sdisplay.$sub$src/scoredisplay.v:97$588 ($sub).
  creating $macc model for $flatten\t.$add$src/timer.v:18$934 ($add).
  creating $macc model for $flatten\tdisplay.$add$src/gamespeed_display.v:28$733 ($add).
  creating $macc model for $flatten\tdisplay.$mul$src/gamespeed_display.v:18$729 ($mul).
  creating $macc model for $flatten\tdisplay.$sub$src/gamespeed_display.v:17$718 ($sub).
  creating $macc model for $flatten\tdisplay.$sub$src/gamespeed_display.v:17$720 ($sub).
  creating $macc model for $flatten\tdisplay.$sub$src/gamespeed_display.v:17$723 ($sub).
  creating $macc model for $flatten\tdisplay.$sub$src/gamespeed_display.v:31$735 ($sub).
  creating $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:162$1882 ($add).
  creating $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:182$1898 ($add).
  creating $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:194$1915 ($add).
  creating $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:54$1831 ($add).
  creating $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:55$1836 ($add).
  creating $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:56$1841 ($add).
  creating $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:57$1846 ($add).
  creating $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:58$1851 ($add).
  creating $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:59$1856 ($add).
  creating $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:60$1861 ($add).
  creating $macc model for $flatten\vcell.$add$src/volatile_cell_storage.v:61$1866 ($add).
  creating $macc model for $flatten\vcell.$sub$src/volatile_cell_storage.v:175$1885 ($sub).
  creating $macc model for $flatten\vcell.$sub$src/volatile_cell_storage.v:188$1906 ($sub).
  creating $alu model for $macc $flatten\vcell.$sub$src/volatile_cell_storage.v:188$1906.
  creating $alu model for $macc $flatten\vcell.$sub$src/volatile_cell_storage.v:175$1885.
  creating $alu model for $macc $flatten\vcell.$add$src/volatile_cell_storage.v:61$1866.
  creating $alu model for $macc $flatten\vcell.$add$src/volatile_cell_storage.v:60$1861.
  creating $alu model for $macc $flatten\vcell.$add$src/volatile_cell_storage.v:59$1856.
  creating $alu model for $macc $flatten\vcell.$add$src/volatile_cell_storage.v:58$1851.
  creating $alu model for $macc $flatten\vcell.$add$src/volatile_cell_storage.v:57$1846.
  creating $alu model for $macc $flatten\vcell.$add$src/volatile_cell_storage.v:56$1841.
  creating $alu model for $macc $flatten\vcell.$add$src/volatile_cell_storage.v:55$1836.
  creating $alu model for $macc $flatten\vcell.$add$src/volatile_cell_storage.v:54$1831.
  creating $alu model for $macc $flatten\vcell.$add$src/volatile_cell_storage.v:194$1915.
  creating $alu model for $macc $flatten\vcell.$add$src/volatile_cell_storage.v:182$1898.
  creating $alu model for $macc $flatten\vcell.$add$src/volatile_cell_storage.v:162$1882.
  creating $alu model for $macc $flatten\tdisplay.$sub$src/gamespeed_display.v:31$735.
  creating $alu model for $macc $flatten\tdisplay.$sub$src/gamespeed_display.v:17$723.
  creating $alu model for $macc $flatten\tdisplay.$sub$src/gamespeed_display.v:17$720.
  creating $alu model for $macc $flatten\tdisplay.$sub$src/gamespeed_display.v:17$718.
  creating $alu model for $macc $flatten\tdisplay.$add$src/gamespeed_display.v:28$733.
  creating $alu model for $macc $flatten\t.$add$src/timer.v:18$934.
  creating $alu model for $macc $flatten\sdisplay.$sub$src/scoredisplay.v:97$588.
  creating $alu model for $macc $flatten\sdisplay.$sub$src/scoredisplay.v:38$562.
  creating $alu model for $macc $flatten\sdisplay.$sub$src/scoredisplay.v:146$671.
  creating $alu model for $macc $flatten\sdisplay.$sub$src/scoredisplay.v:139$659.
  creating $alu model for $macc $flatten\sdisplay.$sub$src/scoredisplay.v:132$647.
  creating $alu model for $macc $flatten\sdisplay.$sub$src/scoredisplay.v:125$635.
  creating $alu model for $macc $flatten\sdisplay.$sub$src/scoredisplay.v:118$623.
  creating $alu model for $macc $flatten\sdisplay.$sub$src/scoredisplay.v:111$611.
  creating $alu model for $macc $flatten\sdisplay.$sub$src/scoredisplay.v:105$600.
  creating $alu model for $macc $flatten\sdisplay.$sub$src/scoredisplay.v:105$599.
  creating $alu model for $macc $flatten\sdisplay.$add$src/scoredisplay.v:75$578.
  creating $alu model for $macc $flatten\sdisplay.$add$src/scoredisplay.v:70$576.
  creating $alu model for $macc $flatten\sdisplay.$add$src/scoredisplay.v:65$574.
  creating $alu model for $macc $flatten\sdisplay.$add$src/scoredisplay.v:61$572.
  creating $alu model for $macc $flatten\sdisplay.$add$src/scoredisplay.v:56$570.
  creating $alu model for $macc $flatten\sdisplay.$add$src/scoredisplay.v:51$568.
  creating $alu model for $macc $flatten\sdisplay.$add$src/scoredisplay.v:46$566.
  creating $alu model for $macc $flatten\sdisplay.$add$src/scoredisplay.v:40$564.
  creating $alu model for $macc $flatten\sdisplay.$add$src/scoredisplay.v:36$560.
  creating $alu model for $macc $flatten\memory.$sub$src/blockmemory.v:242$1405.
  creating $alu model for $macc $flatten\memory.$sub$src/blockmemory.v:223$1402.
  creating $alu model for $macc $flatten\memory.$sub$src/blockmemory.v:215$1400.
  creating $alu model for $macc $flatten\memory.$sub$src/blockmemory.v:207$1398.
  creating $alu model for $macc $flatten\memory.$sub$src/blockmemory.v:199$1396.
  creating $alu model for $macc $flatten\memory.$sub$src/blockmemory.v:183$1391.
  creating $alu model for $macc $flatten\memory.$sub$src/blockmemory.v:180$1389.
  creating $alu model for $macc $flatten\memory.$sub$src/blockmemory.v:136$1376.
  creating $alu model for $macc $flatten\memory.$sub$src/blockmemory.v:132$1371.
  creating $alu model for $macc $flatten\memory.$add$src/blockmemory.v:128$1367.
  creating $alu model for $macc $flatten\game_manager.\hh.$sub$src/mod24.v:58$1342.
  creating $alu model for $macc $flatten\game_manager.$sub$src/gmanager.v:43$1110.
  creating $alu model for $macc $flatten\game_manager.$sub$src/gmanager.v:35$1109.
  creating $alu model for $macc $flatten\game_manager.$sub$src/gmanager.v:34$1105.
  creating $alu model for $macc $flatten\core.$add$src/vga_core.v:89$929.
  creating $alu model for $macc $flatten\core.$add$src/vga_core.v:79$917.
  creating $macc cell for $flatten\tdisplay.$mul$src/gamespeed_display.v:18$729: $auto$alumacc.cc:365:replace_macc$5992
  creating $alu model for $flatten\core.$ge$src/vga_core.v:84$920 ($ge): new $alu
  creating $alu model for $flatten\core.$ge$src/vga_core.v:85$924 ($ge): new $alu
  creating $alu model for $flatten\core.$lt$src/vga_core.v:81$918 ($lt): new $alu
  creating $alu model for $flatten\core.$lt$src/vga_core.v:82$919 ($lt): new $alu
  creating $alu model for $flatten\core.$lt$src/vga_core.v:84$921 ($lt): new $alu
  creating $alu model for $flatten\core.$lt$src/vga_core.v:85$925 ($lt): new $alu
  creating $alu model for $flatten\game_manager.$ge$src/gmanager.v:28$1099 ($ge): new $alu
  creating $alu model for $flatten\game_manager.$ge$src/gmanager.v:29$1102 ($ge): new $alu
  creating $alu model for $flatten\game_manager.$lt$src/gmanager.v:28$1100 ($lt): new $alu
  creating $alu model for $flatten\game_manager.$lt$src/gmanager.v:29$1103 ($lt): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$1197 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$1200 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$1203 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$1206 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$1209 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$1212 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$1215 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$1218 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$1221 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$1224 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$1227 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$1230 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$1233 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$1236 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$1239 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$1242 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$1245 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$1248 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$1251 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$1254 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$1257 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$1260 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$ge$src/mod24.v:15$1263 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$1198 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$1200.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$1201 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$1203.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$1204 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$1206.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$1207 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$1209.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$1210 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$1212.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$1213 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$1215.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$1216 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$1218.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$1219 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$1221.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$1222 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$1224.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$1225 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$1227.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$1228 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$1230.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$1231 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$1233.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$1234 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$1236.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$1237 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$1239.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$1240 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$1242.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$1243 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$1245.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$1246 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$1248.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$1249 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$1251.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$1252 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$1254.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$1255 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$1257.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$1258 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$1260.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$1261 ($lt): merged with $flatten\game_manager.\h.$ge$src/mod24.v:15$1263.
  creating $alu model for $flatten\game_manager.\h.$lt$src/mod24.v:15$1264 ($lt): new $alu
  creating $alu model for $flatten\game_manager.\sh.$ge$src/shader.v:9$1119 ($ge): new $alu
  creating $alu model for $flatten\game_manager.\sh.$gt$src/shader.v:10$1121 ($gt): new $alu
  creating $alu model for $flatten\game_manager.\sh.$gt$src/shader.v:10$1124 ($gt): new $alu
  creating $alu model for $flatten\game_manager.\sh.$gt$src/shader.v:12$1130 ($gt): new $alu
  creating $alu model for $flatten\game_manager.\sh.$le$src/shader.v:9$1114 ($le): new $alu
  creating $alu model for $flatten\game_manager.\sh.$lt$src/shader.v:10$1122 ($lt): new $alu
  creating $alu model for $flatten\game_manager.\sh.$lt$src/shader.v:10$1126 ($lt): new $alu
  creating $alu model for $flatten\memory.$ge$src/blockmemory.v:130$1368 ($ge): new $alu
  creating $alu model for $flatten\memory.$ge$src/blockmemory.v:135$1373 ($ge): new $alu
  creating $alu model for $flatten\memory.$ge$src/blockmemory.v:140$1378 ($ge): new $alu
  creating $alu model for $flatten\memory.$gt$src/blockmemory.v:182$1390 ($gt): new $alu
  creating $alu model for $flatten\memory.$lt$src/blockmemory.v:125$1366 ($lt): merged with $flatten\memory.$ge$src/blockmemory.v:130$1368.
  creating $alu model for $flatten\memory.$lt$src/blockmemory.v:130$1369 ($lt): merged with $flatten\memory.$ge$src/blockmemory.v:135$1373.
  creating $alu model for $flatten\memory.$lt$src/blockmemory.v:135$1374 ($lt): merged with $flatten\memory.$ge$src/blockmemory.v:140$1378.
  creating $alu model for $flatten\memory.\sh.$gt$src/shifter.v:23$799 ($gt): new $alu
  creating $alu model for $flatten\memory.\sh.$gt$src/shifter.v:23$800 ($gt): new $alu
  creating $alu model for $flatten\memory.\sh.$gt$src/shifter.v:23$801 ($gt): new $alu
  creating $alu model for $flatten\memory.\sh.$lt$src/shifter.v:26$809 ($lt): new $alu
  creating $alu model for $flatten\memory.\sh.$lt$src/shifter.v:27$810 ($lt): new $alu
  creating $alu model for $flatten\memory.\sh.$lt$src/shifter.v:28$811 ($lt): new $alu
  creating $alu model for $flatten\memory.\sh.$lt$src/shifter.v:29$812 ($lt): new $alu
  creating $alu model for $flatten\memory.\sh.$lt$src/shifter.v:30$813 ($lt): new $alu
  creating $alu model for $flatten\memory.\sh.$lt$src/shifter.v:31$814 ($lt): new $alu
  creating $alu model for $flatten\memory.\sh.$lt$src/shifter.v:32$815 ($lt): new $alu
  creating $alu model for $flatten\memory.\sh.$lt$src/shifter.v:33$816 ($lt): new $alu
  creating $alu model for $flatten\memory.\sh.$lt$src/shifter.v:34$817 ($lt): new $alu
  creating $alu model for $flatten\memory.\sh.$lt$src/shifter.v:35$818 ($lt): new $alu
  creating $alu model for $flatten\memory.\sh.$lt$src/shifter.v:36$819 ($lt): new $alu
  creating $alu model for $flatten\memory.\sh.$lt$src/shifter.v:37$820 ($lt): new $alu
  creating $alu model for $flatten\memory.\sh.$lt$src/shifter.v:38$821 ($lt): new $alu
  creating $alu model for $flatten\memory.\sh.$lt$src/shifter.v:39$822 ($lt): new $alu
  creating $alu model for $flatten\memory.\sh.$lt$src/shifter.v:40$823 ($lt): new $alu
  creating $alu model for $flatten\memory.\sh.$lt$src/shifter.v:41$824 ($lt): new $alu
  creating $alu model for $flatten\memory.\sh.$lt$src/shifter.v:42$825 ($lt): new $alu
  creating $alu model for $flatten\memory.\sh.$lt$src/shifter.v:43$826 ($lt): new $alu
  creating $alu model for $flatten\memory.\sh.$lt$src/shifter.v:44$827 ($lt): new $alu
  creating $alu model for $flatten\memory.\sh.$lt$src/shifter.v:45$828 ($lt): new $alu
  creating $alu model for $flatten\screen_mngr.$ge$src/screen_manager.v:11$686 ($ge): new $alu
  creating $alu model for $flatten\screen_mngr.$ge$src/screen_manager.v:12$693 ($ge): new $alu
  creating $alu model for $flatten\screen_mngr.$ge$src/screen_manager.v:13$700 ($ge): new $alu
  creating $alu model for $flatten\screen_mngr.$lt$src/screen_manager.v:11$687 ($lt): new $alu
  creating $alu model for $flatten\screen_mngr.$lt$src/screen_manager.v:12$694 ($lt): new $alu
  creating $alu model for $flatten\screen_mngr.$lt$src/screen_manager.v:13$701 ($lt): new $alu
  creating $alu model for $flatten\sdisplay.$ge$src/scoredisplay.v:102$591 ($ge): new $alu
  creating $alu model for $flatten\sdisplay.$ge$src/scoredisplay.v:102$594 ($ge): new $alu
  creating $alu model for $flatten\sdisplay.$ge$src/scoredisplay.v:109$603 ($ge): new $alu
  creating $alu model for $flatten\sdisplay.$ge$src/scoredisplay.v:116$615 ($ge): new $alu
  creating $alu model for $flatten\sdisplay.$ge$src/scoredisplay.v:123$627 ($ge): new $alu
  creating $alu model for $flatten\sdisplay.$ge$src/scoredisplay.v:130$639 ($ge): new $alu
  creating $alu model for $flatten\sdisplay.$ge$src/scoredisplay.v:137$651 ($ge): new $alu
  creating $alu model for $flatten\sdisplay.$ge$src/scoredisplay.v:143$663 ($ge): new $alu
  creating $alu model for $flatten\sdisplay.$ge$src/scoredisplay.v:143$666 ($ge): new $alu
  creating $alu model for $flatten\sdisplay.$ge$src/scoredisplay.v:147$674 ($ge): new $alu
  creating $alu model for $flatten\sdisplay.$ge$src/scoredisplay.v:94$579 ($ge): new $alu
  creating $alu model for $flatten\sdisplay.$gt$src/scoredisplay.v:35$559 ($gt): new $alu
  creating $alu model for $flatten\sdisplay.$gt$src/scoredisplay.v:37$561 ($gt): new $alu
  creating $alu model for $flatten\sdisplay.$lt$src/scoredisplay.v:102$592 ($lt): new $alu
  creating $alu model for $flatten\sdisplay.$lt$src/scoredisplay.v:102$595 ($lt): new $alu
  creating $alu model for $flatten\sdisplay.$lt$src/scoredisplay.v:109$604 ($lt): new $alu
  creating $alu model for $flatten\sdisplay.$lt$src/scoredisplay.v:116$616 ($lt): new $alu
  creating $alu model for $flatten\sdisplay.$lt$src/scoredisplay.v:123$628 ($lt): new $alu
  creating $alu model for $flatten\sdisplay.$lt$src/scoredisplay.v:130$640 ($lt): new $alu
  creating $alu model for $flatten\sdisplay.$lt$src/scoredisplay.v:137$652 ($lt): new $alu
  creating $alu model for $flatten\sdisplay.$lt$src/scoredisplay.v:143$664 ($lt): merged with $flatten\tdisplay.$sub$src/gamespeed_display.v:17$718.
  creating $alu model for $flatten\sdisplay.$lt$src/scoredisplay.v:143$667 ($lt): new $alu
  creating $alu model for $flatten\sdisplay.$lt$src/scoredisplay.v:147$675 ($lt): new $alu
  creating $alu model for $flatten\sdisplay.$lt$src/scoredisplay.v:39$563 ($lt): new $alu
  creating $alu model for $flatten\sdisplay.$lt$src/scoredisplay.v:44$565 ($lt): new $alu
  creating $alu model for $flatten\sdisplay.$lt$src/scoredisplay.v:49$567 ($lt): new $alu
  creating $alu model for $flatten\sdisplay.$lt$src/scoredisplay.v:54$569 ($lt): new $alu
  creating $alu model for $flatten\sdisplay.$lt$src/scoredisplay.v:59$571 ($lt): new $alu
  creating $alu model for $flatten\sdisplay.$lt$src/scoredisplay.v:64$573 ($lt): new $alu
  creating $alu model for $flatten\sdisplay.$lt$src/scoredisplay.v:69$575 ($lt): new $alu
  creating $alu model for $flatten\sdisplay.$lt$src/scoredisplay.v:74$577 ($lt): new $alu
  creating $alu model for $flatten\sdisplay.$lt$src/scoredisplay.v:94$580 ($lt): new $alu
  creating $alu model for $flatten\sdisplay.\s1.$gt$src/digitdisplay.v:17$395 ($gt): new $alu
  creating $alu model for $flatten\sdisplay.\s1.$gt$src/digitdisplay.v:17$398 ($gt): new $alu
  creating $alu model for $flatten\sdisplay.\s1.$gt$src/digitdisplay.v:22$419 ($gt): new $alu
  creating $alu model for $flatten\sdisplay.\s1.$gt$src/digitdisplay.v:27$444 ($gt): new $alu
  creating $alu model for $flatten\sdisplay.\s1.$gt$src/digitdisplay.v:37$495 ($gt): new $alu
  creating $alu model for $flatten\sdisplay.\s1.$lt$src/digitdisplay.v:17$396 ($lt): new $alu
  creating $alu model for $flatten\sdisplay.\s1.$lt$src/digitdisplay.v:17$399 ($lt): new $alu
  creating $alu model for $flatten\sdisplay.\s1.$lt$src/digitdisplay.v:22$420 ($lt): new $alu
  creating $alu model for $flatten\sdisplay.\s1.$lt$src/digitdisplay.v:27$445 ($lt): new $alu
  creating $alu model for $flatten\sdisplay.\s1.$lt$src/digitdisplay.v:32$471 ($lt): new $alu
  creating $alu model for $flatten\sdisplay.\s2.$gt$src/digitdisplay.v:17$398 ($gt): new $alu
  creating $alu model for $flatten\sdisplay.\s2.$gt$src/digitdisplay.v:37$495 ($gt): new $alu
  creating $alu model for $flatten\sdisplay.\s2.$lt$src/digitdisplay.v:17$399 ($lt): new $alu
  creating $alu model for $flatten\sdisplay.\s2.$lt$src/digitdisplay.v:32$471 ($lt): new $alu
  creating $alu model for $flatten\sdisplay.\s3.$gt$src/digitdisplay.v:17$398 ($gt): new $alu
  creating $alu model for $flatten\sdisplay.\s3.$gt$src/digitdisplay.v:37$495 ($gt): new $alu
  creating $alu model for $flatten\sdisplay.\s3.$lt$src/digitdisplay.v:17$399 ($lt): new $alu
  creating $alu model for $flatten\sdisplay.\s3.$lt$src/digitdisplay.v:32$471 ($lt): new $alu
  creating $alu model for $flatten\sdisplay.\s4.$gt$src/digitdisplay.v:17$398 ($gt): new $alu
  creating $alu model for $flatten\sdisplay.\s4.$gt$src/digitdisplay.v:37$495 ($gt): new $alu
  creating $alu model for $flatten\sdisplay.\s4.$lt$src/digitdisplay.v:17$399 ($lt): new $alu
  creating $alu model for $flatten\sdisplay.\s4.$lt$src/digitdisplay.v:32$471 ($lt): new $alu
  creating $alu model for $flatten\sdisplay.\s5.$gt$src/digitdisplay.v:17$398 ($gt): new $alu
  creating $alu model for $flatten\sdisplay.\s5.$gt$src/digitdisplay.v:37$495 ($gt): new $alu
  creating $alu model for $flatten\sdisplay.\s5.$lt$src/digitdisplay.v:17$399 ($lt): new $alu
  creating $alu model for $flatten\sdisplay.\s5.$lt$src/digitdisplay.v:32$471 ($lt): new $alu
  creating $alu model for $flatten\sdisplay.\s6.$gt$src/digitdisplay.v:17$398 ($gt): new $alu
  creating $alu model for $flatten\sdisplay.\s6.$gt$src/digitdisplay.v:37$495 ($gt): new $alu
  creating $alu model for $flatten\sdisplay.\s6.$lt$src/digitdisplay.v:17$399 ($lt): new $alu
  creating $alu model for $flatten\sdisplay.\s6.$lt$src/digitdisplay.v:32$471 ($lt): new $alu
  creating $alu model for $flatten\sdisplay.\s7.$gt$src/digitdisplay.v:17$398 ($gt): new $alu
  creating $alu model for $flatten\sdisplay.\s7.$gt$src/digitdisplay.v:37$495 ($gt): new $alu
  creating $alu model for $flatten\sdisplay.\s7.$lt$src/digitdisplay.v:17$399 ($lt): new $alu
  creating $alu model for $flatten\sdisplay.\s7.$lt$src/digitdisplay.v:32$471 ($lt): new $alu
  creating $alu model for $flatten\sdisplay.\s8.$gt$src/digitdisplay.v:17$398 ($gt): new $alu
  creating $alu model for $flatten\sdisplay.\s8.$gt$src/digitdisplay.v:37$495 ($gt): new $alu
  creating $alu model for $flatten\sdisplay.\s8.$lt$src/digitdisplay.v:17$399 ($lt): new $alu
  creating $alu model for $flatten\sdisplay.\s8.$lt$src/digitdisplay.v:32$471 ($lt): new $alu
  creating $alu model for $flatten\tdisplay.$ge$src/gamespeed_display.v:14$713 ($ge): new $alu
  creating $alu model for $flatten\tdisplay.$lt$src/gamespeed_display.v:14$714 ($lt): new $alu
  creating $alu model for $flatten\tdisplay.$lt$src/gamespeed_display.v:17$719 ($lt): new $alu
  creating $alu model for $flatten\tdisplay.$lt$src/gamespeed_display.v:17$721 ($lt): new $alu
  creating $alu model for $flatten\vcell.$gt$src/volatile_cell_storage.v:198$1917 ($gt): new $alu
  creating $alu cell for $flatten\vcell.$gt$src/volatile_cell_storage.v:198$1917: $auto$alumacc.cc:485:replace_alu$6141
  creating $alu cell for $flatten\tdisplay.$lt$src/gamespeed_display.v:17$721: $auto$alumacc.cc:485:replace_alu$6146
  creating $alu cell for $flatten\tdisplay.$lt$src/gamespeed_display.v:17$719: $auto$alumacc.cc:485:replace_alu$6151
  creating $alu cell for $flatten\tdisplay.$lt$src/gamespeed_display.v:14$714: $auto$alumacc.cc:485:replace_alu$6156
  creating $alu cell for $flatten\tdisplay.$ge$src/gamespeed_display.v:14$713: $auto$alumacc.cc:485:replace_alu$6167
  creating $alu cell for $flatten\sdisplay.\s8.$lt$src/digitdisplay.v:32$471: $auto$alumacc.cc:485:replace_alu$6176
  creating $alu cell for $flatten\sdisplay.\s8.$lt$src/digitdisplay.v:17$399: $auto$alumacc.cc:485:replace_alu$6187
  creating $alu cell for $flatten\sdisplay.\s8.$gt$src/digitdisplay.v:37$495: $auto$alumacc.cc:485:replace_alu$6198
  creating $alu cell for $flatten\sdisplay.\s8.$gt$src/digitdisplay.v:17$398: $auto$alumacc.cc:485:replace_alu$6203
  creating $alu cell for $flatten\sdisplay.\s7.$lt$src/digitdisplay.v:32$471: $auto$alumacc.cc:485:replace_alu$6208
  creating $alu cell for $flatten\sdisplay.\s7.$lt$src/digitdisplay.v:17$399: $auto$alumacc.cc:485:replace_alu$6219
  creating $alu cell for $flatten\sdisplay.\s7.$gt$src/digitdisplay.v:37$495: $auto$alumacc.cc:485:replace_alu$6230
  creating $alu cell for $flatten\sdisplay.\s7.$gt$src/digitdisplay.v:17$398: $auto$alumacc.cc:485:replace_alu$6235
  creating $alu cell for $flatten\sdisplay.\s6.$lt$src/digitdisplay.v:32$471: $auto$alumacc.cc:485:replace_alu$6240
  creating $alu cell for $flatten\sdisplay.\s6.$lt$src/digitdisplay.v:17$399: $auto$alumacc.cc:485:replace_alu$6251
  creating $alu cell for $flatten\sdisplay.\s6.$gt$src/digitdisplay.v:37$495: $auto$alumacc.cc:485:replace_alu$6262
  creating $alu cell for $flatten\sdisplay.\s6.$gt$src/digitdisplay.v:17$398: $auto$alumacc.cc:485:replace_alu$6267
  creating $alu cell for $flatten\sdisplay.\s5.$lt$src/digitdisplay.v:32$471: $auto$alumacc.cc:485:replace_alu$6272
  creating $alu cell for $flatten\sdisplay.\s5.$lt$src/digitdisplay.v:17$399: $auto$alumacc.cc:485:replace_alu$6283
  creating $alu cell for $flatten\sdisplay.\s5.$gt$src/digitdisplay.v:37$495: $auto$alumacc.cc:485:replace_alu$6294
  creating $alu cell for $flatten\sdisplay.\s5.$gt$src/digitdisplay.v:17$398: $auto$alumacc.cc:485:replace_alu$6299
  creating $alu cell for $flatten\sdisplay.\s4.$lt$src/digitdisplay.v:32$471: $auto$alumacc.cc:485:replace_alu$6304
  creating $alu cell for $flatten\sdisplay.\s4.$lt$src/digitdisplay.v:17$399: $auto$alumacc.cc:485:replace_alu$6315
  creating $alu cell for $flatten\sdisplay.\s4.$gt$src/digitdisplay.v:37$495: $auto$alumacc.cc:485:replace_alu$6326
  creating $alu cell for $flatten\sdisplay.\s4.$gt$src/digitdisplay.v:17$398: $auto$alumacc.cc:485:replace_alu$6331
  creating $alu cell for $flatten\sdisplay.\s3.$lt$src/digitdisplay.v:32$471: $auto$alumacc.cc:485:replace_alu$6336
  creating $alu cell for $flatten\sdisplay.\s3.$lt$src/digitdisplay.v:17$399: $auto$alumacc.cc:485:replace_alu$6347
  creating $alu cell for $flatten\sdisplay.\s3.$gt$src/digitdisplay.v:37$495: $auto$alumacc.cc:485:replace_alu$6358
  creating $alu cell for $flatten\sdisplay.\s3.$gt$src/digitdisplay.v:17$398: $auto$alumacc.cc:485:replace_alu$6363
  creating $alu cell for $flatten\sdisplay.\s2.$lt$src/digitdisplay.v:32$471: $auto$alumacc.cc:485:replace_alu$6368
  creating $alu cell for $flatten\sdisplay.\s2.$lt$src/digitdisplay.v:17$399: $auto$alumacc.cc:485:replace_alu$6379
  creating $alu cell for $flatten\sdisplay.\s2.$gt$src/digitdisplay.v:37$495: $auto$alumacc.cc:485:replace_alu$6390
  creating $alu cell for $flatten\sdisplay.\s2.$gt$src/digitdisplay.v:17$398: $auto$alumacc.cc:485:replace_alu$6395
  creating $alu cell for $flatten\sdisplay.\s1.$lt$src/digitdisplay.v:32$471: $auto$alumacc.cc:485:replace_alu$6400
  creating $alu cell for $flatten\sdisplay.\s1.$lt$src/digitdisplay.v:27$445: $auto$alumacc.cc:485:replace_alu$6411
  creating $alu cell for $flatten\sdisplay.\s1.$lt$src/digitdisplay.v:22$420: $auto$alumacc.cc:485:replace_alu$6422
  creating $alu cell for $flatten\sdisplay.\s1.$lt$src/digitdisplay.v:17$399: $auto$alumacc.cc:485:replace_alu$6433
  creating $alu cell for $flatten\sdisplay.\s1.$lt$src/digitdisplay.v:17$396: $auto$alumacc.cc:485:replace_alu$6444
  creating $alu cell for $flatten\sdisplay.\s1.$gt$src/digitdisplay.v:37$495: $auto$alumacc.cc:485:replace_alu$6455
  creating $alu cell for $flatten\sdisplay.\s1.$gt$src/digitdisplay.v:27$444: $auto$alumacc.cc:485:replace_alu$6460
  creating $alu cell for $flatten\sdisplay.\s1.$gt$src/digitdisplay.v:22$419: $auto$alumacc.cc:485:replace_alu$6465
  creating $alu cell for $flatten\sdisplay.\s1.$gt$src/digitdisplay.v:17$398: $auto$alumacc.cc:485:replace_alu$6470
  creating $alu cell for $flatten\sdisplay.\s1.$gt$src/digitdisplay.v:17$395: $auto$alumacc.cc:485:replace_alu$6475
  creating $alu cell for $flatten\sdisplay.$lt$src/scoredisplay.v:94$580: $auto$alumacc.cc:485:replace_alu$6480
  creating $alu cell for $flatten\sdisplay.$lt$src/scoredisplay.v:74$577: $auto$alumacc.cc:485:replace_alu$6491
  creating $alu cell for $flatten\sdisplay.$lt$src/scoredisplay.v:69$575: $auto$alumacc.cc:485:replace_alu$6502
  creating $alu cell for $flatten\sdisplay.$lt$src/scoredisplay.v:64$573: $auto$alumacc.cc:485:replace_alu$6513
  creating $alu cell for $flatten\sdisplay.$lt$src/scoredisplay.v:59$571: $auto$alumacc.cc:485:replace_alu$6524
  creating $alu cell for $flatten\sdisplay.$lt$src/scoredisplay.v:54$569: $auto$alumacc.cc:485:replace_alu$6535
  creating $alu cell for $flatten\sdisplay.$lt$src/scoredisplay.v:49$567: $auto$alumacc.cc:485:replace_alu$6546
  creating $alu cell for $flatten\sdisplay.$lt$src/scoredisplay.v:44$565: $auto$alumacc.cc:485:replace_alu$6557
  creating $alu cell for $flatten\sdisplay.$lt$src/scoredisplay.v:39$563: $auto$alumacc.cc:485:replace_alu$6568
  creating $alu cell for $flatten\sdisplay.$lt$src/scoredisplay.v:147$675: $auto$alumacc.cc:485:replace_alu$6579
  creating $alu cell for $flatten\sdisplay.$lt$src/scoredisplay.v:143$667: $auto$alumacc.cc:485:replace_alu$6590
  creating $alu cell for $flatten\sdisplay.$lt$src/scoredisplay.v:137$652: $auto$alumacc.cc:485:replace_alu$6595
  creating $alu cell for $flatten\sdisplay.$lt$src/scoredisplay.v:130$640: $auto$alumacc.cc:485:replace_alu$6606
  creating $alu cell for $flatten\sdisplay.$lt$src/scoredisplay.v:123$628: $auto$alumacc.cc:485:replace_alu$6617
  creating $alu cell for $flatten\sdisplay.$lt$src/scoredisplay.v:116$616: $auto$alumacc.cc:485:replace_alu$6628
  creating $alu cell for $flatten\sdisplay.$lt$src/scoredisplay.v:109$604: $auto$alumacc.cc:485:replace_alu$6639
  creating $alu cell for $flatten\sdisplay.$lt$src/scoredisplay.v:102$595: $auto$alumacc.cc:485:replace_alu$6650
  creating $alu cell for $flatten\sdisplay.$lt$src/scoredisplay.v:102$592: $auto$alumacc.cc:485:replace_alu$6661
  creating $alu cell for $flatten\sdisplay.$gt$src/scoredisplay.v:37$561: $auto$alumacc.cc:485:replace_alu$6672
  creating $alu cell for $flatten\sdisplay.$gt$src/scoredisplay.v:35$559: $auto$alumacc.cc:485:replace_alu$6677
  creating $alu cell for $flatten\sdisplay.$ge$src/scoredisplay.v:94$579: $auto$alumacc.cc:485:replace_alu$6682
  creating $alu cell for $flatten\sdisplay.$ge$src/scoredisplay.v:147$674: $auto$alumacc.cc:485:replace_alu$6691
  creating $alu cell for $flatten\sdisplay.$ge$src/scoredisplay.v:143$666: $auto$alumacc.cc:485:replace_alu$6700
  creating $alu cell for $flatten\sdisplay.$ge$src/scoredisplay.v:143$663: $auto$alumacc.cc:485:replace_alu$6713
  creating $alu cell for $flatten\sdisplay.$ge$src/scoredisplay.v:137$651: $auto$alumacc.cc:485:replace_alu$6722
  creating $alu cell for $flatten\sdisplay.$ge$src/scoredisplay.v:130$639: $auto$alumacc.cc:485:replace_alu$6731
  creating $alu cell for $flatten\sdisplay.$ge$src/scoredisplay.v:123$627: $auto$alumacc.cc:485:replace_alu$6740
  creating $alu cell for $flatten\sdisplay.$ge$src/scoredisplay.v:116$615: $auto$alumacc.cc:485:replace_alu$6749
  creating $alu cell for $flatten\sdisplay.$ge$src/scoredisplay.v:109$603: $auto$alumacc.cc:485:replace_alu$6758
  creating $alu cell for $flatten\sdisplay.$ge$src/scoredisplay.v:102$594: $auto$alumacc.cc:485:replace_alu$6767
  creating $alu cell for $flatten\sdisplay.$ge$src/scoredisplay.v:102$591: $auto$alumacc.cc:485:replace_alu$6780
  creating $alu cell for $flatten\screen_mngr.$lt$src/screen_manager.v:13$701: $auto$alumacc.cc:485:replace_alu$6789
  creating $alu cell for $flatten\screen_mngr.$lt$src/screen_manager.v:12$694: $auto$alumacc.cc:485:replace_alu$6794
  creating $alu cell for $flatten\screen_mngr.$lt$src/screen_manager.v:11$687: $auto$alumacc.cc:485:replace_alu$6805
  creating $alu cell for $flatten\screen_mngr.$ge$src/screen_manager.v:13$700: $auto$alumacc.cc:485:replace_alu$6810
  creating $alu cell for $flatten\screen_mngr.$ge$src/screen_manager.v:12$693: $auto$alumacc.cc:485:replace_alu$6823
  creating $alu cell for $flatten\screen_mngr.$ge$src/screen_manager.v:11$686: $auto$alumacc.cc:485:replace_alu$6832
  creating $alu cell for $flatten\memory.\sh.$lt$src/shifter.v:45$828: $auto$alumacc.cc:485:replace_alu$6841
  creating $alu cell for $flatten\memory.\sh.$lt$src/shifter.v:44$827: $auto$alumacc.cc:485:replace_alu$6846
  creating $alu cell for $flatten\memory.\sh.$lt$src/shifter.v:43$826: $auto$alumacc.cc:485:replace_alu$6851
  creating $alu cell for $flatten\memory.\sh.$lt$src/shifter.v:42$825: $auto$alumacc.cc:485:replace_alu$6856
  creating $alu cell for $flatten\memory.\sh.$lt$src/shifter.v:41$824: $auto$alumacc.cc:485:replace_alu$6861
  creating $alu cell for $flatten\memory.\sh.$lt$src/shifter.v:40$823: $auto$alumacc.cc:485:replace_alu$6866
  creating $alu cell for $flatten\memory.\sh.$lt$src/shifter.v:39$822: $auto$alumacc.cc:485:replace_alu$6871
  creating $alu cell for $flatten\memory.\sh.$lt$src/shifter.v:38$821: $auto$alumacc.cc:485:replace_alu$6876
  creating $alu cell for $flatten\memory.\sh.$lt$src/shifter.v:37$820: $auto$alumacc.cc:485:replace_alu$6881
  creating $alu cell for $flatten\memory.\sh.$lt$src/shifter.v:36$819: $auto$alumacc.cc:485:replace_alu$6886
  creating $alu cell for $flatten\memory.\sh.$lt$src/shifter.v:35$818: $auto$alumacc.cc:485:replace_alu$6891
  creating $alu cell for $flatten\memory.\sh.$lt$src/shifter.v:34$817: $auto$alumacc.cc:485:replace_alu$6896
  creating $alu cell for $flatten\memory.\sh.$lt$src/shifter.v:33$816: $auto$alumacc.cc:485:replace_alu$6901
  creating $alu cell for $flatten\memory.\sh.$lt$src/shifter.v:32$815: $auto$alumacc.cc:485:replace_alu$6906
  creating $alu cell for $flatten\memory.\sh.$lt$src/shifter.v:31$814: $auto$alumacc.cc:485:replace_alu$6911
  creating $alu cell for $flatten\memory.\sh.$lt$src/shifter.v:30$813: $auto$alumacc.cc:485:replace_alu$6916
  creating $alu cell for $flatten\memory.\sh.$lt$src/shifter.v:29$812: $auto$alumacc.cc:485:replace_alu$6921
  creating $alu cell for $flatten\memory.\sh.$lt$src/shifter.v:28$811: $auto$alumacc.cc:485:replace_alu$6926
  creating $alu cell for $flatten\memory.\sh.$lt$src/shifter.v:27$810: $auto$alumacc.cc:485:replace_alu$6931
  creating $alu cell for $flatten\memory.\sh.$lt$src/shifter.v:26$809: $auto$alumacc.cc:485:replace_alu$6936
  creating $alu cell for $flatten\memory.\sh.$gt$src/shifter.v:23$801: $auto$alumacc.cc:485:replace_alu$6941
  creating $alu cell for $flatten\memory.\sh.$gt$src/shifter.v:23$800: $auto$alumacc.cc:485:replace_alu$6946
  creating $alu cell for $flatten\memory.\sh.$gt$src/shifter.v:23$799: $auto$alumacc.cc:485:replace_alu$6951
  creating $alu cell for $flatten\memory.$gt$src/blockmemory.v:182$1390: $auto$alumacc.cc:485:replace_alu$6956
  creating $alu cell for $flatten\memory.$ge$src/blockmemory.v:140$1378, $flatten\memory.$lt$src/blockmemory.v:135$1374: $auto$alumacc.cc:485:replace_alu$6961
  creating $alu cell for $flatten\memory.$ge$src/blockmemory.v:135$1373, $flatten\memory.$lt$src/blockmemory.v:130$1369: $auto$alumacc.cc:485:replace_alu$6974
  creating $alu cell for $flatten\memory.$ge$src/blockmemory.v:130$1368, $flatten\memory.$lt$src/blockmemory.v:125$1366: $auto$alumacc.cc:485:replace_alu$6987
  creating $alu cell for $flatten\game_manager.\sh.$lt$src/shader.v:10$1126: $auto$alumacc.cc:485:replace_alu$7000
  creating $alu cell for $flatten\game_manager.\sh.$lt$src/shader.v:10$1122: $auto$alumacc.cc:485:replace_alu$7011
  creating $alu cell for $flatten\game_manager.\sh.$le$src/shader.v:9$1114: $auto$alumacc.cc:485:replace_alu$7022
  creating $alu cell for $flatten\game_manager.\sh.$gt$src/shader.v:12$1130: $auto$alumacc.cc:485:replace_alu$7035
  creating $alu cell for $flatten\game_manager.\sh.$gt$src/shader.v:10$1124: $auto$alumacc.cc:485:replace_alu$7040
  creating $alu cell for $flatten\game_manager.\sh.$gt$src/shader.v:10$1121: $auto$alumacc.cc:485:replace_alu$7045
  creating $alu cell for $flatten\game_manager.\sh.$ge$src/shader.v:9$1119: $auto$alumacc.cc:485:replace_alu$7050
  creating $alu cell for $flatten\game_manager.\h.$lt$src/mod24.v:15$1264: $auto$alumacc.cc:485:replace_alu$7059
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$1263, $flatten\game_manager.\h.$lt$src/mod24.v:15$1261: $auto$alumacc.cc:485:replace_alu$7064
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$1260, $flatten\game_manager.\h.$lt$src/mod24.v:15$1258: $auto$alumacc.cc:485:replace_alu$7077
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$1257, $flatten\game_manager.\h.$lt$src/mod24.v:15$1255: $auto$alumacc.cc:485:replace_alu$7090
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$1254, $flatten\game_manager.\h.$lt$src/mod24.v:15$1252: $auto$alumacc.cc:485:replace_alu$7103
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$1251, $flatten\game_manager.\h.$lt$src/mod24.v:15$1249: $auto$alumacc.cc:485:replace_alu$7116
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$1248, $flatten\game_manager.\h.$lt$src/mod24.v:15$1246: $auto$alumacc.cc:485:replace_alu$7129
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$1245, $flatten\game_manager.\h.$lt$src/mod24.v:15$1243: $auto$alumacc.cc:485:replace_alu$7142
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$1242, $flatten\game_manager.\h.$lt$src/mod24.v:15$1240: $auto$alumacc.cc:485:replace_alu$7155
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$1239, $flatten\game_manager.\h.$lt$src/mod24.v:15$1237: $auto$alumacc.cc:485:replace_alu$7168
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$1236, $flatten\game_manager.\h.$lt$src/mod24.v:15$1234: $auto$alumacc.cc:485:replace_alu$7181
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$1233, $flatten\game_manager.\h.$lt$src/mod24.v:15$1231: $auto$alumacc.cc:485:replace_alu$7194
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$1230, $flatten\game_manager.\h.$lt$src/mod24.v:15$1228: $auto$alumacc.cc:485:replace_alu$7207
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$1227, $flatten\game_manager.\h.$lt$src/mod24.v:15$1225: $auto$alumacc.cc:485:replace_alu$7220
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$1224, $flatten\game_manager.\h.$lt$src/mod24.v:15$1222: $auto$alumacc.cc:485:replace_alu$7233
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$1221, $flatten\game_manager.\h.$lt$src/mod24.v:15$1219: $auto$alumacc.cc:485:replace_alu$7246
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$1218, $flatten\game_manager.\h.$lt$src/mod24.v:15$1216: $auto$alumacc.cc:485:replace_alu$7259
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$1215, $flatten\game_manager.\h.$lt$src/mod24.v:15$1213: $auto$alumacc.cc:485:replace_alu$7272
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$1212, $flatten\game_manager.\h.$lt$src/mod24.v:15$1210: $auto$alumacc.cc:485:replace_alu$7285
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$1209, $flatten\game_manager.\h.$lt$src/mod24.v:15$1207: $auto$alumacc.cc:485:replace_alu$7298
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$1206, $flatten\game_manager.\h.$lt$src/mod24.v:15$1204: $auto$alumacc.cc:485:replace_alu$7311
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$1203, $flatten\game_manager.\h.$lt$src/mod24.v:15$1201: $auto$alumacc.cc:485:replace_alu$7324
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$1200, $flatten\game_manager.\h.$lt$src/mod24.v:15$1198: $auto$alumacc.cc:485:replace_alu$7337
  creating $alu cell for $flatten\game_manager.\h.$ge$src/mod24.v:15$1197: $auto$alumacc.cc:485:replace_alu$7350
  creating $alu cell for $flatten\game_manager.$lt$src/gmanager.v:29$1103: $auto$alumacc.cc:485:replace_alu$7359
  creating $alu cell for $flatten\game_manager.$lt$src/gmanager.v:28$1100: $auto$alumacc.cc:485:replace_alu$7364
  creating $alu cell for $flatten\game_manager.$ge$src/gmanager.v:29$1102: $auto$alumacc.cc:485:replace_alu$7375
  creating $alu cell for $flatten\game_manager.$ge$src/gmanager.v:28$1099: $auto$alumacc.cc:485:replace_alu$7384
  creating $alu cell for $flatten\core.$lt$src/vga_core.v:85$925: $auto$alumacc.cc:485:replace_alu$7393
  creating $alu cell for $flatten\core.$lt$src/vga_core.v:84$921: $auto$alumacc.cc:485:replace_alu$7404
  creating $alu cell for $flatten\core.$lt$src/vga_core.v:82$919: $auto$alumacc.cc:485:replace_alu$7409
  creating $alu cell for $flatten\core.$lt$src/vga_core.v:81$918: $auto$alumacc.cc:485:replace_alu$7420
  creating $alu cell for $flatten\core.$ge$src/vga_core.v:85$924: $auto$alumacc.cc:485:replace_alu$7425
  creating $alu cell for $flatten\core.$ge$src/vga_core.v:84$920: $auto$alumacc.cc:485:replace_alu$7434
  creating $alu cell for $flatten\core.$add$src/vga_core.v:79$917: $auto$alumacc.cc:485:replace_alu$7447
  creating $alu cell for $flatten\core.$add$src/vga_core.v:89$929: $auto$alumacc.cc:485:replace_alu$7450
  creating $alu cell for $flatten\game_manager.$sub$src/gmanager.v:34$1105: $auto$alumacc.cc:485:replace_alu$7453
  creating $alu cell for $flatten\game_manager.$sub$src/gmanager.v:35$1109: $auto$alumacc.cc:485:replace_alu$7456
  creating $alu cell for $flatten\game_manager.$sub$src/gmanager.v:43$1110: $auto$alumacc.cc:485:replace_alu$7459
  creating $alu cell for $flatten\game_manager.\hh.$sub$src/mod24.v:58$1342: $auto$alumacc.cc:485:replace_alu$7462
  creating $alu cell for $flatten\memory.$add$src/blockmemory.v:128$1367: $auto$alumacc.cc:485:replace_alu$7465
  creating $alu cell for $flatten\memory.$sub$src/blockmemory.v:132$1371: $auto$alumacc.cc:485:replace_alu$7468
  creating $alu cell for $flatten\memory.$sub$src/blockmemory.v:136$1376: $auto$alumacc.cc:485:replace_alu$7471
  creating $alu cell for $flatten\memory.$sub$src/blockmemory.v:180$1389: $auto$alumacc.cc:485:replace_alu$7474
  creating $alu cell for $flatten\memory.$sub$src/blockmemory.v:183$1391: $auto$alumacc.cc:485:replace_alu$7477
  creating $alu cell for $flatten\memory.$sub$src/blockmemory.v:199$1396: $auto$alumacc.cc:485:replace_alu$7480
  creating $alu cell for $flatten\memory.$sub$src/blockmemory.v:207$1398: $auto$alumacc.cc:485:replace_alu$7483
  creating $alu cell for $flatten\memory.$sub$src/blockmemory.v:215$1400: $auto$alumacc.cc:485:replace_alu$7486
  creating $alu cell for $flatten\memory.$sub$src/blockmemory.v:223$1402: $auto$alumacc.cc:485:replace_alu$7489
  creating $alu cell for $flatten\memory.$sub$src/blockmemory.v:242$1405: $auto$alumacc.cc:485:replace_alu$7492
  creating $alu cell for $flatten\sdisplay.$add$src/scoredisplay.v:36$560: $auto$alumacc.cc:485:replace_alu$7495
  creating $alu cell for $flatten\sdisplay.$add$src/scoredisplay.v:40$564: $auto$alumacc.cc:485:replace_alu$7498
  creating $alu cell for $flatten\sdisplay.$add$src/scoredisplay.v:46$566: $auto$alumacc.cc:485:replace_alu$7501
  creating $alu cell for $flatten\sdisplay.$add$src/scoredisplay.v:51$568: $auto$alumacc.cc:485:replace_alu$7504
  creating $alu cell for $flatten\sdisplay.$add$src/scoredisplay.v:56$570: $auto$alumacc.cc:485:replace_alu$7507
  creating $alu cell for $flatten\sdisplay.$add$src/scoredisplay.v:61$572: $auto$alumacc.cc:485:replace_alu$7510
  creating $alu cell for $flatten\sdisplay.$add$src/scoredisplay.v:65$574: $auto$alumacc.cc:485:replace_alu$7513
  creating $alu cell for $flatten\sdisplay.$add$src/scoredisplay.v:70$576: $auto$alumacc.cc:485:replace_alu$7516
  creating $alu cell for $flatten\sdisplay.$add$src/scoredisplay.v:75$578: $auto$alumacc.cc:485:replace_alu$7519
  creating $alu cell for $flatten\sdisplay.$sub$src/scoredisplay.v:105$599: $auto$alumacc.cc:485:replace_alu$7522
  creating $alu cell for $flatten\sdisplay.$sub$src/scoredisplay.v:105$600: $auto$alumacc.cc:485:replace_alu$7525
  creating $alu cell for $flatten\sdisplay.$sub$src/scoredisplay.v:111$611: $auto$alumacc.cc:485:replace_alu$7528
  creating $alu cell for $flatten\sdisplay.$sub$src/scoredisplay.v:118$623: $auto$alumacc.cc:485:replace_alu$7531
  creating $alu cell for $flatten\sdisplay.$sub$src/scoredisplay.v:125$635: $auto$alumacc.cc:485:replace_alu$7534
  creating $alu cell for $flatten\sdisplay.$sub$src/scoredisplay.v:132$647: $auto$alumacc.cc:485:replace_alu$7537
  creating $alu cell for $flatten\sdisplay.$sub$src/scoredisplay.v:139$659: $auto$alumacc.cc:485:replace_alu$7540
  creating $alu cell for $flatten\sdisplay.$sub$src/scoredisplay.v:146$671: $auto$alumacc.cc:485:replace_alu$7543
  creating $alu cell for $flatten\sdisplay.$sub$src/scoredisplay.v:38$562: $auto$alumacc.cc:485:replace_alu$7546
  creating $alu cell for $flatten\sdisplay.$sub$src/scoredisplay.v:97$588: $auto$alumacc.cc:485:replace_alu$7549
  creating $alu cell for $flatten\t.$add$src/timer.v:18$934: $auto$alumacc.cc:485:replace_alu$7552
  creating $alu cell for $flatten\tdisplay.$add$src/gamespeed_display.v:28$733: $auto$alumacc.cc:485:replace_alu$7555
  creating $alu cell for $flatten\tdisplay.$sub$src/gamespeed_display.v:17$718, $flatten\sdisplay.$lt$src/scoredisplay.v:143$664: $auto$alumacc.cc:485:replace_alu$7558
  creating $alu cell for $flatten\tdisplay.$sub$src/gamespeed_display.v:17$720: $auto$alumacc.cc:485:replace_alu$7569
  creating $alu cell for $flatten\tdisplay.$sub$src/gamespeed_display.v:17$723: $auto$alumacc.cc:485:replace_alu$7572
  creating $alu cell for $flatten\tdisplay.$sub$src/gamespeed_display.v:31$735: $auto$alumacc.cc:485:replace_alu$7575
  creating $alu cell for $flatten\vcell.$add$src/volatile_cell_storage.v:162$1882: $auto$alumacc.cc:485:replace_alu$7578
  creating $alu cell for $flatten\vcell.$add$src/volatile_cell_storage.v:182$1898: $auto$alumacc.cc:485:replace_alu$7581
  creating $alu cell for $flatten\vcell.$add$src/volatile_cell_storage.v:194$1915: $auto$alumacc.cc:485:replace_alu$7584
  creating $alu cell for $flatten\vcell.$add$src/volatile_cell_storage.v:54$1831: $auto$alumacc.cc:485:replace_alu$7587
  creating $alu cell for $flatten\vcell.$add$src/volatile_cell_storage.v:55$1836: $auto$alumacc.cc:485:replace_alu$7590
  creating $alu cell for $flatten\vcell.$add$src/volatile_cell_storage.v:56$1841: $auto$alumacc.cc:485:replace_alu$7593
  creating $alu cell for $flatten\vcell.$add$src/volatile_cell_storage.v:57$1846: $auto$alumacc.cc:485:replace_alu$7596
  creating $alu cell for $flatten\vcell.$add$src/volatile_cell_storage.v:58$1851: $auto$alumacc.cc:485:replace_alu$7599
  creating $alu cell for $flatten\vcell.$add$src/volatile_cell_storage.v:59$1856: $auto$alumacc.cc:485:replace_alu$7602
  creating $alu cell for $flatten\vcell.$add$src/volatile_cell_storage.v:60$1861: $auto$alumacc.cc:485:replace_alu$7605
  creating $alu cell for $flatten\vcell.$add$src/volatile_cell_storage.v:61$1866: $auto$alumacc.cc:485:replace_alu$7608
  creating $alu cell for $flatten\vcell.$sub$src/volatile_cell_storage.v:175$1885: $auto$alumacc.cc:485:replace_alu$7611
  creating $alu cell for $flatten\vcell.$sub$src/volatile_cell_storage.v:188$1906: $auto$alumacc.cc:485:replace_alu$7614
  created 202 $alu and 1 $macc cells.

24.21. Executing OPT pass (performing simple optimizations).

24.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~23 debug messages>

24.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~33 debug messages>
Removed a total of 11 cells.

24.21.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~752 debug messages>

24.21.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

24.21.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

24.21.6. Executing OPT_DFF pass (perform DFF optimizations).
Adding SRST signal on $auto$ff.cc:262:slice$5740 ($dffe) from module top (D = { $flatten\memory.$procmux$2648_Y [9:7] $flatten\memory.$procmux$2648_Y [2] }, Q = { \memory.scorewire [9:7] \memory.scorewire [2] }, rval = 4'0000).
Adding SRST signal on $auto$ff.cc:262:slice$5740 ($dffe) from module top (D = { $flatten\memory.$procmux$2646_Y [15:10] $flatten\memory.$procmux$2646_Y [6] $flatten\memory.$procmux$2646_Y [4] $flatten\memory.$procmux$2646_Y [1:0] }, Q = { \memory.scorewire [15:10] \memory.scorewire [6] \memory.scorewire [4] \memory.scorewire [1:0] }, rval = 10'0000000000).
Adding SRST signal on $auto$ff.cc:262:slice$5740 ($dffe) from module top (D = { $flatten\memory.$procmux$2651_Y [5] $flatten\memory.$procmux$2651_Y [3] }, Q = { \memory.scorewire [5] \memory.scorewire [3] }, rval = 2'00).

24.21.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 6 unused cells and 181 unused wires.
<suppressed ~7 debug messages>

24.21.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

24.21.9. Rerunning OPT passes. (Maybe there is more to do..)

24.21.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~754 debug messages>

24.21.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

24.21.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~3 debug messages>
Removed a total of 1 cells.

24.21.13. Executing OPT_DFF pass (perform DFF optimizations).

24.21.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 1 unused wires.
<suppressed ~1 debug messages>

24.21.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

24.21.16. Rerunning OPT passes. (Maybe there is more to do..)

24.21.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~754 debug messages>

24.21.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

24.21.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

24.21.20. Executing OPT_DFF pass (perform DFF optimizations).

24.21.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

24.21.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

24.21.23. Finished OPT passes. (There is nothing left to do.)

24.22. Executing MEMORY pass.

24.22.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

24.22.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

24.22.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

24.22.4. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

24.22.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

24.22.6. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

24.22.7. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

24.22.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

24.22.9. Executing MEMORY_COLLECT pass (generating $mem cells).

24.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

24.24. Executing MEMORY_BRAM pass (mapping $mem cells to block memories).

24.25. Executing TECHMAP pass (map to technology primitives).

24.25.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/brams_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/brams_map.v' to AST representation.
Generating RTLIL representation for module `\$__ICE40_RAM4K'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M0'.
Generating RTLIL representation for module `\$__ICE40_RAM4K_M123'.
Successfully finished Verilog frontend.

24.25.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~5 debug messages>

24.26. Executing ICE40_BRAMINIT pass.

24.27. Executing OPT pass (performing simple optimizations).

24.27.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~207 debug messages>

24.27.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~396 debug messages>
Removed a total of 132 cells.

24.27.3. Executing OPT_DFF pass (perform DFF optimizations).

24.27.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 44 unused cells and 225 unused wires.
<suppressed ~45 debug messages>

24.27.5. Finished fast OPT passes.

24.28. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

24.29. Executing OPT pass (performing simple optimizations).

24.29.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

24.29.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

24.29.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~749 debug messages>

24.29.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    Consolidated identical input bits for $pmux cell $flatten\game_manager.\c.$procmux$2661:
      Old ports: A=12'011001100110, B=84'111111110000000011111111110000001100000011110000000000001111111100000000000001111111, Y=\game_manager.texture_lookup
      New ports: A=11'01100100110, B=77'11111110000000011111111100000110000001110000000000011111111000000000000111111, Y={ \game_manager.texture_lookup [11:7] \game_manager.texture_lookup [5:0] }
      New connections: \game_manager.texture_lookup [6] = \game_manager.texture_lookup [5]
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:18$1149:
      Old ports: A=2'00, B=2'10, Y={ $auto$opt_expr.cc:205:group_cell_inputs$7957 $auto$wreduce.cc:454:run$5807 [0] }
      New ports: A=1'0, B=1'1, Y=$auto$opt_expr.cc:205:group_cell_inputs$7957
      New connections: $auto$wreduce.cc:454:run$5807 [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:18$1151:
      Old ports: A=2'00, B=2'11, Y=$auto$wreduce.cc:454:run$5808 [1:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$5808 [0]
      New connections: $auto$wreduce.cc:454:run$5808 [1] = $auto$wreduce.cc:454:run$5808 [0]
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:19$1153:
      Old ports: A=3'000, B=3'100, Y=$auto$wreduce.cc:454:run$5809 [2:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$5809 [2]
      New connections: $auto$wreduce.cc:454:run$5809 [1:0] = 2'00
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:19$1154:
      Old ports: A=3'000, B=3'101, Y=$auto$wreduce.cc:454:run$5810 [2:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$5810 [0]
      New connections: $auto$wreduce.cc:454:run$5810 [2:1] = { $auto$wreduce.cc:454:run$5810 [0] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:19$1156:
      Old ports: A=3'000, B=3'110, Y=$auto$wreduce.cc:454:run$5811 [2:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$5811 [1]
      New connections: { $auto$wreduce.cc:454:run$5811 [2] $auto$wreduce.cc:454:run$5811 [0] } = { $auto$wreduce.cc:454:run$5811 [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:19$1158:
      Old ports: A=3'000, B=3'111, Y=$auto$wreduce.cc:454:run$5812 [2:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$5812 [0]
      New connections: $auto$wreduce.cc:454:run$5812 [2:1] = { $auto$wreduce.cc:454:run$5812 [0] $auto$wreduce.cc:454:run$5812 [0] }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:20$1160:
      Old ports: A=4'0000, B=4'1000, Y=$auto$wreduce.cc:454:run$5813 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$5813 [3]
      New connections: $auto$wreduce.cc:454:run$5813 [2:0] = 3'000
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:20$1161:
      Old ports: A=4'0000, B=4'1001, Y=$auto$wreduce.cc:454:run$5814 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$5814 [0]
      New connections: $auto$wreduce.cc:454:run$5814 [3:1] = { $auto$wreduce.cc:454:run$5814 [0] 2'00 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:20$1163:
      Old ports: A=4'0000, B=4'1010, Y=$auto$wreduce.cc:454:run$5815 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$5815 [1]
      New connections: { $auto$wreduce.cc:454:run$5815 [3:2] $auto$wreduce.cc:454:run$5815 [0] } = { $auto$wreduce.cc:454:run$5815 [1] 2'00 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:20$1165:
      Old ports: A=4'0000, B=4'1011, Y=$auto$wreduce.cc:454:run$5816 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$5816 [0]
      New connections: $auto$wreduce.cc:454:run$5816 [3:1] = { $auto$wreduce.cc:454:run$5816 [0] 1'0 $auto$wreduce.cc:454:run$5816 [0] }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:21$1167:
      Old ports: A=4'0000, B=4'1100, Y=$auto$wreduce.cc:454:run$5817 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$5817 [2]
      New connections: { $auto$wreduce.cc:454:run$5817 [3] $auto$wreduce.cc:454:run$5817 [1:0] } = { $auto$wreduce.cc:454:run$5817 [2] 2'00 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:21$1168:
      Old ports: A=4'0000, B=4'1101, Y=$auto$wreduce.cc:454:run$5818 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$5818 [0]
      New connections: $auto$wreduce.cc:454:run$5818 [3:1] = { $auto$wreduce.cc:454:run$5818 [0] $auto$wreduce.cc:454:run$5818 [0] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:21$1170:
      Old ports: A=4'0000, B=4'1110, Y=$auto$wreduce.cc:454:run$5819 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$5819 [1]
      New connections: { $auto$wreduce.cc:454:run$5819 [3:2] $auto$wreduce.cc:454:run$5819 [0] } = { $auto$wreduce.cc:454:run$5819 [1] $auto$wreduce.cc:454:run$5819 [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:21$1172:
      Old ports: A=4'0000, B=4'1111, Y=$auto$wreduce.cc:454:run$5820 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$5820 [0]
      New connections: $auto$wreduce.cc:454:run$5820 [3:1] = { $auto$wreduce.cc:454:run$5820 [0] $auto$wreduce.cc:454:run$5820 [0] $auto$wreduce.cc:454:run$5820 [0] }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:22$1174:
      Old ports: A=5'00000, B=5'10000, Y=$flatten\game_manager.\h.$ternary$src/mod24.v:22$1174_Y
      New ports: A=1'0, B=1'1, Y=$flatten\game_manager.\h.$ternary$src/mod24.v:22$1174_Y [4]
      New connections: $flatten\game_manager.\h.$ternary$src/mod24.v:22$1174_Y [3:0] = 4'0000
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:22$1175:
      Old ports: A=5'00000, B=5'10001, Y=$flatten\game_manager.\h.$ternary$src/mod24.v:22$1175_Y
      New ports: A=1'0, B=1'1, Y=$flatten\game_manager.\h.$ternary$src/mod24.v:22$1175_Y [0]
      New connections: $flatten\game_manager.\h.$ternary$src/mod24.v:22$1175_Y [4:1] = { $flatten\game_manager.\h.$ternary$src/mod24.v:22$1175_Y [0] 3'000 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:22$1177:
      Old ports: A=5'00000, B=5'10010, Y=$flatten\game_manager.\h.$ternary$src/mod24.v:22$1177_Y
      New ports: A=1'0, B=1'1, Y=$flatten\game_manager.\h.$ternary$src/mod24.v:22$1177_Y [1]
      New connections: { $flatten\game_manager.\h.$ternary$src/mod24.v:22$1177_Y [4:2] $flatten\game_manager.\h.$ternary$src/mod24.v:22$1177_Y [0] } = { $flatten\game_manager.\h.$ternary$src/mod24.v:22$1177_Y [1] 3'000 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:22$1179:
      Old ports: A=5'00000, B=5'10011, Y=$flatten\game_manager.\h.$ternary$src/mod24.v:22$1179_Y
      New ports: A=1'0, B=1'1, Y=$flatten\game_manager.\h.$ternary$src/mod24.v:22$1179_Y [0]
      New connections: $flatten\game_manager.\h.$ternary$src/mod24.v:22$1179_Y [4:1] = { $flatten\game_manager.\h.$ternary$src/mod24.v:22$1179_Y [0] 2'00 $flatten\game_manager.\h.$ternary$src/mod24.v:22$1179_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:23$1181:
      Old ports: A=5'00000, B=5'10100, Y=$flatten\game_manager.\h.$ternary$src/mod24.v:23$1181_Y
      New ports: A=1'0, B=1'1, Y=$flatten\game_manager.\h.$ternary$src/mod24.v:23$1181_Y [2]
      New connections: { $flatten\game_manager.\h.$ternary$src/mod24.v:23$1181_Y [4:3] $flatten\game_manager.\h.$ternary$src/mod24.v:23$1181_Y [1:0] } = { $flatten\game_manager.\h.$ternary$src/mod24.v:23$1181_Y [2] 3'000 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:23$1182:
      Old ports: A=5'00000, B=5'10101, Y=$flatten\game_manager.\h.$ternary$src/mod24.v:23$1182_Y
      New ports: A=1'0, B=1'1, Y=$flatten\game_manager.\h.$ternary$src/mod24.v:23$1182_Y [0]
      New connections: $flatten\game_manager.\h.$ternary$src/mod24.v:23$1182_Y [4:1] = { $flatten\game_manager.\h.$ternary$src/mod24.v:23$1182_Y [0] 1'0 $flatten\game_manager.\h.$ternary$src/mod24.v:23$1182_Y [0] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:23$1184:
      Old ports: A=5'00000, B=5'10110, Y=$flatten\game_manager.\h.$ternary$src/mod24.v:23$1184_Y
      New ports: A=1'0, B=1'1, Y=$flatten\game_manager.\h.$ternary$src/mod24.v:23$1184_Y [1]
      New connections: { $flatten\game_manager.\h.$ternary$src/mod24.v:23$1184_Y [4:2] $flatten\game_manager.\h.$ternary$src/mod24.v:23$1184_Y [0] } = { $flatten\game_manager.\h.$ternary$src/mod24.v:23$1184_Y [1] 1'0 $flatten\game_manager.\h.$ternary$src/mod24.v:23$1184_Y [1] 1'0 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\h.$ternary$src/mod24.v:23$1186:
      Old ports: A=5'00000, B=5'10111, Y=$flatten\game_manager.\h.$ternary$src/mod24.v:23$1186_Y
      New ports: A=1'0, B=1'1, Y=$flatten\game_manager.\h.$ternary$src/mod24.v:23$1186_Y [0]
      New connections: $flatten\game_manager.\h.$ternary$src/mod24.v:23$1186_Y [4:1] = { $flatten\game_manager.\h.$ternary$src/mod24.v:23$1186_Y [0] 1'0 $flatten\game_manager.\h.$ternary$src/mod24.v:23$1186_Y [0] $flatten\game_manager.\h.$ternary$src/mod24.v:23$1186_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:33$1270:
      Old ports: A=5'00000, B=5'11000, Y=$auto$wreduce.cc:454:run$5840 [4:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$5840 [3]
      New connections: { $auto$wreduce.cc:454:run$5840 [4] $auto$wreduce.cc:454:run$5840 [2:0] } = { $auto$wreduce.cc:454:run$5840 [3] 3'000 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:33$1271:
      Old ports: A={ 1'0 $auto$wreduce.cc:454:run$5840 [4:0] }, B=6'000000, Y=$auto$wreduce.cc:454:run$5841 [5:0]
      New ports: A=$auto$wreduce.cc:454:run$5840 [4:0], B=5'00000, Y=$auto$wreduce.cc:454:run$5841 [4:0]
      New connections: $auto$wreduce.cc:454:run$5841 [5] = 1'0
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:34$1276:
      Old ports: A=4'0000, B=4'1000, Y=$auto$wreduce.cc:454:run$5842 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$5842 [3]
      New connections: $auto$wreduce.cc:454:run$5842 [2:0] = 3'000
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:34$1277:
      Old ports: A={ 2'00 $auto$wreduce.cc:454:run$5842 [3:0] }, B=6'110000, Y=$auto$wreduce.cc:454:run$5843 [5:0]
      New ports: A={ 1'0 $auto$wreduce.cc:454:run$5842 [3:0] }, B=5'10000, Y=$auto$wreduce.cc:454:run$5843 [4:0]
      New connections: $auto$wreduce.cc:454:run$5843 [5] = $auto$wreduce.cc:454:run$5843 [4]
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:35$1283:
      Old ports: A=6'000000, B=6'111000, Y=$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:35$1283_Y [5:0]
      New ports: A=1'0, B=1'1, Y=$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:35$1283_Y [3]
      New connections: { $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:35$1283_Y [5:4] $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:35$1283_Y [2:0] } = { $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:35$1283_Y [3] $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:35$1283_Y [3] 3'000 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:36$1290:
      Old ports: A=6'000000, B=6'101000, Y=$auto$wreduce.cc:454:run$5844 [5:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$5844 [3]
      New connections: { $auto$wreduce.cc:454:run$5844 [5:4] $auto$wreduce.cc:454:run$5844 [2:0] } = { $auto$wreduce.cc:454:run$5844 [3] 4'0000 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:37$1297:
      Old ports: A=5'00000, B=5'11000, Y=$auto$wreduce.cc:454:run$5846 [4:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$5846 [3]
      New connections: { $auto$wreduce.cc:454:run$5846 [4] $auto$wreduce.cc:454:run$5846 [2:0] } = { $auto$wreduce.cc:454:run$5846 [3] 3'000 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:37$1298:
      Old ports: A={ 1'0 $auto$wreduce.cc:454:run$5846 [4:0] }, B=6'000000, Y=$auto$wreduce.cc:454:run$5847 [5:0]
      New ports: A=$auto$wreduce.cc:454:run$5846 [4:0], B=5'00000, Y=$auto$wreduce.cc:454:run$5847 [4:0]
      New connections: $auto$wreduce.cc:454:run$5847 [5] = 1'0
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:38$1304:
      Old ports: A=4'0000, B=4'1000, Y=$auto$wreduce.cc:454:run$5848 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$5848 [3]
      New connections: $auto$wreduce.cc:454:run$5848 [2:0] = 3'000
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:38$1305:
      Old ports: A={ 2'00 $auto$wreduce.cc:454:run$5848 [3:0] }, B=6'110000, Y=$auto$wreduce.cc:454:run$5849 [5:0]
      New ports: A={ 1'0 $auto$wreduce.cc:454:run$5848 [3:0] }, B=5'10000, Y=$auto$wreduce.cc:454:run$5849 [4:0]
      New connections: $auto$wreduce.cc:454:run$5849 [5] = $auto$wreduce.cc:454:run$5849 [4]
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:39$1311:
      Old ports: A=6'000000, B=6'111000, Y=$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:39$1311_Y [5:0]
      New ports: A=1'0, B=1'1, Y=$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:39$1311_Y [3]
      New connections: { $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:39$1311_Y [5:4] $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:39$1311_Y [2:0] } = { $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:39$1311_Y [3] $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:39$1311_Y [3] 3'000 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:40$1318:
      Old ports: A=6'000000, B=6'101000, Y=$auto$wreduce.cc:454:run$5850 [5:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$5850 [3]
      New connections: { $auto$wreduce.cc:454:run$5850 [5:4] $auto$wreduce.cc:454:run$5850 [2:0] } = { $auto$wreduce.cc:454:run$5850 [3] 4'0000 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:41$1325:
      Old ports: A=5'00000, B=5'11000, Y=$auto$wreduce.cc:454:run$5852 [4:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$5852 [3]
      New connections: { $auto$wreduce.cc:454:run$5852 [4] $auto$wreduce.cc:454:run$5852 [2:0] } = { $auto$wreduce.cc:454:run$5852 [3] 3'000 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:41$1326:
      Old ports: A={ 1'0 $auto$wreduce.cc:454:run$5852 [4:0] }, B=6'000000, Y=$auto$wreduce.cc:454:run$5853 [5:0]
      New ports: A=$auto$wreduce.cc:454:run$5852 [4:0], B=5'00000, Y=$auto$wreduce.cc:454:run$5853 [4:0]
      New connections: $auto$wreduce.cc:454:run$5853 [5] = 1'0
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:42$1332:
      Old ports: A=4'0000, B=4'1000, Y=$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:42$1332_Y [3:0]
      New ports: A=1'0, B=1'1, Y=$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:42$1332_Y [3]
      New connections: $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:42$1332_Y [2:0] = 3'000
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:42$1333:
      Old ports: A={ 2'00 $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:42$1332_Y [3:0] }, B=6'110000, Y=$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:42$1333_Y [5:0]
      New ports: A={ 1'0 $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:42$1332_Y [3:0] }, B=5'10000, Y=$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:42$1333_Y [4:0]
      New connections: $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:42$1333_Y [5] = $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:42$1333_Y [4]
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:43$1339:
      Old ports: A=6'000000, B=6'111000, Y=$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:43$1339_Y [5:0]
      New ports: A=1'0, B=1'1, Y=$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:43$1339_Y [3]
      New connections: { $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:43$1339_Y [5:4] $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:43$1339_Y [2:0] } = { $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:43$1339_Y [3] $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:43$1339_Y [3] 3'000 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\sh.$ternary$src/shader.v:20$1140:
      Old ports: A=12'000000000000, B={ \game_manager.ipixstream [11] 3'000 \game_manager.ipixstream [7] 3'000 \game_manager.ipixstream [3] 3'000 }, Y=$flatten\game_manager.\sh.$ternary$src/shader.v:20$1140_Y
      New ports: A=3'000, B={ \game_manager.ipixstream [11] \game_manager.ipixstream [7] \game_manager.ipixstream [3] }, Y={ $flatten\game_manager.\sh.$ternary$src/shader.v:20$1140_Y [11] $flatten\game_manager.\sh.$ternary$src/shader.v:20$1140_Y [7] $flatten\game_manager.\sh.$ternary$src/shader.v:20$1140_Y [3] }
      New connections: { $flatten\game_manager.\sh.$ternary$src/shader.v:20$1140_Y [10:8] $flatten\game_manager.\sh.$ternary$src/shader.v:20$1140_Y [6:4] $flatten\game_manager.\sh.$ternary$src/shader.v:20$1140_Y [2:0] } = 9'000000000
    Consolidated identical input bits for $mux cell $flatten\memory.$procmux$2515:
      Old ports: A={ 1'0 \memory.P1blk_v }, B={ 1'0 \memory.P2blk_v }, Y=$flatten\memory.$procmux$2515_Y
      New ports: A=\memory.P1blk_v, B=\memory.P2blk_v, Y=$flatten\memory.$procmux$2515_Y [4:0]
      New connections: $flatten\memory.$procmux$2515_Y [5] = 1'0
    Consolidated identical input bits for $mux cell $flatten\memory.$procmux$2646:
      Old ports: A=16'0000000000111100, B=16'0000000011001000, Y=$flatten\memory.$procmux$2646_Y
      New ports: A=2'01, B=2'10, Y={ $flatten\memory.$procmux$2646_Y [6] $flatten\memory.$procmux$2646_Y [2] }
      New connections: { $flatten\memory.$procmux$2646_Y [15:7] $flatten\memory.$procmux$2646_Y [5:3] $flatten\memory.$procmux$2646_Y [1:0] } = { 8'00000000 $flatten\memory.$procmux$2646_Y [6] $flatten\memory.$procmux$2646_Y [2] $flatten\memory.$procmux$2646_Y [2] 3'100 }
    Consolidated identical input bits for $mux cell $flatten\memory.\sh.$ternary$src/shifter.v:10$754:
      Old ports: A=3'000, B=3'100, Y=$auto$wreduce.cc:454:run$5862 [2:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$5862 [2]
      New connections: $auto$wreduce.cc:454:run$5862 [1:0] = 2'00
    Consolidated identical input bits for $mux cell $flatten\memory.\sh.$ternary$src/shifter.v:12$762:
      Old ports: A=4'0000, B=4'1000, Y=$flatten\memory.\sh.$ternary$src/shifter.v:12$762_Y [3:0]
      New ports: A=1'0, B=1'1, Y=$flatten\memory.\sh.$ternary$src/shifter.v:12$762_Y [3]
      New connections: $flatten\memory.\sh.$ternary$src/shifter.v:12$762_Y [2:0] = 3'000
    Consolidated identical input bits for $mux cell $flatten\memory.\sh.$ternary$src/shifter.v:14$770:
      Old ports: A=4'0000, B=4'1100, Y=$flatten\memory.\sh.$ternary$src/shifter.v:14$770_Y [3:0]
      New ports: A=1'0, B=1'1, Y=$flatten\memory.\sh.$ternary$src/shifter.v:14$770_Y [2]
      New connections: { $flatten\memory.\sh.$ternary$src/shifter.v:14$770_Y [3] $flatten\memory.\sh.$ternary$src/shifter.v:14$770_Y [1:0] } = { $flatten\memory.\sh.$ternary$src/shifter.v:14$770_Y [2] 2'00 }
    Consolidated identical input bits for $mux cell $flatten\memory.\sh.$ternary$src/shifter.v:16$778:
      Old ports: A=5'00000, B=5'10000, Y=$auto$wreduce.cc:454:run$5865 [4:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$5865 [4]
      New connections: $auto$wreduce.cc:454:run$5865 [3:0] = 4'0000
    Consolidated identical input bits for $mux cell $flatten\memory.\sh.$ternary$src/shifter.v:18$786:
      Old ports: A=5'00000, B=5'10100, Y=$flatten\memory.\sh.$ternary$src/shifter.v:18$786_Y [4:0]
      New ports: A=1'0, B=1'1, Y=$flatten\memory.\sh.$ternary$src/shifter.v:18$786_Y [2]
      New connections: { $flatten\memory.\sh.$ternary$src/shifter.v:18$786_Y [4:3] $flatten\memory.\sh.$ternary$src/shifter.v:18$786_Y [1:0] } = { $flatten\memory.\sh.$ternary$src/shifter.v:18$786_Y [2] 3'000 }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.$ternary$src/scoredisplay.v:104$598:
      Old ports: A={ 8'00000000 \sdisplay.pixstream1 [3:0] }, B={ 8'00000000 \sdisplay.__pixstream2 [3:0] }, Y=\sdisplay.pixstream2
      New ports: A=\sdisplay.pixstream1 [3:0], B=\sdisplay.__pixstream2 [3:0], Y=\sdisplay.pixstream2 [3:0]
      New connections: \sdisplay.pixstream2 [11:4] = 8'00000000
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s1.$ternary$src/digitdisplay.v:18$417:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$5874 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$5874 [0]
      New connections: $auto$wreduce.cc:454:run$5874 [3:1] = { $auto$wreduce.cc:454:run$5874 [0] 1'1 $auto$wreduce.cc:454:run$5874 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s1.$ternary$src/digitdisplay.v:23$441:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$5875 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$5875 [0]
      New connections: $auto$wreduce.cc:454:run$5875 [3:1] = { $auto$wreduce.cc:454:run$5875 [0] 1'1 $auto$wreduce.cc:454:run$5875 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s1.$ternary$src/digitdisplay.v:28$464:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$5876 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$5876 [0]
      New connections: $auto$wreduce.cc:454:run$5876 [3:1] = { $auto$wreduce.cc:454:run$5876 [0] 1'1 $auto$wreduce.cc:454:run$5876 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s1.$ternary$src/digitdisplay.v:33$489:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$5877 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$5877 [0]
      New connections: $auto$wreduce.cc:454:run$5877 [3:1] = { $auto$wreduce.cc:454:run$5877 [0] 1'1 $auto$wreduce.cc:454:run$5877 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s1.$ternary$src/digitdisplay.v:38$510:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$5878 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$5878 [0]
      New connections: $auto$wreduce.cc:454:run$5878 [3:1] = { $auto$wreduce.cc:454:run$5878 [0] 1'1 $auto$wreduce.cc:454:run$5878 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s1.$ternary$src/digitdisplay.v:43$527:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$5879 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$5879 [0]
      New connections: $auto$wreduce.cc:454:run$5879 [3:1] = { $auto$wreduce.cc:454:run$5879 [0] 1'1 $auto$wreduce.cc:454:run$5879 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s1.$ternary$src/digitdisplay.v:47$554:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$5880 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$5880 [0]
      New connections: $auto$wreduce.cc:454:run$5880 [3:1] = { $auto$wreduce.cc:454:run$5880 [0] 1'1 $auto$wreduce.cc:454:run$5880 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s2.$ternary$src/digitdisplay.v:18$417:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$5887 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$5887 [0]
      New connections: $auto$wreduce.cc:454:run$5887 [3:1] = { $auto$wreduce.cc:454:run$5887 [0] 1'1 $auto$wreduce.cc:454:run$5887 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s2.$ternary$src/digitdisplay.v:23$441:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$5888 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$5888 [0]
      New connections: $auto$wreduce.cc:454:run$5888 [3:1] = { $auto$wreduce.cc:454:run$5888 [0] 1'1 $auto$wreduce.cc:454:run$5888 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s2.$ternary$src/digitdisplay.v:28$464:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$5889 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$5889 [0]
      New connections: $auto$wreduce.cc:454:run$5889 [3:1] = { $auto$wreduce.cc:454:run$5889 [0] 1'1 $auto$wreduce.cc:454:run$5889 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s2.$ternary$src/digitdisplay.v:33$489:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$5890 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$5890 [0]
      New connections: $auto$wreduce.cc:454:run$5890 [3:1] = { $auto$wreduce.cc:454:run$5890 [0] 1'1 $auto$wreduce.cc:454:run$5890 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s2.$ternary$src/digitdisplay.v:38$510:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$5891 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$5891 [0]
      New connections: $auto$wreduce.cc:454:run$5891 [3:1] = { $auto$wreduce.cc:454:run$5891 [0] 1'1 $auto$wreduce.cc:454:run$5891 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s2.$ternary$src/digitdisplay.v:43$527:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$5892 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$5892 [0]
      New connections: $auto$wreduce.cc:454:run$5892 [3:1] = { $auto$wreduce.cc:454:run$5892 [0] 1'1 $auto$wreduce.cc:454:run$5892 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s2.$ternary$src/digitdisplay.v:47$554:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$5893 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$5893 [0]
      New connections: $auto$wreduce.cc:454:run$5893 [3:1] = { $auto$wreduce.cc:454:run$5893 [0] 1'1 $auto$wreduce.cc:454:run$5893 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s3.$ternary$src/digitdisplay.v:18$417:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$5900 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$5900 [0]
      New connections: $auto$wreduce.cc:454:run$5900 [3:1] = { $auto$wreduce.cc:454:run$5900 [0] 1'1 $auto$wreduce.cc:454:run$5900 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s3.$ternary$src/digitdisplay.v:23$441:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$5901 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$5901 [0]
      New connections: $auto$wreduce.cc:454:run$5901 [3:1] = { $auto$wreduce.cc:454:run$5901 [0] 1'1 $auto$wreduce.cc:454:run$5901 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s3.$ternary$src/digitdisplay.v:28$464:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$5902 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$5902 [0]
      New connections: $auto$wreduce.cc:454:run$5902 [3:1] = { $auto$wreduce.cc:454:run$5902 [0] 1'1 $auto$wreduce.cc:454:run$5902 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s3.$ternary$src/digitdisplay.v:33$489:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$5903 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$5903 [0]
      New connections: $auto$wreduce.cc:454:run$5903 [3:1] = { $auto$wreduce.cc:454:run$5903 [0] 1'1 $auto$wreduce.cc:454:run$5903 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s3.$ternary$src/digitdisplay.v:38$510:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$5904 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$5904 [0]
      New connections: $auto$wreduce.cc:454:run$5904 [3:1] = { $auto$wreduce.cc:454:run$5904 [0] 1'1 $auto$wreduce.cc:454:run$5904 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s3.$ternary$src/digitdisplay.v:43$527:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$5905 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$5905 [0]
      New connections: $auto$wreduce.cc:454:run$5905 [3:1] = { $auto$wreduce.cc:454:run$5905 [0] 1'1 $auto$wreduce.cc:454:run$5905 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s3.$ternary$src/digitdisplay.v:47$554:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$5906 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$5906 [0]
      New connections: $auto$wreduce.cc:454:run$5906 [3:1] = { $auto$wreduce.cc:454:run$5906 [0] 1'1 $auto$wreduce.cc:454:run$5906 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s4.$ternary$src/digitdisplay.v:18$417:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$5913 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$5913 [0]
      New connections: $auto$wreduce.cc:454:run$5913 [3:1] = { $auto$wreduce.cc:454:run$5913 [0] 1'1 $auto$wreduce.cc:454:run$5913 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s4.$ternary$src/digitdisplay.v:23$441:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$5914 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$5914 [0]
      New connections: $auto$wreduce.cc:454:run$5914 [3:1] = { $auto$wreduce.cc:454:run$5914 [0] 1'1 $auto$wreduce.cc:454:run$5914 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s4.$ternary$src/digitdisplay.v:28$464:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$5915 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$5915 [0]
      New connections: $auto$wreduce.cc:454:run$5915 [3:1] = { $auto$wreduce.cc:454:run$5915 [0] 1'1 $auto$wreduce.cc:454:run$5915 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s4.$ternary$src/digitdisplay.v:33$489:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$5916 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$5916 [0]
      New connections: $auto$wreduce.cc:454:run$5916 [3:1] = { $auto$wreduce.cc:454:run$5916 [0] 1'1 $auto$wreduce.cc:454:run$5916 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s4.$ternary$src/digitdisplay.v:38$510:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$5917 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$5917 [0]
      New connections: $auto$wreduce.cc:454:run$5917 [3:1] = { $auto$wreduce.cc:454:run$5917 [0] 1'1 $auto$wreduce.cc:454:run$5917 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s4.$ternary$src/digitdisplay.v:43$527:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$5918 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$5918 [0]
      New connections: $auto$wreduce.cc:454:run$5918 [3:1] = { $auto$wreduce.cc:454:run$5918 [0] 1'1 $auto$wreduce.cc:454:run$5918 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s4.$ternary$src/digitdisplay.v:47$554:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$5919 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$5919 [0]
      New connections: $auto$wreduce.cc:454:run$5919 [3:1] = { $auto$wreduce.cc:454:run$5919 [0] 1'1 $auto$wreduce.cc:454:run$5919 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s5.$ternary$src/digitdisplay.v:18$417:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$5926 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$5926 [0]
      New connections: $auto$wreduce.cc:454:run$5926 [3:1] = { $auto$wreduce.cc:454:run$5926 [0] 1'1 $auto$wreduce.cc:454:run$5926 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s5.$ternary$src/digitdisplay.v:23$441:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$5927 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$5927 [0]
      New connections: $auto$wreduce.cc:454:run$5927 [3:1] = { $auto$wreduce.cc:454:run$5927 [0] 1'1 $auto$wreduce.cc:454:run$5927 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s5.$ternary$src/digitdisplay.v:28$464:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$5928 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$5928 [0]
      New connections: $auto$wreduce.cc:454:run$5928 [3:1] = { $auto$wreduce.cc:454:run$5928 [0] 1'1 $auto$wreduce.cc:454:run$5928 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s5.$ternary$src/digitdisplay.v:33$489:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$5929 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$5929 [0]
      New connections: $auto$wreduce.cc:454:run$5929 [3:1] = { $auto$wreduce.cc:454:run$5929 [0] 1'1 $auto$wreduce.cc:454:run$5929 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s5.$ternary$src/digitdisplay.v:38$510:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$5930 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$5930 [0]
      New connections: $auto$wreduce.cc:454:run$5930 [3:1] = { $auto$wreduce.cc:454:run$5930 [0] 1'1 $auto$wreduce.cc:454:run$5930 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s5.$ternary$src/digitdisplay.v:43$527:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$5931 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$5931 [0]
      New connections: $auto$wreduce.cc:454:run$5931 [3:1] = { $auto$wreduce.cc:454:run$5931 [0] 1'1 $auto$wreduce.cc:454:run$5931 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s5.$ternary$src/digitdisplay.v:47$554:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$5932 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$5932 [0]
      New connections: $auto$wreduce.cc:454:run$5932 [3:1] = { $auto$wreduce.cc:454:run$5932 [0] 1'1 $auto$wreduce.cc:454:run$5932 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s6.$ternary$src/digitdisplay.v:18$417:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$5939 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$5939 [0]
      New connections: $auto$wreduce.cc:454:run$5939 [3:1] = { $auto$wreduce.cc:454:run$5939 [0] 1'1 $auto$wreduce.cc:454:run$5939 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s6.$ternary$src/digitdisplay.v:23$441:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$5940 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$5940 [0]
      New connections: $auto$wreduce.cc:454:run$5940 [3:1] = { $auto$wreduce.cc:454:run$5940 [0] 1'1 $auto$wreduce.cc:454:run$5940 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s6.$ternary$src/digitdisplay.v:28$464:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$5941 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$5941 [0]
      New connections: $auto$wreduce.cc:454:run$5941 [3:1] = { $auto$wreduce.cc:454:run$5941 [0] 1'1 $auto$wreduce.cc:454:run$5941 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s6.$ternary$src/digitdisplay.v:33$489:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$5942 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$5942 [0]
      New connections: $auto$wreduce.cc:454:run$5942 [3:1] = { $auto$wreduce.cc:454:run$5942 [0] 1'1 $auto$wreduce.cc:454:run$5942 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s6.$ternary$src/digitdisplay.v:38$510:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$5943 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$5943 [0]
      New connections: $auto$wreduce.cc:454:run$5943 [3:1] = { $auto$wreduce.cc:454:run$5943 [0] 1'1 $auto$wreduce.cc:454:run$5943 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s6.$ternary$src/digitdisplay.v:43$527:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$5944 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$5944 [0]
      New connections: $auto$wreduce.cc:454:run$5944 [3:1] = { $auto$wreduce.cc:454:run$5944 [0] 1'1 $auto$wreduce.cc:454:run$5944 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s6.$ternary$src/digitdisplay.v:47$554:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$5945 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$5945 [0]
      New connections: $auto$wreduce.cc:454:run$5945 [3:1] = { $auto$wreduce.cc:454:run$5945 [0] 1'1 $auto$wreduce.cc:454:run$5945 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s7.$ternary$src/digitdisplay.v:18$417:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$5952 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$5952 [0]
      New connections: $auto$wreduce.cc:454:run$5952 [3:1] = { $auto$wreduce.cc:454:run$5952 [0] 1'1 $auto$wreduce.cc:454:run$5952 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s7.$ternary$src/digitdisplay.v:23$441:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$5953 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$5953 [0]
      New connections: $auto$wreduce.cc:454:run$5953 [3:1] = { $auto$wreduce.cc:454:run$5953 [0] 1'1 $auto$wreduce.cc:454:run$5953 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s7.$ternary$src/digitdisplay.v:28$464:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$5954 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$5954 [0]
      New connections: $auto$wreduce.cc:454:run$5954 [3:1] = { $auto$wreduce.cc:454:run$5954 [0] 1'1 $auto$wreduce.cc:454:run$5954 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s7.$ternary$src/digitdisplay.v:33$489:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$5955 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$5955 [0]
      New connections: $auto$wreduce.cc:454:run$5955 [3:1] = { $auto$wreduce.cc:454:run$5955 [0] 1'1 $auto$wreduce.cc:454:run$5955 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s7.$ternary$src/digitdisplay.v:38$510:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$5956 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$5956 [0]
      New connections: $auto$wreduce.cc:454:run$5956 [3:1] = { $auto$wreduce.cc:454:run$5956 [0] 1'1 $auto$wreduce.cc:454:run$5956 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s7.$ternary$src/digitdisplay.v:43$527:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$5957 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$5957 [0]
      New connections: $auto$wreduce.cc:454:run$5957 [3:1] = { $auto$wreduce.cc:454:run$5957 [0] 1'1 $auto$wreduce.cc:454:run$5957 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s7.$ternary$src/digitdisplay.v:47$554:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$5958 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$5958 [0]
      New connections: $auto$wreduce.cc:454:run$5958 [3:1] = { $auto$wreduce.cc:454:run$5958 [0] 1'1 $auto$wreduce.cc:454:run$5958 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s8.$ternary$src/digitdisplay.v:18$417:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$5965 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$5965 [0]
      New connections: $auto$wreduce.cc:454:run$5965 [3:1] = { $auto$wreduce.cc:454:run$5965 [0] 1'1 $auto$wreduce.cc:454:run$5965 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s8.$ternary$src/digitdisplay.v:23$441:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$5966 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$5966 [0]
      New connections: $auto$wreduce.cc:454:run$5966 [3:1] = { $auto$wreduce.cc:454:run$5966 [0] 1'1 $auto$wreduce.cc:454:run$5966 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s8.$ternary$src/digitdisplay.v:28$464:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$5967 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$5967 [0]
      New connections: $auto$wreduce.cc:454:run$5967 [3:1] = { $auto$wreduce.cc:454:run$5967 [0] 1'1 $auto$wreduce.cc:454:run$5967 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s8.$ternary$src/digitdisplay.v:33$489:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$5968 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$5968 [0]
      New connections: $auto$wreduce.cc:454:run$5968 [3:1] = { $auto$wreduce.cc:454:run$5968 [0] 1'1 $auto$wreduce.cc:454:run$5968 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s8.$ternary$src/digitdisplay.v:38$510:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$5969 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$5969 [0]
      New connections: $auto$wreduce.cc:454:run$5969 [3:1] = { $auto$wreduce.cc:454:run$5969 [0] 1'1 $auto$wreduce.cc:454:run$5969 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s8.$ternary$src/digitdisplay.v:43$527:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$5970 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$5970 [0]
      New connections: $auto$wreduce.cc:454:run$5970 [3:1] = { $auto$wreduce.cc:454:run$5970 [0] 1'1 $auto$wreduce.cc:454:run$5970 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s8.$ternary$src/digitdisplay.v:47$554:
      Old ports: A=4'0100, B=4'1111, Y=$auto$wreduce.cc:454:run$5971 [3:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$5971 [0]
      New connections: $auto$wreduce.cc:454:run$5971 [3:1] = { $auto$wreduce.cc:454:run$5971 [0] 1'1 $auto$wreduce.cc:454:run$5971 [0] }
    Consolidated identical input bits for $mux cell $flatten\tdisplay.$ternary$src/gamespeed_display.v:17$728:
      Old ports: A=12'000000001111, B={ 3'000 $auto$wreduce.cc:454:run$5974 [8:0] }, Y=\tdisplay.ipixstream
      New ports: A=9'000001111, B=$auto$wreduce.cc:454:run$5974 [8:0], Y=\tdisplay.ipixstream [8:0]
      New connections: \tdisplay.ipixstream [11:9] = 3'000
    Consolidated identical input bits for $mux cell $flatten\vcell.\ishaper.$procmux$2692:
      Old ports: A=2'10, B=2'00, Y=$auto$wreduce.cc:454:run$5976 [1:0]
      New ports: A=1'1, B=1'0, Y=$auto$wreduce.cc:454:run$5976 [1]
      New connections: $auto$wreduce.cc:454:run$5976 [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\vcell.\ishaper.$procmux$2703:
      Old ports: A=2'00, B=2'10, Y=$auto$wreduce.cc:454:run$5978 [1:0]
      New ports: A=1'0, B=1'1, Y=$auto$wreduce.cc:454:run$5978 [1]
      New connections: $auto$wreduce.cc:454:run$5978 [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\vcell.\ishaper.$procmux$2736:
      Old ports: A=5'11111, B=5'00000, Y=$flatten\vcell.\ishaper.$procmux$2736_Y
      New ports: A=1'1, B=1'0, Y=$flatten\vcell.\ishaper.$procmux$2736_Y [0]
      New connections: $flatten\vcell.\ishaper.$procmux$2736_Y [4:1] = { $flatten\vcell.\ishaper.$procmux$2736_Y [0] $flatten\vcell.\ishaper.$procmux$2736_Y [0] $flatten\vcell.\ishaper.$procmux$2736_Y [0] $flatten\vcell.\ishaper.$procmux$2736_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\vcell.\ishaper.$procmux$2747:
      Old ports: A=5'00000, B=5'11111, Y=$flatten\vcell.\ishaper.$procmux$2747_Y
      New ports: A=1'0, B=1'1, Y=$flatten\vcell.\ishaper.$procmux$2747_Y [0]
      New connections: $flatten\vcell.\ishaper.$procmux$2747_Y [4:1] = { $flatten\vcell.\ishaper.$procmux$2747_Y [0] $flatten\vcell.\ishaper.$procmux$2747_Y [0] $flatten\vcell.\ishaper.$procmux$2747_Y [0] $flatten\vcell.\ishaper.$procmux$2747_Y [0] }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:33$1271:
      Old ports: A=$auto$wreduce.cc:454:run$5840 [4:0], B=5'00000, Y=$auto$wreduce.cc:454:run$5841 [4:0]
      New ports: A=$auto$wreduce.cc:454:run$5840 [3], B=1'0, Y=$auto$wreduce.cc:454:run$5841 [3]
      New connections: { $auto$wreduce.cc:454:run$5841 [4] $auto$wreduce.cc:454:run$5841 [2:0] } = { $auto$wreduce.cc:454:run$5841 [3] 3'000 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:34$1277:
      Old ports: A={ 1'0 $auto$wreduce.cc:454:run$5842 [3:0] }, B=5'10000, Y=$auto$wreduce.cc:454:run$5843 [4:0]
      New ports: A={ 1'0 $auto$wreduce.cc:454:run$5842 [3] }, B=2'10, Y=$auto$wreduce.cc:454:run$5843 [4:3]
      New connections: $auto$wreduce.cc:454:run$5843 [2:0] = 3'000
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:35$1284:
      Old ports: A=$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:35$1283_Y [5:0], B=6'100000, Y=$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:35$1284_Y [5:0]
      New ports: A={ $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:35$1283_Y [3] $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:35$1283_Y [3] }, B=2'10, Y={ $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:35$1284_Y [5] $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:35$1284_Y [3] }
      New connections: { $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:35$1284_Y [4] $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:35$1284_Y [2:0] } = { $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:35$1284_Y [3] 3'000 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:36$1291:
      Old ports: A=$auto$wreduce.cc:454:run$5844 [5:0], B=6'010000, Y=$auto$wreduce.cc:454:run$5845 [5:0]
      New ports: A={ 1'0 $auto$wreduce.cc:454:run$5844 [3] }, B=2'10, Y=$auto$wreduce.cc:454:run$5845 [4:3]
      New connections: { $auto$wreduce.cc:454:run$5845 [5] $auto$wreduce.cc:454:run$5845 [2:0] } = { $auto$wreduce.cc:454:run$5845 [3] 3'000 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:37$1298:
      Old ports: A=$auto$wreduce.cc:454:run$5846 [4:0], B=5'00000, Y=$auto$wreduce.cc:454:run$5847 [4:0]
      New ports: A=$auto$wreduce.cc:454:run$5846 [3], B=1'0, Y=$auto$wreduce.cc:454:run$5847 [3]
      New connections: { $auto$wreduce.cc:454:run$5847 [4] $auto$wreduce.cc:454:run$5847 [2:0] } = { $auto$wreduce.cc:454:run$5847 [3] 3'000 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:38$1305:
      Old ports: A={ 1'0 $auto$wreduce.cc:454:run$5848 [3:0] }, B=5'10000, Y=$auto$wreduce.cc:454:run$5849 [4:0]
      New ports: A={ 1'0 $auto$wreduce.cc:454:run$5848 [3] }, B=2'10, Y=$auto$wreduce.cc:454:run$5849 [4:3]
      New connections: $auto$wreduce.cc:454:run$5849 [2:0] = 3'000
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:39$1312:
      Old ports: A=$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:39$1311_Y [5:0], B=6'100000, Y=$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:39$1312_Y [5:0]
      New ports: A={ $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:39$1311_Y [3] $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:39$1311_Y [3] }, B=2'10, Y={ $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:39$1312_Y [5] $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:39$1312_Y [3] }
      New connections: { $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:39$1312_Y [4] $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:39$1312_Y [2:0] } = { $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:39$1312_Y [3] 3'000 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:40$1319:
      Old ports: A=$auto$wreduce.cc:454:run$5850 [5:0], B=6'010000, Y=$auto$wreduce.cc:454:run$5851 [5:0]
      New ports: A={ 1'0 $auto$wreduce.cc:454:run$5850 [3] }, B=2'10, Y=$auto$wreduce.cc:454:run$5851 [4:3]
      New connections: { $auto$wreduce.cc:454:run$5851 [5] $auto$wreduce.cc:454:run$5851 [2:0] } = { $auto$wreduce.cc:454:run$5851 [3] 3'000 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:41$1326:
      Old ports: A=$auto$wreduce.cc:454:run$5852 [4:0], B=5'00000, Y=$auto$wreduce.cc:454:run$5853 [4:0]
      New ports: A=$auto$wreduce.cc:454:run$5852 [3], B=1'0, Y=$auto$wreduce.cc:454:run$5853 [3]
      New connections: { $auto$wreduce.cc:454:run$5853 [4] $auto$wreduce.cc:454:run$5853 [2:0] } = { $auto$wreduce.cc:454:run$5853 [3] 3'000 }
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:42$1333:
      Old ports: A={ 1'0 $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:42$1332_Y [3:0] }, B=5'10000, Y=$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:42$1333_Y [4:0]
      New ports: A={ 1'0 $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:42$1332_Y [3] }, B=2'10, Y=$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:42$1333_Y [4:3]
      New connections: $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:42$1333_Y [2:0] = 3'000
    Consolidated identical input bits for $mux cell $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:43$1340:
      Old ports: A=$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:43$1339_Y [5:0], B=6'100000, Y=$flatten\game_manager.\hh.\o.$ternary$src/mod24.v:43$1340_Y [5:0]
      New ports: A={ $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:43$1339_Y [3] $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:43$1339_Y [3] }, B=2'10, Y={ $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:43$1340_Y [5] $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:43$1340_Y [3] }
      New connections: { $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:43$1340_Y [4] $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:43$1340_Y [2:0] } = { $flatten\game_manager.\hh.\o.$ternary$src/mod24.v:43$1340_Y [3] 3'000 }
    Consolidated identical input bits for $mux cell $flatten\memory.$procmux$2517:
      Old ports: A=$flatten\memory.$procmux$2515_Y, B={ 1'0 \memory.P3blk_v }, Y=$flatten\memory.$procmux$2517_Y
      New ports: A=$flatten\memory.$procmux$2515_Y [4:0], B=\memory.P3blk_v, Y=$flatten\memory.$procmux$2517_Y [4:0]
      New connections: $flatten\memory.$procmux$2517_Y [5] = 1'0
    Consolidated identical input bits for $mux cell $flatten\memory.$procmux$2648:
      Old ports: A=$flatten\memory.$procmux$2646_Y, B=16'0000001110000100, Y=$flatten\memory.$procmux$2648_Y
      New ports: A={ 1'0 $flatten\memory.$procmux$2646_Y [6] $flatten\memory.$procmux$2646_Y [6] $flatten\memory.$procmux$2646_Y [2] 1'1 $flatten\memory.$procmux$2646_Y [2] }, B=6'110001, Y={ $flatten\memory.$procmux$2648_Y [8:6] $flatten\memory.$procmux$2648_Y [4:2] }
      New connections: { $flatten\memory.$procmux$2648_Y [15:9] $flatten\memory.$procmux$2648_Y [5] $flatten\memory.$procmux$2648_Y [1:0] } = { 6'000000 $flatten\memory.$procmux$2648_Y [8] $flatten\memory.$procmux$2648_Y [4] 2'00 }
    Consolidated identical input bits for $mux cell $flatten\memory.\sh.$ternary$src/shifter.v:10$755:
      Old ports: A=$auto$wreduce.cc:454:run$5862 [2:0], B=3'011, Y=$auto$wreduce.cc:454:run$5863 [2:0]
      New ports: A={ $auto$wreduce.cc:454:run$5862 [2] 1'0 }, B=2'01, Y={ $auto$wreduce.cc:454:run$5863 [2] $auto$wreduce.cc:454:run$5863 [0] }
      New connections: $auto$wreduce.cc:454:run$5863 [1] = $auto$wreduce.cc:454:run$5863 [0]
    Consolidated identical input bits for $mux cell $flatten\memory.\sh.$ternary$src/shifter.v:12$763:
      Old ports: A=$flatten\memory.\sh.$ternary$src/shifter.v:12$762_Y [3:0], B=4'0111, Y=$auto$wreduce.cc:454:run$5864 [3:0]
      New ports: A={ $flatten\memory.\sh.$ternary$src/shifter.v:12$762_Y [3] 1'0 }, B=2'01, Y={ $auto$wreduce.cc:454:run$5864 [3] $auto$wreduce.cc:454:run$5864 [0] }
      New connections: $auto$wreduce.cc:454:run$5864 [2:1] = { $auto$wreduce.cc:454:run$5864 [0] $auto$wreduce.cc:454:run$5864 [0] }
    Consolidated identical input bits for $mux cell $flatten\memory.\sh.$ternary$src/shifter.v:14$771:
      Old ports: A=$flatten\memory.\sh.$ternary$src/shifter.v:14$770_Y [3:0], B=4'1011, Y=$flatten\memory.\sh.$ternary$src/shifter.v:14$771_Y [3:0]
      New ports: A={ $flatten\memory.\sh.$ternary$src/shifter.v:14$770_Y [2] $flatten\memory.\sh.$ternary$src/shifter.v:14$770_Y [2] 1'0 }, B=3'101, Y={ $flatten\memory.\sh.$ternary$src/shifter.v:14$771_Y [3:2] $flatten\memory.\sh.$ternary$src/shifter.v:14$771_Y [0] }
      New connections: $flatten\memory.\sh.$ternary$src/shifter.v:14$771_Y [1] = $flatten\memory.\sh.$ternary$src/shifter.v:14$771_Y [0]
    Consolidated identical input bits for $mux cell $flatten\memory.\sh.$ternary$src/shifter.v:16$779:
      Old ports: A=$auto$wreduce.cc:454:run$5865 [4:0], B=5'01111, Y=$flatten\memory.\sh.$ternary$src/shifter.v:16$779_Y [4:0]
      New ports: A={ $auto$wreduce.cc:454:run$5865 [4] 1'0 }, B=2'01, Y={ $flatten\memory.\sh.$ternary$src/shifter.v:16$779_Y [4] $flatten\memory.\sh.$ternary$src/shifter.v:16$779_Y [0] }
      New connections: $flatten\memory.\sh.$ternary$src/shifter.v:16$779_Y [3:1] = { $flatten\memory.\sh.$ternary$src/shifter.v:16$779_Y [0] $flatten\memory.\sh.$ternary$src/shifter.v:16$779_Y [0] $flatten\memory.\sh.$ternary$src/shifter.v:16$779_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\memory.\sh.$ternary$src/shifter.v:18$787:
      Old ports: A=$flatten\memory.\sh.$ternary$src/shifter.v:18$786_Y [4:0], B=5'10011, Y=$flatten\memory.\sh.$ternary$src/shifter.v:18$787_Y [4:0]
      New ports: A={ $flatten\memory.\sh.$ternary$src/shifter.v:18$786_Y [2] $flatten\memory.\sh.$ternary$src/shifter.v:18$786_Y [2] 1'0 }, B=3'101, Y={ $flatten\memory.\sh.$ternary$src/shifter.v:18$787_Y [4] $flatten\memory.\sh.$ternary$src/shifter.v:18$787_Y [2] $flatten\memory.\sh.$ternary$src/shifter.v:18$787_Y [0] }
      New connections: { $flatten\memory.\sh.$ternary$src/shifter.v:18$787_Y [3] $flatten\memory.\sh.$ternary$src/shifter.v:18$787_Y [1] } = { 1'0 $flatten\memory.\sh.$ternary$src/shifter.v:18$787_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.$ternary$src/scoredisplay.v:112$614:
      Old ports: A=\sdisplay.pixstream2, B={ 8'00000000 \sdisplay.__pixstream3 [3:0] }, Y=\sdisplay.pixstream3
      New ports: A=\sdisplay.pixstream2 [3:0], B=\sdisplay.__pixstream3 [3:0], Y=\sdisplay.pixstream3 [3:0]
      New connections: \sdisplay.pixstream3 [11:4] = 8'00000000
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s1.$ternary$src/digitdisplay.v:18$418:
      Old ports: A=4'0000, B=$auto$wreduce.cc:454:run$5874 [3:0], Y=\sdisplay.s1.pixstream_top [3:0]
      New ports: A=2'00, B={ 1'1 $auto$wreduce.cc:454:run$5874 [0] }, Y={ \sdisplay.s1.pixstream_top [2] \sdisplay.s1.pixstream_top [0] }
      New connections: { \sdisplay.s1.pixstream_top [3] \sdisplay.s1.pixstream_top [1] } = { \sdisplay.s1.pixstream_top [0] \sdisplay.s1.pixstream_top [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s2.$ternary$src/digitdisplay.v:18$418:
      Old ports: A=4'0000, B=$auto$wreduce.cc:454:run$5887 [3:0], Y=\sdisplay.s2.pixstream_top [3:0]
      New ports: A=2'00, B={ 1'1 $auto$wreduce.cc:454:run$5887 [0] }, Y={ \sdisplay.s2.pixstream_top [2] \sdisplay.s2.pixstream_top [0] }
      New connections: { \sdisplay.s2.pixstream_top [3] \sdisplay.s2.pixstream_top [1] } = { \sdisplay.s2.pixstream_top [0] \sdisplay.s2.pixstream_top [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s3.$ternary$src/digitdisplay.v:18$418:
      Old ports: A=4'0000, B=$auto$wreduce.cc:454:run$5900 [3:0], Y=\sdisplay.s3.pixstream_top [3:0]
      New ports: A=2'00, B={ 1'1 $auto$wreduce.cc:454:run$5900 [0] }, Y={ \sdisplay.s3.pixstream_top [2] \sdisplay.s3.pixstream_top [0] }
      New connections: { \sdisplay.s3.pixstream_top [3] \sdisplay.s3.pixstream_top [1] } = { \sdisplay.s3.pixstream_top [0] \sdisplay.s3.pixstream_top [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s4.$ternary$src/digitdisplay.v:18$418:
      Old ports: A=4'0000, B=$auto$wreduce.cc:454:run$5913 [3:0], Y=\sdisplay.s4.pixstream_top [3:0]
      New ports: A=2'00, B={ 1'1 $auto$wreduce.cc:454:run$5913 [0] }, Y={ \sdisplay.s4.pixstream_top [2] \sdisplay.s4.pixstream_top [0] }
      New connections: { \sdisplay.s4.pixstream_top [3] \sdisplay.s4.pixstream_top [1] } = { \sdisplay.s4.pixstream_top [0] \sdisplay.s4.pixstream_top [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s5.$ternary$src/digitdisplay.v:18$418:
      Old ports: A=4'0000, B=$auto$wreduce.cc:454:run$5926 [3:0], Y=\sdisplay.s5.pixstream_top [3:0]
      New ports: A=2'00, B={ 1'1 $auto$wreduce.cc:454:run$5926 [0] }, Y={ \sdisplay.s5.pixstream_top [2] \sdisplay.s5.pixstream_top [0] }
      New connections: { \sdisplay.s5.pixstream_top [3] \sdisplay.s5.pixstream_top [1] } = { \sdisplay.s5.pixstream_top [0] \sdisplay.s5.pixstream_top [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s6.$ternary$src/digitdisplay.v:18$418:
      Old ports: A=4'0000, B=$auto$wreduce.cc:454:run$5939 [3:0], Y=\sdisplay.s6.pixstream_top [3:0]
      New ports: A=2'00, B={ 1'1 $auto$wreduce.cc:454:run$5939 [0] }, Y={ \sdisplay.s6.pixstream_top [2] \sdisplay.s6.pixstream_top [0] }
      New connections: { \sdisplay.s6.pixstream_top [3] \sdisplay.s6.pixstream_top [1] } = { \sdisplay.s6.pixstream_top [0] \sdisplay.s6.pixstream_top [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s7.$ternary$src/digitdisplay.v:18$418:
      Old ports: A=4'0000, B=$auto$wreduce.cc:454:run$5952 [3:0], Y=\sdisplay.s7.pixstream_top [3:0]
      New ports: A=2'00, B={ 1'1 $auto$wreduce.cc:454:run$5952 [0] }, Y={ \sdisplay.s7.pixstream_top [2] \sdisplay.s7.pixstream_top [0] }
      New connections: { \sdisplay.s7.pixstream_top [3] \sdisplay.s7.pixstream_top [1] } = { \sdisplay.s7.pixstream_top [0] \sdisplay.s7.pixstream_top [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s8.$ternary$src/digitdisplay.v:18$418:
      Old ports: A=4'0000, B=$auto$wreduce.cc:454:run$5965 [3:0], Y=\sdisplay.s8.pixstream_top [3:0]
      New ports: A=2'00, B={ 1'1 $auto$wreduce.cc:454:run$5965 [0] }, Y={ \sdisplay.s8.pixstream_top [2] \sdisplay.s8.pixstream_top [0] }
      New connections: { \sdisplay.s8.pixstream_top [3] \sdisplay.s8.pixstream_top [1] } = { \sdisplay.s8.pixstream_top [0] \sdisplay.s8.pixstream_top [0] }
    Consolidated identical input bits for $mux cell $flatten\tdisplay.$ternary$src/gamespeed_display.v:15$717:
      Old ports: A=12'111111111111, B=\tdisplay.ipixstream, Y=\gamespeed_stream
      New ports: A=10'1111111111, B={ 1'0 \tdisplay.ipixstream [8:0] }, Y=\gamespeed_stream [9:0]
      New connections: \gamespeed_stream [11:10] = { \gamespeed_stream [9] \gamespeed_stream [9] }
    Consolidated identical input bits for $mux cell $flatten\vcell.\ishaper.$procmux$2694:
      Old ports: A=$auto$wreduce.cc:454:run$5976 [1:0], B=2'10, Y=$auto$wreduce.cc:454:run$5977 [1:0]
      New ports: A=$auto$wreduce.cc:454:run$5976 [1], B=1'1, Y=$auto$wreduce.cc:454:run$5977 [1]
      New connections: $auto$wreduce.cc:454:run$5977 [0] = 1'0
    Consolidated identical input bits for $mux cell $flatten\vcell.\ishaper.$procmux$2738:
      Old ports: A=$flatten\vcell.\ishaper.$procmux$2736_Y, B=5'11111, Y=$flatten\vcell.\ishaper.$procmux$2738_Y
      New ports: A=$flatten\vcell.\ishaper.$procmux$2736_Y [0], B=1'1, Y=$flatten\vcell.\ishaper.$procmux$2738_Y [0]
      New connections: $flatten\vcell.\ishaper.$procmux$2738_Y [4:1] = { $flatten\vcell.\ishaper.$procmux$2738_Y [0] $flatten\vcell.\ishaper.$procmux$2738_Y [0] $flatten\vcell.\ishaper.$procmux$2738_Y [0] $flatten\vcell.\ishaper.$procmux$2738_Y [0] }
    Consolidated identical input bits for $mux cell $flatten\vcell.\ishaper.$procmux$2749:
      Old ports: A=$flatten\vcell.\ishaper.$procmux$2747_Y, B=5'00001, Y=$flatten\vcell.\ishaper.$procmux$2749_Y
      New ports: A={ $flatten\vcell.\ishaper.$procmux$2747_Y [0] $flatten\vcell.\ishaper.$procmux$2747_Y [0] }, B=2'01, Y=$flatten\vcell.\ishaper.$procmux$2749_Y [1:0]
      New connections: $flatten\vcell.\ishaper.$procmux$2749_Y [4:2] = { $flatten\vcell.\ishaper.$procmux$2749_Y [1] $flatten\vcell.\ishaper.$procmux$2749_Y [1] $flatten\vcell.\ishaper.$procmux$2749_Y [1] }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\memory.$procmux$2519:
      Old ports: A=$flatten\memory.$procmux$2517_Y, B={ 1'0 \memory.P4blk_v }, Y=$flatten\memory.$procmux$2519_Y
      New ports: A=$flatten\memory.$procmux$2517_Y [4:0], B=\memory.P4blk_v, Y=$flatten\memory.$procmux$2519_Y [4:0]
      New connections: $flatten\memory.$procmux$2519_Y [5] = 1'0
    Consolidated identical input bits for $mux cell $flatten\memory.$procmux$2651:
      Old ports: A=$flatten\memory.$procmux$2648_Y, B=16'0000000000101000, Y=$flatten\memory.$procmux$2651_Y
      New ports: A={ $flatten\memory.$procmux$2648_Y [8:6] $flatten\memory.$procmux$2648_Y [4] $flatten\memory.$procmux$2648_Y [4:2] }, B=7'0001010, Y=$flatten\memory.$procmux$2651_Y [8:2]
      New connections: { $flatten\memory.$procmux$2651_Y [15:9] $flatten\memory.$procmux$2651_Y [1:0] } = { 6'000000 $flatten\memory.$procmux$2651_Y [8] 2'00 }
    Consolidated identical input bits for $mux cell $flatten\memory.\sh.$ternary$src/shifter.v:12$764:
      Old ports: A=$auto$wreduce.cc:454:run$5864 [3:0], B=4'0110, Y=$flatten\memory.\sh.$ternary$src/shifter.v:12$764_Y [3:0]
      New ports: A={ $auto$wreduce.cc:454:run$5864 [3] $auto$wreduce.cc:454:run$5864 [0] $auto$wreduce.cc:454:run$5864 [0] }, B=3'010, Y={ $flatten\memory.\sh.$ternary$src/shifter.v:12$764_Y [3] $flatten\memory.\sh.$ternary$src/shifter.v:12$764_Y [1:0] }
      New connections: $flatten\memory.\sh.$ternary$src/shifter.v:12$764_Y [2] = $flatten\memory.\sh.$ternary$src/shifter.v:12$764_Y [1]
    Consolidated identical input bits for $mux cell $flatten\memory.\sh.$ternary$src/shifter.v:16$780:
      Old ports: A=$flatten\memory.\sh.$ternary$src/shifter.v:16$779_Y [4:0], B=5'01110, Y=$flatten\memory.\sh.$ternary$src/shifter.v:16$780_Y [4:0]
      New ports: A={ $flatten\memory.\sh.$ternary$src/shifter.v:16$779_Y [4] $flatten\memory.\sh.$ternary$src/shifter.v:16$779_Y [0] $flatten\memory.\sh.$ternary$src/shifter.v:16$779_Y [0] }, B=3'010, Y={ $flatten\memory.\sh.$ternary$src/shifter.v:16$780_Y [4] $flatten\memory.\sh.$ternary$src/shifter.v:16$780_Y [1:0] }
      New connections: $flatten\memory.\sh.$ternary$src/shifter.v:16$780_Y [3:2] = { $flatten\memory.\sh.$ternary$src/shifter.v:16$780_Y [1] $flatten\memory.\sh.$ternary$src/shifter.v:16$780_Y [1] }
    Consolidated identical input bits for $mux cell $flatten\memory.\sh.$ternary$src/shifter.v:18$788:
      Old ports: A=$flatten\memory.\sh.$ternary$src/shifter.v:18$787_Y [4:0], B=5'10010, Y=$flatten\memory.\sh.$ternary$src/shifter.v:18$788_Y [4:0]
      New ports: A={ $flatten\memory.\sh.$ternary$src/shifter.v:18$787_Y [4] $flatten\memory.\sh.$ternary$src/shifter.v:18$787_Y [2] $flatten\memory.\sh.$ternary$src/shifter.v:18$787_Y [0] $flatten\memory.\sh.$ternary$src/shifter.v:18$787_Y [0] }, B=4'1010, Y={ $flatten\memory.\sh.$ternary$src/shifter.v:18$788_Y [4] $flatten\memory.\sh.$ternary$src/shifter.v:18$788_Y [2:0] }
      New connections: $flatten\memory.\sh.$ternary$src/shifter.v:18$788_Y [3] = 1'0
    Consolidated identical input bits for $mux cell $flatten\sdisplay.$ternary$src/scoredisplay.v:119$626:
      Old ports: A=\sdisplay.pixstream3, B={ 8'00000000 \sdisplay.__pixstream4 [3:0] }, Y=\sdisplay.pixstream4
      New ports: A=\sdisplay.pixstream3 [3:0], B=\sdisplay.__pixstream4 [3:0], Y=\sdisplay.pixstream4 [3:0]
      New connections: \sdisplay.pixstream4 [11:4] = 8'00000000
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\memory.\sh.$ternary$src/shifter.v:16$781:
      Old ports: A=$flatten\memory.\sh.$ternary$src/shifter.v:16$780_Y [4:0], B=5'01101, Y=\memory.sh.point4 [4:0]
      New ports: A={ $flatten\memory.\sh.$ternary$src/shifter.v:16$780_Y [4] $flatten\memory.\sh.$ternary$src/shifter.v:16$780_Y [1] $flatten\memory.\sh.$ternary$src/shifter.v:16$780_Y [1:0] }, B=4'0101, Y={ \memory.sh.point4 [4] \memory.sh.point4 [2:0] }
      New connections: \memory.sh.point4 [3] = \memory.sh.point4 [2]
    Consolidated identical input bits for $mux cell $flatten\memory.\sh.$ternary$src/shifter.v:18$789:
      Old ports: A=$flatten\memory.\sh.$ternary$src/shifter.v:18$788_Y [4:0], B=5'10001, Y=\memory.sh.point5 [4:0]
      New ports: A={ $flatten\memory.\sh.$ternary$src/shifter.v:18$788_Y [4] $flatten\memory.\sh.$ternary$src/shifter.v:18$788_Y [2:0] }, B=4'1001, Y={ \memory.sh.point5 [4] \memory.sh.point5 [2:0] }
      New connections: \memory.sh.point5 [3] = 1'0
    Consolidated identical input bits for $mux cell $flatten\sdisplay.$ternary$src/scoredisplay.v:126$638:
      Old ports: A=\sdisplay.pixstream4, B={ 8'00000000 \sdisplay.__pixstream5 [3:0] }, Y=\sdisplay.pixstream5
      New ports: A=\sdisplay.pixstream4 [3:0], B=\sdisplay.__pixstream5 [3:0], Y=\sdisplay.pixstream5 [3:0]
      New connections: \sdisplay.pixstream5 [11:4] = 8'00000000
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\memory.\sh.$ternary$src/shifter.v:23$803:
      Old ports: A=\memory.sh.point5 [4:0], B=5'00000, Y=$auto$wreduce.cc:454:run$5867 [4:0]
      New ports: A={ \memory.sh.point5 [4] \memory.sh.point5 [2:0] }, B=4'0000, Y={ $auto$wreduce.cc:454:run$5867 [4] $auto$wreduce.cc:454:run$5867 [2:0] }
      New connections: $auto$wreduce.cc:454:run$5867 [3] = 1'0
    Consolidated identical input bits for $mux cell $flatten\sdisplay.$ternary$src/scoredisplay.v:133$650:
      Old ports: A=\sdisplay.pixstream5, B={ 8'00000000 \sdisplay.__pixstream6 [3:0] }, Y=\sdisplay.pixstream6
      New ports: A=\sdisplay.pixstream5 [3:0], B=\sdisplay.__pixstream6 [3:0], Y=\sdisplay.pixstream6 [3:0]
      New connections: \sdisplay.pixstream6 [11:4] = 8'00000000
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\sdisplay.$ternary$src/scoredisplay.v:140$662:
      Old ports: A=\sdisplay.pixstream6, B={ 8'00000000 \sdisplay.__pixstream7 [3:0] }, Y=\sdisplay.pixstream7
      New ports: A=\sdisplay.pixstream6 [3:0], B=\sdisplay.__pixstream7 [3:0], Y=\sdisplay.pixstream7 [3:0]
      New connections: \sdisplay.pixstream7 [11:4] = 8'00000000
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\sdisplay.$ternary$src/scoredisplay.v:148$681:
      Old ports: A=12'111111111111, B=\sdisplay.pixstream7, Y=$flatten\sdisplay.$ternary$src/scoredisplay.v:148$681_Y
      New ports: A=5'11111, B={ 1'0 \sdisplay.pixstream7 [3:0] }, Y=$flatten\sdisplay.$ternary$src/scoredisplay.v:148$681_Y [4:0]
      New connections: $flatten\sdisplay.$ternary$src/scoredisplay.v:148$681_Y [11:5] = { $flatten\sdisplay.$ternary$src/scoredisplay.v:148$681_Y [4] $flatten\sdisplay.$ternary$src/scoredisplay.v:148$681_Y [4] $flatten\sdisplay.$ternary$src/scoredisplay.v:148$681_Y [4] $flatten\sdisplay.$ternary$src/scoredisplay.v:148$681_Y [4] $flatten\sdisplay.$ternary$src/scoredisplay.v:148$681_Y [4] $flatten\sdisplay.$ternary$src/scoredisplay.v:148$681_Y [4] $flatten\sdisplay.$ternary$src/scoredisplay.v:148$681_Y [4] }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\sdisplay.$ternary$src/scoredisplay.v:148$682:
      Old ports: A=$flatten\sdisplay.$ternary$src/scoredisplay.v:148$681_Y, B={ 8'00000000 \sdisplay.__pixstream8 [3:0] }, Y=\score_screen
      New ports: A=$flatten\sdisplay.$ternary$src/scoredisplay.v:148$681_Y [4:0], B={ 1'0 \sdisplay.__pixstream8 [3:0] }, Y=\score_screen [4:0]
      New connections: \score_screen [11:5] = { \score_screen [4] \score_screen [4] \score_screen [4] \score_screen [4] \score_screen [4] \score_screen [4] \score_screen [4] }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $ternary$src/top.v:131$1094:
      Old ports: A=12'001100110011, B=\score_screen, Y=$ternary$src/top.v:131$1094_Y
      New ports: A=6'010011, B={ \score_screen [4] \score_screen [4:0] }, Y={ $ternary$src/top.v:131$1094_Y [6] $ternary$src/top.v:131$1094_Y [4:0] }
      New connections: { $ternary$src/top.v:131$1094_Y [11:7] $ternary$src/top.v:131$1094_Y [5] } = { $ternary$src/top.v:131$1094_Y [6] $ternary$src/top.v:131$1094_Y [6] $ternary$src/top.v:131$1094_Y [4] $ternary$src/top.v:131$1094_Y [4] $ternary$src/top.v:131$1094_Y [6] $ternary$src/top.v:131$1094_Y [4] }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $ternary$src/top.v:131$1095:
      Old ports: A=$ternary$src/top.v:131$1094_Y, B={ \gamespeed_stream [9] \gamespeed_stream [9] \gamespeed_stream [9:0] }, Y=$ternary$src/top.v:131$1095_Y
      New ports: A={ $ternary$src/top.v:131$1094_Y [6] $ternary$src/top.v:131$1094_Y [4] $ternary$src/top.v:131$1094_Y [4] $ternary$src/top.v:131$1094_Y [6] $ternary$src/top.v:131$1094_Y [6] $ternary$src/top.v:131$1094_Y [4] $ternary$src/top.v:131$1094_Y [4:0] }, B={ \gamespeed_stream [9] \gamespeed_stream [9:0] }, Y=$ternary$src/top.v:131$1095_Y [10:0]
      New connections: $ternary$src/top.v:131$1095_Y [11] = $ternary$src/top.v:131$1095_Y [10]
  Optimizing cells in module \top.
Performed a total of 157 changes.

24.29.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~18 debug messages>
Removed a total of 6 cells.

24.29.6. Executing OPT_DFF pass (perform DFF optimizations).

24.29.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 5 unused wires.
<suppressed ~1 debug messages>

24.29.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~573 debug messages>

24.29.9. Rerunning OPT passes. (Maybe there is more to do..)

24.29.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~747 debug messages>

24.29.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s1.$ternary$src/digitdisplay.v:23$443:
      Old ports: A={ \sdisplay.s1.pixstream_top [3:2] \sdisplay.s1.pixstream_top [3] \sdisplay.s1.pixstream_top [3] }, B=$auto$wreduce.cc:454:run$5868 [3:0], Y=\sdisplay.s1.pixstream_bot [3:0]
      New ports: A={ \sdisplay.s1.pixstream_top [2] \sdisplay.s1.pixstream_top [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8217 }, Y={ \sdisplay.s1.pixstream_bot [2] \sdisplay.s1.pixstream_bot [0] }
      New connections: { \sdisplay.s1.pixstream_bot [3] \sdisplay.s1.pixstream_bot [1] } = { \sdisplay.s1.pixstream_bot [0] \sdisplay.s1.pixstream_bot [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s2.$ternary$src/digitdisplay.v:23$443:
      Old ports: A={ \sdisplay.s2.pixstream_top [3:2] \sdisplay.s2.pixstream_top [3] \sdisplay.s2.pixstream_top [3] }, B=$auto$wreduce.cc:454:run$5881 [3:0], Y=\sdisplay.s2.pixstream_bot [3:0]
      New ports: A={ \sdisplay.s2.pixstream_top [2] \sdisplay.s2.pixstream_top [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8193 }, Y={ \sdisplay.s2.pixstream_bot [2] \sdisplay.s2.pixstream_bot [0] }
      New connections: { \sdisplay.s2.pixstream_bot [3] \sdisplay.s2.pixstream_bot [1] } = { \sdisplay.s2.pixstream_bot [0] \sdisplay.s2.pixstream_bot [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s3.$ternary$src/digitdisplay.v:23$443:
      Old ports: A={ \sdisplay.s3.pixstream_top [3:2] \sdisplay.s3.pixstream_top [3] \sdisplay.s3.pixstream_top [3] }, B=$auto$wreduce.cc:454:run$5894 [3:0], Y=\sdisplay.s3.pixstream_bot [3:0]
      New ports: A={ \sdisplay.s3.pixstream_top [2] \sdisplay.s3.pixstream_top [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8169 }, Y={ \sdisplay.s3.pixstream_bot [2] \sdisplay.s3.pixstream_bot [0] }
      New connections: { \sdisplay.s3.pixstream_bot [3] \sdisplay.s3.pixstream_bot [1] } = { \sdisplay.s3.pixstream_bot [0] \sdisplay.s3.pixstream_bot [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s4.$ternary$src/digitdisplay.v:23$443:
      Old ports: A={ \sdisplay.s4.pixstream_top [3:2] \sdisplay.s4.pixstream_top [3] \sdisplay.s4.pixstream_top [3] }, B=$auto$wreduce.cc:454:run$5907 [3:0], Y=\sdisplay.s4.pixstream_bot [3:0]
      New ports: A={ \sdisplay.s4.pixstream_top [2] \sdisplay.s4.pixstream_top [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8145 }, Y={ \sdisplay.s4.pixstream_bot [2] \sdisplay.s4.pixstream_bot [0] }
      New connections: { \sdisplay.s4.pixstream_bot [3] \sdisplay.s4.pixstream_bot [1] } = { \sdisplay.s4.pixstream_bot [0] \sdisplay.s4.pixstream_bot [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s5.$ternary$src/digitdisplay.v:23$443:
      Old ports: A={ \sdisplay.s5.pixstream_top [3:2] \sdisplay.s5.pixstream_top [3] \sdisplay.s5.pixstream_top [3] }, B=$auto$wreduce.cc:454:run$5920 [3:0], Y=\sdisplay.s5.pixstream_bot [3:0]
      New ports: A={ \sdisplay.s5.pixstream_top [2] \sdisplay.s5.pixstream_top [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8121 }, Y={ \sdisplay.s5.pixstream_bot [2] \sdisplay.s5.pixstream_bot [0] }
      New connections: { \sdisplay.s5.pixstream_bot [3] \sdisplay.s5.pixstream_bot [1] } = { \sdisplay.s5.pixstream_bot [0] \sdisplay.s5.pixstream_bot [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s6.$ternary$src/digitdisplay.v:23$443:
      Old ports: A={ \sdisplay.s6.pixstream_top [3:2] \sdisplay.s6.pixstream_top [3] \sdisplay.s6.pixstream_top [3] }, B=$auto$wreduce.cc:454:run$5933 [3:0], Y=\sdisplay.s6.pixstream_bot [3:0]
      New ports: A={ \sdisplay.s6.pixstream_top [2] \sdisplay.s6.pixstream_top [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8097 }, Y={ \sdisplay.s6.pixstream_bot [2] \sdisplay.s6.pixstream_bot [0] }
      New connections: { \sdisplay.s6.pixstream_bot [3] \sdisplay.s6.pixstream_bot [1] } = { \sdisplay.s6.pixstream_bot [0] \sdisplay.s6.pixstream_bot [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s7.$ternary$src/digitdisplay.v:23$443:
      Old ports: A={ \sdisplay.s7.pixstream_top [3:2] \sdisplay.s7.pixstream_top [3] \sdisplay.s7.pixstream_top [3] }, B=$auto$wreduce.cc:454:run$5946 [3:0], Y=\sdisplay.s7.pixstream_bot [3:0]
      New ports: A={ \sdisplay.s7.pixstream_top [2] \sdisplay.s7.pixstream_top [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8073 }, Y={ \sdisplay.s7.pixstream_bot [2] \sdisplay.s7.pixstream_bot [0] }
      New connections: { \sdisplay.s7.pixstream_bot [3] \sdisplay.s7.pixstream_bot [1] } = { \sdisplay.s7.pixstream_bot [0] \sdisplay.s7.pixstream_bot [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s8.$ternary$src/digitdisplay.v:23$443:
      Old ports: A={ \sdisplay.s8.pixstream_top [3:2] \sdisplay.s8.pixstream_top [3] \sdisplay.s8.pixstream_top [3] }, B=$auto$wreduce.cc:454:run$5959 [3:0], Y=\sdisplay.s8.pixstream_bot [3:0]
      New ports: A={ \sdisplay.s8.pixstream_top [2] \sdisplay.s8.pixstream_top [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8049 }, Y={ \sdisplay.s8.pixstream_bot [2] \sdisplay.s8.pixstream_bot [0] }
      New connections: { \sdisplay.s8.pixstream_bot [3] \sdisplay.s8.pixstream_bot [1] } = { \sdisplay.s8.pixstream_bot [0] \sdisplay.s8.pixstream_bot [0] }
  Optimizing cells in module \top.
Performed a total of 8 changes.

24.29.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~9 debug messages>
Removed a total of 3 cells.

24.29.13. Executing OPT_DFF pass (perform DFF optimizations).
Setting constant 0-bit at position 0 on $auto$ff.cc:262:slice$7622 ($sdffce) from module top.
Setting constant 0-bit at position 1 on $auto$ff.cc:262:slice$7622 ($sdffce) from module top.
Setting constant 0-bit at position 4 on $auto$ff.cc:262:slice$7622 ($sdffce) from module top.
Setting constant 0-bit at position 5 on $auto$ff.cc:262:slice$7622 ($sdffce) from module top.
Setting constant 0-bit at position 6 on $auto$ff.cc:262:slice$7622 ($sdffce) from module top.
Setting constant 0-bit at position 7 on $auto$ff.cc:262:slice$7622 ($sdffce) from module top.
Setting constant 0-bit at position 8 on $auto$ff.cc:262:slice$7622 ($sdffce) from module top.
Setting constant 0-bit at position 9 on $auto$ff.cc:262:slice$7622 ($sdffce) from module top.

24.29.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 174 unused wires.
<suppressed ~1 debug messages>

24.29.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~35 debug messages>

24.29.16. Rerunning OPT passes. (Maybe there is more to do..)

24.29.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~747 debug messages>

24.29.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s1.$ternary$src/digitdisplay.v:28$466:
      Old ports: A={ \sdisplay.s1.pixstream_bot [3:2] \sdisplay.s1.pixstream_bot [3] \sdisplay.s1.pixstream_bot [3] }, B={ $auto$opt_expr.cc:205:group_cell_inputs$8221 [2] 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8221 [1:0] }, Y=\sdisplay.s1.pixstream_mid [3:0]
      New ports: A={ \sdisplay.s1.pixstream_bot [2] \sdisplay.s1.pixstream_bot [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8371 }, Y={ \sdisplay.s1.pixstream_mid [2] \sdisplay.s1.pixstream_mid [0] }
      New connections: { \sdisplay.s1.pixstream_mid [3] \sdisplay.s1.pixstream_mid [1] } = { \sdisplay.s1.pixstream_mid [0] \sdisplay.s1.pixstream_mid [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s2.$ternary$src/digitdisplay.v:28$466:
      Old ports: A={ \sdisplay.s2.pixstream_bot [3:2] \sdisplay.s2.pixstream_bot [3] \sdisplay.s2.pixstream_bot [3] }, B={ $auto$opt_expr.cc:205:group_cell_inputs$8197 [2] 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8197 [1:0] }, Y=\sdisplay.s2.pixstream_mid [3:0]
      New ports: A={ \sdisplay.s2.pixstream_bot [2] \sdisplay.s2.pixstream_bot [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8369 }, Y={ \sdisplay.s2.pixstream_mid [2] \sdisplay.s2.pixstream_mid [0] }
      New connections: { \sdisplay.s2.pixstream_mid [3] \sdisplay.s2.pixstream_mid [1] } = { \sdisplay.s2.pixstream_mid [0] \sdisplay.s2.pixstream_mid [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s3.$ternary$src/digitdisplay.v:28$466:
      Old ports: A={ \sdisplay.s3.pixstream_bot [3:2] \sdisplay.s3.pixstream_bot [3] \sdisplay.s3.pixstream_bot [3] }, B={ $auto$opt_expr.cc:205:group_cell_inputs$8173 [2] 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8173 [1:0] }, Y=\sdisplay.s3.pixstream_mid [3:0]
      New ports: A={ \sdisplay.s3.pixstream_bot [2] \sdisplay.s3.pixstream_bot [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8367 }, Y={ \sdisplay.s3.pixstream_mid [2] \sdisplay.s3.pixstream_mid [0] }
      New connections: { \sdisplay.s3.pixstream_mid [3] \sdisplay.s3.pixstream_mid [1] } = { \sdisplay.s3.pixstream_mid [0] \sdisplay.s3.pixstream_mid [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s4.$ternary$src/digitdisplay.v:28$466:
      Old ports: A={ \sdisplay.s4.pixstream_bot [3:2] \sdisplay.s4.pixstream_bot [3] \sdisplay.s4.pixstream_bot [3] }, B={ $auto$opt_expr.cc:205:group_cell_inputs$8149 [2] 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8149 [1:0] }, Y=\sdisplay.s4.pixstream_mid [3:0]
      New ports: A={ \sdisplay.s4.pixstream_bot [2] \sdisplay.s4.pixstream_bot [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8365 }, Y={ \sdisplay.s4.pixstream_mid [2] \sdisplay.s4.pixstream_mid [0] }
      New connections: { \sdisplay.s4.pixstream_mid [3] \sdisplay.s4.pixstream_mid [1] } = { \sdisplay.s4.pixstream_mid [0] \sdisplay.s4.pixstream_mid [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s5.$ternary$src/digitdisplay.v:28$466:
      Old ports: A={ \sdisplay.s5.pixstream_bot [3:2] \sdisplay.s5.pixstream_bot [3] \sdisplay.s5.pixstream_bot [3] }, B={ $auto$opt_expr.cc:205:group_cell_inputs$8125 [2] 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8125 [1:0] }, Y=\sdisplay.s5.pixstream_mid [3:0]
      New ports: A={ \sdisplay.s5.pixstream_bot [2] \sdisplay.s5.pixstream_bot [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8363 }, Y={ \sdisplay.s5.pixstream_mid [2] \sdisplay.s5.pixstream_mid [0] }
      New connections: { \sdisplay.s5.pixstream_mid [3] \sdisplay.s5.pixstream_mid [1] } = { \sdisplay.s5.pixstream_mid [0] \sdisplay.s5.pixstream_mid [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s6.$ternary$src/digitdisplay.v:28$466:
      Old ports: A={ \sdisplay.s6.pixstream_bot [3:2] \sdisplay.s6.pixstream_bot [3] \sdisplay.s6.pixstream_bot [3] }, B={ $auto$opt_expr.cc:205:group_cell_inputs$8101 [2] 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8101 [1:0] }, Y=\sdisplay.s6.pixstream_mid [3:0]
      New ports: A={ \sdisplay.s6.pixstream_bot [2] \sdisplay.s6.pixstream_bot [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8361 }, Y={ \sdisplay.s6.pixstream_mid [2] \sdisplay.s6.pixstream_mid [0] }
      New connections: { \sdisplay.s6.pixstream_mid [3] \sdisplay.s6.pixstream_mid [1] } = { \sdisplay.s6.pixstream_mid [0] \sdisplay.s6.pixstream_mid [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s7.$ternary$src/digitdisplay.v:28$466:
      Old ports: A={ \sdisplay.s7.pixstream_bot [3:2] \sdisplay.s7.pixstream_bot [3] \sdisplay.s7.pixstream_bot [3] }, B={ $auto$opt_expr.cc:205:group_cell_inputs$8077 [2] 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8077 [1:0] }, Y=\sdisplay.s7.pixstream_mid [3:0]
      New ports: A={ \sdisplay.s7.pixstream_bot [2] \sdisplay.s7.pixstream_bot [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8359 }, Y={ \sdisplay.s7.pixstream_mid [2] \sdisplay.s7.pixstream_mid [0] }
      New connections: { \sdisplay.s7.pixstream_mid [3] \sdisplay.s7.pixstream_mid [1] } = { \sdisplay.s7.pixstream_mid [0] \sdisplay.s7.pixstream_mid [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s8.$ternary$src/digitdisplay.v:28$466:
      Old ports: A={ \sdisplay.s8.pixstream_bot [3:2] \sdisplay.s8.pixstream_bot [3] \sdisplay.s8.pixstream_bot [3] }, B={ $auto$opt_expr.cc:205:group_cell_inputs$8053 [2] 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8053 [1:0] }, Y=\sdisplay.s8.pixstream_mid [3:0]
      New ports: A={ \sdisplay.s8.pixstream_bot [2] \sdisplay.s8.pixstream_bot [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8357 }, Y={ \sdisplay.s8.pixstream_mid [2] \sdisplay.s8.pixstream_mid [0] }
      New connections: { \sdisplay.s8.pixstream_mid [3] \sdisplay.s8.pixstream_mid [1] } = { \sdisplay.s8.pixstream_mid [0] \sdisplay.s8.pixstream_mid [0] }
  Optimizing cells in module \top.
Performed a total of 8 changes.

24.29.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

24.29.20. Executing OPT_DFF pass (perform DFF optimizations).
Adding EN signal on $auto$ff.cc:262:slice$4631 ($sdffe) from module top (D = $flatten\sdisplay.$procmux$3473_Y [1:0], Q = \sdisplay.dumpvar [1:0]).

24.29.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 9 unused wires.
<suppressed ~1 debug messages>

24.29.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~33 debug messages>

24.29.23. Rerunning OPT passes. (Maybe there is more to do..)

24.29.24. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~747 debug messages>

24.29.25. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s1.$ternary$src/digitdisplay.v:33$491:
      Old ports: A={ \sdisplay.s1.pixstream_mid [3:2] \sdisplay.s1.pixstream_mid [3] \sdisplay.s1.pixstream_mid [3] }, B={ $auto$opt_expr.cc:205:group_cell_inputs$8225 [2] 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8225 [1:0] }, Y=\sdisplay.s1.pixstream_topr [3:0]
      New ports: A={ \sdisplay.s1.pixstream_mid [2] \sdisplay.s1.pixstream_mid [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8395 }, Y={ \sdisplay.s1.pixstream_topr [2] \sdisplay.s1.pixstream_topr [0] }
      New connections: { \sdisplay.s1.pixstream_topr [3] \sdisplay.s1.pixstream_topr [1] } = { \sdisplay.s1.pixstream_topr [0] \sdisplay.s1.pixstream_topr [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s2.$ternary$src/digitdisplay.v:33$491:
      Old ports: A={ \sdisplay.s2.pixstream_mid [3:2] \sdisplay.s2.pixstream_mid [3] \sdisplay.s2.pixstream_mid [3] }, B={ $auto$opt_expr.cc:205:group_cell_inputs$8201 [2] 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8201 [1:0] }, Y=\sdisplay.s2.pixstream_topr [3:0]
      New ports: A={ \sdisplay.s2.pixstream_mid [2] \sdisplay.s2.pixstream_mid [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8393 }, Y={ \sdisplay.s2.pixstream_topr [2] \sdisplay.s2.pixstream_topr [0] }
      New connections: { \sdisplay.s2.pixstream_topr [3] \sdisplay.s2.pixstream_topr [1] } = { \sdisplay.s2.pixstream_topr [0] \sdisplay.s2.pixstream_topr [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s3.$ternary$src/digitdisplay.v:33$491:
      Old ports: A={ \sdisplay.s3.pixstream_mid [3:2] \sdisplay.s3.pixstream_mid [3] \sdisplay.s3.pixstream_mid [3] }, B={ $auto$opt_expr.cc:205:group_cell_inputs$8177 [2] 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8177 [1:0] }, Y=\sdisplay.s3.pixstream_topr [3:0]
      New ports: A={ \sdisplay.s3.pixstream_mid [2] \sdisplay.s3.pixstream_mid [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8391 }, Y={ \sdisplay.s3.pixstream_topr [2] \sdisplay.s3.pixstream_topr [0] }
      New connections: { \sdisplay.s3.pixstream_topr [3] \sdisplay.s3.pixstream_topr [1] } = { \sdisplay.s3.pixstream_topr [0] \sdisplay.s3.pixstream_topr [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s4.$ternary$src/digitdisplay.v:33$491:
      Old ports: A={ \sdisplay.s4.pixstream_mid [3:2] \sdisplay.s4.pixstream_mid [3] \sdisplay.s4.pixstream_mid [3] }, B={ $auto$opt_expr.cc:205:group_cell_inputs$8153 [2] 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8153 [1:0] }, Y=\sdisplay.s4.pixstream_topr [3:0]
      New ports: A={ \sdisplay.s4.pixstream_mid [2] \sdisplay.s4.pixstream_mid [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8389 }, Y={ \sdisplay.s4.pixstream_topr [2] \sdisplay.s4.pixstream_topr [0] }
      New connections: { \sdisplay.s4.pixstream_topr [3] \sdisplay.s4.pixstream_topr [1] } = { \sdisplay.s4.pixstream_topr [0] \sdisplay.s4.pixstream_topr [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s5.$ternary$src/digitdisplay.v:33$491:
      Old ports: A={ \sdisplay.s5.pixstream_mid [3:2] \sdisplay.s5.pixstream_mid [3] \sdisplay.s5.pixstream_mid [3] }, B={ $auto$opt_expr.cc:205:group_cell_inputs$8129 [2] 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8129 [1:0] }, Y=\sdisplay.s5.pixstream_topr [3:0]
      New ports: A={ \sdisplay.s5.pixstream_mid [2] \sdisplay.s5.pixstream_mid [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8387 }, Y={ \sdisplay.s5.pixstream_topr [2] \sdisplay.s5.pixstream_topr [0] }
      New connections: { \sdisplay.s5.pixstream_topr [3] \sdisplay.s5.pixstream_topr [1] } = { \sdisplay.s5.pixstream_topr [0] \sdisplay.s5.pixstream_topr [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s6.$ternary$src/digitdisplay.v:33$491:
      Old ports: A={ \sdisplay.s6.pixstream_mid [3:2] \sdisplay.s6.pixstream_mid [3] \sdisplay.s6.pixstream_mid [3] }, B={ $auto$opt_expr.cc:205:group_cell_inputs$8105 [2] 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8105 [1:0] }, Y=\sdisplay.s6.pixstream_topr [3:0]
      New ports: A={ \sdisplay.s6.pixstream_mid [2] \sdisplay.s6.pixstream_mid [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8385 }, Y={ \sdisplay.s6.pixstream_topr [2] \sdisplay.s6.pixstream_topr [0] }
      New connections: { \sdisplay.s6.pixstream_topr [3] \sdisplay.s6.pixstream_topr [1] } = { \sdisplay.s6.pixstream_topr [0] \sdisplay.s6.pixstream_topr [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s7.$ternary$src/digitdisplay.v:33$491:
      Old ports: A={ \sdisplay.s7.pixstream_mid [3:2] \sdisplay.s7.pixstream_mid [3] \sdisplay.s7.pixstream_mid [3] }, B={ $auto$opt_expr.cc:205:group_cell_inputs$8081 [2] 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8081 [1:0] }, Y=\sdisplay.s7.pixstream_topr [3:0]
      New ports: A={ \sdisplay.s7.pixstream_mid [2] \sdisplay.s7.pixstream_mid [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8383 }, Y={ \sdisplay.s7.pixstream_topr [2] \sdisplay.s7.pixstream_topr [0] }
      New connections: { \sdisplay.s7.pixstream_topr [3] \sdisplay.s7.pixstream_topr [1] } = { \sdisplay.s7.pixstream_topr [0] \sdisplay.s7.pixstream_topr [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s8.$ternary$src/digitdisplay.v:33$491:
      Old ports: A={ \sdisplay.s8.pixstream_mid [3:2] \sdisplay.s8.pixstream_mid [3] \sdisplay.s8.pixstream_mid [3] }, B={ $auto$opt_expr.cc:205:group_cell_inputs$8057 [2] 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8057 [1:0] }, Y=\sdisplay.s8.pixstream_topr [3:0]
      New ports: A={ \sdisplay.s8.pixstream_mid [2] \sdisplay.s8.pixstream_mid [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8381 }, Y={ \sdisplay.s8.pixstream_topr [2] \sdisplay.s8.pixstream_topr [0] }
      New connections: { \sdisplay.s8.pixstream_topr [3] \sdisplay.s8.pixstream_topr [1] } = { \sdisplay.s8.pixstream_topr [0] \sdisplay.s8.pixstream_topr [0] }
  Optimizing cells in module \top.
Performed a total of 8 changes.

24.29.26. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

24.29.27. Executing OPT_DFF pass (perform DFF optimizations).

24.29.28. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 9 unused wires.
<suppressed ~1 debug messages>

24.29.29. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~32 debug messages>

24.29.30. Rerunning OPT passes. (Maybe there is more to do..)

24.29.31. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~747 debug messages>

24.29.32. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s1.$ternary$src/digitdisplay.v:38$512:
      Old ports: A={ \sdisplay.s1.pixstream_topr [3:2] \sdisplay.s1.pixstream_topr [3] \sdisplay.s1.pixstream_topr [3] }, B={ $auto$opt_expr.cc:205:group_cell_inputs$8229 [2] 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8229 [1:0] }, Y=\sdisplay.s1.pixstream_topl [3:0]
      New ports: A={ \sdisplay.s1.pixstream_topr [2] \sdisplay.s1.pixstream_topr [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8411 }, Y={ \sdisplay.s1.pixstream_topl [2] \sdisplay.s1.pixstream_topl [0] }
      New connections: { \sdisplay.s1.pixstream_topl [3] \sdisplay.s1.pixstream_topl [1] } = { \sdisplay.s1.pixstream_topl [0] \sdisplay.s1.pixstream_topl [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s2.$ternary$src/digitdisplay.v:38$512:
      Old ports: A={ \sdisplay.s2.pixstream_topr [3:2] \sdisplay.s2.pixstream_topr [3] \sdisplay.s2.pixstream_topr [3] }, B={ $auto$opt_expr.cc:205:group_cell_inputs$8205 [2] 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8205 [1:0] }, Y=\sdisplay.s2.pixstream_topl [3:0]
      New ports: A={ \sdisplay.s2.pixstream_topr [2] \sdisplay.s2.pixstream_topr [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8409 }, Y={ \sdisplay.s2.pixstream_topl [2] \sdisplay.s2.pixstream_topl [0] }
      New connections: { \sdisplay.s2.pixstream_topl [3] \sdisplay.s2.pixstream_topl [1] } = { \sdisplay.s2.pixstream_topl [0] \sdisplay.s2.pixstream_topl [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s3.$ternary$src/digitdisplay.v:38$512:
      Old ports: A={ \sdisplay.s3.pixstream_topr [3:2] \sdisplay.s3.pixstream_topr [3] \sdisplay.s3.pixstream_topr [3] }, B={ $auto$opt_expr.cc:205:group_cell_inputs$8181 [2] 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8181 [1:0] }, Y=\sdisplay.s3.pixstream_topl [3:0]
      New ports: A={ \sdisplay.s3.pixstream_topr [2] \sdisplay.s3.pixstream_topr [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8407 }, Y={ \sdisplay.s3.pixstream_topl [2] \sdisplay.s3.pixstream_topl [0] }
      New connections: { \sdisplay.s3.pixstream_topl [3] \sdisplay.s3.pixstream_topl [1] } = { \sdisplay.s3.pixstream_topl [0] \sdisplay.s3.pixstream_topl [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s4.$ternary$src/digitdisplay.v:38$512:
      Old ports: A={ \sdisplay.s4.pixstream_topr [3:2] \sdisplay.s4.pixstream_topr [3] \sdisplay.s4.pixstream_topr [3] }, B={ $auto$opt_expr.cc:205:group_cell_inputs$8157 [2] 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8157 [1:0] }, Y=\sdisplay.s4.pixstream_topl [3:0]
      New ports: A={ \sdisplay.s4.pixstream_topr [2] \sdisplay.s4.pixstream_topr [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8405 }, Y={ \sdisplay.s4.pixstream_topl [2] \sdisplay.s4.pixstream_topl [0] }
      New connections: { \sdisplay.s4.pixstream_topl [3] \sdisplay.s4.pixstream_topl [1] } = { \sdisplay.s4.pixstream_topl [0] \sdisplay.s4.pixstream_topl [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s5.$ternary$src/digitdisplay.v:38$512:
      Old ports: A={ \sdisplay.s5.pixstream_topr [3:2] \sdisplay.s5.pixstream_topr [3] \sdisplay.s5.pixstream_topr [3] }, B={ $auto$opt_expr.cc:205:group_cell_inputs$8133 [2] 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8133 [1:0] }, Y=\sdisplay.s5.pixstream_topl [3:0]
      New ports: A={ \sdisplay.s5.pixstream_topr [2] \sdisplay.s5.pixstream_topr [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8403 }, Y={ \sdisplay.s5.pixstream_topl [2] \sdisplay.s5.pixstream_topl [0] }
      New connections: { \sdisplay.s5.pixstream_topl [3] \sdisplay.s5.pixstream_topl [1] } = { \sdisplay.s5.pixstream_topl [0] \sdisplay.s5.pixstream_topl [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s6.$ternary$src/digitdisplay.v:38$512:
      Old ports: A={ \sdisplay.s6.pixstream_topr [3:2] \sdisplay.s6.pixstream_topr [3] \sdisplay.s6.pixstream_topr [3] }, B={ $auto$opt_expr.cc:205:group_cell_inputs$8109 [2] 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8109 [1:0] }, Y=\sdisplay.s6.pixstream_topl [3:0]
      New ports: A={ \sdisplay.s6.pixstream_topr [2] \sdisplay.s6.pixstream_topr [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8401 }, Y={ \sdisplay.s6.pixstream_topl [2] \sdisplay.s6.pixstream_topl [0] }
      New connections: { \sdisplay.s6.pixstream_topl [3] \sdisplay.s6.pixstream_topl [1] } = { \sdisplay.s6.pixstream_topl [0] \sdisplay.s6.pixstream_topl [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s7.$ternary$src/digitdisplay.v:38$512:
      Old ports: A={ \sdisplay.s7.pixstream_topr [3:2] \sdisplay.s7.pixstream_topr [3] \sdisplay.s7.pixstream_topr [3] }, B={ $auto$opt_expr.cc:205:group_cell_inputs$8085 [2] 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8085 [1:0] }, Y=\sdisplay.s7.pixstream_topl [3:0]
      New ports: A={ \sdisplay.s7.pixstream_topr [2] \sdisplay.s7.pixstream_topr [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8399 }, Y={ \sdisplay.s7.pixstream_topl [2] \sdisplay.s7.pixstream_topl [0] }
      New connections: { \sdisplay.s7.pixstream_topl [3] \sdisplay.s7.pixstream_topl [1] } = { \sdisplay.s7.pixstream_topl [0] \sdisplay.s7.pixstream_topl [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s8.$ternary$src/digitdisplay.v:38$512:
      Old ports: A={ \sdisplay.s8.pixstream_topr [3:2] \sdisplay.s8.pixstream_topr [3] \sdisplay.s8.pixstream_topr [3] }, B={ $auto$opt_expr.cc:205:group_cell_inputs$8061 [2] 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8061 [1:0] }, Y=\sdisplay.s8.pixstream_topl [3:0]
      New ports: A={ \sdisplay.s8.pixstream_topr [2] \sdisplay.s8.pixstream_topr [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8397 }, Y={ \sdisplay.s8.pixstream_topl [2] \sdisplay.s8.pixstream_topl [0] }
      New connections: { \sdisplay.s8.pixstream_topl [3] \sdisplay.s8.pixstream_topl [1] } = { \sdisplay.s8.pixstream_topl [0] \sdisplay.s8.pixstream_topl [0] }
  Optimizing cells in module \top.
Performed a total of 8 changes.

24.29.33. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

24.29.34. Executing OPT_DFF pass (perform DFF optimizations).

24.29.35. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 8 unused wires.
<suppressed ~1 debug messages>

24.29.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~32 debug messages>

24.29.37. Rerunning OPT passes. (Maybe there is more to do..)

24.29.38. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~747 debug messages>

24.29.39. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s1.$ternary$src/digitdisplay.v:43$529:
      Old ports: A={ \sdisplay.s1.pixstream_topl [3:2] \sdisplay.s1.pixstream_topl [3] \sdisplay.s1.pixstream_topl [3] }, B={ $auto$opt_expr.cc:205:group_cell_inputs$8233 [2] 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8233 [1:0] }, Y=\sdisplay.s1.pixstream_botl [3:0]
      New ports: A={ \sdisplay.s1.pixstream_topl [2] \sdisplay.s1.pixstream_topl [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8427 }, Y={ \sdisplay.s1.pixstream_botl [2] \sdisplay.s1.pixstream_botl [0] }
      New connections: { \sdisplay.s1.pixstream_botl [3] \sdisplay.s1.pixstream_botl [1] } = { \sdisplay.s1.pixstream_botl [0] \sdisplay.s1.pixstream_botl [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s2.$ternary$src/digitdisplay.v:43$529:
      Old ports: A={ \sdisplay.s2.pixstream_topl [3:2] \sdisplay.s2.pixstream_topl [3] \sdisplay.s2.pixstream_topl [3] }, B={ $auto$opt_expr.cc:205:group_cell_inputs$8209 [2] 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8209 [1:0] }, Y=\sdisplay.s2.pixstream_botl [3:0]
      New ports: A={ \sdisplay.s2.pixstream_topl [2] \sdisplay.s2.pixstream_topl [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8425 }, Y={ \sdisplay.s2.pixstream_botl [2] \sdisplay.s2.pixstream_botl [0] }
      New connections: { \sdisplay.s2.pixstream_botl [3] \sdisplay.s2.pixstream_botl [1] } = { \sdisplay.s2.pixstream_botl [0] \sdisplay.s2.pixstream_botl [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s3.$ternary$src/digitdisplay.v:43$529:
      Old ports: A={ \sdisplay.s3.pixstream_topl [3:2] \sdisplay.s3.pixstream_topl [3] \sdisplay.s3.pixstream_topl [3] }, B={ $auto$opt_expr.cc:205:group_cell_inputs$8185 [2] 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8185 [1:0] }, Y=\sdisplay.s3.pixstream_botl [3:0]
      New ports: A={ \sdisplay.s3.pixstream_topl [2] \sdisplay.s3.pixstream_topl [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8423 }, Y={ \sdisplay.s3.pixstream_botl [2] \sdisplay.s3.pixstream_botl [0] }
      New connections: { \sdisplay.s3.pixstream_botl [3] \sdisplay.s3.pixstream_botl [1] } = { \sdisplay.s3.pixstream_botl [0] \sdisplay.s3.pixstream_botl [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s4.$ternary$src/digitdisplay.v:43$529:
      Old ports: A={ \sdisplay.s4.pixstream_topl [3:2] \sdisplay.s4.pixstream_topl [3] \sdisplay.s4.pixstream_topl [3] }, B={ $auto$opt_expr.cc:205:group_cell_inputs$8161 [2] 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8161 [1:0] }, Y=\sdisplay.s4.pixstream_botl [3:0]
      New ports: A={ \sdisplay.s4.pixstream_topl [2] \sdisplay.s4.pixstream_topl [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8421 }, Y={ \sdisplay.s4.pixstream_botl [2] \sdisplay.s4.pixstream_botl [0] }
      New connections: { \sdisplay.s4.pixstream_botl [3] \sdisplay.s4.pixstream_botl [1] } = { \sdisplay.s4.pixstream_botl [0] \sdisplay.s4.pixstream_botl [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s5.$ternary$src/digitdisplay.v:43$529:
      Old ports: A={ \sdisplay.s5.pixstream_topl [3:2] \sdisplay.s5.pixstream_topl [3] \sdisplay.s5.pixstream_topl [3] }, B={ $auto$opt_expr.cc:205:group_cell_inputs$8137 [2] 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8137 [1:0] }, Y=\sdisplay.s5.pixstream_botl [3:0]
      New ports: A={ \sdisplay.s5.pixstream_topl [2] \sdisplay.s5.pixstream_topl [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8419 }, Y={ \sdisplay.s5.pixstream_botl [2] \sdisplay.s5.pixstream_botl [0] }
      New connections: { \sdisplay.s5.pixstream_botl [3] \sdisplay.s5.pixstream_botl [1] } = { \sdisplay.s5.pixstream_botl [0] \sdisplay.s5.pixstream_botl [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s6.$ternary$src/digitdisplay.v:43$529:
      Old ports: A={ \sdisplay.s6.pixstream_topl [3:2] \sdisplay.s6.pixstream_topl [3] \sdisplay.s6.pixstream_topl [3] }, B={ $auto$opt_expr.cc:205:group_cell_inputs$8113 [2] 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8113 [1:0] }, Y=\sdisplay.s6.pixstream_botl [3:0]
      New ports: A={ \sdisplay.s6.pixstream_topl [2] \sdisplay.s6.pixstream_topl [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8417 }, Y={ \sdisplay.s6.pixstream_botl [2] \sdisplay.s6.pixstream_botl [0] }
      New connections: { \sdisplay.s6.pixstream_botl [3] \sdisplay.s6.pixstream_botl [1] } = { \sdisplay.s6.pixstream_botl [0] \sdisplay.s6.pixstream_botl [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s7.$ternary$src/digitdisplay.v:43$529:
      Old ports: A={ \sdisplay.s7.pixstream_topl [3:2] \sdisplay.s7.pixstream_topl [3] \sdisplay.s7.pixstream_topl [3] }, B={ $auto$opt_expr.cc:205:group_cell_inputs$8089 [2] 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8089 [1:0] }, Y=\sdisplay.s7.pixstream_botl [3:0]
      New ports: A={ \sdisplay.s7.pixstream_topl [2] \sdisplay.s7.pixstream_topl [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8415 }, Y={ \sdisplay.s7.pixstream_botl [2] \sdisplay.s7.pixstream_botl [0] }
      New connections: { \sdisplay.s7.pixstream_botl [3] \sdisplay.s7.pixstream_botl [1] } = { \sdisplay.s7.pixstream_botl [0] \sdisplay.s7.pixstream_botl [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s8.$ternary$src/digitdisplay.v:43$529:
      Old ports: A={ \sdisplay.s8.pixstream_topl [3:2] \sdisplay.s8.pixstream_topl [3] \sdisplay.s8.pixstream_topl [3] }, B={ $auto$opt_expr.cc:205:group_cell_inputs$8065 [2] 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8065 [1:0] }, Y=\sdisplay.s8.pixstream_botl [3:0]
      New ports: A={ \sdisplay.s8.pixstream_topl [2] \sdisplay.s8.pixstream_topl [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8413 }, Y={ \sdisplay.s8.pixstream_botl [2] \sdisplay.s8.pixstream_botl [0] }
      New connections: { \sdisplay.s8.pixstream_botl [3] \sdisplay.s8.pixstream_botl [1] } = { \sdisplay.s8.pixstream_botl [0] \sdisplay.s8.pixstream_botl [0] }
  Optimizing cells in module \top.
Performed a total of 8 changes.

24.29.40. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

24.29.41. Executing OPT_DFF pass (perform DFF optimizations).

24.29.42. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 8 unused wires.
<suppressed ~1 debug messages>

24.29.43. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~32 debug messages>

24.29.44. Rerunning OPT passes. (Maybe there is more to do..)

24.29.45. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~747 debug messages>

24.29.46. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s1.$ternary$src/digitdisplay.v:47$556:
      Old ports: A={ \sdisplay.s1.pixstream_botl [3:2] \sdisplay.s1.pixstream_botl [3] \sdisplay.s1.pixstream_botl [3] }, B={ $auto$opt_expr.cc:205:group_cell_inputs$8237 [2] 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8237 [1:0] }, Y=\sdisplay.__pixstream1 [3:0]
      New ports: A={ \sdisplay.s1.pixstream_botl [2] \sdisplay.s1.pixstream_botl [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8443 }, Y={ \sdisplay.__pixstream1 [2] \sdisplay.__pixstream1 [0] }
      New connections: { \sdisplay.__pixstream1 [3] \sdisplay.__pixstream1 [1] } = { \sdisplay.__pixstream1 [0] \sdisplay.__pixstream1 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s2.$ternary$src/digitdisplay.v:47$556:
      Old ports: A={ \sdisplay.s2.pixstream_botl [3:2] \sdisplay.s2.pixstream_botl [3] \sdisplay.s2.pixstream_botl [3] }, B={ $auto$opt_expr.cc:205:group_cell_inputs$8213 [2] 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8213 [1:0] }, Y=\sdisplay.__pixstream2 [3:0]
      New ports: A={ \sdisplay.s2.pixstream_botl [2] \sdisplay.s2.pixstream_botl [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8441 }, Y={ \sdisplay.__pixstream2 [2] \sdisplay.__pixstream2 [0] }
      New connections: { \sdisplay.__pixstream2 [3] \sdisplay.__pixstream2 [1] } = { \sdisplay.__pixstream2 [0] \sdisplay.__pixstream2 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s3.$ternary$src/digitdisplay.v:47$556:
      Old ports: A={ \sdisplay.s3.pixstream_botl [3:2] \sdisplay.s3.pixstream_botl [3] \sdisplay.s3.pixstream_botl [3] }, B={ $auto$opt_expr.cc:205:group_cell_inputs$8189 [2] 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8189 [1:0] }, Y=\sdisplay.__pixstream3 [3:0]
      New ports: A={ \sdisplay.s3.pixstream_botl [2] \sdisplay.s3.pixstream_botl [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8439 }, Y={ \sdisplay.__pixstream3 [2] \sdisplay.__pixstream3 [0] }
      New connections: { \sdisplay.__pixstream3 [3] \sdisplay.__pixstream3 [1] } = { \sdisplay.__pixstream3 [0] \sdisplay.__pixstream3 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s4.$ternary$src/digitdisplay.v:47$556:
      Old ports: A={ \sdisplay.s4.pixstream_botl [3:2] \sdisplay.s4.pixstream_botl [3] \sdisplay.s4.pixstream_botl [3] }, B={ $auto$opt_expr.cc:205:group_cell_inputs$8165 [2] 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8165 [1:0] }, Y=\sdisplay.__pixstream4 [3:0]
      New ports: A={ \sdisplay.s4.pixstream_botl [2] \sdisplay.s4.pixstream_botl [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8437 }, Y={ \sdisplay.__pixstream4 [2] \sdisplay.__pixstream4 [0] }
      New connections: { \sdisplay.__pixstream4 [3] \sdisplay.__pixstream4 [1] } = { \sdisplay.__pixstream4 [0] \sdisplay.__pixstream4 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s5.$ternary$src/digitdisplay.v:47$556:
      Old ports: A={ \sdisplay.s5.pixstream_botl [3:2] \sdisplay.s5.pixstream_botl [3] \sdisplay.s5.pixstream_botl [3] }, B={ $auto$opt_expr.cc:205:group_cell_inputs$8141 [2] 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8141 [1:0] }, Y=\sdisplay.__pixstream5 [3:0]
      New ports: A={ \sdisplay.s5.pixstream_botl [2] \sdisplay.s5.pixstream_botl [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8435 }, Y={ \sdisplay.__pixstream5 [2] \sdisplay.__pixstream5 [0] }
      New connections: { \sdisplay.__pixstream5 [3] \sdisplay.__pixstream5 [1] } = { \sdisplay.__pixstream5 [0] \sdisplay.__pixstream5 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s6.$ternary$src/digitdisplay.v:47$556:
      Old ports: A={ \sdisplay.s6.pixstream_botl [3:2] \sdisplay.s6.pixstream_botl [3] \sdisplay.s6.pixstream_botl [3] }, B={ $auto$opt_expr.cc:205:group_cell_inputs$8117 [2] 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8117 [1:0] }, Y=\sdisplay.__pixstream6 [3:0]
      New ports: A={ \sdisplay.s6.pixstream_botl [2] \sdisplay.s6.pixstream_botl [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8433 }, Y={ \sdisplay.__pixstream6 [2] \sdisplay.__pixstream6 [0] }
      New connections: { \sdisplay.__pixstream6 [3] \sdisplay.__pixstream6 [1] } = { \sdisplay.__pixstream6 [0] \sdisplay.__pixstream6 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s7.$ternary$src/digitdisplay.v:47$556:
      Old ports: A={ \sdisplay.s7.pixstream_botl [3:2] \sdisplay.s7.pixstream_botl [3] \sdisplay.s7.pixstream_botl [3] }, B={ $auto$opt_expr.cc:205:group_cell_inputs$8093 [2] 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8093 [1:0] }, Y=\sdisplay.__pixstream7 [3:0]
      New ports: A={ \sdisplay.s7.pixstream_botl [2] \sdisplay.s7.pixstream_botl [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8431 }, Y={ \sdisplay.__pixstream7 [2] \sdisplay.__pixstream7 [0] }
      New connections: { \sdisplay.__pixstream7 [3] \sdisplay.__pixstream7 [1] } = { \sdisplay.__pixstream7 [0] \sdisplay.__pixstream7 [0] }
    Consolidated identical input bits for $mux cell $flatten\sdisplay.\s8.$ternary$src/digitdisplay.v:47$556:
      Old ports: A={ \sdisplay.s8.pixstream_botl [3:2] \sdisplay.s8.pixstream_botl [3] \sdisplay.s8.pixstream_botl [3] }, B={ $auto$opt_expr.cc:205:group_cell_inputs$8069 [2] 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8069 [1:0] }, Y=\sdisplay.__pixstream8 [3:0]
      New ports: A={ \sdisplay.s8.pixstream_botl [2] \sdisplay.s8.pixstream_botl [3] }, B={ 1'1 $auto$opt_expr.cc:205:group_cell_inputs$8429 }, Y={ \sdisplay.__pixstream8 [2] \sdisplay.__pixstream8 [0] }
      New connections: { \sdisplay.__pixstream8 [3] \sdisplay.__pixstream8 [1] } = { \sdisplay.__pixstream8 [0] \sdisplay.__pixstream8 [0] }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\sdisplay.$ternary$src/scoredisplay.v:96$586:
      Old ports: A=4'0000, B=\sdisplay.__pixstream1 [3:0], Y=\sdisplay.pixstream1 [3:0]
      New ports: A=2'00, B={ \sdisplay.__pixstream1 [2] \sdisplay.__pixstream1 [0] }, Y={ \sdisplay.pixstream1 [2] \sdisplay.pixstream1 [0] }
      New connections: { \sdisplay.pixstream1 [3] \sdisplay.pixstream1 [1] } = { \sdisplay.pixstream1 [0] \sdisplay.pixstream1 [0] }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\sdisplay.$ternary$src/scoredisplay.v:104$598:
      Old ports: A=\sdisplay.pixstream1 [3:0], B={ \sdisplay.__pixstream2 [0] \sdisplay.__pixstream2 [2] \sdisplay.__pixstream2 [0] \sdisplay.__pixstream2 [0] }, Y=\sdisplay.pixstream2 [3:0]
      New ports: A={ \sdisplay.pixstream1 [2] \sdisplay.pixstream1 [0] }, B={ \sdisplay.__pixstream2 [2] \sdisplay.__pixstream2 [0] }, Y={ \sdisplay.pixstream2 [2] \sdisplay.pixstream2 [0] }
      New connections: { \sdisplay.pixstream2 [3] \sdisplay.pixstream2 [1] } = { \sdisplay.pixstream2 [0] \sdisplay.pixstream2 [0] }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\sdisplay.$ternary$src/scoredisplay.v:112$614:
      Old ports: A=\sdisplay.pixstream2 [3:0], B={ \sdisplay.__pixstream3 [0] \sdisplay.__pixstream3 [2] \sdisplay.__pixstream3 [0] \sdisplay.__pixstream3 [0] }, Y=\sdisplay.pixstream3 [3:0]
      New ports: A={ \sdisplay.pixstream2 [2] \sdisplay.pixstream2 [0] }, B={ \sdisplay.__pixstream3 [2] \sdisplay.__pixstream3 [0] }, Y={ \sdisplay.pixstream3 [2] \sdisplay.pixstream3 [0] }
      New connections: { \sdisplay.pixstream3 [3] \sdisplay.pixstream3 [1] } = { \sdisplay.pixstream3 [0] \sdisplay.pixstream3 [0] }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\sdisplay.$ternary$src/scoredisplay.v:119$626:
      Old ports: A=\sdisplay.pixstream3 [3:0], B={ \sdisplay.__pixstream4 [0] \sdisplay.__pixstream4 [2] \sdisplay.__pixstream4 [0] \sdisplay.__pixstream4 [0] }, Y=\sdisplay.pixstream4 [3:0]
      New ports: A={ \sdisplay.pixstream3 [2] \sdisplay.pixstream3 [0] }, B={ \sdisplay.__pixstream4 [2] \sdisplay.__pixstream4 [0] }, Y={ \sdisplay.pixstream4 [2] \sdisplay.pixstream4 [0] }
      New connections: { \sdisplay.pixstream4 [3] \sdisplay.pixstream4 [1] } = { \sdisplay.pixstream4 [0] \sdisplay.pixstream4 [0] }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\sdisplay.$ternary$src/scoredisplay.v:126$638:
      Old ports: A=\sdisplay.pixstream4 [3:0], B={ \sdisplay.__pixstream5 [0] \sdisplay.__pixstream5 [2] \sdisplay.__pixstream5 [0] \sdisplay.__pixstream5 [0] }, Y=\sdisplay.pixstream5 [3:0]
      New ports: A={ \sdisplay.pixstream4 [2] \sdisplay.pixstream4 [0] }, B={ \sdisplay.__pixstream5 [2] \sdisplay.__pixstream5 [0] }, Y={ \sdisplay.pixstream5 [2] \sdisplay.pixstream5 [0] }
      New connections: { \sdisplay.pixstream5 [3] \sdisplay.pixstream5 [1] } = { \sdisplay.pixstream5 [0] \sdisplay.pixstream5 [0] }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\sdisplay.$ternary$src/scoredisplay.v:133$650:
      Old ports: A=\sdisplay.pixstream5 [3:0], B={ \sdisplay.__pixstream6 [0] \sdisplay.__pixstream6 [2] \sdisplay.__pixstream6 [0] \sdisplay.__pixstream6 [0] }, Y=\sdisplay.pixstream6 [3:0]
      New ports: A={ \sdisplay.pixstream5 [2] \sdisplay.pixstream5 [0] }, B={ \sdisplay.__pixstream6 [2] \sdisplay.__pixstream6 [0] }, Y={ \sdisplay.pixstream6 [2] \sdisplay.pixstream6 [0] }
      New connections: { \sdisplay.pixstream6 [3] \sdisplay.pixstream6 [1] } = { \sdisplay.pixstream6 [0] \sdisplay.pixstream6 [0] }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\sdisplay.$ternary$src/scoredisplay.v:140$662:
      Old ports: A=\sdisplay.pixstream6 [3:0], B={ \sdisplay.__pixstream7 [0] \sdisplay.__pixstream7 [2] \sdisplay.__pixstream7 [0] \sdisplay.__pixstream7 [0] }, Y=\sdisplay.pixstream7 [3:0]
      New ports: A={ \sdisplay.pixstream6 [2] \sdisplay.pixstream6 [0] }, B={ \sdisplay.__pixstream7 [2] \sdisplay.__pixstream7 [0] }, Y={ \sdisplay.pixstream7 [2] \sdisplay.pixstream7 [0] }
      New connections: { \sdisplay.pixstream7 [3] \sdisplay.pixstream7 [1] } = { \sdisplay.pixstream7 [0] \sdisplay.pixstream7 [0] }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\sdisplay.$ternary$src/scoredisplay.v:148$681:
      Old ports: A=5'11111, B={ 1'0 \sdisplay.pixstream7 [3:0] }, Y={ $flatten\sdisplay.$ternary$src/scoredisplay.v:148$681_Y [11] $flatten\sdisplay.$ternary$src/scoredisplay.v:148$681_Y [3:0] }
      New ports: A=3'111, B={ 1'0 \sdisplay.pixstream7 [2] \sdisplay.pixstream7 [0] }, Y={ $flatten\sdisplay.$ternary$src/scoredisplay.v:148$681_Y [11] $flatten\sdisplay.$ternary$src/scoredisplay.v:148$681_Y [2] $flatten\sdisplay.$ternary$src/scoredisplay.v:148$681_Y [0] }
      New connections: { $flatten\sdisplay.$ternary$src/scoredisplay.v:148$681_Y [3] $flatten\sdisplay.$ternary$src/scoredisplay.v:148$681_Y [1] } = { $flatten\sdisplay.$ternary$src/scoredisplay.v:148$681_Y [0] $flatten\sdisplay.$ternary$src/scoredisplay.v:148$681_Y [0] }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $flatten\sdisplay.$ternary$src/scoredisplay.v:148$682:
      Old ports: A={ $flatten\sdisplay.$ternary$src/scoredisplay.v:148$681_Y [11] $flatten\sdisplay.$ternary$src/scoredisplay.v:148$681_Y [3:0] }, B={ 1'0 \sdisplay.__pixstream8 [0] \sdisplay.__pixstream8 [2] \sdisplay.__pixstream8 [0] \sdisplay.__pixstream8 [0] }, Y=\score_screen [4:0]
      New ports: A={ $flatten\sdisplay.$ternary$src/scoredisplay.v:148$681_Y [11] $flatten\sdisplay.$ternary$src/scoredisplay.v:148$681_Y [2] $flatten\sdisplay.$ternary$src/scoredisplay.v:148$681_Y [0] }, B={ 1'0 \sdisplay.__pixstream8 [2] \sdisplay.__pixstream8 [0] }, Y={ \score_screen [4] \score_screen [2] \score_screen [0] }
      New connections: { \score_screen [3] \score_screen [1] } = { \score_screen [0] \score_screen [0] }
  Optimizing cells in module \top.
    Consolidated identical input bits for $mux cell $ternary$src/top.v:131$1094:
      Old ports: A=6'010011, B={ \score_screen [4] \score_screen [4:0] }, Y={ $ternary$src/top.v:131$1094_Y [11] $ternary$src/top.v:131$1094_Y [9] $ternary$src/top.v:131$1094_Y [3:0] }
      New ports: A=5'01001, B={ \score_screen [4] \score_screen [4] \score_screen [0] \score_screen [2] \score_screen [0] }, Y={ $ternary$src/top.v:131$1094_Y [11] $ternary$src/top.v:131$1094_Y [9] $ternary$src/top.v:131$1094_Y [3:2] $ternary$src/top.v:131$1094_Y [0] }
      New connections: $ternary$src/top.v:131$1094_Y [1] = $ternary$src/top.v:131$1094_Y [0]
  Optimizing cells in module \top.
Performed a total of 18 changes.

24.29.47. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

24.29.48. Executing OPT_DFF pass (perform DFF optimizations).

24.29.49. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 8 unused wires.
<suppressed ~1 debug messages>

24.29.50. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

24.29.51. Rerunning OPT passes. (Maybe there is more to do..)

24.29.52. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \top..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Removed 0 multiplexer ports.
<suppressed ~747 debug messages>

24.29.53. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \top.
Performed a total of 0 changes.

24.29.54. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

24.29.55. Executing OPT_DFF pass (perform DFF optimizations).

24.29.56. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

24.29.57. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

24.29.58. Finished OPT passes. (There is nothing left to do.)

24.30. Executing ICE40_WRAPCARRY pass (wrap carries).

24.31. Executing TECHMAP pass (map to technology primitives).

24.31.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/techmap.v
Parsing Verilog input from `/usr/bin/../share/yosys/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

24.31.2. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/arith_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ice40_alu'.
Successfully finished Verilog frontend.

24.31.3. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $reduce_and.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $dff.
Using extmapper simplemap for cells of type $dffe.
Using extmapper simplemap for cells of type $sdff.
Using template $paramod$32a7b7b86c07519b7537abc18e96f0331f97914d\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $eq.
Using extmapper simplemap for cells of type $reduce_bool.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $not.
Using template $paramod$32efbfac1c4dc57230cf86180788fdfd12e3b511\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $sdffce.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $lut.
Using extmapper maccmap for cells of type $macc.
  add 5'10011 * \tdisplay.state (5x4 bits, unsigned)
Using extmapper simplemap for cells of type $logic_not.
Using extmapper simplemap for cells of type $sdffe.
Using template $paramod$672a140277c71df8314410f22acc08d55222c3c7\_80_ice40_alu for cells of type $alu.
Using template $paramod$constmap:59d930a2422782b39b85cd49134a384b3d87fce0$paramod$524f4122ef6340492631f8c3d6d495706ea733a6\_90_shift_shiftx for cells of type $shiftx.
Using template $paramod$b18e16801adf491a64caa0542270798e5d4ac6b6\_80_ice40_alu for cells of type $alu.
Using template $paramod$3ac6e4268d0279df14823f25676acf685165517e\_80_ice40_alu for cells of type $alu.
Using template $paramod$740b056ede97228d3eae64ea2fdc81f0a33e0fe7\_80_ice40_alu for cells of type $alu.
Using template $paramod$adbaf76fa5a3091a329503792521395f8ff4d1a4\_90_alu for cells of type $alu.
Using template $paramod$83dd457849c736323edf2edb15923eb27f99c683\_80_ice40_alu for cells of type $alu.
Using template $paramod$1a3a0c35c4a4896fbfd612699525c057298e72d2\_80_ice40_alu for cells of type $alu.
Using template $paramod$79fc7abbb3333dbd5736999d565fd903198fb1eb\_80_ice40_alu for cells of type $alu.
Using template $paramod$d1615bf4e5e328245ffd1550e5fe105901cda77b\_90_alu for cells of type $alu.
Using template $paramod$03eba0cdd46566f6651a3011e0b5671fa6b5e494\_80_ice40_alu for cells of type $alu.
Using template $paramod$f85408ed1aa3d09e465edae8a7bf590332ae9f7b\_80_ice40_alu for cells of type $alu.
Using template $paramod$7af24cf7f572852703f08ef7a936c59efa2c57af\_80_ice40_alu for cells of type $alu.
Using template $paramod$6b90a16b6f3b57b9c9d958838204f952a01dc262\_80_ice40_alu for cells of type $alu.
Using template $paramod$18205a5da979f93ffab44671dcc4a48cf14e25e2\_80_ice40_alu for cells of type $alu.
Using template $paramod$35bc5090930aec50e94a946d160c28c8e186e2e9\_80_ice40_alu for cells of type $alu.
Using template $paramod$8742280fdebca84e1c87f2a86ed84f62d558f4cc\_80_ice40_alu for cells of type $alu.
Using template $paramod$332fab4e157f868977379756d21fa99887c3c6c4\_80_ice40_alu for cells of type $alu.
Using template $paramod$d9d6055bedde760961c6356c4015e2f0000ae9c2\_80_ice40_alu for cells of type $alu.
Using template $paramod$b52bd7d9c9f7528eea96dbf9fa48ed18ac637bc8\_80_ice40_alu for cells of type $alu.
Using template $paramod$420fbc8134b4c458452de534da94701c18f4eecd\_80_ice40_alu for cells of type $alu.
Using template $paramod$00298f3f8094950cb9a5ff2fda48d0d8bde8806c\_80_ice40_alu for cells of type $alu.
Using template $paramod$76faf6aa397909704a3ca45dba523dfa58393e7e\_80_ice40_alu for cells of type $alu.
Using template $paramod$a40b3a69ab2154dca9743e30e1e84efb03b892b4\_80_ice40_alu for cells of type $alu.
Using template $paramod$df9553132937e7736c5a38f2f1f29abeed1637af\_80_ice40_alu for cells of type $alu.
Using template $paramod$fc972a7a46956c1788f3cb5257b53c8f1df2d0cc\_90_alu for cells of type $alu.
Using template $paramod$e04283ca12514baf3d204c6994bec8f178dd89f8\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $logic_and.
Using template $paramod$49641a5ace7a8dbedd31c417f5a1b54fcecf6c7d\_80_ice40_alu for cells of type $alu.
Using template $paramod$d2fa05d38998afabc6d4f34471305d0af4b8b2df\_80_ice40_alu for cells of type $alu.
Using template $paramod$3ef7d3dd227da7627a99c5e5a6a4deb817573e39\_80_ice40_alu for cells of type $alu.
Using template $paramod$dc04b7d98e503a7bab16fce2df70e6e2c5ca34d6\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $xor.
Using template $paramod$a04dd9d4d8b430140c4ff94b50470fb380fda2a0\_80_ice40_alu for cells of type $alu.
Using template $paramod$b9513f2555ba02118b069422fea717af39120cf7\_80_ice40_alu for cells of type $alu.
Using template $paramod$5a51f938fa54bf7015d956f06feadaa94e2be5b1\_80_ice40_alu for cells of type $alu.
Using template $paramod$484d51534650924b7ed4c69e46eed3a56904771f\_80_ice40_alu for cells of type $alu.
Using template $paramod$04f121e3c8858ac36578330193fd248b9a31e99c\_80_ice40_alu for cells of type $alu.
Using template $paramod$78e969f2586efcf3a5b0b0440bcca0db83d5cca2\_80_ice40_alu for cells of type $alu.
Using template $paramod$38e515139f170f15b7cce527e7a56ef53d952a24\_80_ice40_alu for cells of type $alu.
Using template $paramod$38e8498ccdc425801fe5312e427e3cf0d9089c58\_80_ice40_alu for cells of type $alu.
Using template $paramod$7e708ae28ab761f11d0fb59d3ffc72f6a4baf5d9\_90_alu for cells of type $alu.
Using template $paramod$c4905825bb8ecc38b98eb4167e8b007447af7884\_80_ice40_alu for cells of type $alu.
Using template $paramod$e82bc780abe45b949d821aa3d0d92433ac3b9e09\_80_ice40_alu for cells of type $alu.
Using template $paramod$68eb2ee261b49d479fb9d9ec0659e1d20891082b\_80_ice40_alu for cells of type $alu.
Using template $paramod$dad13a281fa6a9ffd6dd427a87dc9a952e80e9ea\_80_ice40_alu for cells of type $alu.
Using template $paramod$5ccf584370207a3ccc3032757a8e590623d4de56\_80_ice40_alu for cells of type $alu.
Using template $paramod$d597a1d02e4b78ac244cbe0a6bc64f098a6f19e7\_80_ice40_alu for cells of type $alu.
Using template $paramod$103b4016182df467cceab67bcf3e18e6361ec0fd\_80_ice40_alu for cells of type $alu.
Using template $paramod$9970e6a829a899c1fae39c88305c3c80d98a6bfd\_80_ice40_alu for cells of type $alu.
Using template $paramod$d0e4c797aa680bb54c964a262954ce9f5bfee2c5\_80_ice40_alu for cells of type $alu.
Using template $paramod$5bb6c3f3e4a5303115f41a182fad517280ea0b25\_80_ice40_alu for cells of type $alu.
Using template $paramod$a1bc51c02ce12ac21eb18988e83292af48ed7d72\_80_ice40_alu for cells of type $alu.
Using template $paramod$74a36ce84d492d3c437595b2f171af2f65358d61\_80_ice40_alu for cells of type $alu.
Using template $paramod$ea139abf5d9f33c5a8f110be2ae0a1d01adc5fd6\_80_ice40_alu for cells of type $alu.
Using template $paramod$9c32b45917accb56be6667e7eba7742d064d7fbb\_80_ice40_alu for cells of type $alu.
Using template $paramod$2d591d76303cd5065d50f216288bb81e81f2927d\_80_ice40_alu for cells of type $alu.
Using template $paramod$78648aff6d035ceca1e51be5292d8e9748cdc2be\_80_ice40_alu for cells of type $alu.
Using template $paramod$dfca81329cbbac01700318224209a5f2318c7128\_80_ice40_alu for cells of type $alu.
Using template $paramod$78464f9f65d57061f7490f3fe5dd257e4a61e2b7\_80_ice40_alu for cells of type $alu.
Using template $paramod$93b49458bab1c00eb32aff458c583f46ff61e60f\_80_ice40_alu for cells of type $alu.
Using template $paramod$c6885379b74fbbf6906b35106e386e521d86cbb2\_80_ice40_alu for cells of type $alu.
Using template $paramod$cc48387a3f2cae79a81035f3d5a9b4758cb77854\_80_ice40_alu for cells of type $alu.
Using template $paramod$aa43f2dbffadf36a7e9a5a6a61a7417f2989191d\_80_ice40_alu for cells of type $alu.
Using template $paramod$6e0a31ebf2a4e7bcebad5866b2b441901654250d\_90_pmux for cells of type $pmux.
Using template $paramod$3e96e356bb68fcbd4f9c12f6d97ec8513d1af8c6\_80_ice40_alu for cells of type $alu.
Using template $paramod$d902cfcd8f5bceb817669b134f968d68db216af4\_80_ice40_alu for cells of type $alu.
Using template $paramod$dbcdc7e8aa1a4080cea2deda6fdc8772064f4d90\_80_ice40_alu for cells of type $alu.
Using template $paramod$754650b284649a026620fc6856e5b6886cbfe794\_80_ice40_alu for cells of type $alu.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000010 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=32'00000000000000000000000000000001 for cells of type $lcu.
Using template $paramod\_90_fa\WIDTH=32'00000000000000000000000000001001 for cells of type $fa.
No more expansions possible.
<suppressed ~7256 debug messages>

24.32. Executing OPT pass (performing simple optimizations).

24.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~6220 debug messages>

24.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~7362 debug messages>
Removed a total of 2454 cells.

24.32.3. Executing OPT_DFF pass (perform DFF optimizations).

24.32.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 3286 unused cells and 6528 unused wires.
<suppressed ~3287 debug messages>

24.32.5. Finished fast OPT passes.

24.33. Executing ICE40_OPT pass (performing simple optimizations).

24.33.1. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6141.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6141.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6156.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6156.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6167.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6156.BB [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6176.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6176.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6187.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6176.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6198.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6198.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6203.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6198.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6208.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6208.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6219.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6208.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6230.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6198.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6235.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6198.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6240.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6240.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6251.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6240.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6262.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6198.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6267.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6198.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6272.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6272.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6283.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6272.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6294.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6198.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6299.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6198.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6304.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6304.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6315.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6304.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6326.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6198.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6331.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6198.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6336.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6336.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6347.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6336.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6358.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6198.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6363.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6198.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6368.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6368.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6379.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6368.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6390.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6198.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6395.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6198.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6400.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6400.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6411.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6411.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6422.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6411.BB [3]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6433.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6400.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6444.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6411.BB [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6455.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6198.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6460.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6411.BB [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6465.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6411.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6470.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6198.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6475.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6411.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6480.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6198.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6491.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6491.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6502.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6502.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6513.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6513.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6524.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6524.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6535.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6535.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6546.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6546.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6557.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6557.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6568.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6568.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6579.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6230.BB [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6590.slice[0].carry: CO=\core.hreadwire [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6595.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6230.BB [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6606.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6208.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6617.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6230.BB [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6628.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6230.BB [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6639.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6230.BB [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6650.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6156.BB [3]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6661.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6208.BB [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6672.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6672.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6677.slice[0].carry: CO=1'1
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6677.slice[10].carry: CO=$auto$alumacc.cc:485:replace_alu$6677.C [10]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6677.slice[11].carry: CO=$auto$alumacc.cc:485:replace_alu$6677.C [11]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6677.slice[12].carry: CO=$auto$alumacc.cc:485:replace_alu$6677.C [12]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6677.slice[13].carry: CO=$auto$alumacc.cc:485:replace_alu$6677.C [13]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6677.slice[14].carry: CO=$auto$alumacc.cc:485:replace_alu$6677.C [14]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6677.slice[9].carry: CO=$auto$alumacc.cc:485:replace_alu$6677.C [9]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6682.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6198.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6691.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6198.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6700.slice[0].carry: CO=\core.hreadwire [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6713.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6198.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6722.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6198.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6731.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6198.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6740.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6198.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6749.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6198.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6758.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6198.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6767.slice[0].carry: CO=\core.hreadwire [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6780.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6198.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6789.slice[0].carry: CO=\core.hreadwire [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6794.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6156.BB [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6805.slice[0].carry: CO=\core.hreadwire [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6810.slice[0].carry: CO=\core.hreadwire [4]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6823.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6156.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6832.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6156.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6841.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6841.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6846.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6846.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6851.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6846.BB [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6856.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6846.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6866.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6846.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6871.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6846.BB [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6876.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6846.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6881.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6841.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6886.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6846.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6891.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6846.BB [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6896.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6846.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6906.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6846.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6911.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6846.BB [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6916.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6846.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6921.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6841.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6926.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6846.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6931.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6846.BB [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6936.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6846.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6946.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6946.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6946.slice[3].carry: CO=$auto$alumacc.cc:485:replace_alu$6946.C [3]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6951.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6951.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6956.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6956.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6961.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6961.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6974.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6961.BB [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6987.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6961.BB [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7000.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6198.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7011.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6156.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7022.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6156.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7040.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6230.BB [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7045.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6156.BB [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7050.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6156.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7059.slice[0].carry: CO=\game_manager.h.pposition [6]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7064.slice[0].carry: CO=\game_manager.h.pposition [3]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7077.slice[0].carry: CO=\game_manager.h.pposition [4]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7090.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$7035.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7103.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$7035.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7116.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$7035.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7129.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$7035.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7142.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$7035.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7155.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$7035.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7168.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$7035.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7181.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$7035.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7194.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$7035.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7207.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$7035.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7220.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$7035.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7233.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$7035.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7246.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$7035.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7259.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$7035.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7272.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$7035.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7285.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$7035.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7298.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$7035.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7311.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$7035.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7324.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$7035.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7337.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$7035.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7350.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$7035.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7359.slice[0].carry: CO=\core.hreadwire [5]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7364.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6198.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7375.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$7035.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7384.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6198.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7393.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$7393.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7404.slice[0].carry: CO=\core.hscan_pos [4]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7409.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$7393.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7420.slice[0].carry: CO=\core.hscan_pos [7]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7425.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$7393.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7434.slice[0].carry: CO=\core.hscan_pos [4]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7447.slice[0].carry: CO=\core.hscan_pos [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7450.slice[0].carry: CO=\core.vscan_pos [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7453.slice[0].carry: CO=\core.vreadwire [3]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7459.slice[0].carry: CO=\core.hreadwire [3]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7465.slice[0].carry: CO=\memory.resetperiod_state [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7468.slice[0].carry: CO=\memory.resetperiod_state [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7471.slice[0].carry: CO=\memory.resetperiod_state [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7474.slice[0].carry: CO=\memory.cooldown [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7477.slice[0].carry: CO=\memory.streak_cooldown [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7480.slice[0].carry: CO=\memory.P1blk_h [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7480.slice[5].carry: CO=$auto$alumacc.cc:485:replace_alu$7480.C [5]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7483.slice[0].carry: CO=\memory.P2blk_h [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7483.slice[5].carry: CO=$auto$alumacc.cc:485:replace_alu$7483.C [5]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7486.slice[0].carry: CO=\memory.P3blk_h [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7486.slice[5].carry: CO=$auto$alumacc.cc:485:replace_alu$7486.C [5]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7489.slice[0].carry: CO=\memory.P4blk_h [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7489.slice[5].carry: CO=$auto$alumacc.cc:485:replace_alu$7489.C [5]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7492.slice[0].carry: CO=\memory.perq [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7498.slice[0].carry: CO=\sdisplay.values[7] [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7501.slice[0].carry: CO=\sdisplay.values[6] [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7504.slice[0].carry: CO=\sdisplay.values[5] [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7507.slice[0].carry: CO=\sdisplay.values[4] [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7510.slice[0].carry: CO=\sdisplay.values[3] [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7513.slice[0].carry: CO=\sdisplay.values[2] [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7516.slice[0].carry: CO=\sdisplay.values[1] [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7519.slice[0].carry: CO=\sdisplay.values[0] [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7522.slice[0].carry: CO=\core.hreadwire [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7525.slice[0].carry: CO=\core.vreadwire [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7528.slice[0].carry: CO=\core.vreadwire [3]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7531.slice[0].carry: CO=\core.vreadwire [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7534.slice[0].carry: CO=\core.vreadwire [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7537.slice[0].carry: CO=\core.vreadwire [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7543.slice[0].carry: CO=\core.vreadwire [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7546.slice[0].carry: CO=\sdisplay.dumpvar [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7549.slice[0].carry: CO=\core.vreadwire [2]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7552.slice[0].carry: CO=\t.counter [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7555.slice[0].carry: CO=\tdisplay.state [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7558.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6198.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7569.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$6198.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7572.slice[0].carry: CO=$auto$alumacc.cc:485:replace_alu$7572.BB [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7578.slice[0].carry: CO=\vcell.tetron_h [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7581.slice[0].carry: CO=\vcell.tetron_v [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7584.slice[0].carry: CO=\vcell.tetron_rotation [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7611.slice[0].carry: CO=\vcell.dropcool [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$7614.slice[0].carry: CO=\vcell.tetron_v [0]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$maccmap.cc:240:synth$10062.slice[0].carry: CO=1'0
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$maccmap.cc:240:synth$10062.slice[8].carry: CO=1'0

24.33.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~87 debug messages>

24.33.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~339 debug messages>
Removed a total of 113 cells.

24.33.4. Executing OPT_DFF pass (perform DFF optimizations).

24.33.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 51 unused cells and 9 unused wires.
<suppressed ~52 debug messages>

24.33.6. Rerunning OPT passes. (Removed registers in this run.)

24.33.7. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$alumacc.cc:485:replace_alu$6677.slice[1].carry: CO=$auto$alumacc.cc:485:replace_alu$6677.BB [1]
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$maccmap.cc:240:synth$10062.slice[1].carry: CO=1'0

24.33.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

24.33.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

24.33.10. Executing OPT_DFF pass (perform DFF optimizations).

24.33.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 1 unused cells and 0 unused wires.
<suppressed ~1 debug messages>

24.33.12. Rerunning OPT passes. (Removed registers in this run.)

24.33.13. Running ICE40 specific optimizations.
Optimized $__ICE40_CARRY_WRAPPER cell back to logic (without SB_CARRY) top.$auto$maccmap.cc:240:synth$10062.slice[2].carry: CO=1'0

24.33.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

24.33.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

24.33.16. Executing OPT_DFF pass (perform DFF optimizations).

24.33.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

24.33.18. Rerunning OPT passes. (Removed registers in this run.)

24.33.19. Running ICE40 specific optimizations.

24.33.20. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

24.33.21. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

24.33.22. Executing OPT_DFF pass (perform DFF optimizations).

24.33.23. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

24.33.24. Finished OPT passes. (There is nothing left to do.)

24.34. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

24.35. Executing TECHMAP pass (map to technology primitives).

24.35.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

24.35.2. Continuing TECHMAP pass.
Using template \$_SDFFCE_PP0P_ for cells of type $_SDFFCE_PP0P_.
Using template \$_DFF_P_ for cells of type $_DFF_P_.
Using template \$_DFFE_PP_ for cells of type $_DFFE_PP_.
Using template \$_SDFF_PP0_ for cells of type $_SDFF_PP0_.
Using template \$_SDFFCE_PP1P_ for cells of type $_SDFFCE_PP1P_.
Using template \$_SDFF_PP1_ for cells of type $_SDFF_PP1_.
No more expansions possible.
<suppressed ~1251 debug messages>

24.36. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

24.37. Executing SIMPLEMAP pass (map simple cells to gate primitives).
Mapping top.$auto$alumacc.cc:485:replace_alu$6262.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$6767.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$7447.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$7450.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$7453.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$7459.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$7465.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$7468.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$7474.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$7477.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$7480.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$7480.slice[5].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$7483.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$7483.slice[5].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$7486.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$7486.slice[5].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$7489.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$7489.slice[5].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$7492.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$7498.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$7501.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$7504.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$7507.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$7510.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$7513.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$7516.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$7519.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$7525.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$7534.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$7546.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$7552.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$7555.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$7578.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$7581.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$7584.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$7611.slice[0].carry ($lut).
Mapping top.$auto$alumacc.cc:485:replace_alu$7614.slice[0].carry ($lut).
Mapping top.$auto$maccmap.cc:240:synth$10062.slice[0].carry ($lut).
Mapping top.$auto$maccmap.cc:240:synth$10062.slice[1].carry ($lut).
Mapping top.$auto$maccmap.cc:240:synth$10062.slice[2].carry ($lut).
Mapping top.$auto$maccmap.cc:240:synth$10062.slice[8].carry ($lut).

24.38. Executing ICE40_OPT pass (performing simple optimizations).

24.38.1. Running ICE40 specific optimizations.

24.38.2. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~788 debug messages>

24.38.3. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
<suppressed ~5613 debug messages>
Removed a total of 1871 cells.

24.38.4. Executing OPT_DFF pass (perform DFF optimizations).

24.38.5. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..
Removed 0 unused cells and 9102 unused wires.
<suppressed ~1 debug messages>

24.38.6. Rerunning OPT passes. (Removed registers in this run.)

24.38.7. Running ICE40 specific optimizations.

24.38.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.
<suppressed ~1 debug messages>

24.38.9. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

24.38.10. Executing OPT_DFF pass (perform DFF optimizations).

24.38.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

24.38.12. Rerunning OPT passes. (Removed registers in this run.)

24.38.13. Running ICE40 specific optimizations.

24.38.14. Executing OPT_EXPR pass (perform const folding).
Optimizing module top.

24.38.15. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\top'.
Removed a total of 0 cells.

24.38.16. Executing OPT_DFF pass (perform DFF optimizations).

24.38.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \top..

24.38.18. Finished OPT passes. (There is nothing left to do.)

24.39. Executing TECHMAP pass (map to technology primitives).

24.39.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/latches_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

24.39.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

24.40. Executing ABC pass (technology mapping using ABC).

24.40.1. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Extracted 8667 gates and 10290 wires to a netlist network with 1621 inputs and 1393 outputs.

24.40.1.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lut <abc-temp-dir>/lutdefs.txt 
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + strash 
ABC: + dch -f 
ABC: + if 
ABC: + mfs2 
ABC: + lutpack -S 1 
ABC: + dress 
ABC: Total number of equiv classes                =    2626.
ABC: Participating nodes from both networks       =    5441.
ABC: Participating nodes from the first network   =    2638. (  60.85 % of nodes)
ABC: Participating nodes from the second network  =    2803. (  64.66 % of nodes)
ABC: Node pairs (any polarity)                    =    2638. (  60.85 % of names can be moved)
ABC: Node pairs (same polarity)                   =    2014. (  46.46 % of names can be moved)
ABC: Total runtime =     0.13 sec
ABC: + write_blif <abc-temp-dir>/output.blif 

24.40.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:     4332
ABC RESULTS:        internal signals:     7276
ABC RESULTS:           input signals:     1621
ABC RESULTS:          output signals:     1393
Removing temp directory.

24.41. Executing ICE40_WRAPCARRY pass (wrap carries).

24.42. Executing TECHMAP pass (map to technology primitives).

24.42.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

24.42.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~22 debug messages>
Removed 969 unused cells and 7155 unused wires.

24.43. Executing OPT_LUT pass (optimize LUTs).
Discovering LUTs.
Number of LUTs:     4679
  1-LUT              253
  2-LUT              624
  3-LUT             1813
  4-LUT             1989
  with \SB_CARRY    (#0)  339
  with \SB_CARRY    (#1)  375

Eliminating LUTs.
Number of LUTs:     4679
  1-LUT              253
  2-LUT              624
  3-LUT             1813
  4-LUT             1989
  with \SB_CARRY    (#0)  339
  with \SB_CARRY    (#1)  375

Combining LUTs.
Number of LUTs:     4617
  1-LUT              252
  2-LUT              551
  3-LUT             1776
  4-LUT             2038
  with \SB_CARRY    (#0)  339
  with \SB_CARRY    (#1)  375

Eliminated 0 LUTs.
Combined 62 LUTs.
<suppressed ~27944 debug messages>

24.44. Executing TECHMAP pass (map to technology primitives).

24.44.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/usr/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

24.44.2. Continuing TECHMAP pass.
Using template $paramod$fd904e9e35cfd343a9df248824bd3f1408724879\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0100 for cells of type $lut.
Using template $paramod$6e238df02989b317f10820a22773676e71120644\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1000 for cells of type $lut.
Using template $paramod$272652f6c6fbe9a75eff76e45cc7e2788835518b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10001111 for cells of type $lut.
Using template $paramod$6d6beead1425af15cf78b27fd9b11b41b5d4bce8\$lut for cells of type $lut.
Using template $paramod$608f40069c27841a5b3bdf03643a34bdc8974072\$lut for cells of type $lut.
Using template $paramod$bba54c1ef87367812b4c15f4aed5ac70773df775\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000001 for cells of type $lut.
Using template $paramod$38f9bf4dd2329347b8471f0a98443dd323386889\$lut for cells of type $lut.
Using template $paramod$8b24407096beec47292ddeb1567a058197a320b9\$lut for cells of type $lut.
Using template $paramod$e9c77024ca501b890c641f9c0b10e27242db8730\$lut for cells of type $lut.
Using template $paramod$ab8bb87959c5d7cfa27886cee1355b38e054a61a\$lut for cells of type $lut.
Using template $paramod$703a13a751e631ef123f38f7d2125aeabec0f94c\$lut for cells of type $lut.
Using template $paramod$e5e9da8fed769f971686eed8c5eea50e61f73aaa\$lut for cells of type $lut.
Using template $paramod$658b9ed803f0d3d335616d3858b53e0a2522f1e8\$lut for cells of type $lut.
Using template $paramod$53ce561f80f32d4298a3beadc88b6c5c78293221\$lut for cells of type $lut.
Using template $paramod$571404c0889eaf57f492cb5e37f8acb5df5852f9\$lut for cells of type $lut.
Using template $paramod$6b0849254d6c87461fb93e37cc18f089f61eb912\$lut for cells of type $lut.
Using template $paramod$179512a187da069f3b79ef6612a41e494e7d54b6\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10110100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000001\LUT=2'01 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10101100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11100000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11010000 for cells of type $lut.
Using template $paramod$82b4a585d1edcb5c6e755dc9bd3392228a1c1304\$lut for cells of type $lut.
Using template $paramod$20798777255c214e32de3304ce8faa1fdfa2f474\$lut for cells of type $lut.
Using template $paramod$4b2297966ddb718657b80566604f97685ffc0120\$lut for cells of type $lut.
Using template $paramod$43779580bfffd5d5a9f321249a174febf1dac288\$lut for cells of type $lut.
Using template $paramod$40882341c54dcd36f630f00dd7e46a35652abd36\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01110000 for cells of type $lut.
Using template $paramod$41326ad8644342a66dfb051d050f2b6fbf15015b\$lut for cells of type $lut.
Using template $paramod$baa939b0bd5b3e0c8760492528669bd58f640542\$lut for cells of type $lut.
Using template $paramod$49308c380d4434ff502cc9276068deff427c75f2\$lut for cells of type $lut.
Using template $paramod$2d07c1a6c53c7b878509360922c4fa5ebedc3011\$lut for cells of type $lut.
Using template $paramod$2d8ecce5c907513cebcd38ab5efe0fc26fc03464\$lut for cells of type $lut.
Using template $paramod$7a9d9396461df152f697894fa3b294ad1b285e08\$lut for cells of type $lut.
Using template $paramod$d6d3aaeac1b9aa2c4b652c48e0deb565040dda72\$lut for cells of type $lut.
Using template $paramod$ad3a97108c9f4d10f8acfa309b668b9455d3d733\$lut for cells of type $lut.
Using template $paramod$94ac66a11090dca84889e55fcf03297912a5b7ec\$lut for cells of type $lut.
Using template $paramod$12879138d1e376f344e47ea40be66b776233be75\$lut for cells of type $lut.
Using template $paramod$c1a19a87ccbbb03d43a72335db63f692ddf82cc1\$lut for cells of type $lut.
Using template $paramod$b297295e19b03521716155b85537bbe86d6a9ae6\$lut for cells of type $lut.
Using template $paramod$71d951b20e73043168c1656217d126e617052faa\$lut for cells of type $lut.
Using template $paramod$b4d0f4738a5ce50c7f36c2aa2ecc09cfb874f2b6\$lut for cells of type $lut.
Using template $paramod$332a399730bfc61adea04021a76b1c4e4030f37d\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0111 for cells of type $lut.
Using template $paramod$cde3aa23c1efa60a470cf0f0281347d6ba585afa\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01001111 for cells of type $lut.
Using template $paramod$b431bfd938e35871dd0b7668e1503c7e8b9d491c\$lut for cells of type $lut.
Using template $paramod$5a621b016c894274d07edef48c49b401a15fd796\$lut for cells of type $lut.
Using template $paramod$a670b08a47dd8a34f954c50cd06e9996d77e8467\$lut for cells of type $lut.
Using template $paramod$a2d691ba21e093558f2a36669ee489fbccffbcd3\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00110101 for cells of type $lut.
Using template $paramod$2ea69c779d6c1b79ac5a87b0d1523c67d5628dba\$lut for cells of type $lut.
Using template $paramod$e49f6e3576ef1a6d2f58c54414dbb786af8cc869\$lut for cells of type $lut.
Using template $paramod$04b674496422df8889c01c3744b94097628ccfbc\$lut for cells of type $lut.
Using template $paramod$a50be0e6fa3a01511bb234559cb74fb8bd3e2061\$lut for cells of type $lut.
Using template $paramod$02fbd2dfd8b419c0d6fd5205680ad063cd40eac8\$lut for cells of type $lut.
Using template $paramod$de3d8c0ac9a85f776878d56395b6e0bf04ae72e7\$lut for cells of type $lut.
Using template $paramod$adac5163f2ca606e303e4fcb6e4ac1a8cfe9825d\$lut for cells of type $lut.
Using template $paramod$bdb7f9ed72fd4f5c7ad81c376f2d8a5c72a0098d\$lut for cells of type $lut.
Using template $paramod$048d4aa2263b685fba6c6b0d38f6224df0dc3042\$lut for cells of type $lut.
Using template $paramod$30c7bb594369ca20ff4ff844ba6ed3179f45572d\$lut for cells of type $lut.
Using template $paramod$ea0faad69a26c91786a25961ea149d0e0961eb1f\$lut for cells of type $lut.
Using template $paramod$f3e1547c4b47e64c590e75cf09078b2507c8cc75\$lut for cells of type $lut.
Using template $paramod$973818279bc95792902f3c09371fd2407d04a2a5\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01010011 for cells of type $lut.
Using template $paramod$6e46ec5a196ba1a24b8e69ab094cadc07c13ac1f\$lut for cells of type $lut.
Using template $paramod$243c00f5eb9faa1d5ce3478fdc389a56070781f8\$lut for cells of type $lut.
Using template $paramod$4da2782c2e024b3eded45331a6607870b9d0254f\$lut for cells of type $lut.
Using template $paramod$19ec49f31a8d230a567aa44ce3ea81a03c101e2b\$lut for cells of type $lut.
Using template $paramod$3525bc88021caeb0b6fb10b051fd947bd104e42a\$lut for cells of type $lut.
Using template $paramod$8bb5f7e7f602725f79cf0341c8778a63d0d25791\$lut for cells of type $lut.
Using template $paramod$575b200168b9e109c2ed99df4359056f2c6696ac\$lut for cells of type $lut.
Using template $paramod$11ec7271d8e6e5aeaace08c13e4c601f10e31038\$lut for cells of type $lut.
Using template $paramod$b4f85a6321a00b090afc4e21d68e7b99eb94d149\$lut for cells of type $lut.
Using template $paramod$50666a8f9d622ca1f027a4587dfd5f2a7d8810c9\$lut for cells of type $lut.
Using template $paramod$0d09e9b1803e719886745bf23751479f7103068f\$lut for cells of type $lut.
Using template $paramod$45d617c2ce0041e27b541f62b0fc3c3ce441a616\$lut for cells of type $lut.
Using template $paramod$e5759512db67494ff77fbdfc66dff4006376568f\$lut for cells of type $lut.
Using template $paramod$933f4f3e373a784da64d137def3625bdd36d1695\$lut for cells of type $lut.
Using template $paramod$f54c0ffd7b041ca43eac7710ab19c0666d826c22\$lut for cells of type $lut.
Using template $paramod$384d948ae2ca70474b03438d9dc8267d820199e9\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001110 for cells of type $lut.
Using template $paramod$e053a22d78e6bd5ea33183ea69976f0db741be0e\$lut for cells of type $lut.
Using template $paramod$044e8b1893c94f717651c5cd428e71c892566f52\$lut for cells of type $lut.
Using template $paramod$f63fe32f78d5f3c5de711945c592c8c5ec2303ae\$lut for cells of type $lut.
Using template $paramod$5080ca3f5585516815fb7f9e761599d1bfa42d46\$lut for cells of type $lut.
Using template $paramod$b93d1ea7a612a32c185108f67a153d44ffb9aac2\$lut for cells of type $lut.
Using template $paramod$5898ae4e52b22eca363a418fa94151158a507d30\$lut for cells of type $lut.
Using template $paramod$cc14edb43bcbbd83b718cef08414cb23048bb6d0\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000111 for cells of type $lut.
Using template $paramod$6047691d8bbb6cff4c2e5680ed3445ca5625ef2f\$lut for cells of type $lut.
Using template $paramod$57f71a429a5de468266cb6ec0f5d054c9415f3b9\$lut for cells of type $lut.
Using template $paramod$b4410865e8124402796f9dfbf73ef8d279fdbd08\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1110 for cells of type $lut.
Using template $paramod$1307f430048519f43ab1ac47bdca16ced42e5270\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0110 for cells of type $lut.
Using template $paramod$81d8a60fd95b1a9f9ef71c12a774ae6988cb9fd5\$lut for cells of type $lut.
Using template $paramod$5c32c59025c0b98f20e63f249d83e7ebb4b085e3\$lut for cells of type $lut.
Using template $paramod$7fcc2f13195f27c397064377984d87a90c06749d\$lut for cells of type $lut.
Using template $paramod$c5b694ec89d7629b942ccf6a9be1d39e24f8edec\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10100011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11111000 for cells of type $lut.
Using template $paramod$a15fd389a2f54cb7b94707b25934d226e68d9e2e\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01100000 for cells of type $lut.
Using template $paramod$e0bde73e598487237493c8a43ca52c95a3727354\$lut for cells of type $lut.
Using template $paramod$4282def8dbd6df3d1248ad282c629bee684502c2\$lut for cells of type $lut.
Using template $paramod$fb5ee0bdef1c4e74aaf1fd8efae98b46a2f5e564\$lut for cells of type $lut.
Using template $paramod$0f52647588235a7349ddd3f3432c9ac1e33ad9e1\$lut for cells of type $lut.
Using template $paramod$4cf5305612d86489c1a6171729557670bf08582e\$lut for cells of type $lut.
Using template $paramod$415b9dd3a15783ae56c103f189fd8e182f997441\$lut for cells of type $lut.
Using template $paramod$df196ed0a1da5c4a58c5e08a1dac304fd3fccaab\$lut for cells of type $lut.
Using template $paramod$85b779ce5ab505dbf25e5e046fb43ca2b76b878b\$lut for cells of type $lut.
Using template $paramod$ef6f9494c41321ef63579b1462fd44bdf781fd1c\$lut for cells of type $lut.
Using template $paramod$ef55f89c74d994c27b4ec4bac79af43e8b1d7e25\$lut for cells of type $lut.
Using template $paramod$7d3cbfc289ec00e0691f33de08826f2254fca668\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01000010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01101000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11101001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01101001 for cells of type $lut.
Using template $paramod$0a94662b0161fc067fc2a1123fd5ac94da2ec1db\$lut for cells of type $lut.
Using template $paramod$9ce83c401f07863ef6c07aa36141bf86d010bac8\$lut for cells of type $lut.
Using template $paramod$d4fae2c0d9ad2966369cd4e39b81c71bcd1327c9\$lut for cells of type $lut.
Using template $paramod$3039c7f41767c4672f4e3f22ad78f16d42720fbf\$lut for cells of type $lut.
Using template $paramod$ba05b8a1a425003df083aea0e69541f5cbdc68f2\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001101 for cells of type $lut.
Using template $paramod$6d23198eb2b8f79a41c7626605a61009695893b1\$lut for cells of type $lut.
Using template $paramod$df0b68f8e63b2deb6710e23abd8b8ff0796d4897\$lut for cells of type $lut.
Using template $paramod$d53578aacfd93124244778d88be0e90eb09c1b1b\$lut for cells of type $lut.
Using template $paramod$71cb81cd7ec213b39129c5f3867d1aa22dffde1b\$lut for cells of type $lut.
Using template $paramod$314fe9458b07176c4d2c8c59533027c4c55155b5\$lut for cells of type $lut.
Using template $paramod$4972722c284f07fee673f7cb99e6a36ce4a244f0\$lut for cells of type $lut.
Using template $paramod$05f19d9c2311a3d1ab38ece311a1bb9f96c62043\$lut for cells of type $lut.
Using template $paramod$cdbb3434c58d35072833e3be994fccdfd36cb5aa\$lut for cells of type $lut.
Using template $paramod$30234ddca80ec18fbcf4d45d8bd1821aad47e8fd\$lut for cells of type $lut.
Using template $paramod$062504bac180090ce81d692e22f47e8aa09922f1\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11010011 for cells of type $lut.
Using template $paramod$2902eb8ec3ca272968b5d8a7010e48f85069ed0f\$lut for cells of type $lut.
Using template $paramod$8c8483b8dba6dbd9a5f43a97c71ce4530d6e6ded\$lut for cells of type $lut.
Using template $paramod$cc08dba3aac8677e797984bdf18a09dd37547dd3\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11110100 for cells of type $lut.
Using template $paramod$21127ceb197f0fd94450202a3007777a053c07e6\$lut for cells of type $lut.
Using template $paramod$fe9a0158d0352193457c4f5b6282ac86d35fb3ee\$lut for cells of type $lut.
Using template $paramod$c471af5667a682bd131a5b479e58e470d1b2b7cd\$lut for cells of type $lut.
Using template $paramod$fc318a7df7fe07fd6e06d67fcbc358e9823ea389\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11110001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11000010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00011100 for cells of type $lut.
Using template $paramod$5766b753e513aa2393ffc25ef94ebc79dc098484\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00011111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01000011 for cells of type $lut.
Using template $paramod$c5f3c57a6d466a2f42208bafb8985b96ce884440\$lut for cells of type $lut.
Using template $paramod$a59507d273cd827eb6c46c37820d50a1b717efdf\$lut for cells of type $lut.
Using template $paramod$310dc7912bb5756ab08137f6868c0abbecf66466\$lut for cells of type $lut.
Using template $paramod$9d707d218adbd63b6f9a0c79d7ee037306fb6296\$lut for cells of type $lut.
Using template $paramod$05e1aa03f4032f091e9babe2ae153c9bb3e7b396\$lut for cells of type $lut.
Using template $paramod$89ecea64a21f1d46300084f3bd1ea75b5999f12a\$lut for cells of type $lut.
Using template $paramod$0de052767abdccc3aefc818722bdc3c7850d25d6\$lut for cells of type $lut.
Using template $paramod$9850450c7f2ce6ec6d61697515f47872a7c4eee5\$lut for cells of type $lut.
Using template $paramod$444dc65d62c26ac5c920b1ef08094df1b8d6a003\$lut for cells of type $lut.
Using template $paramod$4789582d00084c3344b7a6dacf516efd46244876\$lut for cells of type $lut.
Using template $paramod$6e3b22478ca21c5590744f2e30b92938c4d90996\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01111111 for cells of type $lut.
Using template $paramod$ed10455c824c2a3761aabdeb1e31dad905f66e6e\$lut for cells of type $lut.
Using template $paramod$2167383712a3ef5a7aa9a279cd8db29e1fc2db5f\$lut for cells of type $lut.
Using template $paramod$ae9b8abdb4f811ce37985dd5106af9cd21223954\$lut for cells of type $lut.
Using template $paramod$b4f15f202f50520dbc381cd0880ac94f830f05a8\$lut for cells of type $lut.
Using template $paramod$59de045429641615f9fe556a2af28d0739e5972e\$lut for cells of type $lut.
Using template $paramod$a3d9d50a26c80b5c42d9b864ac52f329113a426e\$lut for cells of type $lut.
Using template $paramod$3204210736873ef5d53b95f3dbe4714b354f9351\$lut for cells of type $lut.
Using template $paramod$774861bf9b1885d60265e6ddea1c95a32f095489\$lut for cells of type $lut.
Using template $paramod$bb07aa4c6c95211b927837b9073769ffabb3aaa5\$lut for cells of type $lut.
Using template $paramod$d0bf26260eea0e8530fb2e72eb38c60e28a47da8\$lut for cells of type $lut.
No more expansions possible.
<suppressed ~7025 debug messages>
Removed 0 unused cells and 10768 unused wires.

24.45. Executing AUTONAME pass.
Renamed 456756 objects in module top (207 iterations).
<suppressed ~10000 debug messages>

24.46. Executing HIERARCHY pass (managing design hierarchy).

24.46.1. Analyzing design hierarchy..
Top module:  \top

24.46.2. Analyzing design hierarchy..
Top module:  \top
Removed 0 unused modules.

24.47. Printing statistics.

=== top ===

   Number of wires:               6652
   Number of wire bits:          20991
   Number of public wires:        6652
   Number of public wire bits:   20991
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               7070
     SB_CARRY                     1224
     SB_DFF                         34
     SB_DFFE                        25
     SB_DFFESR                     950
     SB_DFFESS                      47
     SB_DFFSR                      167
     SB_DFFSS                        5
     SB_LUT4                      4617
     SB_PLL40_PAD                    1

24.48. Executing CHECK pass (checking for obvious problems).
Checking module top...
Found and reported 0 problems.

24.49. Executing JSON backend.

Warnings: 227 unique messages, 235 total
End of script. Logfile hash: 5ed893e98d, CPU: user 15.55s system 0.05s, MEM: 139.64 MB peak
Yosys 0.12 (git sha1 2156e20)
Time spent: 27% 42x opt_expr (4 sec), 17% 37x opt_clean (3 sec), ...
